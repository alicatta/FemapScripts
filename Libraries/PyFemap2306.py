# -*- coding: mbcs -*-
# Created by makepy.py version 0.5.01
# By python version 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
# From type library 'femap.tlb'
# On Thu Oct 26 15:57:59 2023
'Simcenter™ Femap™ v2306.0 Type Library'
makepy_version = '0.5.01'
python_version = 0x30b05f0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{08F336B3-E668-11D4-9441-001083FFF11C}')
MajorVersion = 23
MinorVersion = 20
LibraryFlags = 8
LCID = 0x0

class constants:
	CTRLDEF_BLANK                 =0          # from enum CTRLDEF
	CTRLDEF_MILDLY                =2          # from enum CTRLDEF
	CTRLDEF_QLINEAR               =1          # from enum CTRLDEF
	CTRLDEF_SEVERLY               =3          # from enum CTRLDEF
	NLSTEP_LOAD_ADAPT             =1          # from enum NLSTEP_LOAD_STEPPING
	NLSTEP_LOAD_ARCLEN            =2          # from enum NLSTEP_LOAD_STEPPING
	NLSTEP_LOAD_FIXED             =0          # from enum NLSTEP_LOAD_STEPPING
	Disp_bp                       =2          # from enum bolt_pl_type
	Load_bp                       =0          # from enum bolt_pl_type
	Strain_bp                     =1          # from enum bolt_pl_type
	ELAR_CRITERIA_RINELE          =1          # from enum elar_criteria_type
	ELAR_CRITERIA_RMECHE          =2          # from enum elar_criteria_type
	ELAR_CRITERIA_TIME            =0          # from enum elar_criteria_type
	ELAR_TYPE_ELAR                =0          # from enum elar_type
	ELAR_TYPE_ELAR2               =1          # from enum elar_type
	ELAR_TYPE_ELARADD             =2          # from enum elar_type
	FLXSLI_DRIVER_DISP            =1          # from enum flxsli_driver_type
	FLXSLI_DRIVER_FORC            =0          # from enum flxsli_driver_type
	FLXSLI_DRIVER_SENSOR          =2          # from enum flxsli_driver_type
	FLXSLI_DRIVER_UNKNOWN         =-1         # from enum flxsli_driver_type
	FLXSLI_FRICTION_DISP          =3          # from enum flxsli_friction_type
	FLXSLI_FRICTION_INF           =1          # from enum flxsli_friction_type
	FLXSLI_FRICTION_NONE          =0          # from enum flxsli_friction_type
	FLXSLI_FRICTION_UNKNOWN       =-1         # from enum flxsli_friction_type
	FLXSLI_FRICTION_VELO          =2          # from enum flxsli_friction_type
	FLXSLI_TYPE_CYLF              =1          # from enum flxsli_type
	FLXSLI_TYPE_FLEX              =0          # from enum flxsli_type
	FLXSLI_TYPE_PRIF              =2          # from enum flxsli_type
	FLXSLI_TYPE_TWIF              =3          # from enum flxsli_type
	FLXSLI_TYPE_UNKNOWN           =-1         # from enum flxsli_type
	JOINT_ATTACH_CURVES           =3          # from enum joint_attachment_selection
	JOINT_ATTACH_ELEMENTS         =5          # from enum joint_attachment_selection
	JOINT_ATTACH_GROUND           =6          # from enum joint_attachment_selection
	JOINT_ATTACH_NODES            =4          # from enum joint_attachment_selection
	JOINT_ATTACH_POINTS           =1          # from enum joint_attachment_selection
	JOINT_ATTACH_SURFACES         =2          # from enum joint_attachment_selection
	JOINT_ATTACH_UNKNOWN          =0          # from enum joint_attachment_selection
	JOINT_CONVEL                  =10         # from enum joint_behavior
	JOINT_CYLDR                   =5          # from enum joint_behavior
	JOINT_FIXED                   =7          # from enum joint_behavior
	JOINT_GENERAL                 =11         # from enum joint_behavior
	JOINT_INLINE                  =2          # from enum joint_behavior
	JOINT_REVOLUTE                =1          # from enum joint_behavior
	JOINT_SCREW                   =8          # from enum joint_behavior
	JOINT_SLIDER                  =3          # from enum joint_behavior
	JOINT_SLIUNV                  =6          # from enum joint_behavior
	JOINT_SPHERE                  =4          # from enum joint_behavior
	JOINT_UNIVSEL                 =9          # from enum joint_behavior
	JOINT_UNKNOWN                 =0          # from enum joint_behavior
	EXPAND_BOTH                   =2          # from enum joint_connection_geom_expansion
	EXPAND_BOUNDARY               =0          # from enum joint_connection_geom_expansion
	EXPAND_INTERIOR               =1          # from enum joint_connection_geom_expansion
	EXPAND_CJOINT_RBE2            =0          # from enum joint_connection_nas_expansion
	EXPAND_CJOINT_RBE3            =1          # from enum joint_connection_nas_expansion
	KINEMATIC_CONNECTION          =2          # from enum kinematic_type
	KINEMATIC_JOINT               =1          # from enum kinematic_type
	KINEMATIC_UNKNOWN             =0          # from enum kinematic_type
	OMEGA_TYPE_OMEGA              =0          # from enum omega_type
	OMEGA_TYPE_OMEGA1             =1          # from enum omega_type
	OMEGA_TYPE_OMEGA2             =2          # from enum omega_type
	OUTMGT_RES_ACCEL              =2          # from enum outmgt_res
	OUTMGT_RES_CBEAR2             =7          # from enum outmgt_res
	OUTMGT_RES_CBUSH2             =8          # from enum outmgt_res
	OUTMGT_RES_DISP               =0          # from enum outmgt_res
	OUTMGT_RES_FORCE              =6          # from enum outmgt_res
	OUTMGT_RES_ORBITP             =4          # from enum outmgt_res
	OUTMGT_RES_REAC               =3          # from enum outmgt_res
	OUTMGT_RES_STRESS             =5          # from enum outmgt_res
	OUTMGT_RES_VELOC              =1          # from enum outmgt_res
	OUTMGT_TYPE_GRP               =0          # from enum outmgt_type
	OUTMGT_TYPE_NODE_ELEM         =1          # from enum outmgt_type
	AERO_PNL_BODY                 =1          # from enum zAeroPanelType
	AERO_PNL_SURF                 =0          # from enum zAeroPanelType
	FAL_CENTER                    =1          # from enum zAlignment
	FAL_LEFT                      =0          # from enum zAlignment
	FAL_RIGHT                     =2          # from enum zAlignment
	AAF_BIGENDIAN                 =4          # from enum zAnalysisAssignForm
	AAF_FORMATTED                 =1          # from enum zAnalysisAssignForm
	AAF_LITTLEENDIAN              =3          # from enum zAnalysisAssignForm
	AAF_NONE                      =0          # from enum zAnalysisAssignForm
	AAF_UNFORMATTED               =2          # from enum zAnalysisAssignForm
	EXTSEOUTTO_DMIGOP2            =1          # from enum zAnalysisExtSEOutTo
	EXTSEOUTTO_DMIGPCH            =0          # from enum zAnalysisExtSEOutTo
	EXTSEOUTTO_MATOP4             =2          # from enum zAnalysisExtSEOutTo
	EXTSEREF_TYPE_OP2             =0          # from enum zAnalysisExtSERef
	EXTSEREF_TYPE_OP4             =1          # from enum zAnalysisExtSERef
	EXTSEREF_TYPE_PCH             =2          # from enum zAnalysisExtSERef
	FAM_ABAQUS                    =16         # from enum zAnalysisMgrProgram
	FAM_ANSYS                     =5          # from enum zAnalysisMgrProgram
	FAM_FEMAP_STRUCTURAL          =34         # from enum zAnalysisMgrProgram
	FAM_LS_DYNA                   =28         # from enum zAnalysisMgrProgram
	FAM_MARC                      =29         # from enum zAnalysisMgrProgram
	FAM_MSC_NASTRAN               =4          # from enum zAnalysisMgrProgram
	FAM_NE_NASTRAN                =31         # from enum zAnalysisMgrProgram
	FAM_NX_NASTRAN                =36         # from enum zAnalysisMgrProgram
	FAM_UNKNOWN                   =0          # from enum zAnalysisMgrProgram
	FAP_ABAQUS                    =16         # from enum zAnalysisProgram
	FAP_ADINA                     =23         # from enum zAnalysisProgram
	FAP_ALGOR                     =10         # from enum zAnalysisProgram
	FAP_ANSYS                     =5          # from enum zAnalysisProgram
	FAP_AP_SATOOLKIT              =32         # from enum zAnalysisProgram
	FAP_CAEFEM                    =20         # from enum zAnalysisProgram
	FAP_CDA_SPRINT                =19         # from enum zAnalysisProgram
	FAP_CFDESIGN                  =27         # from enum zAnalysisProgram
	FAP_COSMIC_NASTRAN            =14         # from enum zAnalysisProgram
	FAP_COSMOS                    =7          # from enum zAnalysisProgram
	FAP_CSA_NASTRAN               =26         # from enum zAnalysisProgram
	FAP_FEMAP_GEN                 =1          # from enum zAnalysisProgram
	FAP_FEMAP_STRUCTURAL          =34         # from enum zAnalysisProgram
	FAP_GENESIS                   =24         # from enum zAnalysisProgram
	FAP_IDEAS                     =21         # from enum zAnalysisProgram
	FAP_LS_DYNA                   =28         # from enum zAnalysisProgram
	FAP_MARC                      =29         # from enum zAnalysisProgram
	FAP_ME_NASTRAN                =22         # from enum zAnalysisProgram
	FAP_MSC_NASTRAN               =4          # from enum zAnalysisProgram
	FAP_NEUTRAL                   =9          # from enum zAnalysisProgram
	FAP_NE_NASTRAN                =31         # from enum zAnalysisProgram
	FAP_NX_NASTRAN                =36         # from enum zAnalysisProgram
	FAP_ODBC                      =25         # from enum zAnalysisProgram
	FAP_PAL                       =2          # from enum zAnalysisProgram
	FAP_PAL2                      =3          # from enum zAnalysisProgram
	FAP_PATRAN                    =8          # from enum zAnalysisProgram
	FAP_PC_NASTRAN                =11         # from enum zAnalysisProgram
	FAP_SAP                       =18         # from enum zAnalysisProgram
	FAP_SINDA                     =30         # from enum zAnalysisProgram
	FAP_STAAD                     =15         # from enum zAnalysisProgram
	FAP_STARDYNE                  =6          # from enum zAnalysisProgram
	FAP_TABLE                     =12         # from enum zAnalysisProgram
	FAP_TMG                       =33         # from enum zAnalysisProgram
	FAP_UAI_NASTRAN               =13         # from enum zAnalysisProgram
	FAP_UNKNOWN                   =0          # from enum zAnalysisProgram
	FAP_VR_NASTRAN                =35         # from enum zAnalysisProgram
	FAP_WECAN                     =17         # from enum zAnalysisProgram
	FTR_ABAQUS                    =16         # from enum zAnalysisTranslator
	FTR_ACIS                      =29         # from enum zAnalysisTranslator
	FTR_ADINA                     =23         # from enum zAnalysisTranslator
	FTR_ALGOR                     =6          # from enum zAnalysisTranslator
	FTR_ANSYS                     =4          # from enum zAnalysisTranslator
	FTR_ANSYS_PC_LINEAR           =5          # from enum zAnalysisTranslator
	FTR_CAEFEM                    =20         # from enum zAnalysisTranslator
	FTR_CATIA                     =38         # from enum zAnalysisTranslator
	FTR_CATIA_V5                  =46         # from enum zAnalysisTranslator
	FTR_CATIA_V6                  =53         # from enum zAnalysisTranslator
	FTR_CDA_SPRINT                =19         # from enum zAnalysisTranslator
	FTR_CFDESIGN                  =28         # from enum zAnalysisTranslator
	FTR_COSMIC_NASTRAN            =14         # from enum zAnalysisTranslator
	FTR_COSMOS                    =7          # from enum zAnalysisTranslator
	FTR_CSA_NASTRAN               =26         # from enum zAnalysisTranslator
	FTR_DXF                       =10         # from enum zAnalysisTranslator
	FTR_FEMAP_NEUTRAL             =9          # from enum zAnalysisTranslator
	FTR_FIBERSIM                  =50         # from enum zAnalysisTranslator
	FTR_GENESIS                   =24         # from enum zAnalysisTranslator
	FTR_IDEAS                     =21         # from enum zAnalysisTranslator
	FTR_IGES                      =11         # from enum zAnalysisTranslator
	FTR_INVENTOR                  =51         # from enum zAnalysisTranslator
	FTR_JT                        =49         # from enum zAnalysisTranslator
	FTR_LS_DYNA                   =31         # from enum zAnalysisTranslator
	FTR_MARC                      =32         # from enum zAnalysisTranslator
	FTR_ME_NASTRAN                =22         # from enum zAnalysisTranslator
	FTR_MODEL_SOLUTION            =36         # from enum zAnalysisTranslator
	FTR_MSC_NASTRAN               =0          # from enum zAnalysisTranslator
	FTR_NCODE_NOT_USED            =37         # from enum zAnalysisTranslator
	FTR_NE_NASTRAN                =35         # from enum zAnalysisTranslator
	FTR_NONE                      =-1         # from enum zAnalysisTranslator
	FTR_NX_NASTRAN                =45         # from enum zAnalysisTranslator
	FTR_ODBC                      =25         # from enum zAnalysisTranslator
	FTR_PAL_2                     =2          # from enum zAnalysisTranslator
	FTR_PARASOLID                 =30         # from enum zAnalysisTranslator
	FTR_PATRAN                    =8          # from enum zAnalysisTranslator
	FTR_PC_NASTRAN                =1          # from enum zAnalysisTranslator
	FTR_PROE                      =39         # from enum zAnalysisTranslator
	FTR_RHINO                     =52         # from enum zAnalysisTranslator
	FTR_SAP                       =18         # from enum zAnalysisTranslator
	FTR_SINDA                     =33         # from enum zAnalysisTranslator
	FTR_SLA                       =27         # from enum zAnalysisTranslator
	FTR_SOLIDEDGE                 =41         # from enum zAnalysisTranslator
	FTR_SOLIDWORKS                =47         # from enum zAnalysisTranslator
	FTR_STAAD                     =15         # from enum zAnalysisTranslator
	FTR_STARDYNE                  =3          # from enum zAnalysisTranslator
	FTR_STEP                      =34         # from enum zAnalysisTranslator
	FTR_TABLE                     =12         # from enum zAnalysisTranslator
	FTR_TMG                       =42         # from enum zAnalysisTranslator
	FTR_TOSCA                     =48         # from enum zAnalysisTranslator
	FTR_UAI_NASTRAN               =13         # from enum zAnalysisTranslator
	FTR_UNIGRAPHICS               =43         # from enum zAnalysisTranslator
	FTR_VDA                       =40         # from enum zAnalysisTranslator
	FTR_VR_NASTRAN                =44         # from enum zAnalysisTranslator
	FTR_WECAN                     =17         # from enum zAnalysisTranslator
	FAT_601_STATIC                =22         # from enum zAnalysisType
	FAT_601_TRANSIENT             =23         # from enum zAnalysisType
	FAT_701_EXPLICIT              =24         # from enum zAnalysisType
	FAT_AERO_FLUTTER              =26         # from enum zAnalysisType
	FAT_AERO_FREQUENCY            =31         # from enum zAnalysisType
	FAT_AERO_RANDOM               =33         # from enum zAnalysisType
	FAT_AERO_STATIC               =25         # from enum zAnalysisType
	FAT_AERO_TRANSIENT            =32         # from enum zAnalysisType
	FAT_CFD                       =19         # from enum zAnalysisType
	FAT_DATA_RECOVERY             =18         # from enum zAnalysisType
	FAT_DESIGN_OPTIMIZATION       =8          # from enum zAnalysisType
	FAT_EXPLICIT                  =9          # from enum zAnalysisType
	FAT_FATIGUE                   =17         # from enum zAnalysisType
	FAT_FREQUENCY_RESPONSE        =4          # from enum zAnalysisType
	FAT_IMPLICIT_NONLINEAR        =30         # from enum zAnalysisType
	FAT_LINEAR_BUCKLING           =7          # from enum zAnalysisType
	FAT_LSDYNA_IMPLICIT           =13         # from enum zAnalysisType
	FAT_MODES                     =2          # from enum zAnalysisType
	FAT_MULTISTEP_KINEMATIC       =28         # from enum zAnalysisType
	FAT_MULTISTEP_NONLINEAR       =27         # from enum zAnalysisType
	FAT_NONLINEAR_BUCKLING        =11         # from enum zAnalysisType
	FAT_NONLINEAR_STATIC          =10         # from enum zAnalysisType
	FAT_NONLINEAR_TRANSIENT       =12         # from enum zAnalysisType
	FAT_RANDOM                    =6          # from enum zAnalysisType
	FAT_RESPONSE_SPECTRUM         =5          # from enum zAnalysisType
	FAT_ROTOR_COMPLEX_MODES       =36         # from enum zAnalysisType
	FAT_ROTOR_EIGENVALUES         =35         # from enum zAnalysisType
	FAT_ROTOR_FREQUENCY_RESPONSE  =37         # from enum zAnalysisType
	FAT_ROTOR_MANEUVERS           =34         # from enum zAnalysisType
	FAT_ROTOR_TRANSIENT           =38         # from enum zAnalysisType
	FAT_STATIC                    =1          # from enum zAnalysisType
	FAT_STEADY_STATE_HEAT         =20         # from enum zAnalysisType
	FAT_TRANSIENT                 =3          # from enum zAnalysisType
	FAT_TRANSIENT_HEAT            =21         # from enum zAnalysisType
	FAT_UNKNOWN                   =0          # from enum zAnalysisType
	FARS_CYLINDER                 =0          # from enum zAnalyticSurfaceType
	FARS_REVOLUTION               =2          # from enum zAnalyticSurfaceType
	FARS_SEGMENTS                 =1          # from enum zAnalyticSurfaceType
	APIWARN_EVERY                 =0          # from enum zApiWarningLevel
	APIWARN_NEVER                 =3          # from enum zApiWarningLevel
	APIWARN_ONCEPERITEM           =1          # from enum zApiWarningLevel
	APIWARN_ONCEPERSESSION        =2          # from enum zApiWarningLevel
	FRA_ERROR                     =3          # from enum zAttachStatus
	FRA_OPEN                      =1          # from enum zAttachStatus
	FRA_OPEN_CHECK                =2          # from enum zAttachStatus
	FRA_UNLOADED                  =0          # from enum zAttachStatus
	FRA_UNLOAD_CHECK              =4          # from enum zAttachStatus
	FBG_CYLINDER                  =5          # from enum zBCGeomType
	FBG_DOF                       =0          # from enum zBCGeomType
	FBG_GENERAL                   =1          # from enum zBCGeomType
	FBG_SURFDIRSLIDING            =4          # from enum zBCGeomType
	FBG_SURFNONSLIDING            =3          # from enum zBCGeomType
	FBG_SURFSLIDING               =2          # from enum zBCGeomType
	FBMC_SC_ALL                   =-1         # from enum zBeamCalculatorStressComponent
	FBMC_SC_AXIAL                 =4          # from enum zBeamCalculatorStressComponent
	FBMC_SC_COMBSHEAR             =7          # from enum zBeamCalculatorStressComponent
	FBMC_SC_MAXPRIN               =2          # from enum zBeamCalculatorStressComponent
	FBMC_SC_MAXSHEAR              =1          # from enum zBeamCalculatorStressComponent
	FBMC_SC_MINPRIN               =3          # from enum zBeamCalculatorStressComponent
	FBMC_SC_VONMISES              =0          # from enum zBeamCalculatorStressComponent
	FBMC_SC_YSHEAR                =5          # from enum zBeamCalculatorStressComponent
	FBMC_SC_ZSHEAR                =6          # from enum zBeamCalculatorStressComponent
	FCS_CYLINDRICAL               =1          # from enum zCSysType
	FCS_RECTANGULAR               =0          # from enum zCSysType
	FCS_SPHERICAL                 =2          # from enum zCSysType
	FCH_AXISSTYLE_LINEAR          =0          # from enum zChartAxisStyle
	FCH_AXISSTYLE_LOG             =1          # from enum zChartAxisStyle
	FCCL_BOTTOM                   =2          # from enum zChartComplexLocation
	FCCL_OFF                      =0          # from enum zChartComplexLocation
	FCCL_TOP                      =1          # from enum zChartComplexLocation
	FCH_LEGEND_DIRECTION_LEFTTORIGHT=1          # from enum zChartLegendDirection
	FCH_LEGEND_DIRECTION_TOPTOBOTTOM=0          # from enum zChartLegendDirection
	FCH_LEGEND_LOCATION_CENTER    =2          # from enum zChartLegendLocation
	FCH_LEGEND_LOCATION_FAR       =3          # from enum zChartLegendLocation
	FCH_LEGEND_LOCATION_FAROUTSIDE=4          # from enum zChartLegendLocation
	FCH_LEGEND_LOCATION_NEAR      =1          # from enum zChartLegendLocation
	FCH_LEGEND_LOCATION_NEAROUTSIDE=0          # from enum zChartLegendLocation
	FCH_MARKERSTYLE_CIRCLE        =0          # from enum zChartMarkerStyle
	FCH_MARKERSTYLE_DIAMOND       =2          # from enum zChartMarkerStyle
	FCH_MARKERSTYLE_HEXAGON       =5          # from enum zChartMarkerStyle
	FCH_MARKERSTYLE_PENTAGON      =4          # from enum zChartMarkerStyle
	FCH_MARKERSTYLE_SQUARE        =1          # from enum zChartMarkerStyle
	FCH_MARKERSTYLE_STAR          =6          # from enum zChartMarkerStyle
	FCH_MARKERSTYLE_TRIANGLE      =3          # from enum zChartMarkerStyle
	FCH_FORMAT_PERCENTAGE         =2          # from enum zChartNumberFormat
	FCH_FORMAT_SCIENTIFIC         =1          # from enum zChartNumberFormat
	FCH_FORMAT_STANDARD           =0          # from enum zChartNumberFormat
	FCH_PALETTE_BLUE              =5          # from enum zChartPalette
	FCH_PALETTE_BROWN             =6          # from enum zChartPalette
	FCH_PALETTE_CUSTOM            =0          # from enum zChartPalette
	FCH_PALETTE_FEMAP             =1          # from enum zChartPalette
	FCH_PALETTE_GRAY              =2          # from enum zChartPalette
	FCH_PALETTE_GREEN             =7          # from enum zChartPalette
	FCH_PALETTE_OFFICE            =3          # from enum zChartPalette
	FCH_PALETTE_RED               =8          # from enum zChartPalette
	FCH_PALETTE_VIBRANT           =4          # from enum zChartPalette
	FCSC_ADD                      =0          # from enum zChartSeriesCombination
	FCSC_DIVIDE                   =3          # from enum zChartSeriesCombination
	FCSC_MULTIPLY                 =2          # from enum zChartSeriesCombination
	FCSC_SUBTRACT                 =1          # from enum zChartSeriesCombination
	FCSCM_MATCHMODEL              =1          # from enum zChartSeriesComplexMethod
	FCSCM_MATCHVIEW               =2          # from enum zChartSeriesComplexMethod
	FCSCM_NONE                    =0          # from enum zChartSeriesComplexMethod
	FCSCM_SYNC                    =3          # from enum zChartSeriesComplexMethod
	FCHD_TYPE_COMBO               =11         # from enum zChartSeriesType
	FCHD_TYPE_COMBOVAL            =12         # from enum zChartSeriesType
	FCHD_TYPE_CPLXEXP             =10         # from enum zChartSeriesType
	FCHD_TYPE_FUNCTION            =4          # from enum zChartSeriesType
	FCHD_TYPE_ID                  =0          # from enum zChartSeriesType
	FCHD_TYPE_POSITION            =3          # from enum zChartSeriesType
	FCHD_TYPE_SET                 =1          # from enum zChartSeriesType
	FCHD_TYPE_SETVAL              =2          # from enum zChartSeriesType
	FCHD_TYPE_VECVEC              =7          # from enum zChartSeriesType
	FCH_STYLE_AREA                =4          # from enum zChartStyle
	FCH_STYLE_AREASTEP            =5          # from enum zChartStyle
	FCH_STYLE_LINE                =1          # from enum zChartStyle
	FCH_STYLE_LINEFAST            =2          # from enum zChartStyle
	FCH_STYLE_LINESTEP            =3          # from enum zChartStyle
	FCH_STYLE_POINT               =0          # from enum zChartStyle
	FCH_TEXT_JUSTIFICATION_CENTER =1          # from enum zChartTextJustification
	FCH_TEXT_JUSTIFICATION_LEFT   =0          # from enum zChartTextJustification
	FCH_TEXT_JUSTIFICATION_RIGHT  =2          # from enum zChartTextJustification
	FCH_TITLE_LOCATION_BOTTOM     =3          # from enum zChartTitleLocation
	FCH_TITLE_LOCATION_LEFT       =1          # from enum zChartTitleLocation
	FCH_TITLE_LOCATION_RIGHT      =2          # from enum zChartTitleLocation
	FCH_TITLE_LOCATION_TOP        =0          # from enum zChartTitleLocation
	FCL_AQUAMARINE                =97         # from enum zColor
	FCL_AVOCADO                   =17         # from enum zColor
	FCL_BLACK                     =0          # from enum zColor
	FCL_BLUE                      =100        # from enum zColor
	FCL_BLUEINDIGO                =76         # from enum zColor
	FCL_BLUELIME                  =45         # from enum zColor
	FCL_BLUEVIOLET                =107        # from enum zColor
	FCL_BRIGHTCHARTREUSE          =23         # from enum zColor
	FCL_BRIGHTCOBALT              =105        # from enum zColor
	FCL_BRIGHTLIME                =21         # from enum zColor
	FCL_BRIGHTTURQUOISE           =121        # from enum zColor
	FCL_BRIGHTVIOLET              =103        # from enum zColor
	FCL_BROWN                     =7          # from enum zColor
	FCL_CAMOUFLAGEGREEN           =32         # from enum zColor
	FCL_CERISE                    =59         # from enum zColor
	FCL_CERULEAN                  =85         # from enum zColor
	FCL_CHARTREUSE                =22         # from enum zColor
	FCL_COBALT                    =80         # from enum zColor
	FCL_CORAL                     =39         # from enum zColor
	FCL_CRIMSON                   =29         # from enum zColor
	FCL_CYAN                      =120        # from enum zColor
	FCL_DARKBLUE                  =50         # from enum zColor
	FCL_DARKCERULEAN              =55         # from enum zColor
	FCL_DARKCYAN                  =60         # from enum zColor
	FCL_DARKESTGREEN              =5          # from enum zColor
	FCL_DARKGOLDENROD             =13         # from enum zColor
	FCL_DARKGRAY                  =31         # from enum zColor
	FCL_DARKKHAKI                 =68         # from enum zColor
	FCL_DARKOLIVEGREEN            =6          # from enum zColor
	FCL_DARKPASTELGREEN           =40         # from enum zColor
	FCL_DARKRASPBERRY             =27         # from enum zColor
	FCL_DARKRED                   =2          # from enum zColor
	FCL_DARKSEAGREEN              =67         # from enum zColor
	FCL_DARKSLATEBLUE             =56         # from enum zColor
	FCL_DARKSLATEGRAY             =30         # from enum zColor
	FCL_DARKTURQUOISE             =90         # from enum zColor
	FCL_DARKVIOLET                =77         # from enum zColor
	FCL_DEEPPINK                  =54         # from enum zColor
	FCL_DEEPSKYBLUE               =115        # from enum zColor
	FCL_DODGERBLUE                =110        # from enum zColor
	FCL_EGGPLANT                  =26         # from enum zColor
	FCL_FERNGREEN                 =11         # from enum zColor
	FCL_FIREBRICK                 =33         # from enum zColor
	FCL_FORESTGREEN               =36         # from enum zColor
	FCL_FUCHSIA                   =79         # from enum zColor
	FCL_GOLD                      =19         # from enum zColor
	FCL_GOLDENROD                 =44         # from enum zColor
	FCL_GRAY                      =62         # from enum zColor
	FCL_GRAY10                    =125        # from enum zColor
	FCL_GRAY100                   =134        # from enum zColor
	FCL_GRAY110                   =135        # from enum zColor
	FCL_GRAY120                   =136        # from enum zColor
	FCL_GRAY130                   =137        # from enum zColor
	FCL_GRAY140                   =138        # from enum zColor
	FCL_GRAY150                   =139        # from enum zColor
	FCL_GRAY160                   =140        # from enum zColor
	FCL_GRAY170                   =141        # from enum zColor
	FCL_GRAY180                   =142        # from enum zColor
	FCL_GRAY190                   =143        # from enum zColor
	FCL_GRAY20                    =126        # from enum zColor
	FCL_GRAY200                   =144        # from enum zColor
	FCL_GRAY210                   =145        # from enum zColor
	FCL_GRAY220                   =146        # from enum zColor
	FCL_GRAY230                   =147        # from enum zColor
	FCL_GRAY240                   =148        # from enum zColor
	FCL_GRAY250                   =149        # from enum zColor
	FCL_GRAY30                    =127        # from enum zColor
	FCL_GRAY40                    =128        # from enum zColor
	FCL_GRAY50                    =129        # from enum zColor
	FCL_GRAY60                    =130        # from enum zColor
	FCL_GRAY70                    =131        # from enum zColor
	FCL_GRAY80                    =132        # from enum zColor
	FCL_GRAY90                    =133        # from enum zColor
	FCL_GRAYBEIGE                 =162        # from enum zColor
	FCL_GRAYBEIGE_DARK            =161        # from enum zColor
	FCL_GRAYBEIGE_EXTRADARK       =160        # from enum zColor
	FCL_GRAYBEIGE_EXTRALIGHT      =164        # from enum zColor
	FCL_GRAYBEIGE_LIGHT           =163        # from enum zColor
	FCL_GRAYBLUE                  =152        # from enum zColor
	FCL_GRAYBLUE_DARK             =151        # from enum zColor
	FCL_GRAYBLUE_EXTRADARK        =150        # from enum zColor
	FCL_GRAYBLUE_EXTRALIGHT       =154        # from enum zColor
	FCL_GRAYBLUE_LIGHT            =153        # from enum zColor
	FCL_GRAYGREEN                 =157        # from enum zColor
	FCL_GRAYGREEN_DARK            =156        # from enum zColor
	FCL_GRAYGREEN_EXTRADARK       =155        # from enum zColor
	FCL_GRAYGREEN_EXTRALIGHT      =159        # from enum zColor
	FCL_GRAYGREEN_LIGHT           =158        # from enum zColor
	FCL_GREEN                     =10         # from enum zColor
	FCL_GREENYELLOW               =48         # from enum zColor
	FCL_HOTPINK                   =109        # from enum zColor
	FCL_INDIGO                    =51         # from enum zColor
	FCL_JADE                      =65         # from enum zColor
	FCL_LEMONCHIFFON              =99         # from enum zColor
	FCL_LIGHTGREEN                =72         # from enum zColor
	FCL_LIGHTSALMON               =64         # from enum zColor
	FCL_LIGHTSPRINGGREEN          =71         # from enum zColor
	FCL_LIME                      =20         # from enum zColor
	FCL_LIMEGREEN                 =15         # from enum zColor
	FCL_MAGENTA                   =104        # from enum zColor
	FCL_MAROON                    =3          # from enum zColor
	FCL_MAUVE                     =58         # from enum zColor
	FCL_MEDIUMAQUAMARINE          =92         # from enum zColor
	FCL_MEDIUMBLUE                =75         # from enum zColor
	FCL_MEDIUMORCHID              =108        # from enum zColor
	FCL_MEDIUMPURPLE              =82         # from enum zColor
	FCL_MEDIUMSLATEBLUE           =112        # from enum zColor
	FCL_MEDIUMSPRINGGREEN         =95         # from enum zColor
	FCL_MEDIUMTURQUOISE           =91         # from enum zColor
	FCL_MEDIUMVIOLETRED           =53         # from enum zColor
	FCL_MIDNIGHTBLUE              =25         # from enum zColor
	FCL_MINTCREAM                 =98         # from enum zColor
	FCL_NOTEYELLOW                =49         # from enum zColor
	FCL_OLDGOLD                   =43         # from enum zColor
	FCL_OLIVE                     =12         # from enum zColor
	FCL_OLIVEYELLOW               =18         # from enum zColor
	FCL_ORANGE                    =14         # from enum zColor
	FCL_ORANGERED                 =9          # from enum zColor
	FCL_ORCHID                    =83         # from enum zColor
	FCL_PALEBLUE                  =122        # from enum zColor
	FCL_PALEBLUEPURPLE            =81         # from enum zColor
	FCL_PALEBRIGHTGREEN           =47         # from enum zColor
	FCL_PALECOBALT                =106        # from enum zColor
	FCL_PALELIME                  =46         # from enum zColor
	FCL_PALELIMEGREEN             =41         # from enum zColor
	FCL_PALEOLIVE                 =37         # from enum zColor
	FCL_PALEPINK                  =119        # from enum zColor
	FCL_PALEPURPLE                =57         # from enum zColor
	FCL_PALEREDVIOLET             =94         # from enum zColor
	FCL_PALESKYBLUE               =117        # from enum zColor
	FCL_PALEYELLOW                =74         # from enum zColor
	FCL_PERSIANBLUE               =101        # from enum zColor
	FCL_PERU                      =38         # from enum zColor
	FCL_PINEGREEN                 =35         # from enum zColor
	FCL_PINK                      =114        # from enum zColor
	FCL_PINKCERISE                =84         # from enum zColor
	FCL_PLUM                      =88         # from enum zColor
	FCL_POWDERBLUE                =123        # from enum zColor
	FCL_PURPLE                    =52         # from enum zColor
	FCL_RASPBERRY                 =28         # from enum zColor
	FCL_RED                       =4          # from enum zColor
	FCL_REDPINK                   =89         # from enum zColor
	FCL_ROSYBROWN                 =63         # from enum zColor
	FCL_ROYALBLUE                 =111        # from enum zColor
	FCL_SANDYBROWN                =69         # from enum zColor
	FCL_SEAGREEN                  =66         # from enum zColor
	FCL_SEPIA                     =1          # from enum zColor
	FCL_SIENNA                    =8          # from enum zColor
	FCL_SILVER                    =93         # from enum zColor
	FCL_SKYBLUE                   =116        # from enum zColor
	FCL_SLATEBLUE                 =87         # from enum zColor
	FCL_SPRINGGREEN               =70         # from enum zColor
	FCL_STEELBLUE                 =86         # from enum zColor
	FCL_TEAGREEN                  =73         # from enum zColor
	FCL_THISTLE                   =118        # from enum zColor
	FCL_TOMATO                    =34         # from enum zColor
	FCL_TURQUOISE                 =96         # from enum zColor
	FCL_USER1                     =165        # from enum zColor
	FCL_USER10                    =174        # from enum zColor
	FCL_USER2                     =166        # from enum zColor
	FCL_USER3                     =167        # from enum zColor
	FCL_USER4                     =168        # from enum zColor
	FCL_USER5                     =169        # from enum zColor
	FCL_USER6                     =170        # from enum zColor
	FCL_USER7                     =171        # from enum zColor
	FCL_USER8                     =172        # from enum zColor
	FCL_USER9                     =173        # from enum zColor
	FCL_VIOLET                    =102        # from enum zColor
	FCL_VIOLETEGGPLANT            =78         # from enum zColor
	FCL_VIRIDIAN                  =61         # from enum zColor
	FCL_WHITE                     =124        # from enum zColor
	FCL_WISTERIA                  =113        # from enum zColor
	FCL_YELLOW                    =24         # from enum zColor
	FCL_YELLOWGREEN               =42         # from enum zColor
	FCL_YELLOWLIMEGREEN           =16         # from enum zColor
	FPF_BDIAGONAL                 =1024       # from enum zColor
	FPF_CROSS                     =1280       # from enum zColor
	FPF_DIAGCROSS                 =1536       # from enum zColor
	FPF_FDIAGONAL                 =768        # from enum zColor
	FPF_HORIZONTAL                =256        # from enum zColor
	FPF_SOLID                     =0          # from enum zColor
	FPF_TRANSPARENT1              =3584       # from enum zColor
	FPF_TRANSPARENT2              =3328       # from enum zColor
	FPF_TRANSPARENT3              =3072       # from enum zColor
	FPF_TRANSPARENT4              =2816       # from enum zColor
	FPF_TRANSPARENT5              =2560       # from enum zColor
	FPF_TRANSPARENT6              =2304       # from enum zColor
	FPF_TRANSPARENT7              =2048       # from enum zColor
	FPF_TRANSPARENT8              =1792       # from enum zColor
	FPF_VERTICAL                  =512        # from enum zColor
	FPL_DASH                      =4096       # from enum zColor
	FPL_DASHDOT                   =12288      # from enum zColor
	FPL_DASHDOTDOT                =16384      # from enum zColor
	FPL_DOT                       =8192       # from enum zColor
	FPL_SOLID                     =0          # from enum zColor
	FPL_THICK2                    =20480      # from enum zColor
	FPL_THICK3                    =24576      # from enum zColor
	FPL_THICK4                    =28672      # from enum zColor
	FCOM_ALL                      =7          # from enum zColorMatch
	FCOM_COLOR                    =1          # from enum zColorMatch
	FCOM_LINESTYLE                =4          # from enum zColorMatch
	FCOM_PATTERN                  =2          # from enum zColorMatch
	FCC_BOTH                      =2          # from enum zCombinedMode
	FCC_OFF                       =0          # from enum zCombinedMode
	FCC_ON                        =1          # from enum zCombinedMode
	FCPT_CONTACT                  =0          # from enum zConnectionPropType
	FCPT_GLUED                    =1          # from enum zConnectionPropType
	FRT_BOLT                      =2          # from enum zConnectionRegionType
	FRT_CONNECTION                =0          # from enum zConnectionRegionType
	FRT_FLUID                     =1          # from enum zConnectionRegionType
	FRT_NSM                       =4          # from enum zConnectionRegionType
	FRT_ROTOR                     =3          # from enum zConnectionRegionType
	FCF_BEAM_DIAGRAM              =3          # from enum zContourFormat
	FCF_CONTOUR                   =1          # from enum zContourFormat
	FCF_CONTOUR_VECTOR            =6          # from enum zContourFormat
	FCF_CRITERIA                  =2          # from enum zContourFormat
	FCF_ISOSURFACE                =4          # from enum zContourFormat
	FCF_MODEL_COLOR               =0          # from enum zContourFormat
	FCF_NONE                      =0          # from enum zContourFormat
	FCF_SECTION_CUT               =5          # from enum zContourFormat
	FPC_ABOVE_MAX                 =0          # from enum zCoordPick
	FPC_AT                        =4          # from enum zCoordPick
	FPC_BELOW_MIN                 =1          # from enum zCoordPick
	FPC_BETWEEN                   =3          # from enum zCoordPick
	FPC_OUTSIDE                   =2          # from enum zCoordPick
	FCPPR_DUP_MATL                =2          # from enum zCopyPropApproach
	FCPPR_DUP_PROP                =1          # from enum zCopyPropApproach
	FCPPR_KEEP                    =0          # from enum zCopyPropApproach
	FCPPR_OVERRIDE                =3          # from enum zCopyPropApproach
	FCPRNM_BLOCK                  =1          # from enum zCopyRenumMethod
	FCPRNM_DEFAULT                =0          # from enum zCopyRenumMethod
	FCPRNM_OFFSET                 =2          # from enum zCopyRenumMethod
	FCMT_FREEEDGE                 =1          # from enum zCurveManifoldType
	FCMT_MANIFOLD                 =2          # from enum zCurveManifoldType
	FCMT_NONMANIFOLD              =3          # from enum zCurveManifoldType
	FCMT_UNKNOWN                  =-1         # from enum zCurveManifoldType
	FCMT_WIREEDGE                 =0          # from enum zCurveManifoldType
	FCO_POINT                     =2          # from enum zCurveOffsetType
	FCO_RADIAL                    =1          # from enum zCurveOffsetType
	FCO_VECTOR                    =0          # from enum zCurveOffsetType
	FCR_BY_LOCATION               =1          # from enum zCurveOrientType
	FCR_BY_LOCATION_REV           =3          # from enum zCurveOrientType
	FCR_BY_VECTOR                 =0          # from enum zCurveOrientType
	FCR_BY_VECTOR_REV             =2          # from enum zCurveOrientType
	FCRO_AGGRESSIVE               =1          # from enum zCurveRemoveOption
	FCRO_COMBINE                  =2          # from enum zCurveRemoveOption
	FCRO_NORMAL                   =0          # from enum zCurveRemoveOption
	FCU_ARC                       =1          # from enum zCurveType
	FCU_BSPLINE                   =4          # from enum zCurveType
	FCU_CIRCLE                    =2          # from enum zCurveType
	FCU_COMPOSITE                 =6          # from enum zCurveType
	FCU_LINE                      =0          # from enum zCurveType
	FCU_SOLID                     =5          # from enum zCurveType
	FCU_SPLINE                    =3          # from enum zCurveType
	FMDC_AVG                      =1          # from enum zDataConvert
	FMDC_AVG_SKIP_CORNER          =4          # from enum zDataConvert
	FMDC_MAX                      =2          # from enum zDataConvert
	FMDC_MAX_NOABS                =7          # from enum zDataConvert
	FMDC_MAX_NOABS_SKIP_CORNER    =9          # from enum zDataConvert
	FMDC_MAX_SKIP_CORNER          =5          # from enum zDataConvert
	FMDC_MIN                      =3          # from enum zDataConvert
	FMDC_MIN_NOABS                =8          # from enum zDataConvert
	FMDC_MIN_NOABS_SKIP_CORNER    =10         # from enum zDataConvert
	FMDC_MIN_SKIP_CORNER          =6          # from enum zDataConvert
	FMDC_VU                       =0          # from enum zDataConvert
	FCT_BOOL                      =0          # from enum zDataTableColumnType
	FCT_DOUBLE                    =2          # from enum zDataTableColumnType
	FCT_INT                       =1          # from enum zDataTableColumnType
	FCT_STRING                    =3          # from enum zDataTableColumnType
	FSF_CSV                       =1          # from enum zDataTableSaveFormat
	FSF_HTML                      =3          # from enum zDataTableSaveFormat
	FSF_RTF                       =2          # from enum zDataTableSaveFormat
	FSF_TEXT                      =0          # from enum zDataTableSaveFormat
	FT_AERO_PANEL                 =95         # from enum zDataType
	FT_AERO_PROP                  =96         # from enum zDataType
	FT_AERO_SPLINE                =98         # from enum zDataType
	FT_AERO_SURF                  =99         # from enum zDataType
	FT_AMGR_CASE                  =61         # from enum zDataType
	FT_AMGR_DIR                   =60         # from enum zDataType
	FT_ANALYSIS_STUDY             =113        # from enum zDataType
	FT_BCO                        =18         # from enum zDataType
	FT_BCO_GEOM                   =19         # from enum zDataType
	FT_BC_DEFINITION              =80         # from enum zDataType
	FT_BC_DIR                     =17         # from enum zDataType
	FT_BEARING_SPEED_DEF          =175        # from enum zDataType
	FT_BEQ                        =20         # from enum zDataType
	FT_BOLT_PRELOAD               =84         # from enum zDataType
	FT_BOUNDARY                   =32         # from enum zDataType
	FT_CHART                      =106        # from enum zDataType
	FT_CHART_SERIES               =107        # from enum zDataType
	FT_CONNECTION                 =71         # from enum zDataType
	FT_CONNECTION_PROP            =72         # from enum zDataType
	FT_CONTACT                    =58         # from enum zDataType
	FT_CSYS                       =9          # from enum zDataType
	FT_CURVE                      =4          # from enum zDataType
	FT_DATA_SURF                  =69         # from enum zDataType
	FT_DESIGN_EQUATION            =159        # from enum zDataType
	FT_DESIGN_OPT                 =45         # from enum zDataType
	FT_DISCRETE_VALUE             =135        # from enum zDataType
	FT_DISCRETE_VALUE_DIR         =134        # from enum zDataType
	FT_DRIVER_LOAD                =165        # from enum zDataType
	FT_ELEM                       =8          # from enum zDataType
	FT_ELEM_ADD_REMOVE            =171        # from enum zDataType
	FT_ETHERM_LOAD                =16         # from enum zDataType
	FT_FLEXIBLE_SLIDER            =164        # from enum zDataType
	FT_FREEBODY                   =102        # from enum zDataType
	FT_FREQUENCY                  =88         # from enum zDataType
	FT_FUNCTION_DIR               =35         # from enum zDataType
	FT_FUNCTION_TABLE             =36         # from enum zDataType
	FT_GEOM_LOAD                  =14         # from enum zDataType
	FT_GROUP                      =24         # from enum zDataType
	FT_JOINT                      =162        # from enum zDataType
	FT_LAYER                      =33         # from enum zDataType
	FT_LAYUP                      =81         # from enum zDataType
	FT_LAYUP_GLOBALPLY            =83         # from enum zDataType
	FT_LAYUP_PLY                  =82         # from enum zDataType
	FT_LAYUP_PLYMATERIAL          =167        # from enum zDataType
	FT_LOAD_DEFINITION            =46         # from enum zDataType
	FT_LOAD_DIR                   =12         # from enum zDataType
	FT_MATL                       =10         # from enum zDataType
	FT_MATL_TABLE                 =34         # from enum zDataType
	FT_MATRIX_INPUT               =150        # from enum zDataType
	FT_MESH_POINT                 =137        # from enum zDataType
	FT_MESH_POINT_DEFINITION      =136        # from enum zDataType
	FT_MODEL_NOTES                =54         # from enum zDataType
	FT_MONITOR_POINT              =149        # from enum zDataType
	FT_NODE                       =7          # from enum zDataType
	FT_NTHERM_LOAD                =15         # from enum zDataType
	FT_OPT_MANCON                 =146        # from enum zDataType
	FT_OPT_REL                    =138        # from enum zDataType
	FT_OPT_RESP                   =140        # from enum zDataType
	FT_OUT_CASE                   =28         # from enum zDataType
	FT_OUT_DATA                   =30         # from enum zDataType
	FT_OUT_DIR                    =29         # from enum zDataType
	FT_PLANE                      =133        # from enum zDataType
	FT_POINT                      =3          # from enum zDataType
	FT_PROP                       =11         # from enum zDataType
	FT_REFERENCE                  =68         # from enum zDataType
	FT_REPORT                     =31         # from enum zDataType
	FT_RES_ATTACH                 =103        # from enum zDataType
	FT_ROTATIONAL_SPEED_DEF       =176        # from enum zDataType
	FT_SOLID                      =39         # from enum zDataType
	FT_SOLID_VOLUME               =53         # from enum zDataType
	FT_SURFACE                    =5          # from enum zDataType
	FT_SURF_LOAD                  =13         # from enum zDataType
	FT_TABLE_DATA                 =124        # from enum zDataType
	FT_TEXT                       =21         # from enum zDataType
	FT_TMG_BCO                    =127        # from enum zDataType
	FT_TMG_CONTROL                =128        # from enum zDataType
	FT_TMG_INTEGER                =129        # from enum zDataType
	FT_TMG_OPTION                 =131        # from enum zDataType
	FT_TMG_REAL                   =130        # from enum zDataType
	FT_VAR                        =27         # from enum zDataType
	FT_VECTOR                     =132        # from enum zDataType
	FT_VIEW                       =22         # from enum zDataType
	FT_VOLUME                     =6          # from enum zDataType
	FT_XY_PLOT_DEF                =174        # from enum zDataType
	FDF_ANIMATE                   =2          # from enum zDeformedFormat
	FDF_ANIMATE_MULTICASE         =3          # from enum zDeformedFormat
	FDF_ARROW                     =4          # from enum zDeformedFormat
	FDF_DEFORMED                  =1          # from enum zDeformedFormat
	FDF_MODEL_UNDEF               =0          # from enum zDeformedFormat
	FDF_NONE                      =0          # from enum zDeformedFormat
	FDF_STREAMLINE                =6          # from enum zDeformedFormat
	FDF_TRACE                     =5          # from enum zDeformedFormat
	FET_L_AXISYM                  =23         # from enum zElementType
	FET_L_AXISYM_SHELL            =35         # from enum zElementType
	FET_L_BAR                     =2          # from enum zElementType
	FET_L_BEAM                    =5          # from enum zElementType
	FET_L_BENDING                 =15         # from enum zElementType
	FET_L_COHESIVE_SOLID          =43         # from enum zElementType
	FET_L_CONTACT                 =34         # from enum zElementType
	FET_L_CURVED_BEAM             =8          # from enum zElementType
	FET_L_CURVED_TUBE             =31         # from enum zElementType
	FET_L_DOF_SPRING              =7          # from enum zElementType
	FET_L_DOF_SPRING_TO_GROUND    =42         # from enum zElementType
	FET_L_GAP                     =9          # from enum zElementType
	FET_L_GENERAL_MATRIX          =30         # from enum zElementType
	FET_L_LAMINATE_PLATE          =21         # from enum zElementType
	FET_L_LAMINATE_SOLID          =39         # from enum zElementType
	FET_L_LINK                    =4          # from enum zElementType
	FET_L_MASS                    =27         # from enum zElementType
	FET_L_MASS_MATRIX             =28         # from enum zElementType
	FET_L_MEMBRANE                =13         # from enum zElementType
	FET_L_NASTRAN_MATRIX          =45         # from enum zElementType
	FET_L_PLANE_STRAIN            =19         # from enum zElementType
	FET_L_PLATE                   =17         # from enum zElementType
	FET_L_PLOT                    =10         # from enum zElementType
	FET_L_PLOT_PLATE              =32         # from enum zElementType
	FET_L_RIGID                   =29         # from enum zElementType
	FET_L_ROD                     =1          # from enum zElementType
	FET_L_SHEAR                   =11         # from enum zElementType
	FET_L_SLIDE_LINE              =33         # from enum zElementType
	FET_L_SOLID                   =25         # from enum zElementType
	FET_L_SPRING                  =6          # from enum zElementType
	FET_L_SPRING_TO_GROUND        =41         # from enum zElementType
	FET_L_TUBE                    =3          # from enum zElementType
	FET_L_WELD                    =38         # from enum zElementType
	FET_NONE                      =0          # from enum zElementType
	FET_P_AXISYM                  =24         # from enum zElementType
	FET_P_AXISYM_SHELL            =36         # from enum zElementType
	FET_P_BEAM                    =37         # from enum zElementType
	FET_P_BENDING                 =16         # from enum zElementType
	FET_P_COHESIVE_SOLID          =44         # from enum zElementType
	FET_P_LAMINATE_PLATE          =22         # from enum zElementType
	FET_P_LAMINATE_SOLID          =40         # from enum zElementType
	FET_P_MEMBRANE                =14         # from enum zElementType
	FET_P_PLANE_STRAIN            =20         # from enum zElementType
	FET_P_PLATE                   =18         # from enum zElementType
	FET_P_SHEAR                   =12         # from enum zElementType
	FET_P_SOLID                   =26         # from enum zElementType
	FEVENT_ANALYSISEND            =10         # from enum zEventCode
	FEVENT_CLOSINGMODEL           =15         # from enum zEventCode
	FEVENT_COMMAND                =5          # from enum zEventCode
	FEVENT_DRAWEND                =9          # from enum zEventCode
	FEVENT_DRAWSTART              =8          # from enum zEventCode
	FEVENT_ENDMODEL               =3          # from enum zEventCode
	FEVENT_FILEIMPORTEND          =18         # from enum zEventCode
	FEVENT_FILEOPENEND            =17         # from enum zEventCode
	FEVENT_INITIALIZE             =1          # from enum zEventCode
	FEVENT_LEAVINGMODEL           =16         # from enum zEventCode
	FEVENT_NEWMODEL               =2          # from enum zEventCode
	FEVENT_PROGEND                =7          # from enum zEventCode
	FEVENT_PROGSTART              =6          # from enum zEventCode
	FEVENT_RESULTSEND             =11         # from enum zEventCode
	FEVENT_SELECTOR               =13         # from enum zEventCode
	FEVENT_SHUTDOWN               =4          # from enum zEventCode
	FEVENT_SWITCHMODEL            =12         # from enum zEventCode
	FEVENT_UPDATEDSAVEDSET        =14         # from enum zEventCode
	FEX_EXISTING                  =0          # from enum zExistState
	FEX_NONEXISTING               =1          # from enum zExistState
	FBC_FX                        =0          # from enum zFbdComponent
	FBC_FY                        =1          # from enum zFbdComponent
	FBC_FZ                        =2          # from enum zFbdComponent
	FBC_MX                        =3          # from enum zFbdComponent
	FBC_MY                        =4          # from enum zFbdComponent
	FBC_MZ                        =5          # from enum zFbdComponent
	FBL_APPLIED                   =0          # from enum zFbdContribution
	FBL_CONTACT                   =6          # from enum zFbdContribution
	FBL_EL_FB                     =3          # from enum zFbdContribution
	FBL_EL_PER                    =4          # from enum zFbdContribution
	FBL_GLUE                      =7          # from enum zFbdContribution
	FBL_MPC                       =2          # from enum zFbdContribution
	FBL_SPC                       =1          # from enum zFbdContribution
	FBL_TOTAL                     =5          # from enum zFbdContribution
	FBD_DISPLAYMODE_FREEBODY      =0          # from enum zFbdDisplayMode
	FBD_DISPLAYMODE_INTERFACE     =1          # from enum zFbdDisplayMode
	FBD_DISPLAYMODE_SECTION       =2          # from enum zFbdDisplayMode
	FBD_SECTMODE_CURVE            =3          # from enum zFbdSectionMode
	FBD_SECTMODE_PLANENORMAL      =0          # from enum zFbdSectionMode
	FBD_SECTMODE_PLANEVECTOR      =1          # from enum zFbdSectionMode
	FBD_SECTMODE_VECTOR           =2          # from enum zFbdSectionMode
	FBD_SECTION_SUMLOC_BASE       =0          # from enum zFbdSectionSumLoc
	FBD_SECTION_SUMLOC_CENTROID   =1          # from enum zFbdSectionSumLoc
	FBD_SECTION_SUMLOC_LOCATION   =2          # from enum zFbdSectionSumLoc
	FBD_VEC_MODE_COMPONENT        =1          # from enum zFbdVecMode
	FBD_VEC_MODE_OFF              =0          # from enum zFbdVecMode
	FBD_VEC_MODE_RESULTANT        =2          # from enum zFbdVecMode
	FEAT_FMP_XCELERATOR_SHARE     =22         # from enum zFeatureType
	FEAT_MAYA_ADVANCED_THERMAL    =16         # from enum zFeatureType
	FEAT_MAYA_FLOW                =17         # from enum zFeatureType
	FEAT_MAYA_THERMAL             =15         # from enum zFeatureType
	FEAT_MAYA_TOOLKIT             =18         # from enum zFeatureType
	FEAT_NX_NASTRAN_ADV_NONLINEAR =8          # from enum zFeatureType
	FEAT_NX_NASTRAN_ADV_NONLINEAR_EXPLICIT=11         # from enum zFeatureType
	FEAT_NX_NASTRAN_AERO_BASIC    =5          # from enum zFeatureType
	FEAT_NX_NASTRAN_BASIC         =0          # from enum zFeatureType
	FEAT_NX_NASTRAN_DMAP          =3          # from enum zFeatureType
	FEAT_NX_NASTRAN_DMP           =20         # from enum zFeatureType
	FEAT_NX_NASTRAN_DYNAMICS      =2          # from enum zFeatureType
	FEAT_NX_NASTRAN_NONLINEAR     =1          # from enum zFeatureType
	FEAT_NX_NASTRAN_OPTIMIZATION  =7          # from enum zFeatureType
	FEAT_NX_NASTRAN_RDMODES       =21         # from enum zFeatureType
	FEAT_NX_NASTRAN_ROTORDYN      =10         # from enum zFeatureType
	FEAT_NX_NASTRAN_ROTORDYN_SOL414=23         # from enum zFeatureType
	FEAT_NX_NASTRAN_SUPERELEMENTS =4          # from enum zFeatureType
	FEAT_NX_NASTRAN_TOPOLOGY_OPTIMIZATION=14         # from enum zFeatureType
	FEAT_NX_NASTRAN_USS           =19         # from enum zFeatureType
	FLNG_AUTO                     =0          # from enum zFemapLanguage
	FLNG_CN                       =5          # from enum zFemapLanguage
	FLNG_DE                       =2          # from enum zFemapLanguage
	FLNG_EN                       =1          # from enum zFemapLanguage
	FLNG_JP                       =3          # from enum zFemapLanguage
	FLNG_TW                       =4          # from enum zFemapLanguage
	FREQ                          =0          # from enum zFreqType
	FREQ1                         =1          # from enum zFreqType
	FREQ2                         =2          # from enum zFreqType
	FREQ3                         =3          # from enum zFreqType
	FREQ4                         =4          # from enum zFreqType
	FREQ5                         =5          # from enum zFreqType
	FTB_ACCELLOC                  =36         # from enum zFunctionType
	FTB_ACCFREQ                   =28         # from enum zFunctionType
	FTB_AEROFACTOR                =35         # from enum zFunctionType
	FTB_ANGACCFREQ                =29         # from enum zFunctionType
	FTB_ANGLEINCIDENCE            =17         # from enum zFunctionType
	FTB_ANGVELFREQ                =27         # from enum zFunctionType
	FTB_CRITDAMP                  =7          # from enum zFunctionType
	FTB_CURVELENGTH               =11         # from enum zFunctionType
	FTB_CURVEPARAM                =12         # from enum zFunctionType
	FTB_DAMPFUNC                  =16         # from enum zFunctionType
	FTB_DIRECTIONINCIDENCE        =18         # from enum zFunctionType
	FTB_DISPFREQ                  =24         # from enum zFunctionType
	FTB_FORCEFREQ                 =30         # from enum zFunctionType
	FTB_FREQ                      =3          # from enum zFunctionType
	FTB_FUNCSTRAINRATE            =10         # from enum zFunctionType
	FTB_FUNCTEMP                  =5          # from enum zFunctionType
	FTB_FUNCVAL                   =15         # from enum zFunctionType
	FTB_GDAMP                     =6          # from enum zFunctionType
	FTB_HEATFLOWRATE              =41         # from enum zFunctionType
	FTB_LATITUDE                  =45         # from enum zFunctionType
	FTB_MACHFREQ                  =34         # from enum zFunctionType
	FTB_MASSFLOWRATE              =42         # from enum zFunctionType
	FTB_MODE                      =23         # from enum zFunctionType
	FTB_MOMENTFREQ                =31         # from enum zFunctionType
	FTB_NONE                      =0          # from enum zFunctionType
	FTB_PLASTICSTRAIN             =14         # from enum zFunctionType
	FTB_PRESSURE                  =38         # from enum zFunctionType
	FTB_QDAMP                     =8          # from enum zFunctionType
	FTB_ROTATIONSPEED             =49         # from enum zFunctionType
	FTB_ROTFREQ                   =25         # from enum zFunctionType
	FTB_STRAINFREQ                =33         # from enum zFunctionType
	FTB_STRAINRATE                =9          # from enum zFunctionType
	FTB_STRAINSTRESS              =13         # from enum zFunctionType
	FTB_STRESSFREQ                =32         # from enum zFunctionType
	FTB_STRESSSTRAIN              =4          # from enum zFunctionType
	FTB_TBLM1LINLIN               =19         # from enum zFunctionType
	FTB_TBLM1LINLOG               =21         # from enum zFunctionType
	FTB_TBLM1LOGLIN               =20         # from enum zFunctionType
	FTB_TBLM1LOGLOG               =22         # from enum zFunctionType
	FTB_TBLM5DAMAGEFORCE          =48         # from enum zFunctionType
	FTB_TEMP                      =2          # from enum zFunctionType
	FTB_TEMPDIFF                  =40         # from enum zFunctionType
	FTB_THERMALCAPACITANCE        =44         # from enum zFunctionType
	FTB_TIME                      =1          # from enum zFunctionType
	FTB_TRUEPLASTICSTRAIN         =47         # from enum zFunctionType
	FTB_TRUESTRAINSTRESS          =46         # from enum zFunctionType
	FTB_VELFREQ                   =26         # from enum zFunctionType
	FTB_VELOCITY                  =37         # from enum zFunctionType
	FTB_VOLUMEFLOWRATE            =43         # from enum zFunctionType
	FTB_WAVELENGTH                =39         # from enum zFunctionType
	GAM_ABSOLUTE                  =0          # from enum zGFXArrowMode
	GAM_SCALED                    =1          # from enum zGFXArrowMode
	GAS_DOUBLE_LINE               =2          # from enum zGFXArrowStyle
	GAS_DOUBLE_SOLID              =3          # from enum zGFXArrowStyle
	GAS_LINE                      =0          # from enum zGFXArrowStyle
	GAS_REV_DOUBLE_LINE           =4          # from enum zGFXArrowStyle
	GAS_REV_DOUBLE_SOLID          =5          # from enum zGFXArrowStyle
	GAS_SOLID                     =1          # from enum zGFXArrowStyle
	GEF_ALL                       =15         # from enum zGFXEdgeFlags
	GEF_EDGE1                     =1          # from enum zGFXEdgeFlags
	GEF_EDGE2                     =2          # from enum zGFXEdgeFlags
	GEF_EDGE3                     =4          # from enum zGFXEdgeFlags
	GEF_EDGE4                     =8          # from enum zGFXEdgeFlags
	GEF_NONE                      =0          # from enum zGFXEdgeFlags
	GPS_BLANK                     =10         # from enum zGFXPointSymbol
	GPS_CIRCLE                    =8          # from enum zGFXPointSymbol
	GPS_CIRCLE_FILLED             =9          # from enum zGFXPointSymbol
	GPS_CROSS                     =7          # from enum zGFXPointSymbol
	GPS_DIAMOND                   =3          # from enum zGFXPointSymbol
	GPS_POINT                     =0          # from enum zGFXPointSymbol
	GPS_SMALL_TRIANGLE            =6          # from enum zGFXPointSymbol
	GPS_SQUARE                    =1          # from enum zGFXPointSymbol
	GPS_SQUARE_FILLED             =2          # from enum zGFXPointSymbol
	GPS_TRIANGLE                  =5          # from enum zGFXPointSymbol
	GPS_X                         =4          # from enum zGFXPointSymbol
	GICM_ACTIVE                   =0          # from enum zGeomInterfaceColorMode
	GICM_FILE                     =2          # from enum zGeomInterfaceColorMode
	GICM_SINGLE                   =1          # from enum zGeomInterfaceColorMode
	FGXI_ACIS                     =1          # from enum zGeometryExportInterface
	FGXI_CRITERIA                 =7          # from enum zGeometryExportInterface
	FGXI_IGES                     =5          # from enum zGeometryExportInterface
	FGXI_ISOSURFACE               =8          # from enum zGeometryExportInterface
	FGXI_JT                       =6          # from enum zGeometryExportInterface
	FGXI_NONE                     =-1         # from enum zGeometryExportInterface
	FGXI_PARASOLID                =0          # from enum zGeometryExportInterface
	FGXI_SLA                      =2          # from enum zGeometryExportInterface
	FGXI_STEP                     =4          # from enum zGeometryExportInterface
	FGXI_VRML                     =3          # from enum zGeometryExportInterface
	FGITY_ALL                     =0          # from enum zGeometryImportBodyType
	FGITY_CONSTRUCTION            =4          # from enum zGeometryImportBodyType
	FGITY_DESIGN                  =1          # from enum zGeometryImportBodyType
	FGITY_FLATTENED               =5          # from enum zGeometryImportBodyType
	FGITY_SIMPLE                  =3          # from enum zGeometryImportBodyType
	FGITY_SIMPLE_OR_DESIGN        =2          # from enum zGeometryImportBodyType
	FGI_ACIS                      =29         # from enum zGeometryInterface
	FGI_CATIA                     =38         # from enum zGeometryInterface
	FGI_CATIA_V5                  =46         # from enum zGeometryInterface
	FGI_CATIA_V6                  =53         # from enum zGeometryInterface
	FGI_DXF                       =10         # from enum zGeometryInterface
	FGI_IGES                      =11         # from enum zGeometryInterface
	FGI_INVENTOR                  =51         # from enum zGeometryInterface
	FGI_JT                        =49         # from enum zGeometryInterface
	FGI_NONE                      =-1         # from enum zGeometryInterface
	FGI_PARASOLID                 =30         # from enum zGeometryInterface
	FGI_PROE                      =39         # from enum zGeometryInterface
	FGI_RHINO                     =52         # from enum zGeometryInterface
	FGI_SLA                       =27         # from enum zGeometryInterface
	FGI_SOLIDEDGE                 =41         # from enum zGeometryInterface
	FGI_SOLIDWORKS                =47         # from enum zGeometryInterface
	FGI_STEP                      =34         # from enum zGeometryInterface
	FGI_UNIGRAPHICS               =43         # from enum zGeometryInterface
	GIFC_DITHER                   =2          # from enum zGifColorOpt
	GIFC_NET                      =0          # from enum zGifColorOpt
	GIFC_OCTREE                   =1          # from enum zGifColorOpt
	FGB_ADD                       =0          # from enum zGroupBooleanOp
	FGB_INALL                     =2          # from enum zGroupBooleanOp
	FGB_NOTINALL                  =5          # from enum zGroupBooleanOp
	FGB_NOTINANY                  =4          # from enum zGroupBooleanOp
	FGB_ONLYINONE                 =3          # from enum zGroupBooleanOp
	FGB_SUBTRACT                  =1          # from enum zGroupBooleanOp
	FGR_BCO                       =13         # from enum zGroupDataType
	FGR_BEQ                       =14         # from enum zGroupDataType
	FGR_CBCO                      =19         # from enum zGroupDataType
	FGR_CLOAD                     =16         # from enum zGroupDataType
	FGR_CONNECTION                =23         # from enum zGroupDataType
	FGR_CONNECTIONPROP            =24         # from enum zGroupDataType
	FGR_CONTACT                   =22         # from enum zGroupDataType
	FGR_CSYS                      =0          # from enum zGroupDataType
	FGR_CURVE                     =2          # from enum zGroupDataType
	FGR_ELEM                      =8          # from enum zGroupDataType
	FGR_ELOAD                     =12         # from enum zGroupDataType
	FGR_JOINT                     =28         # from enum zGroupDataType
	FGR_LAYUP                     =25         # from enum zGroupDataType
	FGR_MATL                      =9          # from enum zGroupDataType
	FGR_MESHPOINT                 =27         # from enum zGroupDataType
	FGR_NLOAD                     =11         # from enum zGroupDataType
	FGR_NODE                      =7          # from enum zGroupDataType
	FGR_PBCO                      =18         # from enum zGroupDataType
	FGR_PLOAD                     =15         # from enum zGroupDataType
	FGR_POINT                     =1          # from enum zGroupDataType
	FGR_PROP                      =10         # from enum zGroupDataType
	FGR_REGLOAD                   =26         # from enum zGroupDataType
	FGR_SBCO                      =20         # from enum zGroupDataType
	FGR_SLOAD                     =17         # from enum zGroupDataType
	FGR_SOLID                     =21         # from enum zGroupDataType
	FGR_SURFACE                   =3          # from enum zGroupDataType
	FGR_TEXT                      =5          # from enum zGroupDataType
	FGR_VOLUME                    =4          # from enum zGroupDataType
	FGD_AEROCTRLSURF_BYCOLOR      =128        # from enum zGroupDefinitionType
	FGD_AEROCTRLSURF_BYLAYER      =129        # from enum zGroupDefinitionType
	FGD_AEROCTRLSURF_ID           =127        # from enum zGroupDefinitionType
	FGD_AEROPANEL_BYCOLOR         =120        # from enum zGroupDefinitionType
	FGD_AEROPANEL_BYLAYER         =121        # from enum zGroupDefinitionType
	FGD_AEROPANEL_BYPROP          =122        # from enum zGroupDefinitionType
	FGD_AEROPANEL_ID              =119        # from enum zGroupDefinitionType
	FGD_AEROPROP_BYCOLOR          =117        # from enum zGroupDefinitionType
	FGD_AEROPROP_BYLAYER          =118        # from enum zGroupDefinitionType
	FGD_AEROPROP_ID               =116        # from enum zGroupDefinitionType
	FGD_AEROSPLINE_BYCOLOR        =124        # from enum zGroupDefinitionType
	FGD_AEROSPLINE_BYLAYER        =125        # from enum zGroupDefinitionType
	FGD_AEROSPLINE_BYPANEL        =126        # from enum zGroupDefinitionType
	FGD_AEROSPLINE_ID             =123        # from enum zGroupDefinitionType
	FGD_BCO_BYCURVE               =50         # from enum zGroupDefinitionType
	FGD_BCO_BYPOINT               =49         # from enum zGroupDefinitionType
	FGD_BCO_BYSURFACE             =51         # from enum zGroupDefinitionType
	FGD_BCO_ID                    =36         # from enum zGroupDefinitionType
	FGD_BEQ_BYNODE                =37         # from enum zGroupDefinitionType
	FGD_CONNECTIONPROP_BYCOLOR    =92         # from enum zGroupDefinitionType
	FGD_CONNECTIONPROP_BYLAYER    =93         # from enum zGroupDefinitionType
	FGD_CONNECTIONPROP_ID         =91         # from enum zGroupDefinitionType
	FGD_CONNECTIONPROP_ONCONNECTION=99         # from enum zGroupDefinitionType
	FGD_CONNECTION_BYCOLOR        =95         # from enum zGroupDefinitionType
	FGD_CONNECTION_BYCONTACT      =100        # from enum zGroupDefinitionType
	FGD_CONNECTION_BYLAYER        =96         # from enum zGroupDefinitionType
	FGD_CONNECTION_BYPROP         =97         # from enum zGroupDefinitionType
	FGD_CONNECTION_ID             =94         # from enum zGroupDefinitionType
	FGD_CONTACT_BYCOLOR           =85         # from enum zGroupDefinitionType
	FGD_CONTACT_BYCURVE           =110        # from enum zGroupDefinitionType
	FGD_CONTACT_BYELEM            =108        # from enum zGroupDefinitionType
	FGD_CONTACT_BYLAYER           =86         # from enum zGroupDefinitionType
	FGD_CONTACT_BYNODE            =109        # from enum zGroupDefinitionType
	FGD_CONTACT_BYPROP            =112        # from enum zGroupDefinitionType
	FGD_CONTACT_BYSURFACE         =111        # from enum zGroupDefinitionType
	FGD_CONTACT_ID                =84         # from enum zGroupDefinitionType
	FGD_CONTACT_ONCONNECTION      =98         # from enum zGroupDefinitionType
	FGD_CONTACT_ONSOLID           =146        # from enum zGroupDefinitionType
	FGD_CSYS_BYCOLOR              =58         # from enum zGroupDefinitionType
	FGD_CSYS_BYDEFCSYS            =1          # from enum zGroupDefinitionType
	FGD_CSYS_BYLAYER              =69         # from enum zGroupDefinitionType
	FGD_CSYS_BYTYPE               =2          # from enum zGroupDefinitionType
	FGD_CSYS_ID                   =0          # from enum zGroupDefinitionType
	FGD_CSYS_ONCSYS               =131        # from enum zGroupDefinitionType
	FGD_CSYS_ONELEM               =145        # from enum zGroupDefinitionType
	FGD_CSYS_ONNODE               =87         # from enum zGroupDefinitionType
	FGD_CSYS_ONPOINT              =88         # from enum zGroupDefinitionType
	FGD_CSYS_ONPROP               =130        # from enum zGroupDefinitionType
	FGD_CURVE_BYCOLOR             =54         # from enum zGroupDefinitionType
	FGD_CURVE_BYLAYER             =65         # from enum zGroupDefinitionType
	FGD_CURVE_BYPOINT             =7          # from enum zGroupDefinitionType
	FGD_CURVE_BYPROP              =80         # from enum zGroupDefinitionType
	FGD_CURVE_FROMELEM            =168        # from enum zGroupDefinitionType
	FGD_CURVE_FROMNODE            =167        # from enum zGroupDefinitionType
	FGD_CURVE_ID                  =6          # from enum zGroupDefinitionType
	FGD_CURVE_ONREGION            =133        # from enum zGroupDefinitionType
	FGD_CURVE_ONSOLID             =77         # from enum zGroupDefinitionType
	FGD_CURVE_ONSURFACE           =8          # from enum zGroupDefinitionType
	FGD_ELEM_ALLNODESONSOLID      =155        # from enum zGroupDefinitionType
	FGD_ELEM_ATCURVE              =43         # from enum zGroupDefinitionType
	FGD_ELEM_ATCURVESOFSOLID      =160        # from enum zGroupDefinitionType
	FGD_ELEM_ATPOINT              =42         # from enum zGroupDefinitionType
	FGD_ELEM_ATPOINTSOFSOLID      =159        # from enum zGroupDefinitionType
	FGD_ELEM_ATSOLID              =45         # from enum zGroupDefinitionType
	FGD_ELEM_ATSURFACE            =44         # from enum zGroupDefinitionType
	FGD_ELEM_ATSURFACESOFSOLID    =161        # from enum zGroupDefinitionType
	FGD_ELEM_BYALLNODES           =113        # from enum zGroupDefinitionType
	FGD_ELEM_BYCOLOR              =60         # from enum zGroupDefinitionType
	FGD_ELEM_BYGLOBALPLY          =114        # from enum zGroupDefinitionType
	FGD_ELEM_BYLAYER              =71         # from enum zGroupDefinitionType
	FGD_ELEM_BYLAYUP              =104        # from enum zGroupDefinitionType
	FGD_ELEM_BYMATL               =22         # from enum zGroupDefinitionType
	FGD_ELEM_BYNODE               =25         # from enum zGroupDefinitionType
	FGD_ELEM_BYORIENTNODE         =154        # from enum zGroupDefinitionType
	FGD_ELEM_BYPLYMATERIAL        =173        # from enum zGroupDefinitionType
	FGD_ELEM_BYPROP               =23         # from enum zGroupDefinitionType
	FGD_ELEM_BYSHAPE              =89         # from enum zGroupDefinitionType
	FGD_ELEM_BYTYPE               =24         # from enum zGroupDefinitionType
	FGD_ELEM_ID                   =21         # from enum zGroupDefinitionType
	FGD_ELEM_ONREGION             =134        # from enum zGroupDefinitionType
	FGD_JOINT_BYCOLOR             =163        # from enum zGroupDefinitionType
	FGD_JOINT_BYLAYER             =164        # from enum zGroupDefinitionType
	FGD_JOINT_ID                  =162        # from enum zGroupDefinitionType
	FGD_LAYUP_BYGLOBALPLY         =115        # from enum zGroupDefinitionType
	FGD_LAYUP_BYMATL              =102        # from enum zGroupDefinitionType
	FGD_LAYUP_BYPLYMATERIAL       =174        # from enum zGroupDefinitionType
	FGD_LAYUP_ID                  =101        # from enum zGroupDefinitionType
	FGD_LAYUP_ONPROP              =103        # from enum zGroupDefinitionType
	FGD_LOAD_BYCURVE              =47         # from enum zGroupDefinitionType
	FGD_LOAD_BYELEM               =35         # from enum zGroupDefinitionType
	FGD_LOAD_BYNODE               =34         # from enum zGroupDefinitionType
	FGD_LOAD_BYPOINT              =46         # from enum zGroupDefinitionType
	FGD_LOAD_BYREGION             =107        # from enum zGroupDefinitionType
	FGD_LOAD_BYSURFACE            =48         # from enum zGroupDefinitionType
	FGD_MATL_BYCOLOR              =62         # from enum zGroupDefinitionType
	FGD_MATL_BYLAYER              =73         # from enum zGroupDefinitionType
	FGD_MATL_BYTYPE               =29         # from enum zGroupDefinitionType
	FGD_MATL_ID                   =26         # from enum zGroupDefinitionType
	FGD_MATL_ONELEM               =28         # from enum zGroupDefinitionType
	FGD_MATL_ONPROP               =27         # from enum zGroupDefinitionType
	FGD_MESHPOINT_BYCOLOR         =148        # from enum zGroupDefinitionType
	FGD_MESHPOINT_BYCURVE         =151        # from enum zGroupDefinitionType
	FGD_MESHPOINT_BYLAYER         =149        # from enum zGroupDefinitionType
	FGD_MESHPOINT_BYPOINT         =150        # from enum zGroupDefinitionType
	FGD_MESHPOINT_BYSOLID         =153        # from enum zGroupDefinitionType
	FGD_MESHPOINT_BYSURFACE       =152        # from enum zGroupDefinitionType
	FGD_MESHPOINT_ID              =147        # from enum zGroupDefinitionType
	FGD_NODE_ATCURVE              =39         # from enum zGroupDefinitionType
	FGD_NODE_ATCURVESOFSOLID      =157        # from enum zGroupDefinitionType
	FGD_NODE_ATPOINT              =38         # from enum zGroupDefinitionType
	FGD_NODE_ATPOINTSOFSOLID      =156        # from enum zGroupDefinitionType
	FGD_NODE_ATSOLID              =41         # from enum zGroupDefinitionType
	FGD_NODE_ATSURFACE            =40         # from enum zGroupDefinitionType
	FGD_NODE_ATSURFACESOFSOLID    =158        # from enum zGroupDefinitionType
	FGD_NODE_BYCOLOR              =59         # from enum zGroupDefinitionType
	FGD_NODE_BYDEFCSYS            =18         # from enum zGroupDefinitionType
	FGD_NODE_BYLAYER              =70         # from enum zGroupDefinitionType
	FGD_NODE_BYOUTCSYS            =19         # from enum zGroupDefinitionType
	FGD_NODE_BYSUPERELEMENT       =106        # from enum zGroupDefinitionType
	FGD_NODE_BYTYPE               =142        # from enum zGroupDefinitionType
	FGD_NODE_ID                   =17         # from enum zGroupDefinitionType
	FGD_NODE_ONELEM               =20         # from enum zGroupDefinitionType
	FGD_NODE_ONELEMASORIENT       =90         # from enum zGroupDefinitionType
	FGD_NODE_ONREGION             =135        # from enum zGroupDefinitionType
	FGD_POINT_BYCOLOR             =53         # from enum zGroupDefinitionType
	FGD_POINT_BYDEFCSYS           =4          # from enum zGroupDefinitionType
	FGD_POINT_BYLAYER             =64         # from enum zGroupDefinitionType
	FGD_POINT_BYPROP              =79         # from enum zGroupDefinitionType
	FGD_POINT_FROMELEM            =166        # from enum zGroupDefinitionType
	FGD_POINT_FROMNODE            =165        # from enum zGroupDefinitionType
	FGD_POINT_ID                  =3          # from enum zGroupDefinitionType
	FGD_POINT_ONCURVE             =5          # from enum zGroupDefinitionType
	FGD_POINT_ONSOLID             =144        # from enum zGroupDefinitionType
	FGD_POINT_ONSURFACE           =143        # from enum zGroupDefinitionType
	FGD_PROP_BYCOLOR              =61         # from enum zGroupDefinitionType
	FGD_PROP_BYLAYER              =72         # from enum zGroupDefinitionType
	FGD_PROP_BYLAYUP              =105        # from enum zGroupDefinitionType
	FGD_PROP_BYMATL               =32         # from enum zGroupDefinitionType
	FGD_PROP_BYTYPE               =33         # from enum zGroupDefinitionType
	FGD_PROP_ID                   =30         # from enum zGroupDefinitionType
	FGD_PROP_ONCURVE              =138        # from enum zGroupDefinitionType
	FGD_PROP_ONELEM               =31         # from enum zGroupDefinitionType
	FGD_PROP_ONPOINT              =137        # from enum zGroupDefinitionType
	FGD_PROP_ONREGION             =136        # from enum zGroupDefinitionType
	FGD_PROP_ONSOLID              =140        # from enum zGroupDefinitionType
	FGD_PROP_ONSURFACE            =139        # from enum zGroupDefinitionType
	FGD_SOLID_BYCOLOR             =57         # from enum zGroupDefinitionType
	FGD_SOLID_BYCURVE             =75         # from enum zGroupDefinitionType
	FGD_SOLID_BYLAYER             =68         # from enum zGroupDefinitionType
	FGD_SOLID_BYPROP              =83         # from enum zGroupDefinitionType
	FGD_SOLID_BYSURFACE           =76         # from enum zGroupDefinitionType
	FGD_SOLID_BYTYPE              =141        # from enum zGroupDefinitionType
	FGD_SOLID_FROMELEM            =172        # from enum zGroupDefinitionType
	FGD_SOLID_FROMNODE            =171        # from enum zGroupDefinitionType
	FGD_SOLID_ID                  =74         # from enum zGroupDefinitionType
	FGD_SURFACE_BYCOLOR           =55         # from enum zGroupDefinitionType
	FGD_SURFACE_BYCURVE           =10         # from enum zGroupDefinitionType
	FGD_SURFACE_BYLAYER           =66         # from enum zGroupDefinitionType
	FGD_SURFACE_BYPROP            =81         # from enum zGroupDefinitionType
	FGD_SURFACE_FROMELEM          =170        # from enum zGroupDefinitionType
	FGD_SURFACE_FROMNODE          =169        # from enum zGroupDefinitionType
	FGD_SURFACE_ID                =9          # from enum zGroupDefinitionType
	FGD_SURFACE_ONREGION          =132        # from enum zGroupDefinitionType
	FGD_SURFACE_ONSOLID           =78         # from enum zGroupDefinitionType
	FGD_SURFACE_ONVOLUME          =11         # from enum zGroupDefinitionType
	FGD_TEXT_BYCOLOR              =52         # from enum zGroupDefinitionType
	FGD_TEXT_BYLAYER              =63         # from enum zGroupDefinitionType
	FGD_TEXT_ID                   =14         # from enum zGroupDefinitionType
	FGD_VOLUME_BYCOLOR            =56         # from enum zGroupDefinitionType
	FGD_VOLUME_BYLAYER            =67         # from enum zGroupDefinitionType
	FGD_VOLUME_BYPROP             =82         # from enum zGroupDefinitionType
	FGD_VOLUME_BYSURFACE          =13         # from enum zGroupDefinitionType
	FGD_VOLUME_ID                 =12         # from enum zGroupDefinitionType
	FIVT_MAX_PRIN                 =0          # from enum zInvariantResultType
	FIVT_MAX_SHEAR                =4          # from enum zInvariantResultType
	FIVT_MEAN_PRIN                =3          # from enum zInvariantResultType
	FIVT_MID_PRIN                 =2          # from enum zInvariantResultType
	FIVT_MIN_PRIN                 =1          # from enum zInvariantResultType
	FIVT_VON_MISES                =5          # from enum zInvariantResultType
	JT_UNIT_CENTI                 =3          # from enum zJT_FileUnits
	JT_UNIT_DECI                  =4          # from enum zJT_FileUnits
	JT_UNIT_FEET                  =8          # from enum zJT_FileUnits
	JT_UNIT_INCH                  =7          # from enum zJT_FileUnits
	JT_UNIT_KILO                  =6          # from enum zJT_FileUnits
	JT_UNIT_METER                 =5          # from enum zJT_FileUnits
	JT_UNIT_MICRO                 =1          # from enum zJT_FileUnits
	JT_UNIT_MILE                  =10         # from enum zJT_FileUnits
	JT_UNIT_MILLI                 =2          # from enum zJT_FileUnits
	JT_UNIT_UNKNOWN               =0          # from enum zJT_FileUnits
	JT_UNIT_YARD                  =9          # from enum zJT_FileUnits
	JT_UNTI_MIL                   =11         # from enum zJT_FileUnits
	JT_V_10_0                     =100        # from enum zJT_FileVersion
	JT_V_10_1                     =101        # from enum zJT_FileVersion
	JT_V_10_2                     =102        # from enum zJT_FileVersion
	JT_V_10_3                     =103        # from enum zJT_FileVersion
	JT_V_10_4                     =104        # from enum zJT_FileVersion
	JT_V_10_5                     =105        # from enum zJT_FileVersion
	JT_V_10_6                     =106        # from enum zJT_FileVersion
	JT_V_8_0                      =80         # from enum zJT_FileVersion
	JT_V_8_1                      =81         # from enum zJT_FileVersion
	JT_V_8_2                      =82         # from enum zJT_FileVersion
	JT_V_9_0                      =90         # from enum zJT_FileVersion
	JT_V_9_1                      =91         # from enum zJT_FileVersion
	JT_V_9_2                      =92         # from enum zJT_FileVersion
	JT_V_9_3                      =93         # from enum zJT_FileVersion
	JT_V_9_4                      =94         # from enum zJT_FileVersion
	JT_V_9_5                      =95         # from enum zJT_FileVersion
	JT_SETS_ACTIVE                =2          # from enum zJT_SetOption
	JT_SETS_ALL                   =3          # from enum zJT_SetOption
	JT_SETS_NONE                  =0          # from enum zJT_SetOption
	JT_SETS_SELECT                =4          # from enum zJT_SetOption
	JT_SETS_VISIBLE               =1          # from enum zJT_SetOption
	FLIB_DIALOG                   =0          # from enum zLibraryFile
	FLIB_PERSONAL                 =1          # from enum zLibraryFile
	FLIB_SHARED                   =2          # from enum zLibraryFile
	FLIB_SYSTEM                   =3          # from enum zLibraryFile
	FS_INTEGRATED                 =0          # from enum zLinkedSolver
	FS_LINKED                     =1          # from enum zLinkedSolver
	FS_VISQ                       =2          # from enum zLinkedSolver
	FDST_ALL                      =273        # from enum zListDestination
	FDST_FILE                     =256        # from enum zListDestination
	FDST_FILE_PRINT               =272        # from enum zListDestination
	FDST_PRINTER                  =16         # from enum zListDestination
	FDST_SCREEN                   =1          # from enum zListDestination
	FDST_SCR_FILE                 =257        # from enum zListDestination
	FDST_SCR_PRINT                =17         # from enum zListDestination
	FLD_ALONGCURVE                =2          # from enum zLoadDirection
	FLD_NONE                      =0          # from enum zLoadDirection
	FLD_NORMALTOPLANE             =3          # from enum zLoadDirection
	FLD_NORMALTOSURFACE           =4          # from enum zLoadDirection
	FLD_VECTOR                    =1          # from enum zLoadDirection
	FLS_ACCEL                     =64         # from enum zLoadSelectType
	FLS_ANY                       =-1         # from enum zLoadSelectType
	FLS_BODY                      =1          # from enum zLoadSelectType
	FLS_DISP                      =32         # from enum zLoadSelectType
	FLS_ECONVECTION               =16384      # from enum zLoadSelectType
	FLS_EHTFLUX                   =1024       # from enum zLoadSelectType
	FLS_EHTGEN                    =512        # from enum zLoadSelectType
	FLS_ERADIATION                =32768      # from enum zLoadSelectType
	FLS_ETEMP                     =8192       # from enum zLoadSelectType
	FLS_FLFAN                     =2097152    # from enum zLoadSelectType
	FLS_FLPERIODIC                =4194304    # from enum zLoadSelectType
	FLS_FLPRESSURE                =131072     # from enum zLoadSelectType
	FLS_FLSLIP                    =1048576    # from enum zLoadSelectType
	FLS_FLTRACKING                =262144     # from enum zLoadSelectType
	FLS_FLUNKNOWN                 =524288     # from enum zLoadSelectType
	FLS_FORCE                     =16         # from enum zLoadSelectType
	FLS_LINELOAD                  =128        # from enum zLoadSelectType
	FLS_NHTFLUX                   =4          # from enum zLoadSelectType
	FLS_NHTGEN                    =2          # from enum zLoadSelectType
	FLS_NONE                      =0          # from enum zLoadSelectType
	FLS_NONLINEAR                 =8          # from enum zLoadSelectType
	FLS_NTEMP                     =4096       # from enum zLoadSelectType
	FLS_NTRANSIENT                =65536      # from enum zLoadSelectType
	FLS_PRESS                     =256        # from enum zLoadSelectType
	FLS_VELOCITY                  =2048       # from enum zLoadSelectType
	FLT_CECONVECTION              =141        # from enum zLoadType
	FLT_CEHEATFLUX                =140        # from enum zLoadType
	FLT_CEHEATGEN                 =143        # from enum zLoadType
	FLT_CEPRESSURE                =138        # from enum zLoadType
	FLT_CERADIATION               =142        # from enum zLoadType
	FLT_CETEMPERATURE             =139        # from enum zLoadType
	FLT_CNACCELERATION            =131        # from enum zLoadType
	FLT_CNBEARING                 =155        # from enum zLoadType
	FLT_CNDISPLACEMENT            =127        # from enum zLoadType
	FLT_CNFANCURVE                =152        # from enum zLoadType
	FLT_CNFLUIDHEIGHT             =149        # from enum zLoadType
	FLT_CNFOLLOWERFORCE           =156        # from enum zLoadType
	FLT_CNFOLLOWERMOMENT          =157        # from enum zLoadType
	FLT_CNFORCE                   =121        # from enum zLoadType
	FLT_CNFORCEATNODE             =123        # from enum zLoadType
	FLT_CNFORCEPERLEN             =122        # from enum zLoadType
	FLT_CNHEATFLUX                =134        # from enum zLoadType
	FLT_CNHEATFLUXATNODE          =136        # from enum zLoadType
	FLT_CNHEATFLUXPERLEN          =135        # from enum zLoadType
	FLT_CNHEATGEN                 =137        # from enum zLoadType
	FLT_CNHUMIDITY                =148        # from enum zLoadType
	FLT_CNMOMENT                  =124        # from enum zLoadType
	FLT_CNMOMENTATNODE            =126        # from enum zLoadType
	FLT_CNMOMENTPERLEN            =125        # from enum zLoadType
	FLT_CNPERIODIC                =153        # from enum zLoadType
	FLT_CNPRESSURE                =144        # from enum zLoadType
	FLT_CNROTACCELERATION         =132        # from enum zLoadType
	FLT_CNROTDISPLACEMENT         =128        # from enum zLoadType
	FLT_CNROTVELOCITY             =130        # from enum zLoadType
	FLT_CNSCALAR                  =146        # from enum zLoadType
	FLT_CNSLIPCONDITION           =151        # from enum zLoadType
	FLT_CNSTEAMQUALITY            =147        # from enum zLoadType
	FLT_CNTEMPERATURE             =133        # from enum zLoadType
	FLT_CNTORQUE                  =154        # from enum zLoadType
	FLT_CNTOTALPRESSURE           =145        # from enum zLoadType
	FLT_CNUNKNOWNCONDITION        =150        # from enum zLoadType
	FLT_CNVELOCITY                =129        # from enum zLoadType
	FLT_EBOLTPRELOAD              =48         # from enum zLoadType
	FLT_ECONVECTION               =45         # from enum zLoadType
	FLT_EHEATFLUX                 =44         # from enum zLoadType
	FLT_EHEATGEN                  =47         # from enum zLoadType
	FLT_ELINELOAD                 =41         # from enum zLoadType
	FLT_EPRESSURE                 =42         # from enum zLoadType
	FLT_ERADIATION                =46         # from enum zLoadType
	FLT_ETEMPERATURE              =43         # from enum zLoadType
	FLT_NACCELERATION             =7          # from enum zLoadType
	FLT_NBODY                     =0          # from enum zLoadType
	FLT_NDISPLACEMENT             =3          # from enum zLoadType
	FLT_NFANCURVE                 =21         # from enum zLoadType
	FLT_NFLUIDHEIGHT              =18         # from enum zLoadType
	FLT_NFOLLOWERFORCE            =23         # from enum zLoadType
	FLT_NFOLLOWERMOMENT           =24         # from enum zLoadType
	FLT_NFORCE                    =1          # from enum zLoadType
	FLT_NHEATFLUX                 =10         # from enum zLoadType
	FLT_NHEATGEN                  =11         # from enum zLoadType
	FLT_NHUMIDITY                 =17         # from enum zLoadType
	FLT_NMOMENT                   =2          # from enum zLoadType
	FLT_NPERIODIC                 =22         # from enum zLoadType
	FLT_NPRESSURE                 =13         # from enum zLoadType
	FLT_NROTACCELERATION          =8          # from enum zLoadType
	FLT_NROTDISPLACEMENT          =4          # from enum zLoadType
	FLT_NROTVELOCITY              =6          # from enum zLoadType
	FLT_NSCALAR                   =15         # from enum zLoadType
	FLT_NSLIPCONDITION            =20         # from enum zLoadType
	FLT_NSTEAMQUALITY             =16         # from enum zLoadType
	FLT_NTEMPERATURE              =9          # from enum zLoadType
	FLT_NTOTALPRESSURE            =14         # from enum zLoadType
	FLT_NTRANSIENT                =12         # from enum zLoadType
	FLT_NUNBALANCEMASS            =25         # from enum zLoadType
	FLT_NUNBALANCEMOMENT          =26         # from enum zLoadType
	FLT_NUNKNOWNCONDITION         =19         # from enum zLoadType
	FLT_NVELOCITY                 =5          # from enum zLoadType
	FLT_PNACCELERATION            =87         # from enum zLoadType
	FLT_PNDISPLACEMENT            =83         # from enum zLoadType
	FLT_PNFANCURVE                =100        # from enum zLoadType
	FLT_PNFLUIDHEIGHT             =97         # from enum zLoadType
	FLT_PNFOLLOWERFORCE           =102        # from enum zLoadType
	FLT_PNFOLLOWERMOMENT          =103        # from enum zLoadType
	FLT_PNFORCE                   =81         # from enum zLoadType
	FLT_PNHEATFLUX                =90         # from enum zLoadType
	FLT_PNHEATGEN                 =91         # from enum zLoadType
	FLT_PNHUMIDITY                =96         # from enum zLoadType
	FLT_PNMOMENT                  =82         # from enum zLoadType
	FLT_PNPERIODIC                =101        # from enum zLoadType
	FLT_PNPRESSURE                =92         # from enum zLoadType
	FLT_PNROTACCELERATION         =88         # from enum zLoadType
	FLT_PNROTDISPLACEMENT         =84         # from enum zLoadType
	FLT_PNROTVELOCITY             =86         # from enum zLoadType
	FLT_PNSCALAR                  =94         # from enum zLoadType
	FLT_PNSLIPCONDITION           =99         # from enum zLoadType
	FLT_PNSTEAMQUALITY            =95         # from enum zLoadType
	FLT_PNTEMPERATURE             =89         # from enum zLoadType
	FLT_PNTOTALPRESSURE           =93         # from enum zLoadType
	FLT_PNUNKNOWNCONDITION        =98         # from enum zLoadType
	FLT_PNVELOCITY                =85         # from enum zLoadType
	FLT_SECONVECTION              =181        # from enum zLoadType
	FLT_SEHEATFLUX                =180        # from enum zLoadType
	FLT_SEHEATGEN                 =183        # from enum zLoadType
	FLT_SEPRESSURE                =178        # from enum zLoadType
	FLT_SERADIATION               =182        # from enum zLoadType
	FLT_SETEMPERATURE             =179        # from enum zLoadType
	FLT_SNACCELERATION            =171        # from enum zLoadType
	FLT_SNBEARING                 =195        # from enum zLoadType
	FLT_SNDISPLACEMENT            =167        # from enum zLoadType
	FLT_SNFANCURVE                =192        # from enum zLoadType
	FLT_SNFLUIDHEIGHT             =189        # from enum zLoadType
	FLT_SNFOLLOWERFORCE           =196        # from enum zLoadType
	FLT_SNFOLLOWERMOMENT          =197        # from enum zLoadType
	FLT_SNFORCE                   =161        # from enum zLoadType
	FLT_SNFORCEATNODE             =163        # from enum zLoadType
	FLT_SNFORCEPERAREA            =162        # from enum zLoadType
	FLT_SNHEATFLUX                =174        # from enum zLoadType
	FLT_SNHEATFLUXATNODE          =176        # from enum zLoadType
	FLT_SNHEATFLUXPERAREA         =175        # from enum zLoadType
	FLT_SNHEATGEN                 =177        # from enum zLoadType
	FLT_SNHUMIDITY                =188        # from enum zLoadType
	FLT_SNMOMENT                  =164        # from enum zLoadType
	FLT_SNMOMENTATNODE            =166        # from enum zLoadType
	FLT_SNMOMENTPERAREA           =165        # from enum zLoadType
	FLT_SNPERIODIC                =193        # from enum zLoadType
	FLT_SNPRESSURE                =184        # from enum zLoadType
	FLT_SNROTACCELERATION         =172        # from enum zLoadType
	FLT_SNROTDISPLACEMENT         =168        # from enum zLoadType
	FLT_SNROTVELOCITY             =170        # from enum zLoadType
	FLT_SNSCALAR                  =186        # from enum zLoadType
	FLT_SNSLIPCONDITION           =191        # from enum zLoadType
	FLT_SNSTEAMQUALITY            =187        # from enum zLoadType
	FLT_SNTEMPERATURE             =173        # from enum zLoadType
	FLT_SNTORQUE                  =194        # from enum zLoadType
	FLT_SNTOTALPRESSURE           =185        # from enum zLoadType
	FLT_SNUNKNOWNCONDITION        =190        # from enum zLoadType
	FLT_SNVELOCITY                =169        # from enum zLoadType
	FLV_DATASURFACE               =4          # from enum zLoadVariation
	FLV_EQUATION                  =1          # from enum zLoadVariation
	FLV_FUNCTION                  =2          # from enum zLoadVariation
	FLV_INTERPOLATION             =3          # from enum zLoadVariation
	FLV_NONE                      =0          # from enum zLoadVariation
	FLO_AFTER                     =1          # from enum zLocateOption
	FLO_AFTER_EQUAL               =3          # from enum zLocateOption
	FLO_BEFORE                    =2          # from enum zLocateOption
	FLO_BEFORE_EQUAL              =4          # from enum zLocateOption
	FVMDC_ELEM_ALT_TAPER          =10         # from enum zMDCType
	FVMDC_ELEM_ASPECT_RATIO       =8          # from enum zMDCType
	FVMDC_ELEM_COMBINED           =17         # from enum zMDCType
	FVMDC_ELEM_EXPLICIT_TIME_STEP =18         # from enum zMDCType
	FVMDC_ELEM_ID                 =41         # from enum zMDCType
	FVMDC_ELEM_INTERNAL_ANGLE     =11         # from enum zMDCType
	FVMDC_ELEM_JACOBIAN           =16         # from enum zMDCType
	FVMDC_ELEM_NASTRAN_WARPING    =14         # from enum zMDCType
	FVMDC_ELEM_NHEXAR             =29         # from enum zMDCType
	FVMDC_ELEM_NHEXDETJ           =31         # from enum zMDCType
	FVMDC_ELEM_NHEXEPIA           =51         # from enum zMDCType
	FVMDC_ELEM_NHEXEPLR           =30         # from enum zMDCType
	FVMDC_ELEM_NHEXWARP           =32         # from enum zMDCType
	FVMDC_ELEM_NPENAR             =33         # from enum zMDCType
	FVMDC_ELEM_NPENDETJ           =35         # from enum zMDCType
	FVMDC_ELEM_NPENEPIA           =52         # from enum zMDCType
	FVMDC_ELEM_NPENEPLR           =34         # from enum zMDCType
	FVMDC_ELEM_NPENWARP           =36         # from enum zMDCType
	FVMDC_ELEM_NPYRAR             =37         # from enum zMDCType
	FVMDC_ELEM_NPYRDETJ           =40         # from enum zMDCType
	FVMDC_ELEM_NPYREPIA           =53         # from enum zMDCType
	FVMDC_ELEM_NPYREPLR           =38         # from enum zMDCType
	FVMDC_ELEM_NPYRWARP           =39         # from enum zMDCType
	FVMDC_ELEM_NQAR               =47         # from enum zMDCType
	FVMDC_ELEM_NQIAMAX            =23         # from enum zMDCType
	FVMDC_ELEM_NQIAMIN            =22         # from enum zMDCType
	FVMDC_ELEM_NQSKEW             =19         # from enum zMDCType
	FVMDC_ELEM_NQTAPER            =20         # from enum zMDCType
	FVMDC_ELEM_NQWARP             =21         # from enum zMDCType
	FVMDC_ELEM_NT6EPLR            =49         # from enum zMDCType
	FVMDC_ELEM_NTAR               =48         # from enum zMDCType
	FVMDC_ELEM_NTETAR             =26         # from enum zMDCType
	FVMDC_ELEM_NTETDETJ           =28         # from enum zMDCType
	FVMDC_ELEM_NTETEPIA           =50         # from enum zMDCType
	FVMDC_ELEM_NTETEPLR           =27         # from enum zMDCType
	FVMDC_ELEM_NTIAMAX            =25         # from enum zMDCType
	FVMDC_ELEM_NTSKEW             =24         # from enum zMDCType
	FVMDC_ELEM_PLATE_OFFSET       =44         # from enum zMDCType
	FVMDC_ELEM_SKEW               =12         # from enum zMDCType
	FVMDC_ELEM_TAPER              =9          # from enum zMDCType
	FVMDC_ELEM_TET_COLLAPSE       =15         # from enum zMDCType
	FVMDC_ELEM_WARPING            =13         # from enum zMDCType
	FVMDC_MATL_E                  =1          # from enum zMDCType
	FVMDC_MATL_ID                 =42         # from enum zMDCType
	FVMDC_MATL_TABLE              =2          # from enum zMDCType
	FVMDC_NONE_SELECTED           =0          # from enum zMDCType
	FVMDC_PROP_ID                 =43         # from enum zMDCType
	FVMDC_PROP_LINE_AREA          =4          # from enum zMDCType
	FVMDC_PROP_LINE_I1            =5          # from enum zMDCType
	FVMDC_PROP_LINE_I2            =6          # from enum zMDCType
	FVMDC_PROP_PLATE_THICKNESS    =3          # from enum zMDCType
	FVMDC_PROP_TABLE              =7          # from enum zMDCType
	FMRA_DETACH                   =2          # from enum zManageResultsAttach
	FMRA_LOAD                     =0          # from enum zManageResultsAttach
	FMRA_UNLOAD                   =1          # from enum zManageResultsAttach
	FMRA_UPDATE_PATH              =3          # from enum zManageResultsAttach
	FMLT_EHEATFLUX                =44         # from enum zMapLoadType
	FMLT_EHEATGEN                 =47         # from enum zMapLoadType
	FMLT_EPRESSURE                =42         # from enum zMapLoadType
	FMLT_ETEMPERATURE             =43         # from enum zMapLoadType
	FMLT_NACCELERATION            =7          # from enum zMapLoadType
	FMLT_NDISPLACEMENT            =3          # from enum zMapLoadType
	FMLT_NFORCE                   =1          # from enum zMapLoadType
	FMLT_NMOMENT                  =2          # from enum zMapLoadType
	FMLT_NPRESSURE                =13         # from enum zMapLoadType
	FMLT_NROTACCELERATION         =8          # from enum zMapLoadType
	FMLT_NROTDISPLACEMENT         =4          # from enum zMapLoadType
	FMLT_NROTVELOCITY             =6          # from enum zMapLoadType
	FMLT_NTEMPERATURE             =9          # from enum zMapLoadType
	FMLT_NVELOCITY                =5          # from enum zMapLoadType
	FMO_EXTEND                    =2          # from enum zMapOption
	FMO_INTERP                    =3          # from enum zMapOption
	FMO_NONE                      =4          # from enum zMapOption
	FMO_VALUE                     =1          # from enum zMapOption
	FMO_ZERO                      =0          # from enum zMapOption
	FMP_ELEMENT                   =2          # from enum zMapType
	FMP_NODE                      =1          # from enum zMapType
	FMP_STANDARD                  =0          # from enum zMapType
	MAT_AMP_PHASE                 =1          # from enum zMatCplxForm
	MAT_REAL_IMAG                 =0          # from enum zMatCplxForm
	MAT_OP2                       =1          # from enum zMatFileForm
	MAT_PCH                       =0          # from enum zMatFileForm
	MAT_CPLX_DOUBLE               =4          # from enum zMatIOType
	MAT_CPLX_SINGLE               =3          # from enum zMatIOType
	MAT_MACHPRES                  =0          # from enum zMatIOType
	MAT_REAL_DOUBLE               =2          # from enum zMatIOType
	MAT_REAL_SINGLE               =1          # from enum zMatIOType
	MAT_RECT2                     =2          # from enum zMatInputForm
	MAT_RECT9                     =3          # from enum zMatInputForm
	MAT_SQUARE                    =0          # from enum zMatInputForm
	MAT_SYMMETRIC                 =1          # from enum zMatInputForm
	MAT_COMB                      =2          # from enum zMatSrcForm
	MAT_EXT                       =1          # from enum zMatSrcForm
	MAT_INT                       =0          # from enum zMatSrcForm
	FMTCH_ALL                     =1          # from enum zMatchOpt
	FMTCH_ALL_CONSTRAINED         =5          # from enum zMatchOpt
	FMTCH_ALL_TRUE                =3          # from enum zMatchOpt
	FMTCH_ANY                     =0          # from enum zMatchOpt
	FMTCH_ANY_CONSTRAINED         =4          # from enum zMatchOpt
	FMTCH_ANY_TRUE                =2          # from enum zMatchOpt
	FMT_ANISOTROPIC_2D            =3          # from enum zMaterialType
	FMT_ANISOTROPIC_3D            =4          # from enum zMaterialType
	FMT_FLUID                     =7          # from enum zMaterialType
	FMT_GENERAL                   =6          # from enum zMaterialType
	FMT_HYPERELASTIC              =5          # from enum zMaterialType
	FMT_ISOTROPIC                 =0          # from enum zMaterialType
	FMT_ORTHOTROPIC_2D            =1          # from enum zMaterialType
	FMT_ORTHOTROPIC_3D            =2          # from enum zMaterialType
	FMRRNM_BLOCK                  =2          # from enum zMergeRenumMethod
	FMRRNM_COMPRESS               =4          # from enum zMergeRenumMethod
	FMRRNM_MINIMAL                =1          # from enum zMergeRenumMethod
	FMRRNM_NONE                   =0          # from enum zMergeRenumMethod
	FMRRNM_OFFSET                 =3          # from enum zMergeRenumMethod
	FMAP_FREE_PARAMETRIC          =1          # from enum zMeshApproach
	FMAP_FREE_PLANAR              =2          # from enum zMeshApproach
	FMAP_MAP_3CORNER              =4          # from enum zMeshApproach
	FMAP_MAP_3CORNERFAN           =5          # from enum zMeshApproach
	FMAP_MAP_4CORNER              =3          # from enum zMeshApproach
	FMAP_MAP_LINKED               =6          # from enum zMeshApproach
	FMAP_NONE                     =0          # from enum zMeshApproach
	FMAP_TRI_PARAMETRIC           =7          # from enum zMeshApproach
	FMAP_TRI_PLANAR               =8          # from enum zMeshApproach
	MBAS_ALL                      =0          # from enum zMeshBodyAssoc
	MBAS_REQD                     =1          # from enum zMeshBodyAssoc
	MBAS_SELECT                   =2          # from enum zMeshBodyAssoc
	MBMM_ASSOCIATED               =1          # from enum zMeshBodyMidsideMode
	MBMM_NONE                     =0          # from enum zMeshBodyMidsideMode
	MESM_QUAD_TO_2QUADS           =0          # from enum zMeshEditingSplitMode
	MESM_QUAD_TO_2TRIS            =2          # from enum zMeshEditingSplitMode
	MESM_QUAD_TO_3TRIS            =3          # from enum zMeshEditingSplitMode
	MESM_QUAD_TO_4QUADS           =1          # from enum zMeshEditingSplitMode
	MESM_TRI_TO_4QUADS            =5          # from enum zMeshEditingSplitMode
	MESM_TRI_TO_4TRIS             =4          # from enum zMeshEditingSplitMode
	FMOF_BOTTOM                   =2          # from enum zMeshOffsetFrom
	FMOF_CENTERLINE               =0          # from enum zMeshOffsetFrom
	FMOF_TOP                      =1          # from enum zMeshOffsetFrom
	MSPE_ALL                      =3          # from enum zMeshSizePropEdgeMode
	MSPE_FREEONLY                 =1          # from enum zMeshSizePropEdgeMode
	MSPE_FREEPLUS                 =2          # from enum zMeshSizePropEdgeMode
	MSPE_OFF                      =0          # from enum zMeshSizePropEdgeMode
	MSPS_ALL                      =0          # from enum zMeshSizePropSelMode
	MSPS_MESHED                   =1          # from enum zMeshSizePropSelMode
	FMSH_3DTRI                    =3          # from enum zMesherType
	FMSH_AUTO                     =0          # from enum zMesherType
	FMSH_FASTTRI                  =2          # from enum zMesherType
	FMSH_SUBDIVISION              =1          # from enum zMesherType
	FCM_COMMAND                   =4          # from enum zMessageColor
	FCM_ERROR                     =3          # from enum zMessageColor
	FCM_HIGHLIGHT                 =1          # from enum zMessageColor
	FCM_NORMAL                    =0          # from enum zMessageColor
	FCM_WARNING                   =2          # from enum zMessageColor
	MPT_FX                        =0          # from enum zMptComponent
	MPT_FY                        =1          # from enum zMptComponent
	MPT_FZ                        =2          # from enum zMptComponent
	MPT_MX                        =3          # from enum zMptComponent
	MPT_MY                        =4          # from enum zMptComponent
	MPT_MZ                        =5          # from enum zMptComponent
	MPT_APPLIED                   =2          # from enum zMptContribution
	MPT_DMIG                      =3          # from enum zMptContribution
	MPT_MPC                       =1          # from enum zMptContribution
	MPT_SPC                       =0          # from enum zMptContribution
	MPT_1_AEROMESH                =1          # from enum zMptType
	MPT_1_AEROPANEL               =0          # from enum zMptType
	MPT_1_STRUCT                  =2          # from enum zMptType
	MPT_2                         =4          # from enum zMptType
	MPT_3                         =3          # from enum zMptType
	FSNAS_LIC_DESK                =0          # from enum zNasLicenseType
	FSNAS_LIC_ENT                 =1          # from enum zNasLicenseType
	FND_EPOINT                    =2          # from enum zNodeType
	FND_FLPOINT                   =3          # from enum zNodeType
	FND_NODE                      =0          # from enum zNodeType
	FND_SPOINT                    =1          # from enum zNodeType
	FOPBT_PCT                     =2          # from enum zOptBoundtype
	FOPBT_RELATIVE                =1          # from enum zOptBoundtype
	FOPBT_VALUES                  =0          # from enum zOptBoundtype
	FOG_COMPLIANCE                =3          # from enum zOptGoal
	FOG_DRESP                     =0          # from enum zOptGoal
	FOG_MINWEIGHT                 =1          # from enum zOptGoal
	FOG_NONE                      =0          # from enum zOptGoal
	FOG_VOLUME                    =2          # from enum zOptGoal
	FOG_WEIGHT                    =1          # from enum zOptGoal
	FOL_BARAXIALSTRAIN            =14         # from enum zOptLimit
	FOL_BARAXIALSTRESS            =11         # from enum zOptLimit
	FOL_BARMAXSTRAIN              =15         # from enum zOptLimit
	FOL_BARMAXSTRESS              =12         # from enum zOptLimit
	FOL_BARMINSTRAIN              =16         # from enum zOptLimit
	FOL_BARMINSTRESS              =13         # from enum zOptLimit
	FOL_EIGENVALUE                =30         # from enum zOptLimit
	FOL_FREQUENCY                 =29         # from enum zOptLimit
	FOL_NODXDISP                  =1          # from enum zOptLimit
	FOL_NODXRDISP                 =4          # from enum zOptLimit
	FOL_NODYDISP                  =2          # from enum zOptLimit
	FOL_NODYRDISP                 =5          # from enum zOptLimit
	FOL_NODZDISP                  =3          # from enum zOptLimit
	FOL_NODZRDISP                 =6          # from enum zOptLimit
	FOL_NONE                      =0          # from enum zOptLimit
	FOL_PLTMAXPRINSTRAIN          =26         # from enum zOptLimit
	FOL_PLTMAXPRINSTRESS          =20         # from enum zOptLimit
	FOL_PLTMINPRINSTRAIN          =27         # from enum zOptLimit
	FOL_PLTMINPRINSTRESS          =21         # from enum zOptLimit
	FOL_PLTVONMISESSTRAIN         =28         # from enum zOptLimit
	FOL_PLTVONMISESSTRESS         =22         # from enum zOptLimit
	FOL_PLTXNORMALSTRAIN          =23         # from enum zOptLimit
	FOL_PLTXNORMALSTRESS          =17         # from enum zOptLimit
	FOL_PLTXYSHEARSTRAIN          =25         # from enum zOptLimit
	FOL_PLTXYSHEARSTRESS          =19         # from enum zOptLimit
	FOL_PLTYNORMALSTRAIN          =24         # from enum zOptLimit
	FOL_PLTYNORMALSTRESS          =18         # from enum zOptLimit
	FOL_RODAXIALSTRAIN            =9          # from enum zOptLimit
	FOL_RODAXIALSTRESS            =7          # from enum zOptLimit
	FOL_RODTORSIONSTRAIN          =10         # from enum zOptLimit
	FOL_RODTORSIONSTRESS          =8          # from enum zOptLimit
	FOPMC_ADDM                    =0          # from enum zOptMnConType
	FOPMC_CAST                    =1          # from enum zOptMnConType
	FOPMC_CHECK                   =2          # from enum zOptMnConType
	FOPMC_CSYM                    =3          # from enum zOptMnConType
	FOPMC_EXTR                    =4          # from enum zOptMnConType
	FOPMC_MAXS                    =6          # from enum zOptMnConType
	FOPMC_MINS                    =5          # from enum zOptMnConType
	FOPMC_PSYM                    =7          # from enum zOptMnConType
	FOPRT_ELEM                    =3          # from enum zOptRelType
	FOPRT_MATERIAL                =1          # from enum zOptRelType
	FOPRT_PROPERTY                =0          # from enum zOptRelType
	FOPRT_TOPOLOGY                =2          # from enum zOptRelType
	FOPATT_BLANK                  =0          # from enum zOptRespAttType
	FOPATT_CHAR                   =1          # from enum zOptRespAttType
	FOPATT_INT                    =2          # from enum zOptRespAttType
	FOPATT_REAL                   =3          # from enum zOptRespAttType
	FOPRSP_BUCKLE                 =7          # from enum zOptRespType
	FOPRSP_COMPL                  =8          # from enum zOptRespType
	FOPRSP_CUSTOM                 =0          # from enum zOptRespType
	FOPRSP_EIGEN                  =6          # from enum zOptRespType
	FOPRSP_ELEM                   =3          # from enum zOptRespType
	FOPRSP_ESE                    =4          # from enum zOptRespType
	FOPRSP_FRDISP                 =11         # from enum zOptRespType
	FOPRSP_FRELEM                 =14         # from enum zOptRespType
	FOPRSP_FREQ                   =5          # from enum zOptRespType
	FOPRSP_FRSPCF                 =13         # from enum zOptRespType
	FOPRSP_NDISP                  =1          # from enum zOptRespType
	FOPRSP_SPCFORCE               =2          # from enum zOptRespType
	FOPRSP_VOL                    =9          # from enum zOptRespType
	FOPRSP_WEIGHT                 =10         # from enum zOptRespType
	FOP_GOAL                      =1          # from enum zOptType
	FOP_LIMIT                     =3          # from enum zOptType
	FOP_NONE                      =0          # from enum zOptType
	FOP_VARY                      =2          # from enum zOptType
	FOV_BARAREA                   =3          # from enum zOptVary
	FOV_BARI1                     =4          # from enum zOptVary
	FOV_BARI2                     =5          # from enum zOptVary
	FOV_BARTORSION                =6          # from enum zOptVary
	FOV_NONE                      =0          # from enum zOptVary
	FOV_PLATETHICKNESS            =7          # from enum zOptVary
	FOV_RODAREA                   =1          # from enum zOptVary
	FOV_RODTORSION                =2          # from enum zOptVary
	FOC_ANY                       =4          # from enum zOutputComplex
	FOC_IMAGINARY                 =3          # from enum zOutputComplex
	FOC_MAGNITUDE                 =0          # from enum zOutputComplex
	FOC_PHASE                     =1          # from enum zOutputComplex
	FOC_REAL                      =2          # from enum zOutputComplex
	FOD_LINE_TO_CSYS              =8          # from enum zOutputDestination
	FOD_NONE                      =0          # from enum zOutputDestination
	FOD_PLATE_TO_CSYS             =4          # from enum zOutputDestination
	FOD_PLATE_TO_MATL             =3          # from enum zOutputDestination
	FOD_PLATE_TO_VECTOR           =5          # from enum zOutputDestination
	FOD_SOLID_TO_CSYS             =6          # from enum zOutputDestination
	FOD_SOLID_TO_MATL             =7          # from enum zOutputDestination
	FOD_VECTOR_TO_CSYS            =1          # from enum zOutputDestination
	FOD_VECTOR_TO_NODE_OUTPUT_CSYS=2          # from enum zOutputDestination
	FOPC_ALL                      =0          # from enum zOutputProcessCombine
	FOPC_EACH_VECTOR              =2          # from enum zOutputProcessCombine
	FOPC_IN_SET                   =1          # from enum zOutputProcessCombine
	FOPA_ALL                      =0          # from enum zOutputProcessEnvApproach
	FOPA_EACH                     =2          # from enum zOutputProcessEnvApproach
	FOPA_LOCATIONS                =1          # from enum zOutputProcessEnvApproach
	FOPE_MAX                      =0          # from enum zOutputProcessEnvType
	FOPE_MAXABS                   =2          # from enum zOutputProcessEnvType
	FOPE_MIN                      =1          # from enum zOutputProcessEnvType
	FOPM_DIFFAVG                  =1          # from enum zOutputProcessErrorMethod
	FOPM_MAXDIFF                  =0          # from enum zOutputProcessErrorMethod
	FOPM_NORMDIFFAVG              =5          # from enum zOutputProcessErrorMethod
	FOPM_NORMMAXDIFF              =4          # from enum zOutputProcessErrorMethod
	FOPM_PCTDIFFAVG               =3          # from enum zOutputProcessErrorMethod
	FOPM_PCTMAXDIFF               =2          # from enum zOutputProcessErrorMethod
	FOT_ACCEL                     =2          # from enum zOutputType
	FOT_ANY                       =0          # from enum zOutputType
	FOT_DISP                      =1          # from enum zOutputType
	FOT_FORCE                     =3          # from enum zOutputType
	FOT_STRAIN                    =5          # from enum zOutputType
	FOT_STRESS                    =4          # from enum zOutputType
	FOT_TEMP                      =6          # from enum zOutputType
	FPAD_AUTO                     =0          # from enum zPadAlignment
	FPAD_CURVE                    =2          # from enum zPadAlignment
	FPAD_VECTOR                   =1          # from enum zPadAlignment
	FPAD_DIST                     =1          # from enum zPadOffsetType
	FPAD_SCALE                    =0          # from enum zPadOffsetType
	FPM_AVI                       =6          # from enum zPictFormat
	FPM_AVI_UNCOMPRESSED          =-6         # from enum zPictFormat
	FPM_BMP                       =1          # from enum zPictFormat
	FPM_BMPSERIES                 =5          # from enum zPictFormat
	FPM_GIF                       =9          # from enum zPictFormat
	FPM_GIFANIM                   =10         # from enum zPictFormat
	FPM_JPEG                      =4          # from enum zPictFormat
	FPM_JT                        =7          # from enum zPictFormat
	FPM_METAFILE                  =2          # from enum zPictFormat
	FPM_PLACEMF                   =3          # from enum zPictFormat
	FPM_PNG                       =12         # from enum zPictFormat
	FPM_TIF                       =11         # from enum zPictFormat
	FPM2_BMP                      =1          # from enum zPictFormat2
	FPM2_GIF                      =9          # from enum zPictFormat2
	FPM2_JPEG                     =4          # from enum zPictFormat2
	FPM2_PNG                      =12         # from enum zPictFormat2
	FPM2_TIF                      =11         # from enum zPictFormat2
	FPRG_DESKTOP                  =2          # from enum zPictRegion
	FPRG_LAYOUT                   =1          # from enum zPictRegion
	FPRG_WINDOW                   =0          # from enum zPictRegion
	FPD_BISECT                    =4          # from enum zPlaneDefinition
	FPD_COMPONENTS                =3          # from enum zPlaneDefinition
	FPD_DEFCS_AXIS                =6          # from enum zPlaneDefinition
	FPD_GLOBAL_AXIS               =7          # from enum zPlaneDefinition
	FPD_NORMAL                    =5          # from enum zPlaneDefinition
	FPD_NORMAL_TO_CURVE           =9          # from enum zPlaneDefinition
	FPD_NORMAL_TO_SURFACE         =10         # from enum zPlaneDefinition
	FPD_NORMAL_TO_VIEW            =8          # from enum zPlaneDefinition
	FPD_POSITION                  =0          # from enum zPlaneDefinition
	FPD_SAVED                     =11         # from enum zPlaneDefinition
	FPD_USE_NODES                 =2          # from enum zPlaneDefinition
	FPD_USE_POINTS                =1          # from enum zPlaneDefinition
	FPTM_ADJUSTPCT                =2          # from enum zPlateThickOffsetMethod
	FPTM_BOTTOMTONODE             =4          # from enum zPlateThickOffsetMethod
	FPTM_INCREMENT                =1          # from enum zPlateThickOffsetMethod
	FPTM_SETTOVALUE               =0          # from enum zPlateThickOffsetMethod
	FPTM_TOPTONODE                =3          # from enum zPlateThickOffsetMethod
	FPTO_ELEM_OFFSET              =2          # from enum zPlateThickOffsetOptions
	FPTO_ELEM_THICKNESS           =0          # from enum zPlateThickOffsetOptions
	FPTO_PROP_THICKNESS           =1          # from enum zPlateThickOffsetOptions
	FPLT_CHILD                    =10         # from enum zPlyType
	FPLT_LAYUP                    =2          # from enum zPlyType
	FPLT_LAYUPANTI                =4          # from enum zPlyType
	FPLT_LAYUPANTISYMMETRIC       =5          # from enum zPlyType
	FPLT_LAYUPSYMMETRIC           =3          # from enum zPlyType
	FPLT_MATCH                    =6          # from enum zPlyType
	FPLT_MATCHANTI                =8          # from enum zPlyType
	FPLT_MATCHANTISYMMETRIC       =9          # from enum zPlyType
	FPLT_MATCHSYMMETRIC           =7          # from enum zPlyType
	FPLT_PLY                      =0          # from enum zPlyType
	FPLT_PLYMATERIAL              =1          # from enum zPlyType
	FCD_ALONG                     =7          # from enum zPointDefinition
	FCD_ALONGLENGTH               =17         # from enum zPointDefinition
	FCD_BETWEEN                   =9          # from enum zPointDefinition
	FCD_CENTER                    =6          # from enum zPointDefinition
	FCD_CENTER_POINTS             =18         # from enum zPointDefinition
	FCD_CG_SURFACE                =16         # from enum zPointDefinition
	FCD_COORDINATES               =0          # from enum zPointDefinition
	FCD_DISTANCE                  =5          # from enum zPointDefinition
	FCD_INTERSECTCURVESURFACE     =15         # from enum zPointDefinition
	FCD_INTERSECTION              =10         # from enum zPointDefinition
	FCD_MESH_LOCATION             =8          # from enum zPointDefinition
	FCD_MIDPOINT                  =11         # from enum zPointDefinition
	FCD_OFFSET                    =4          # from enum zPointDefinition
	FCD_ON_SURFACE                =14         # from enum zPointDefinition
	FCD_PROJECT_ON_CURVE          =12         # from enum zPointDefinition
	FCD_PROJECT_ON_SURFACE        =13         # from enum zPointDefinition
	FCD_USE_NODES                 =3          # from enum zPointDefinition
	FCD_USE_POINTS                =2          # from enum zPointDefinition
	FCD_WORKPLANE_COORDINATES     =1          # from enum zPointDefinition
	FPT_DEFAULT                   =0          # from enum zPointType
	FPT_SOLID                     =1          # from enum zPointType
	PAFM_AVI                      =2          # from enum zPrefAnimateFormat
	PAFM_BMP                      =0          # from enum zPrefAnimateFormat
	PAFM_BMPSERIES                =1          # from enum zPrefAnimateFormat
	PAFM_GIF                      =3          # from enum zPrefAnimateFormat
	PPFM_BMP                      =0          # from enum zPrefPictureFormat
	PPFM_GIF                      =3          # from enum zPrefPictureFormat
	PPFM_JPEG                     =1          # from enum zPrefPictureFormat
	PPFM_PNG                      =2          # from enum zPrefPictureFormat
	PPFM_TIF                      =4          # from enum zPrefPictureFormat
	FPS_APIPROGRAM                =7          # from enum zPrintSource
	FPS_CHART                     =9          # from enum zPrintSource
	FPS_DATATABLE                 =8          # from enum zPrintSource
	FPS_DESKTOP                   =1          # from enum zPrintSource
	FPS_ENTITYINFO                =6          # from enum zPrintSource
	FPS_FILE                      =2          # from enum zPrintSource
	FPS_LAYOUT                    =3          # from enum zPrintSource
	FPS_MESSAGES                  =4          # from enum zPrintSource
	FPS_PROGRAMFILE               =5          # from enum zPrintSource
	FPS_VIEW                      =0          # from enum zPrintSource
	FPA_CLOSEST                   =0          # from enum zProjectAlong
	FPA_RADIAL_POINT              =3          # from enum zProjectAlong
	FPA_RADIAL_VECTOR             =2          # from enum zProjectAlong
	FPA_VECTOR                    =1          # from enum zProjectAlong
	FPO_CURVE                     =0          # from enum zProjectOnto
	FPO_PLANE                     =3          # from enum zProjectOnto
	FPO_SURFACE                   =1          # from enum zProjectOnto
	FPO_VECTOR                    =2          # from enum zProjectOnto
	PUBALN_CENTER                 =2          # from enum zPublishAlign
	PUBALN_LEFT                   =0          # from enum zPublishAlign
	PUBALN_RIGHT                  =1          # from enum zPublishAlign
	PUB_HTML                      =1          # from enum zPublishFormat
	PUB_RTF                       =0          # from enum zPublishFormat
	PUBIF_BITMAP                  =0          # from enum zPublishImageFormat
	PUBIF_GIF                     =3          # from enum zPublishImageFormat
	PUBIF_JPEG                    =1          # from enum zPublishImageFormat
	PUBIF_PNG                     =2          # from enum zPublishImageFormat
	PUBIF_TIF                     =4          # from enum zPublishImageFormat
	FRNG_ABOVE                    =1          # from enum zRangeOpt
	FRNG_ANY                      =0          # from enum zRangeOpt
	FRNG_BELOW                    =2          # from enum zRangeOpt
	FRNG_BETWEEN                  =3          # from enum zRangeOpt
	FRNG_OUTSIDE                  =4          # from enum zRangeOpt
	FRKA_ALL                      =0          # from enum zRankingApproach
	FRKA_EACH                     =1          # from enum zRankingApproach
	FRKM_ENTITY                   =1          # from enum zRankingMethod
	FRKM_SETS                     =0          # from enum zRankingMethod
	FRKT_MAX                      =0          # from enum zRankingType
	FRKT_MAXABS                   =2          # from enum zRankingType
	FRKT_MIN                      =1          # from enum zRankingType
	FRFM_EXPONENTIAL              =1          # from enum zRealFormat
	FRFM_NASTRAN                  =2          # from enum zRealFormat
	FRFM_NORMAL                   =0          # from enum zRealFormat
	FRC_AVG                       =0          # from enum zResultsConvert
	FRC_AVG_SKIP_CORNER           =2          # from enum zResultsConvert
	FRC_MAX                       =1          # from enum zResultsConvert
	FRC_MAX_NOABS                 =6          # from enum zResultsConvert
	FRC_MAX_NOABS_SKIP_CORNER     =7          # from enum zResultsConvert
	FRC_MAX_SKIP_CORNER           =3          # from enum zResultsConvert
	FRC_MIN                       =4          # from enum zResultsConvert
	FRC_MIN_NOABS                 =8          # from enum zResultsConvert
	FRC_MIN_NOABS_SKIP_CORNER     =9          # from enum zResultsConvert
	FRC_MIN_SKIP_CORNER           =5          # from enum zResultsConvert
	FRC_NONE                      =-1         # from enum zResultsConvert
	FRL_CSV                       =6          # from enum zResultsLocation
	FRL_DB                        =1          # from enum zResultsLocation
	FRL_FNO                       =3          # from enum zResultsLocation
	FRL_HDF                       =9          # from enum zResultsLocation
	FRL_NH5RDB                    =10         # from enum zResultsLocation
	FRL_ODB                       =8          # from enum zResultsLocation
	FRL_OP2                       =2          # from enum zResultsLocation
	FRL_VIRTUAL                   =7          # from enum zResultsLocation
	FRL_XDB                       =5          # from enum zResultsLocation
	FRPROC_ENV_ABSMAX             =5          # from enum zResultsProcessType
	FRPROC_ENV_ABSMAX_SETID       =8          # from enum zResultsProcessType
	FRPROC_ENV_MAX                =3          # from enum zResultsProcessType
	FRPROC_ENV_MAX_SETID          =6          # from enum zResultsProcessType
	FRPROC_ENV_MIN                =4          # from enum zResultsProcessType
	FRPROC_ENV_MIN_SETID          =7          # from enum zResultsProcessType
	FRPROC_LINEAR                 =1          # from enum zResultsProcessType
	FRPROC_NONE                   =0          # from enum zResultsProcessType
	FRPROC_RSS                    =2          # from enum zResultsProcessType
	FE_BAD_DATA                   =9          # from enum zReturnCode
	FE_BAD_TYPE                   =8          # from enum zReturnCode
	FE_CANCEL                     =2          # from enum zReturnCode
	FE_FAIL                       =0          # from enum zReturnCode
	FE_FILE_OPEN_FAILED           =15         # from enum zReturnCode
	FE_FILE_WRITE_FAILED          =17         # from enum zReturnCode
	FE_INVALID                    =3          # from enum zReturnCode
	FE_INVALID_DEVELOPER          =12         # from enum zReturnCode
	FE_NEGATIVE_MASS_VOLUME       =11         # from enum zReturnCode
	FE_NOT_AVAILABLE              =6          # from enum zReturnCode
	FE_NOT_EXIST                  =4          # from enum zReturnCode
	FE_NO_FILENAME                =16         # from enum zReturnCode
	FE_NO_MEMORY                  =10         # from enum zReturnCode
	FE_NO_VALID_GRAPHICS_WINDOW   =13         # from enum zReturnCode
	FE_NO_VALID_GRAPHIC_VIEW      =14         # from enum zReturnCode
	FE_OK                         =-1         # from enum zReturnCode
	FE_SECURITY                   =5          # from enum zReturnCode
	FE_TOO_SMALL                  =7          # from enum zReturnCode
	FRIG_METHOD_AUTO              =0          # from enum zRigidMethod
	FRIG_METHOD_LAGRAN            =1          # from enum zRigidMethod
	FRIG_METHOD_LGELIM            =4          # from enum zRigidMethod
	FRIG_METHOD_LINEAR            =2          # from enum zRigidMethod
	FRIG_METHOD_STIFF             =3          # from enum zRigidMethod
	FRST_RULED                    =0          # from enum zRuledSurfaceType
	FRST_TANGENT_SURF             =1          # from enum zRuledSurfaceType
	FRST_VECTOR                   =2          # from enum zRuledSurfaceType
	FSD_FRONT                     =2          # from enum zSelectorDrill
	FSD_OFF                       =0          # from enum zSelectorDrill
	FSD_QUERY                     =1          # from enum zSelectorDrill
	FS_BC_EQUATION                =186        # from enum zSelectorType
	FS_BC_NODAL                   =185        # from enum zSelectorType
	FS_BC_ON_CURVE                =188        # from enum zSelectorType
	FS_BC_ON_POINT                =187        # from enum zSelectorType
	FS_BC_ON_SURFACE              =189        # from enum zSelectorType
	FS_CONNECTION                 =71         # from enum zSelectorType
	FS_CONNECTION_PROP            =72         # from enum zSelectorType
	FS_CONNECTION_REGION          =58         # from enum zSelectorType
	FS_CSYS                       =9          # from enum zSelectorType
	FS_CURVE                      =4          # from enum zSelectorType
	FS_ELEM                       =8          # from enum zSelectorType
	FS_LOAD_ELEMENTAL             =179        # from enum zSelectorType
	FS_LOAD_NODAL                 =118        # from enum zSelectorType
	FS_LOAD_ON_CURVE              =181        # from enum zSelectorType
	FS_LOAD_ON_POINT              =180        # from enum zSelectorType
	FS_LOAD_ON_SURFACE            =182        # from enum zSelectorType
	FS_MATL                       =10         # from enum zSelectorType
	FS_NODE                       =7          # from enum zSelectorType
	FS_NONE                       =0          # from enum zSelectorType
	FS_POINT                      =3          # from enum zSelectorType
	FS_PROP                       =11         # from enum zSelectorType
	FS_SOLID                      =39         # from enum zSelectorType
	FS_SURFACE                    =5          # from enum zSelectorType
	FS_TEXT                       =21         # from enum zSelectorType
	FSEV_ALT                      =2          # from enum zShapeEvaluator
	FSEV_AUTO                     =0          # from enum zShapeEvaluator
	FSEV_ORIG                     =1          # from enum zShapeEvaluator
	FSEV_PBEAML                   =3          # from enum zShapeEvaluator
	FSOR_DOWN                     =3          # from enum zShapeOrient
	FSOR_LEFT                     =2          # from enum zShapeOrient
	FSOR_RIGHT                    =0          # from enum zShapeOrient
	FSOR_UP                       =1          # from enum zShapeOrient
	FSHP_C                        =10         # from enum zShapeStandard
	FSHP_CIRC_BAR                 =5          # from enum zShapeStandard
	FSHP_CIRC_TUBE                =6          # from enum zShapeStandard
	FSHP_HAT                      =14         # from enum zShapeStandard
	FSHP_HEX_BAR                  =7          # from enum zShapeStandard
	FSHP_HEX_TUBE                 =8          # from enum zShapeStandard
	FSHP_I                        =9          # from enum zShapeStandard
	FSHP_L                        =11         # from enum zShapeStandard
	FSHP_NAS_BAR                  =23         # from enum zShapeStandard
	FSHP_NAS_BOX                  =22         # from enum zShapeStandard
	FSHP_NAS_BOX1                 =32         # from enum zShapeStandard
	FSHP_NAS_CHAN                 =20         # from enum zShapeStandard
	FSHP_NAS_CHAN1                =28         # from enum zShapeStandard
	FSHP_NAS_CHAN2                =30         # from enum zShapeStandard
	FSHP_NAS_CROSS                =24         # from enum zShapeStandard
	FSHP_NAS_H                    =25         # from enum zShapeStandard
	FSHP_NAS_HAT                  =34         # from enum zShapeStandard
	FSHP_NAS_HAT1                 =35         # from enum zShapeStandard
	FSHP_NAS_HEXA                 =33         # from enum zShapeStandard
	FSHP_NAS_I                    =19         # from enum zShapeStandard
	FSHP_NAS_I1                   =27         # from enum zShapeStandard
	FSHP_NAS_L                    =18         # from enum zShapeStandard
	FSHP_NAS_ROD                  =16         # from enum zShapeStandard
	FSHP_NAS_T                    =21         # from enum zShapeStandard
	FSHP_NAS_T1                   =26         # from enum zShapeStandard
	FSHP_NAS_T2                   =31         # from enum zShapeStandard
	FSHP_NAS_TUBE                 =17         # from enum zShapeStandard
	FSHP_NAS_Z                    =29         # from enum zShapeStandard
	FSHP_RECT_BAR                 =1          # from enum zShapeStandard
	FSHP_RECT_TUBE                =2          # from enum zShapeStandard
	FSHP_T                        =12         # from enum zShapeStandard
	FSHP_TRAP_BAR                 =3          # from enum zShapeStandard
	FSHP_TRAP_TUBE                =4          # from enum zShapeStandard
	FSHP_Z                        =13         # from enum zShapeStandard
	FSAV_VECASK                   =2          # from enum zSolidAlignVecMode
	FSAV_VECAUTO                  =0          # from enum zSolidAlignVecMode
	FSAV_VECINPUT                 =1          # from enum zSolidAlignVecMode
	FESL_DEFAULT                  =0          # from enum zSpringOffset
	FESL_ELLOC                    =1          # from enum zSpringOffset
	FESL_OFFSET                   =3          # from enum zSpringOffset
	FESL_PRLOC                    =2          # from enum zSpringOffset
	FESO_ELCID                    =3          # from enum zSpringOrient
	FESO_NODE                     =1          # from enum zSpringOrient
	FESO_NONE                     =0          # from enum zSpringOrient
	FESO_PRCID                    =4          # from enum zSpringOrient
	FESO_VECTOR                   =2          # from enum zSpringOrient
	FSU_BEZIER                    =4          # from enum zSurfaceType
	FSU_BILINEAR                  =0          # from enum zSurfaceType
	FSU_BOUNDARY                  =7          # from enum zSurfaceType
	FSU_BSPLINE                   =6          # from enum zSurfaceType
	FSU_COONS                     =3          # from enum zSurfaceType
	FSU_REVOLUTION                =2          # from enum zSurfaceType
	FSU_RULED                     =1          # from enum zSurfaceType
	FSU_SOLID                     =5          # from enum zSurfaceType
	FPLS_ANTI                     =2          # from enum zSymmetryType
	FPLS_ANTISYMMETRIC            =3          # from enum zSymmetryType
	FPLS_ASIS                     =0          # from enum zSymmetryType
	FPLS_SYMMETRIC                =1          # from enum zSymmetryType
	FTBL_FUNCTION                 =1          # from enum zTableType
	FTBL_LOADSETCOMBINATION       =3          # from enum zTableType
	FTBL_NONE                     =0          # from enum zTableType
	FTBL_RESULTSETPROCESS         =4          # from enum zTableType
	FTBL_VECTORFUNCTION           =2          # from enum zTableType
	FTP_PYR                       =2          # from enum zTetPyrApproach
	FTP_SURFACEONLY               =0          # from enum zTetPyrApproach
	FTP_TET                       =1          # from enum zTetPyrApproach
	FTO_BRICK20                   =12         # from enum zTopologyType
	FTO_BRICK8                    =8          # from enum zTopologyType
	FTO_CONTACT2                  =16         # from enum zTopologyType
	FTO_LINE2                     =0          # from enum zTopologyType
	FTO_LINE3                     =1          # from enum zTopologyType
	FTO_MULTILIST2                =15         # from enum zTopologyType
	FTO_POINT1                    =9          # from enum zTopologyType
	FTO_PYRAMID13                 =19         # from enum zTopologyType
	FTO_PYRAMID5                  =14         # from enum zTopologyType
	FTO_QUAD4                     =4          # from enum zTopologyType
	FTO_QUAD8                     =5          # from enum zTopologyType
	FTO_RIGIDLIST                 =13         # from enum zTopologyType
	FTO_RIGIDLIST2                =18         # from enum zTopologyType
	FTO_TETRA10                   =10         # from enum zTopologyType
	FTO_TETRA4                    =6          # from enum zTopologyType
	FTO_TRIA3                     =2          # from enum zTopologyType
	FTO_TRIA6                     =3          # from enum zTopologyType
	FTO_WEDGE15                   =11         # from enum zTopologyType
	FTO_WEDGE6                    =7          # from enum zTopologyType
	FTO_WELD2                     =17         # from enum zTopologyType
	FULD_ELEM                     =1          # from enum zUpdateLineDirection
	FULD_REVERSE                  =0          # from enum zUpdateLineDirection
	FULD_VECTOR                   =2          # from enum zUpdateLineDirection
	VCX_IMAGINARY                 =3          # from enum zVecComplex
	VCX_MAGNITUDE                 =0          # from enum zVecComplex
	VCX_PHASE                     =1          # from enum zVecComplex
	VCX_REAL                      =2          # from enum zVecComplex
	VEO_APPLIED_LOAD              =11         # from enum zVecElemOther
	VEO_CONVECTION_FORCED         =13         # from enum zVecElemOther
	VEO_CONVECTION_FREE           =12         # from enum zVecElemOther
	VEO_CRACK_STRESS_1            =17         # from enum zVecElemOther
	VEO_CRACK_STRESS_2            =18         # from enum zVecElemOther
	VEO_CRACK_STRESS_3            =19         # from enum zVecElemOther
	VEO_CRACK_STRESS_4            =20         # from enum zVecElemOther
	VEO_CRACK_STRESS_5            =21         # from enum zVecElemOther
	VEO_CRACK_STRESS_6            =22         # from enum zVecElemOther
	VEO_CRACK_STRESS_7            =23         # from enum zVecElemOther
	VEO_CRACK_STRESS_8            =24         # from enum zVecElemOther
	VEO_CRACK_STRESS_9            =25         # from enum zVecElemOther
	VEO_ENERGY_LOSS               =26         # from enum zVecElemOther
	VEO_ENERGY_LOSS_DENSITY       =27         # from enum zVecElemOther
	VEO_ENERGY_LOSS_PERCENT       =28         # from enum zVecElemOther
	VEO_FLUID_PRESSURE            =36         # from enum zVecElemOther
	VEO_GASKET_CLOSURE            =32         # from enum zVecElemOther
	VEO_GASKET_PLASTIC_CLOSURE    =33         # from enum zVecElemOther
	VEO_GASKET_PRESSURE           =31         # from enum zVecElemOther
	VEO_GASKET_STATUS             =35         # from enum zVecElemOther
	VEO_GASKET_YIELD_STRESS       =34         # from enum zVecElemOther
	VEO_HEAT_FLOW_TOTAL           =15         # from enum zVecElemOther
	VEO_HEAT_FLUX_TOTAL           =10         # from enum zVecElemOther
	VEO_HEAT_FLUX_X               =7          # from enum zVecElemOther
	VEO_HEAT_FLUX_Y               =8          # from enum zVecElemOther
	VEO_HEAT_FLUX_Z               =9          # from enum zVecElemOther
	VEO_KINETIC_ENERGY            =16         # from enum zVecElemOther
	VEO_KINETIC_ENERGY_DENSITY    =29         # from enum zVecElemOther
	VEO_KINETIC_ENERGY_PERCENT    =30         # from enum zVecElemOther
	VEO_NORMALIZED_MASS_DENSITY   =37         # from enum zVecElemOther
	VEO_RADIATION                 =14         # from enum zVecElemOther
	VEO_STRAIN_ENERGY             =0          # from enum zVecElemOther
	VEO_STRAIN_ENERGY_DENSITY     =2          # from enum zVecElemOther
	VEO_STRAIN_ENERGY_PERCENT     =1          # from enum zVecElemOther
	VEO_TEMP_GRADIENT_TOTAL       =6          # from enum zVecElemOther
	VEO_TEMP_GRADIENT_X           =3          # from enum zVecElemOther
	VEO_TEMP_GRADIENT_Y           =4          # from enum zVecElemOther
	VEO_TEMP_GRADIENT_Z           =5          # from enum zVecElemOther
	VLT_BAR                       =0          # from enum zVecLineElemType
	VLT_BEAM                      =1          # from enum zVecLineElemType
	VLT_WELD                      =2          # from enum zVecLineElemType
	VLE_A                         =1          # from enum zVecLineEnd
	VLE_B                         =2          # from enum zVecLineEnd
	VLE_OVERALL                   =0          # from enum zVecLineEnd
	VLL_1                         =3          # from enum zVecLineLoc
	VLL_2                         =4          # from enum zVecLineLoc
	VLL_3                         =5          # from enum zVecLineLoc
	VLL_4                         =6          # from enum zVecLineLoc
	VLL_MAX                       =1          # from enum zVecLineLoc
	VLL_MIN                       =2          # from enum zVecLineLoc
	VLL_OVERALL                   =0          # from enum zVecLineLoc
	VLO_BUSHFAST_FORCE_X          =31         # from enum zVecLineOther
	VLO_BUSHFAST_FORCE_Y          =32         # from enum zVecLineOther
	VLO_BUSHFAST_FORCE_Z          =33         # from enum zVecLineOther
	VLO_BUSHFAST_MOMENT_X         =34         # from enum zVecLineOther
	VLO_BUSHFAST_MOMENT_Y         =35         # from enum zVecLineOther
	VLO_BUSHFAST_MOMENT_Z         =36         # from enum zVecLineOther
	VLO_BUSHFAST_STRAIN_RX        =46         # from enum zVecLineOther
	VLO_BUSHFAST_STRAIN_RY        =47         # from enum zVecLineOther
	VLO_BUSHFAST_STRAIN_RZ        =48         # from enum zVecLineOther
	VLO_BUSHFAST_STRAIN_TX        =43         # from enum zVecLineOther
	VLO_BUSHFAST_STRAIN_TY        =44         # from enum zVecLineOther
	VLO_BUSHFAST_STRAIN_TZ        =45         # from enum zVecLineOther
	VLO_BUSHFAST_STRESS_RX        =40         # from enum zVecLineOther
	VLO_BUSHFAST_STRESS_RY        =41         # from enum zVecLineOther
	VLO_BUSHFAST_STRESS_RZ        =42         # from enum zVecLineOther
	VLO_BUSHFAST_STRESS_TX        =37         # from enum zVecLineOther
	VLO_BUSHFAST_STRESS_TY        =38         # from enum zVecLineOther
	VLO_BUSHFAST_STRESS_TZ        =39         # from enum zVecLineOther
	VLO_BUSH_AXIAL_DISPLACEMENT   =26         # from enum zVecLineOther
	VLO_BUSH_AXIAL_FORCE          =25         # from enum zVecLineOther
	VLO_BUSH_AXIAL_PLASTIC_STRAIN =30         # from enum zVecLineOther
	VLO_BUSH_AXIAL_STRAIN         =29         # from enum zVecLineOther
	VLO_BUSH_AXIAL_STRESS         =28         # from enum zVecLineOther
	VLO_BUSH_AXIAL_VELOCITY       =27         # from enum zVecLineOther
	VLO_GAP_DISPLACEMENT_AXIAL    =17         # from enum zVecLineOther
	VLO_GAP_DISPLACEMENT_V        =18         # from enum zVecLineOther
	VLO_GAP_DISPLACEMENT_W        =19         # from enum zVecLineOther
	VLO_GAP_FORCE_X               =22         # from enum zVecLineOther
	VLO_GAP_FORCE_Y               =23         # from enum zVecLineOther
	VLO_GAP_FORCE_Z               =24         # from enum zVecLineOther
	VLO_GAP_SLIP_V                =20         # from enum zVecLineOther
	VLO_GAP_SLIP_W                =21         # from enum zVecLineOther
	VLO_ROD_AXIAL_FORCE           =3          # from enum zVecLineOther
	VLO_ROD_STRAIN_AXIAL          =10         # from enum zVecLineOther
	VLO_ROD_STRAIN_AXIAL_MARGIN   =15         # from enum zVecLineOther
	VLO_ROD_STRAIN_CREEP          =13         # from enum zVecLineOther
	VLO_ROD_STRAIN_ELASTIC        =53         # from enum zVecLineOther
	VLO_ROD_STRAIN_PLASTIC        =12         # from enum zVecLineOther
	VLO_ROD_STRAIN_THERMAL        =52         # from enum zVecLineOther
	VLO_ROD_STRAIN_TORSIONAL      =11         # from enum zVecLineOther
	VLO_ROD_STRAIN_TORSIONAL_CREEP=57         # from enum zVecLineOther
	VLO_ROD_STRAIN_TORSIONAL_ELASTIC=55         # from enum zVecLineOther
	VLO_ROD_STRAIN_TORSIONAL_MARGIN=16         # from enum zVecLineOther
	VLO_ROD_STRAIN_TORSIONAL_PLASTIC=56         # from enum zVecLineOther
	VLO_ROD_STRAIN_TORSIONAL_THERMAL=54         # from enum zVecLineOther
	VLO_ROD_STRAIN_TOTAL          =14         # from enum zVecLineOther
	VLO_ROD_STRESS_AXIAL          =5          # from enum zVecLineOther
	VLO_ROD_STRESS_AXIAL_MARGIN   =8          # from enum zVecLineOther
	VLO_ROD_STRESS_EQUIVALENT     =7          # from enum zVecLineOther
	VLO_ROD_STRESS_TORSIONAL      =6          # from enum zVecLineOther
	VLO_ROD_STRESS_TORSIONAL_MARGIN=9          # from enum zVecLineOther
	VLO_ROD_TORQUE                =4          # from enum zVecLineOther
	VLO_SPRING_FORCE              =0          # from enum zVecLineOther
	VLO_SPRING_STRAIN             =2          # from enum zVecLineOther
	VLO_SPRING_STRESS             =1          # from enum zVecLineOther
	VLO_WELD_AXIAL_STRESS         =49         # from enum zVecLineOther
	VLO_WELD_BEARING_STRESS       =51         # from enum zVecLineOther
	VLO_WELD_MAX_SHEAR_STRESS     =50         # from enum zVecLineOther
	VLV_AXIAL_FORCE               =0          # from enum zVecLineResult
	VLV_MOMENT_PLANE1             =3          # from enum zVecLineResult
	VLV_MOMENT_PLANE2             =4          # from enum zVecLineResult
	VLV_SHEAR_PLANE1              =5          # from enum zVecLineResult
	VLV_SHEAR_PLANE2              =6          # from enum zVecLineResult
	VLV_STRAIN_AXIAL              =13         # from enum zVecLineResult
	VLV_STRAIN_BENDING            =14         # from enum zVecLineResult
	VLV_STRAIN_COMBINED           =15         # from enum zVecLineResult
	VLV_STRAIN_COMPRESSION_MARGIN =20         # from enum zVecLineResult
	VLV_STRAIN_CREEP              =17         # from enum zVecLineResult
	VLV_STRAIN_PLASTIC            =16         # from enum zVecLineResult
	VLV_STRAIN_TENSION_MARGIN     =19         # from enum zVecLineResult
	VLV_STRAIN_TOTAL              =18         # from enum zVecLineResult
	VLV_STRESS_AXIAL              =7          # from enum zVecLineResult
	VLV_STRESS_BENDING            =8          # from enum zVecLineResult
	VLV_STRESS_COMBINED           =9          # from enum zVecLineResult
	VLV_STRESS_COMPRESSION_MARGIN =12         # from enum zVecLineResult
	VLV_STRESS_EQUIVALENT         =10         # from enum zVecLineResult
	VLV_STRESS_TENSION_MARGIN     =11         # from enum zVecLineResult
	VLV_TORQUE                    =1          # from enum zVecLineResult
	VLV_TORQUE_WARPING            =2          # from enum zVecLineResult
	VNV_ACCELERATION              =4          # from enum zVecNodalResult
	VNV_AERO_ROTATION             =34         # from enum zVecNodalResult
	VNV_AERO_TRANSLATION          =33         # from enum zVecNodalResult
	VNV_ANG_ACCELERATION          =5          # from enum zVecNodalResult
	VNV_ANG_VELOCITY              =3          # from enum zVecNodalResult
	VNV_APPLIED_FORCE             =6          # from enum zVecNodalResult
	VNV_APPLIED_MOMENT            =7          # from enum zVecNodalResult
	VNV_CONSTRAINT_FORCE          =8          # from enum zVecNodalResult
	VNV_CONSTRAINT_MOMENT         =9          # from enum zVecNodalResult
	VNV_CONTACT_FORCE             =25         # from enum zVecNodalResult
	VNV_CONTACT_INCSLIDEDISTANCE  =29         # from enum zVecNodalResult
	VNV_CONTACT_SLIDEDISTANCE     =30         # from enum zVecNodalResult
	VNV_CONTACT_TRACTION          =24         # from enum zVecNodalResult
	VNV_GLUE_FORCE                =27         # from enum zVecNodalResult
	VNV_GLUE_INCSLIDEDISTANCE     =31         # from enum zVecNodalResult
	VNV_GLUE_MOMENT               =28         # from enum zVecNodalResult
	VNV_GLUE_SLIDEDISTANCE        =32         # from enum zVecNodalResult
	VNV_GLUE_TRACTION             =26         # from enum zVecNodalResult
	VNV_GP_APPLIED_FORCE          =14         # from enum zVecNodalResult
	VNV_GP_APPLIED_MOMENT         =15         # from enum zVecNodalResult
	VNV_GP_CONSTRAINT_FORCE       =16         # from enum zVecNodalResult
	VNV_GP_CONSTRAINT_MOMENT      =17         # from enum zVecNodalResult
	VNV_GP_CONTACT_FORCE          =22         # from enum zVecNodalResult
	VNV_GP_CONTACT_MOMENT         =23         # from enum zVecNodalResult
	VNV_GP_DRILLING_FORCE         =20         # from enum zVecNodalResult
	VNV_GP_DRILLING_MOMENT        =21         # from enum zVecNodalResult
	VNV_GP_MPC_FORCE              =18         # from enum zVecNodalResult
	VNV_GP_MPC_MOMENT             =19         # from enum zVecNodalResult
	VNV_GP_TOTAL_FORCE            =12         # from enum zVecNodalResult
	VNV_GP_TOTAL_MOMENT           =13         # from enum zVecNodalResult
	VNV_MPC_FORCE                 =10         # from enum zVecNodalResult
	VNV_MPC_MOMENT                =11         # from enum zVecNodalResult
	VNV_ROTATION                  =1          # from enum zVecNodalResult
	VNV_TRANSLATION               =0          # from enum zVecNodalResult
	VNV_VELOCITY                  =2          # from enum zVecNodalResult
	VNS_COMPLEX_MODE_SHAPE        =23         # from enum zVecNodalScalar
	VNS_CONTACT_DEFSEPDIST        =9          # from enum zVecNodalScalar
	VNS_CONTACT_FRICTIONFORCE     =13         # from enum zVecNodalScalar
	VNS_CONTACT_FRICTIONSTRESS1   =15         # from enum zVecNodalScalar
	VNS_CONTACT_FRICTIONSTRESS2   =16         # from enum zVecNodalScalar
	VNS_CONTACT_INISEPDIST        =8          # from enum zVecNodalScalar
	VNS_CONTACT_NORMALFORCE       =12         # from enum zVecNodalScalar
	VNS_CONTACT_NORMALSTRESS      =14         # from enum zVecNodalScalar
	VNS_CONTACT_PRESSURE          =7          # from enum zVecNodalScalar
	VNS_CONTACT_STATUS            =11         # from enum zVecNodalScalar
	VNS_CONTACT_X_FORCE           =17         # from enum zVecNodalScalar
	VNS_CONTACT_X_FRICTIONFORCE   =20         # from enum zVecNodalScalar
	VNS_CONTACT_Y_FORCE           =18         # from enum zVecNodalScalar
	VNS_CONTACT_Y_FRICTIONFORCE   =21         # from enum zVecNodalScalar
	VNS_CONTACT_Z_FORCE           =19         # from enum zVecNodalScalar
	VNS_CONTACT_Z_FRICTIONFORCE   =22         # from enum zVecNodalScalar
	VNS_ENTHALPY                  =4          # from enum zVecNodalScalar
	VNS_ENTHALPY_CHANGE           =5          # from enum zVecNodalScalar
	VNS_GLUE_PRESSURE             =10         # from enum zVecNodalScalar
	VNS_PRESSURE                  =3          # from enum zVecNodalScalar
	VNS_TEMPERATURE               =0          # from enum zVecNodalScalar
	VNS_THERMAL_APPLIEDLOAD       =2          # from enum zVecNodalScalar
	VNS_THERMAL_CONSTRAINTFORCE   =1          # from enum zVecNodalScalar
	VNS_THERMAL_MULTIPOINTFORCE   =6          # from enum zVecNodalScalar
	VNT_TOTAL_NONE                =0          # from enum zVecNodalType
	VNT_X                         =1          # from enum zVecNodalType
	VNT_Y                         =2          # from enum zVecNodalType
	VNT_Z                         =3          # from enum zVecNodalType
	VPL_1                         =1          # from enum zVecPlateLoc
	VPL_2                         =2          # from enum zVecPlateLoc
	VPL_3                         =3          # from enum zVecPlateLoc
	VPL_4                         =4          # from enum zVecPlateLoc
	VPL_CENTROID                  =0          # from enum zVecPlateLoc
	VPP_BOT                       =2          # from enum zVecPlatePly
	VPP_MID                       =1          # from enum zVecPlatePly
	VPP_TOP                       =0          # from enum zVecPlatePly
	VPV_CURVATURE                 =6          # from enum zVecPlateResult
	VPV_ELASTIC_CURVATURE         =7          # from enum zVecPlateResult
	VPV_ELASTIC_STRAIN            =4          # from enum zVecPlateResult
	VPV_FORCE                     =0          # from enum zVecPlateResult
	VPV_MOMENT                    =1          # from enum zVecPlateResult
	VPV_NONLINEAR_STRAIN          =9          # from enum zVecPlateResult
	VPV_NONLINEAR_STRESS          =10         # from enum zVecPlateResult
	VPV_STRAIN                    =3          # from enum zVecPlateResult
	VPV_STRESS                    =2          # from enum zVecPlateResult
	VPV_THERMAL_CURVATURE         =8          # from enum zVecPlateResult
	VPV_THERMAL_STRAIN            =5          # from enum zVecPlateResult
	VPS_AXISYM_AXIALFORCE1        =62         # from enum zVecPlateScalar
	VPS_AXISYM_AXIALFORCE2        =63         # from enum zVecPlateScalar
	VPS_AXISYM_AXIALFORCE3        =64         # from enum zVecPlateScalar
	VPS_AXISYM_AXIALFORCE4        =65         # from enum zVecPlateScalar
	VPS_AXISYM_AXIALSTRAIN        =35         # from enum zVecPlateScalar
	VPS_AXISYM_AXIALSTRAINNL      =48         # from enum zVecPlateScalar
	VPS_AXISYM_AXIALSTRESS        =26         # from enum zVecPlateScalar
	VPS_AXISYM_AXIALSTRESSNL      =43         # from enum zVecPlateScalar
	VPS_AXISYM_AZIMUTHFORCE1      =58         # from enum zVecPlateScalar
	VPS_AXISYM_AZIMUTHFORCE2      =59         # from enum zVecPlateScalar
	VPS_AXISYM_AZIMUTHFORCE3      =60         # from enum zVecPlateScalar
	VPS_AXISYM_AZIMUTHFORCE4      =61         # from enum zVecPlateScalar
	VPS_AXISYM_AZIMUTHSTRAIN      =34         # from enum zVecPlateScalar
	VPS_AXISYM_AZIMUTHSTRAINNL    =47         # from enum zVecPlateScalar
	VPS_AXISYM_AZIMUTHSTRESS      =25         # from enum zVecPlateScalar
	VPS_AXISYM_AZIMUTHSTRESSNL    =42         # from enum zVecPlateScalar
	VPS_AXISYM_CREEP_AXIALSTRAIN  =107        # from enum zVecPlateScalar
	VPS_AXISYM_CREEP_AZIMUTHSTRAIN=106        # from enum zVecPlateScalar
	VPS_AXISYM_CREEP_MAXPRINSTRAIN=109        # from enum zVecPlateScalar
	VPS_AXISYM_CREEP_MAXSHEARSTRAIN=110        # from enum zVecPlateScalar
	VPS_AXISYM_CREEP_OCTAHEDRALSTRAIN=111        # from enum zVecPlateScalar
	VPS_AXISYM_CREEP_RADIALSTRAIN =105        # from enum zVecPlateScalar
	VPS_AXISYM_CREEP_SHEARSTRAIN  =108        # from enum zVecPlateScalar
	VPS_AXISYM_CREEP_VONMISESSTRAIN=112        # from enum zVecPlateScalar
	VPS_AXISYM_EFFCREEPSTRAIN     =51         # from enum zVecPlateScalar
	VPS_AXISYM_EFFCREEPSTRAINNL   =53         # from enum zVecPlateScalar
	VPS_AXISYM_EFFPLASTICSTRAIN   =50         # from enum zVecPlateScalar
	VPS_AXISYM_EFFPLASTICSTRAINNL =52         # from enum zVecPlateScalar
	VPS_AXISYM_ELASTIC_AXIALSTRAIN=91         # from enum zVecPlateScalar
	VPS_AXISYM_ELASTIC_AZIMUTHSTRAIN=90         # from enum zVecPlateScalar
	VPS_AXISYM_ELASTIC_MAXPRINSTRAIN=93         # from enum zVecPlateScalar
	VPS_AXISYM_ELASTIC_MAXSHEARSTRAIN=94         # from enum zVecPlateScalar
	VPS_AXISYM_ELASTIC_OCTAHEDRALSTRAIN=95         # from enum zVecPlateScalar
	VPS_AXISYM_ELASTIC_RADIALSTRAIN=89         # from enum zVecPlateScalar
	VPS_AXISYM_ELASTIC_SHEARSTRAIN=92         # from enum zVecPlateScalar
	VPS_AXISYM_ELASTIC_VONMISESSTRAIN=96         # from enum zVecPlateScalar
	VPS_AXISYM_MAXPRINSTRAIN      =37         # from enum zVecPlateScalar
	VPS_AXISYM_MAXPRINSTRESS      =28         # from enum zVecPlateScalar
	VPS_AXISYM_MAXSHEARSTRAIN     =38         # from enum zVecPlateScalar
	VPS_AXISYM_MAXSHEARSTRESS     =30         # from enum zVecPlateScalar
	VPS_AXISYM_MEANPRESSURE       =66         # from enum zVecPlateScalar
	VPS_AXISYM_MEANPRESSURENL     =68         # from enum zVecPlateScalar
	VPS_AXISYM_MINPRINSTRESS      =29         # from enum zVecPlateScalar
	VPS_AXISYM_OCTAHEDRALSTRAIN   =39         # from enum zVecPlateScalar
	VPS_AXISYM_OCTAHEDRALSTRESS   =31         # from enum zVecPlateScalar
	VPS_AXISYM_PLASTIC_AXIALSTRAIN=99         # from enum zVecPlateScalar
	VPS_AXISYM_PLASTIC_AZIMUTHSTRAIN=98         # from enum zVecPlateScalar
	VPS_AXISYM_PLASTIC_MAXPRINSTRAIN=101        # from enum zVecPlateScalar
	VPS_AXISYM_PLASTIC_MAXSHEARSTRAIN=102        # from enum zVecPlateScalar
	VPS_AXISYM_PLASTIC_OCTAHEDRALSTRAIN=103        # from enum zVecPlateScalar
	VPS_AXISYM_PLASTIC_RADIALSTRAIN=97         # from enum zVecPlateScalar
	VPS_AXISYM_PLASTIC_SHEARSTRAIN=100        # from enum zVecPlateScalar
	VPS_AXISYM_PLASTIC_VONMISESSTRAIN=104        # from enum zVecPlateScalar
	VPS_AXISYM_RADIALFORCE1       =54         # from enum zVecPlateScalar
	VPS_AXISYM_RADIALFORCE2       =55         # from enum zVecPlateScalar
	VPS_AXISYM_RADIALFORCE3       =56         # from enum zVecPlateScalar
	VPS_AXISYM_RADIALFORCE4       =57         # from enum zVecPlateScalar
	VPS_AXISYM_RADIALSTRAIN       =33         # from enum zVecPlateScalar
	VPS_AXISYM_RADIALSTRAINNL     =46         # from enum zVecPlateScalar
	VPS_AXISYM_RADIALSTRESS       =24         # from enum zVecPlateScalar
	VPS_AXISYM_RADIALSTRESSNL     =41         # from enum zVecPlateScalar
	VPS_AXISYM_SHEARSTRAIN        =36         # from enum zVecPlateScalar
	VPS_AXISYM_SHEARSTRAINNL      =49         # from enum zVecPlateScalar
	VPS_AXISYM_SHEARSTRESS        =27         # from enum zVecPlateScalar
	VPS_AXISYM_SHEARSTRESSNL      =44         # from enum zVecPlateScalar
	VPS_AXISYM_THERMAL_AXIALSTRAIN=83         # from enum zVecPlateScalar
	VPS_AXISYM_THERMAL_AZIMUTHSTRAIN=82         # from enum zVecPlateScalar
	VPS_AXISYM_THERMAL_MAXPRINSTRAIN=85         # from enum zVecPlateScalar
	VPS_AXISYM_THERMAL_MAXSHEARSTRAIN=86         # from enum zVecPlateScalar
	VPS_AXISYM_THERMAL_OCTAHEDRALSTRAIN=87         # from enum zVecPlateScalar
	VPS_AXISYM_THERMAL_RADIALSTRAIN=81         # from enum zVecPlateScalar
	VPS_AXISYM_THERMAL_SHEARSTRAIN=84         # from enum zVecPlateScalar
	VPS_AXISYM_THERMAL_VONMISESSTRAIN=88         # from enum zVecPlateScalar
	VPS_AXISYM_VOLUMETRICSTRAIN   =67         # from enum zVecPlateScalar
	VPS_AXISYM_VOLUMETRICSTRAINNL =69         # from enum zVecPlateScalar
	VPS_AXISYM_VONMISESSTRAIN     =40         # from enum zVecPlateScalar
	VPS_AXISYM_VONMISESSTRESS     =32         # from enum zVecPlateScalar
	VPS_AXISYM_VONMISESSTRESSNL   =45         # from enum zVecPlateScalar
	VPS_FIBER_BOTTOM              =71         # from enum zVecPlateScalar
	VPS_FIBER_BOTTOMELASTIC       =77         # from enum zVecPlateScalar
	VPS_FIBER_BOTTOMNL            =73         # from enum zVecPlateScalar
	VPS_FIBER_BOTTOMTHERMAL       =75         # from enum zVecPlateScalar
	VPS_FIBER_TOP                 =70         # from enum zVecPlateScalar
	VPS_FIBER_TOPELASTIC          =76         # from enum zVecPlateScalar
	VPS_FIBER_TOPNL               =72         # from enum zVecPlateScalar
	VPS_FIBER_TOPTHERMAL          =74         # from enum zVecPlateScalar
	VPS_LAMINATE_MAXFAILUREINDEX  =78         # from enum zVecPlateScalar
	VPS_LAMINATE_MINSTRENGTHRATIO =79         # from enum zVecPlateScalar
	VPS_SHEAR_13DIAG              =8          # from enum zVecPlateScalar
	VPS_SHEAR_1FROM2              =1          # from enum zVecPlateScalar
	VPS_SHEAR_1FROM4              =0          # from enum zVecPlateScalar
	VPS_SHEAR_24DIAG              =9          # from enum zVecPlateScalar
	VPS_SHEAR_2FROM1              =2          # from enum zVecPlateScalar
	VPS_SHEAR_2FROM3              =3          # from enum zVecPlateScalar
	VPS_SHEAR_3FROM2              =4          # from enum zVecPlateScalar
	VPS_SHEAR_3FROM4              =5          # from enum zVecPlateScalar
	VPS_SHEAR_4FROM1              =7          # from enum zVecPlateScalar
	VPS_SHEAR_4FROM3              =6          # from enum zVecPlateScalar
	VPS_SHEAR_AVGSHEAR            =19         # from enum zVecPlateScalar
	VPS_SHEAR_AVGSHEARFORCE       =80         # from enum zVecPlateScalar
	VPS_SHEAR_AVGSHEARSTRAIN      =21         # from enum zVecPlateScalar
	VPS_SHEAR_FLOW12              =14         # from enum zVecPlateScalar
	VPS_SHEAR_FLOW23              =15         # from enum zVecPlateScalar
	VPS_SHEAR_FLOW34              =16         # from enum zVecPlateScalar
	VPS_SHEAR_FLOW41              =17         # from enum zVecPlateScalar
	VPS_SHEAR_KICK1               =10         # from enum zVecPlateScalar
	VPS_SHEAR_KICK2               =11         # from enum zVecPlateScalar
	VPS_SHEAR_KICK3               =12         # from enum zVecPlateScalar
	VPS_SHEAR_KICK4               =13         # from enum zVecPlateScalar
	VPS_SHEAR_MARGINOFSAFETY      =22         # from enum zVecPlateScalar
	VPS_SHEAR_MAXSHEAR            =18         # from enum zVecPlateScalar
	VPS_SHEAR_MAXSHEARSTRAIN      =20         # from enum zVecPlateScalar
	VPS_SHEAR_STRAINMARGINOFSAFETY=23         # from enum zVecPlateScalar
	VPT_ANG_PRIN                  =5          # from enum zVecPlateType
	VPT_MAX_PRIN                  =1          # from enum zVecPlateType
	VPT_MAX_SHEAR                 =4          # from enum zVecPlateType
	VPT_MEAN                      =6          # from enum zVecPlateType
	VPT_MID_PRIN                  =3          # from enum zVecPlateType
	VPT_MIN_PRIN                  =2          # from enum zVecPlateType
	VPT_VON_MISES                 =0          # from enum zVecPlateType
	VPT_X                         =7          # from enum zVecPlateType
	VPT_XY                        =10         # from enum zVecPlateType
	VPT_XZ                        =12         # from enum zVecPlateType
	VPT_Y                         =8          # from enum zVecPlateType
	VPT_YZ                        =11         # from enum zVecPlateType
	VPT_Z                         =9          # from enum zVecPlateType
	VSLL_BOT                      =2          # from enum zVecSolidLamLoc
	VSLL_MID                      =1          # from enum zVecSolidLamLoc
	VSLL_TOP                      =0          # from enum zVecSolidLamLoc
	VSLV_FAILURE                  =2          # from enum zVecSolidLamResult
	VSLV_STRAIN                   =1          # from enum zVecSolidLamResult
	VSLV_STRENGTHRATIO            =3          # from enum zVecSolidLamResult
	VSLV_STRESS                   =0          # from enum zVecSolidLamResult
	VSLT_BOND                     =18         # from enum zVecSolidLamType
	VSLT_MAX_PRIN                 =6          # from enum zVecSolidLamType
	VSLT_MAX_SHEAR                =9          # from enum zVecSolidLamType
	VSLT_MEAN                     =10         # from enum zVecSolidLamType
	VSLT_MID_PRIN                 =8          # from enum zVecSolidLamType
	VSLT_MIN_PRIN                 =7          # from enum zVecSolidLamType
	VSLT_PLY_11                   =12         # from enum zVecSolidLamType
	VSLT_PLY_12                   =15         # from enum zVecSolidLamType
	VSLT_PLY_13                   =17         # from enum zVecSolidLamType
	VSLT_PLY_22                   =13         # from enum zVecSolidLamType
	VSLT_PLY_23                   =16         # from enum zVecSolidLamType
	VSLT_PLY_33                   =14         # from enum zVecSolidLamType
	VSLT_VON_MISES                =11         # from enum zVecSolidLamType
	VSLT_X                        =0          # from enum zVecSolidLamType
	VSLT_XY                       =3          # from enum zVecSolidLamType
	VSLT_Y                        =1          # from enum zVecSolidLamType
	VSLT_YZ                       =4          # from enum zVecSolidLamType
	VSLT_Z                        =2          # from enum zVecSolidLamType
	VSLT_ZX                       =5          # from enum zVecSolidLamType
	VSL_1                         =1          # from enum zVecSolidLoc
	VSL_2                         =2          # from enum zVecSolidLoc
	VSL_3                         =3          # from enum zVecSolidLoc
	VSL_4                         =4          # from enum zVecSolidLoc
	VSL_5                         =5          # from enum zVecSolidLoc
	VSL_6                         =6          # from enum zVecSolidLoc
	VSL_7                         =7          # from enum zVecSolidLoc
	VSL_8                         =8          # from enum zVecSolidLoc
	VSL_CENTROID                  =0          # from enum zVecSolidLoc
	VSO_BOLT_AXIALFORCE           =0          # from enum zVecSolidOther
	VSO_BOLT_INITAXIALSTRAIN      =5          # from enum zVecSolidOther
	VSO_BOLT_MOMENT1              =3          # from enum zVecSolidOther
	VSO_BOLT_MOMENT2              =4          # from enum zVecSolidOther
	VSO_BOLT_SHEARFORCE1          =1          # from enum zVecSolidOther
	VSO_BOLT_SHEARFORCE2          =2          # from enum zVecSolidOther
	VSO_COHESIVE_DAMAGE1          =22         # from enum zVecSolidOther
	VSO_COHESIVE_DAMAGE2          =23         # from enum zVecSolidOther
	VSO_COHESIVE_DAMAGE3          =24         # from enum zVecSolidOther
	VSO_COHESIVE_MATCSID          =18         # from enum zVecSolidOther
	VSO_COHESIVE_NORMALSTRESS     =14         # from enum zVecSolidOther
	VSO_COHESIVE_NORMRELSEP       =6          # from enum zVecSolidOther
	VSO_COHESIVE_RELMATCS         =10         # from enum zVecSolidOther
	VSO_COHESIVE_XRELDISP         =7          # from enum zVecSolidOther
	VSO_COHESIVE_XRELDISPMATCS    =11         # from enum zVecSolidOther
	VSO_COHESIVE_XSHEARSTRESS     =15         # from enum zVecSolidOther
	VSO_COHESIVE_XSTRESS          =19         # from enum zVecSolidOther
	VSO_COHESIVE_YRELDISP         =8          # from enum zVecSolidOther
	VSO_COHESIVE_YRELDISPMATCS    =12         # from enum zVecSolidOther
	VSO_COHESIVE_YSHEARSTRESS     =16         # from enum zVecSolidOther
	VSO_COHESIVE_YSTRESS          =20         # from enum zVecSolidOther
	VSO_COHESIVE_ZRELDISP         =9          # from enum zVecSolidOther
	VSO_COHESIVE_ZRELDISPMATCS    =13         # from enum zVecSolidOther
	VSO_COHESIVE_ZSHEARSTRESS     =17         # from enum zVecSolidOther
	VSO_COHESIVE_ZSTRESS          =21         # from enum zVecSolidOther
	VSV_NONLINEAR_STRAIN          =3          # from enum zVecSolidResult
	VSV_NONLINEAR_STRESS          =2          # from enum zVecSolidResult
	VSV_STRAIN                    =1          # from enum zVecSolidResult
	VSV_STRESS                    =0          # from enum zVecSolidResult
	VST_CREEP                     =14         # from enum zVecSolidType
	VST_INT_PRIN                  =8          # from enum zVecSolidType
	VST_MAX_PRIN                  =6          # from enum zVecSolidType
	VST_MAX_SHEAR                 =9          # from enum zVecSolidType
	VST_MEAN                      =10         # from enum zVecSolidType
	VST_MIN_PRIN                  =7          # from enum zVecSolidType
	VST_OCT_SHEAR                 =12         # from enum zVecSolidType
	VST_PLASTIC                   =13         # from enum zVecSolidType
	VST_VOLUMETRIC                =15         # from enum zVecSolidType
	VST_VON_MISES                 =11         # from enum zVecSolidType
	VST_X                         =0          # from enum zVecSolidType
	VST_XY                        =3          # from enum zVecSolidType
	VST_Y                         =1          # from enum zVecSolidType
	VST_YZ                        =4          # from enum zVecSolidType
	VST_Z                         =2          # from enum zVecSolidType
	VST_ZX                        =5          # from enum zVecSolidType
	FVD_AXIS_OF_SURFACE           =13         # from enum zVectorDefinition
	FVD_BISECT                    =8          # from enum zVectorDefinition
	FVD_COMPONENTS                =4          # from enum zVectorDefinition
	FVD_DEFCS_AXIS                =10         # from enum zVectorDefinition
	FVD_DIRECTION                 =5          # from enum zVectorDefinition
	FVD_GLOBAL_AXIS               =11         # from enum zVectorDefinition
	FVD_NORMAL                    =9          # from enum zVectorDefinition
	FVD_NORMAL_TO_SURFACE         =7          # from enum zVectorDefinition
	FVD_NORMAL_TO_VIEW            =12         # from enum zVectorDefinition
	FVD_POSITION                  =0          # from enum zVectorDefinition
	FVD_POSITION_LENGTH           =1          # from enum zVectorDefinition
	FVD_SAVED                     =14         # from enum zVectorDefinition
	FVD_TANGENT                   =6          # from enum zVectorDefinition
	FVD_USE_NODES                 =3          # from enum zVectorDefinition
	FVD_USE_POINTS                =2          # from enum zVectorDefinition
	FTBV_ACCELERATION             =1          # from enum zVectorFunctionType
	FTBV_NONE                     =0          # from enum zVectorFunctionType
	FTBV_SPHERICALVECTORSUNPLANET =4          # from enum zVectorFunctionType
	FTBV_SPHERICALVECTORSUNPLANETALTITUDE=5          # from enum zVectorFunctionType
	FTBV_SUNPLANET                =2          # from enum zVectorFunctionType
	FTBV_SUNPLANETALTITUDE        =3          # from enum zVectorFunctionType
	FVM_DRAW                      =0          # from enum zViewMode
	FVM_FEATURE                   =1          # from enum zViewMode
	FVM_FREE                      =4          # from enum zViewMode
	FVM_FREE_FACE                 =5          # from enum zViewMode
	FVM_HIDE                      =3          # from enum zViewMode
	FVM_SORT                      =2          # from enum zViewMode
	FVM_XY_OF_FUNCTION            =10         # from enum zViewMode
	FVM_XY_VS_CASE                =7          # from enum zViewMode
	FVM_XY_VS_ID                  =6          # from enum zViewMode
	FVM_XY_VS_POSITION            =9          # from enum zViewMode
	FVM_XY_VS_VALUE               =8          # from enum zViewMode
	FVI_AERO_INTERFERENCE         =108        # from enum zViewOptions
	FVI_AERO_MESH                 =103        # from enum zViewOptions
	FVI_AERO_PANEL                =102        # from enum zViewOptions
	FVI_AERO_SPLINE               =104        # from enum zViewOptions
	FVI_AERO_SURFACE              =105        # from enum zViewOptions
	FVI_ANIMATED_STYLE            =43         # from enum zViewOptions
	FVI_ASPECT_RATIO              =38         # from enum zViewOptions
	FVI_AXISYM_AXIS               =87         # from enum zViewOptions
	FVI_BEAM_DIAGRAM              =86         # from enum zViewOptions
	FVI_BEAM_ORIENT               =12         # from enum zViewOptions
	FVI_BEAM_YAXIS                =13         # from enum zViewOptions
	FVI_BOLT_PRELOAD              =93         # from enum zViewOptions
	FVI_BOUNDARY                  =27         # from enum zViewOptions
	FVI_CLIPPING_PLANE            =36         # from enum zViewOptions
	FVI_CLIP_PLANE                =101        # from enum zViewOptions
	FVI_COMPOSITE_CURVE           =95         # from enum zViewOptions
	FVI_CONNECTION_REGION         =91         # from enum zViewOptions
	FVI_CONNECTOR                 =79         # from enum zViewOptions
	FVI_CONSTRAINT                =20         # from enum zViewOptions
	FVI_CONSTRAINT_EQUATION       =21         # from enum zViewOptions
	FVI_CONTOUR_ARROW_OPT         =117        # from enum zViewOptions
	FVI_CONTOUR_LEGEND            =48         # from enum zViewOptions
	FVI_CONTOUR_LEVELS            =47         # from enum zViewOptions
	FVI_CONTOUR_STYLE             =46         # from enum zViewOptions
	FVI_CONTOUR_TYPE              =80         # from enum zViewOptions
	FVI_CONTOUR_VECTOR            =75         # from enum zViewOptions
	FVI_CRITERIA_FAIL             =51         # from enum zViewOptions
	FVI_CRITERIA_LIMITS           =49         # from enum zViewOptions
	FVI_CRITERIA_PASS             =50         # from enum zViewOptions
	FVI_CSYS                      =1          # from enum zViewOptions
	FVI_CURVE                     =3          # from enum zViewOptions
	FVI_CURVE_ACCURACY            =39         # from enum zViewOptions
	FVI_CURVE_CONNECTIVITY        =124        # from enum zViewOptions
	FVI_CURVE_MESHSIZE            =24         # from enum zViewOptions
	FVI_DEFORMED                  =44         # from enum zViewOptions
	FVI_DEFORMED_STYLE            =41         # from enum zViewOptions
	FVI_DRIVER_LOAD               =127        # from enum zViewOptions
	FVI_ELEMENT                   =9          # from enum zViewOptions
	FVI_ELEMENT_COHESIVE          =120        # from enum zViewOptions
	FVI_ELEMENT_DIRECTION         =10         # from enum zViewOptions
	FVI_ELEMENT_MATL_DIR          =115        # from enum zViewOptions
	FVI_ELEMENT_OFFSET            =11         # from enum zViewOptions
	FVI_ELEMENT_ORIENT            =12         # from enum zViewOptions
	FVI_ELEMENT_SHELL             =121        # from enum zViewOptions
	FVI_ELEMENT_WELD              =90         # from enum zViewOptions
	FVI_ELEM_CSYS                 =96         # from enum zViewOptions
	FVI_FEATURE_LINE              =118        # from enum zViewOptions
	FVI_FILLED_EDGES              =26         # from enum zViewOptions
	FVI_FILL_ELEM                 =25         # from enum zViewOptions
	FVI_FREEBODY                  =114        # from enum zViewOptions
	FVI_FREEBODY_NODAL_F          =111        # from enum zViewOptions
	FVI_FREEBODY_NODAL_M          =112        # from enum zViewOptions
	FVI_FREEBODY_NODEMARKER       =106        # from enum zViewOptions
	FVI_FREEBODY_TOTAL_F          =107        # from enum zViewOptions
	FVI_FREEBODY_TOTAL_M          =110        # from enum zViewOptions
	FVI_FREEBODY_VECTOR           =113        # from enum zViewOptions
	FVI_FREE_EDGE                 =22         # from enum zViewOptions
	FVI_INTERIOR_CURVE            =97         # from enum zViewOptions
	FVI_INTERIOR_POINT            =99         # from enum zViewOptions
	FVI_INTERIOR_SURFACE          =98         # from enum zViewOptions
	FVI_ISOLINE                   =88         # from enum zViewOptions
	FVI_ISOSURFACE                =76         # from enum zViewOptions
	FVI_KINEMATIC_JOINT           =126        # from enum zViewOptions
	FVI_LABEL                     =0          # from enum zViewOptions
	FVI_LOAD_ACCELERATION         =18         # from enum zViewOptions
	FVI_LOAD_BODY                 =100        # from enum zViewOptions
	FVI_LOAD_CONVECTION           =68         # from enum zViewOptions
	FVI_LOAD_DISTRIBUTEDLOAD      =71         # from enum zViewOptions
	FVI_LOAD_ENFORCEDDISP         =19         # from enum zViewOptions
	FVI_LOAD_FANCURVE             =84         # from enum zViewOptions
	FVI_LOAD_FLUIDTRACKING        =81         # from enum zViewOptions
	FVI_LOAD_FORCE                =14         # from enum zViewOptions
	FVI_LOAD_HEATFLUX             =67         # from enum zViewOptions
	FVI_LOAD_HEATGEN              =66         # from enum zViewOptions
	FVI_LOAD_MOMENT               =15         # from enum zViewOptions
	FVI_LOAD_NONLINEARFORCE       =73         # from enum zViewOptions
	FVI_LOAD_PERIODIC             =85         # from enum zViewOptions
	FVI_LOAD_PRESSURE             =17         # from enum zViewOptions
	FVI_LOAD_RADIATION            =69         # from enum zViewOptions
	FVI_LOAD_SLIPWALL             =83         # from enum zViewOptions
	FVI_LOAD_THERMAL              =16         # from enum zViewOptions
	FVI_LOAD_UNKNOWN              =82         # from enum zViewOptions
	FVI_LOAD_VECTORS              =78         # from enum zViewOptions
	FVI_LOAD_VELOCITY             =72         # from enum zViewOptions
	FVI_MESH_POINT                =119        # from enum zViewOptions
	FVI_MONITOR_POINT             =123        # from enum zViewOptions
	FVI_NASTRAN_GENERAL_MATRIX    =125        # from enum zViewOptions
	FVI_NODE                      =7          # from enum zViewOptions
	FVI_NODE_PERMCONSTRAINT       =8          # from enum zViewOptions
	FVI_ORIGIN                    =33         # from enum zViewOptions
	FVI_PERF_GRAPHICS             =116        # from enum zViewOptions
	FVI_PERSPECTIVE               =29         # from enum zViewOptions
	FVI_POINT                     =2          # from enum zViewOptions
	FVI_POST_TITLES               =40         # from enum zViewOptions
	FVI_PREVIEW                   =109        # from enum zViewOptions
	FVI_REGION_POST               =122        # from enum zViewOptions
	FVI_RENDER_OPTIONS            =77         # from enum zViewOptions
	FVI_RIGID                     =94         # from enum zViewOptions
	FVI_SHADING                   =28         # from enum zViewOptions
	FVI_SHRINK_ELEM               =23         # from enum zViewOptions
	FVI_SOLID                     =5          # from enum zViewOptions
	FVI_STEREO                    =30         # from enum zViewOptions
	FVI_STREAMLINE                =89         # from enum zViewOptions
	FVI_SURFACE                   =4          # from enum zViewOptions
	FVI_SYMBOL                    =37         # from enum zViewOptions
	FVI_TEXT                      =6          # from enum zViewOptions
	FVI_TRACE_STYLE               =74         # from enum zViewOptions
	FVI_TRANSPARENCY              =92         # from enum zViewOptions
	FVI_UNBALANCE_LOAD            =128        # from enum zViewOptions
	FVI_UNDEFORMED                =45         # from enum zViewOptions
	FVI_VECTOR_STYLE              =42         # from enum zViewOptions
	FVI_VIEW_AXES                 =32         # from enum zViewOptions
	FVI_VIEW_LEGEND               =31         # from enum zViewOptions
	FVI_VOLUME                    =5          # from enum zViewOptions
	FVI_WORKPLANE                 =34         # from enum zViewOptions
	FVI_WORKPLANE_GRID            =35         # from enum zViewOptions
	FVI_XY_AXES_STYLE             =54         # from enum zViewOptions
	FVI_XY_CURVE1                 =57         # from enum zViewOptions
	FVI_XY_CURVE2                 =58         # from enum zViewOptions
	FVI_XY_CURVE3                 =59         # from enum zViewOptions
	FVI_XY_CURVE4                 =60         # from enum zViewOptions
	FVI_XY_CURVE5                 =61         # from enum zViewOptions
	FVI_XY_CURVE6                 =62         # from enum zViewOptions
	FVI_XY_CURVE7                 =63         # from enum zViewOptions
	FVI_XY_CURVE8                 =64         # from enum zViewOptions
	FVI_XY_CURVE9                 =65         # from enum zViewOptions
	FVI_XY_LEGEND                 =53         # from enum zViewOptions
	FVI_XY_TITLES                 =52         # from enum zViewOptions
	FVI_XY_XAXIS                  =55         # from enum zViewOptions
	FVI_XY_YAXIS                  =56         # from enum zViewOptions
	FVIS_AERO_PANEL               =95         # from enum zVisibilityType
	FVIS_AERO_SPLINE              =98         # from enum zVisibilityType
	FVIS_AERO_SURFACE             =99         # from enum zVisibilityType
	FVIS_CONNECTION               =71         # from enum zVisibilityType
	FVIS_CONNECTION_REGION        =58         # from enum zVisibilityType
	FVIS_CSYS                     =9          # from enum zVisibilityType
	FVIS_CURVE                    =4          # from enum zVisibilityType
	FVIS_ELEM                     =8          # from enum zVisibilityType
	FVIS_ELEM_SHAPE               =203        # from enum zVisibilityType
	FVIS_ELEM_TYPE                =37         # from enum zVisibilityType
	FVIS_FREEBODY                 =102        # from enum zVisibilityType
	FVIS_MATL                     =10         # from enum zVisibilityType
	FVIS_POINT                    =3          # from enum zVisibilityType
	FVIS_PROP                     =11         # from enum zVisibilityType
	FVIS_SOLID                    =39         # from enum zVisibilityType
	FVIS_SURFACE                  =5          # from enum zVisibilityType
	FVO_BRICK                     =0          # from enum zVolumeType
	FVO_PYRAMID                   =2          # from enum zVolumeType
	FVO_TETRA                     =3          # from enum zVolumeType
	FVO_WEDGE                     =1          # from enum zVolumeType

from win32com.client import DispatchBaseClass
class IAeroPanel(DispatchBaseClass):
	CLSID = IID('{923D4FF7-4C93-4DAA-8223-F275CC54C69F}')
	coclass_clsid = IID('{923D4FF9-4C93-4DAA-8223-F275CC54C69F}')

	def AeroChordXYZ(self, nNumChord=pythoncom.Missing, dChordLoc=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((16387, 2), (16396, 2)), 'AeroChordXYZ', None,nNumChord
			, dChordLoc)

	def AeroSpanXYZ(self, nNumSpan=pythoncom.Missing, dSpanLoc=pythoncom.Missing):
		return self._ApplyTypes_(200010, 1, (3, 0), ((16387, 2), (16396, 2)), 'AeroSpanXYZ', None,nNumSpan
			, dSpanLoc)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	# Result is of type ISet
	def GetBoxSet(self, iBox1=defaultNamedNotOptArg, iBox2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20008, LCID, 1, (9, 0), ((3, 1), (3, 1)),iBox1
			, iBox2)
		if ret is not None:
			ret = Dispatch(ret, 'GetBoxSet', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def GetDivisionList(self, nChord=pythoncom.Missing, cval=pythoncom.Missing, nSpan=pythoncom.Missing, sVal=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16387, 2), (16396, 2), (16387, 2), (16396, 2)), 'GetDivisionList', None,nChord
			, cval, nSpan, sVal)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def InterferenceBodyCount(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def PanelChordCount(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def PanelSpanCount(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	# The method Pt1 is actually a property, but must be used as a method to correctly pass the arguments
	def Pt1(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Pt4 is actually a property, but must be used as a method to correctly pass the arguments
	def Pt4(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutDivisionList(self, nChord=defaultNamedNotOptArg, cval=defaultNamedNotOptArg, nSpan=defaultNamedNotOptArg, sVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (12, 1)),nChord
			, cval, nSpan, sVal)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetPt1 is actually a property, but must be used as a method to correctly pass the arguments
	def SetPt1(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetPt4 is actually a property, but must be used as a method to correctly pass the arguments
	def SetPt4(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	def SlenderBodyCount(self):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"color": (10000, 2, (3, 0), (), "color", None),
		"dChord12": (10010, 2, (5, 0), (), "dChord12", None),
		"dChord34": (10011, 2, (5, 0), (), "dChord34", None),
		"icp": (10004, 2, (3, 0), (), "icp", None),
		"layer": (10001, 2, (3, 0), (), "layer", None),
		"nChord": (10006, 2, (3, 0), (), "nChord", None),
		"nIgid": (10007, 2, (3, 0), (), "nIgid", None),
		"nLchordID": (10013, 2, (3, 0), (), "nLchordID", None),
		"nLspanID": (10012, 2, (3, 0), (), "nLspanID", None),
		"nSpan": (10005, 2, (3, 0), (), "nSpan", None),
		"pid": (10003, 2, (3, 0), (), "pid", None),
		"title": (10002, 2, (8, 0), (), "title", None),
		"type": (10014, 2, (3, 0), (), "type", None),
		"vPt1": (10008, 2, (12, 0), (), "vPt1", None),
		"vPt4": (10009, 2, (12, 0), (), "vPt4", None),
	}
	_prop_map_put_ = {
		"color" : ((10000, LCID, 4, 0),()),
		"dChord12" : ((10010, LCID, 4, 0),()),
		"dChord34" : ((10011, LCID, 4, 0),()),
		"icp" : ((10004, LCID, 4, 0),()),
		"layer" : ((10001, LCID, 4, 0),()),
		"nChord" : ((10006, LCID, 4, 0),()),
		"nIgid" : ((10007, LCID, 4, 0),()),
		"nLchordID" : ((10013, LCID, 4, 0),()),
		"nLspanID" : ((10012, LCID, 4, 0),()),
		"nSpan" : ((10005, LCID, 4, 0),()),
		"pid" : ((10003, LCID, 4, 0),()),
		"title" : ((10002, LCID, 4, 0),()),
		"type" : ((10014, LCID, 4, 0),()),
		"vPt1" : ((10008, LCID, 4, 0),()),
		"vPt4" : ((10009, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAeroProp(DispatchBaseClass):
	CLSID = IID('{6C3881EB-8C68-4807-B69A-4430737F37B1}')
	coclass_clsid = IID('{6C3881ED-8C68-4807-B69A-4430737F37B1}')

	def ClearIbList(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def ClearSbList(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def ClearTheta1List(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def ClearTheta2List(self):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetIBRadiCount(self):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), (),)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetRadiList(self, nListID=defaultNamedNotOptArg, nCount=pythoncom.Missing, nVal=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'GetRadiList', None,nListID
			, nCount, nVal)

	def GetSBRadiCount(self):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), (),)

	def GetThetaList(self, nListID=defaultNamedNotOptArg, nCount=pythoncom.Missing, nVal=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'GetThetaList', None,nListID
			, nCount, nVal)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def InterferenceBodyDivisionByProp(self):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutRadiList(self, nListID=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, nVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),nListID
			, nCount, nVal)

	def PutThetaList(self, nListID=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, nVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),nListID
			, nCount, nVal)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SlenderBodyDivisionByProp(self):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"ap_d_ar": (10006, 2, (5, 0), (), "ap_d_ar", None),
		"ap_d_width": (10005, 2, (5, 0), (), "ap_d_width", None),
		"ap_i_lrib": (10009, 2, (3, 0), (), "ap_i_lrib", None),
		"ap_i_lrsb": (10008, 2, (3, 0), (), "ap_i_lrsb", None),
		"ap_i_lth1": (10010, 2, (3, 0), (), "ap_i_lth1", None),
		"ap_i_lth2": (10011, 2, (3, 0), (), "ap_i_lth2", None),
		"ap_i_orient": (10007, 2, (3, 0), (), "ap_i_orient", None),
		"ap_i_thi1": (10012, 2, (3, 0), (), "ap_i_thi1", None),
		"ap_i_thi2": (10013, 2, (3, 0), (), "ap_i_thi2", None),
		"ap_i_thi3": (10014, 2, (3, 0), (), "ap_i_thi3", None),
		"ap_i_thn1": (10015, 2, (3, 0), (), "ap_i_thn1", None),
		"ap_i_thn2": (10016, 2, (3, 0), (), "ap_i_thn2", None),
		"ap_i_thn3": (10017, 2, (3, 0), (), "ap_i_thn3", None),
		"color": (10000, 2, (3, 0), (), "color", None),
		"layer": (10001, 2, (3, 0), (), "layer", None),
		"title": (10002, 2, (8, 0), (), "title", None),
		"type": (10018, 2, (3, 0), (), "type", None),
		"vpdval": (10003, 2, (12, 0), (), "vpdval", None),
		"vpnval": (10004, 2, (12, 0), (), "vpnval", None),
	}
	_prop_map_put_ = {
		"ap_d_ar" : ((10006, LCID, 4, 0),()),
		"ap_d_width" : ((10005, LCID, 4, 0),()),
		"ap_i_lrib" : ((10009, LCID, 4, 0),()),
		"ap_i_lrsb" : ((10008, LCID, 4, 0),()),
		"ap_i_lth1" : ((10010, LCID, 4, 0),()),
		"ap_i_lth2" : ((10011, LCID, 4, 0),()),
		"ap_i_orient" : ((10007, LCID, 4, 0),()),
		"ap_i_thi1" : ((10012, LCID, 4, 0),()),
		"ap_i_thi2" : ((10013, LCID, 4, 0),()),
		"ap_i_thi3" : ((10014, LCID, 4, 0),()),
		"ap_i_thn1" : ((10015, LCID, 4, 0),()),
		"ap_i_thn2" : ((10016, LCID, 4, 0),()),
		"ap_i_thn3" : ((10017, LCID, 4, 0),()),
		"color" : ((10000, LCID, 4, 0),()),
		"layer" : ((10001, LCID, 4, 0),()),
		"title" : ((10002, LCID, 4, 0),()),
		"type" : ((10018, LCID, 4, 0),()),
		"vpdval" : ((10003, LCID, 4, 0),()),
		"vpnval" : ((10004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAeroSpline(DispatchBaseClass):
	CLSID = IID('{39B680B2-1AD7-44BB-8C89-A699F3B191AE}')
	coclass_clsid = IID('{39B680B4-1AD7-44BB-8C89-A699F3B191AE}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	# Result is of type ISet
	def GetBoxSet(self):
		ret = self._oleobj_.InvokeTypes(20003, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetBoxSet', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	# Result is of type ISet
	def GetNodeSet(self):
		ret = self._oleobj_.InvokeTypes(20002, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetNodeSet', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"cid": (10014, 2, (3, 0), (), "cid", None),
		"color": (10000, 2, (3, 0), (), "color", None),
		"dZ": (10008, 2, (5, 0), (), "dZ", None),
		"dthx": (10015, 2, (5, 0), (), "dthx", None),
		"dthy": (10016, 2, (5, 0), (), "dthy", None),
		"dtor": (10013, 2, (5, 0), (), "dtor", None),
		"iBox1": (10005, 2, (3, 0), (), "iBox1", None),
		"iBox2": (10006, 2, (3, 0), (), "iBox2", None),
		"icaero": (10004, 2, (3, 0), (), "icaero", None),
		"isetg": (10007, 2, (3, 0), (), "isetg", None),
		"layer": (10001, 2, (3, 0), (), "layer", None),
		"melem": (10011, 2, (3, 0), (), "melem", None),
		"meth": (10009, 2, (3, 0), (), "meth", None),
		"nelem": (10010, 2, (3, 0), (), "nelem", None),
		"title": (10002, 2, (8, 0), (), "title", None),
		"type": (10003, 2, (3, 0), (), "type", None),
		"usage": (10012, 2, (3, 0), (), "usage", None),
	}
	_prop_map_put_ = {
		"cid" : ((10014, LCID, 4, 0),()),
		"color" : ((10000, LCID, 4, 0),()),
		"dZ" : ((10008, LCID, 4, 0),()),
		"dthx" : ((10015, LCID, 4, 0),()),
		"dthy" : ((10016, LCID, 4, 0),()),
		"dtor" : ((10013, LCID, 4, 0),()),
		"iBox1" : ((10005, LCID, 4, 0),()),
		"iBox2" : ((10006, LCID, 4, 0),()),
		"icaero" : ((10004, LCID, 4, 0),()),
		"isetg" : ((10007, LCID, 4, 0),()),
		"layer" : ((10001, LCID, 4, 0),()),
		"melem" : ((10011, LCID, 4, 0),()),
		"meth" : ((10009, LCID, 4, 0),()),
		"nelem" : ((10010, LCID, 4, 0),()),
		"title" : ((10002, LCID, 4, 0),()),
		"type" : ((10003, LCID, 4, 0),()),
		"usage" : ((10012, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAeroSurf(DispatchBaseClass):
	CLSID = IID('{61CFF16F-CC7E-40BB-A20F-B1F065C36B29}')
	coclass_clsid = IID('{61CFF171-CC7E-40BB-A20F-B1F065C36B29}')

	def ClearSurfaceSet1(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def ClearSurfaceSet2(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	# Result is of type ISet
	def GetSurfaceSet1(self):
		ret = self._oleobj_.InvokeTypes(20004, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetSurfaceSet1', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	# Result is of type ISet
	def GetSurfaceSet2(self):
		ret = self._oleobj_.InvokeTypes(20005, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetSurfaceSet2', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutSurfaceSet1(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def PutSurfaceSet2(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"CSys": (10003, 2, (3, 0), (), "CSys", None),
		"Label": (10017, 2, (8, 0), (), "Label", None),
		"aeid": (10005, 2, (3, 0), (), "aeid", None),
		"aeid1": (10006, 2, (3, 0), (), "aeid1", None),
		"color": (10000, 2, (3, 0), (), "color", None),
		"crefc": (10009, 2, (5, 0), (), "crefc", None),
		"crefs": (10010, 2, (5, 0), (), "crefs", None),
		"csys1": (10004, 2, (3, 0), (), "csys1", None),
		"eff": (10007, 2, (5, 0), (), "eff", None),
		"hmllim": (10013, 2, (5, 0), (), "hmllim", None),
		"hmulim": (10014, 2, (5, 0), (), "hmulim", None),
		"layer": (10001, 2, (3, 0), (), "layer", None),
		"ldw": (10008, 2, (11, 0), (), "ldw", None),
		"pllim": (10011, 2, (5, 0), (), "pllim", None),
		"pulim": (10012, 2, (5, 0), (), "pulim", None),
		"title": (10002, 2, (8, 0), (), "title", None),
		"tqllim": (10015, 2, (3, 0), (), "tqllim", None),
		"tqulim": (10016, 2, (3, 0), (), "tqulim", None),
	}
	_prop_map_put_ = {
		"CSys" : ((10003, LCID, 4, 0),()),
		"Label" : ((10017, LCID, 4, 0),()),
		"aeid" : ((10005, LCID, 4, 0),()),
		"aeid1" : ((10006, LCID, 4, 0),()),
		"color" : ((10000, LCID, 4, 0),()),
		"crefc" : ((10009, LCID, 4, 0),()),
		"crefs" : ((10010, LCID, 4, 0),()),
		"csys1" : ((10004, LCID, 4, 0),()),
		"eff" : ((10007, LCID, 4, 0),()),
		"hmllim" : ((10013, LCID, 4, 0),()),
		"hmulim" : ((10014, LCID, 4, 0),()),
		"layer" : ((10001, LCID, 4, 0),()),
		"ldw" : ((10008, LCID, 4, 0),()),
		"pllim" : ((10011, LCID, 4, 0),()),
		"pulim" : ((10012, LCID, 4, 0),()),
		"title" : ((10002, LCID, 4, 0),()),
		"tqllim" : ((10015, LCID, 4, 0),()),
		"tqulim" : ((10016, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAnalysisCase(DispatchBaseClass):
	CLSID = IID('{AB06C174-0E7E-11D5-9471-001083FFF11C}')
	coclass_clsid = IID('{AB06C176-0E7E-11D5-9471-001083FFF11C}')

	def ALPHAD(self, alpha=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26123, LCID, 1, (3, 0), ((5, 1),),alpha
			)

	def ARCLEN(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26132, LCID, 1, (3, 0), ((11, 1),),key
			)

	def AUTOTS(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26104, LCID, 1, (3, 0), ((11, 1),),key
			)

	def ActiveContactEntities(self, bContact=defaultNamedNotOptArg, nConnectorSetID=defaultNamedNotOptArg, nRegionSetID=defaultNamedNotOptArg, nConPropSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25010, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (3, 1)),bContact
			, nConnectorSetID, nRegionSetID, nConPropSetID)

	def AllFreqOff(self):
		return self._oleobj_.InvokeTypes(26001, LCID, 1, (3, 0), (),)

	def AllFreqOn(self):
		return self._oleobj_.InvokeTypes(26000, LCID, 1, (3, 0), (),)

	# The method BCSet is actually a property, but must be used as a method to correctly pass the arguments
	def BCSet(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def BETAD(self, beta=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26124, LCID, 1, (3, 0), ((5, 1),),beta
			)

	def BUCOPT(self, method=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, shift=defaultNamedNotOptArg, ldmulte=defaultNamedNotOptArg
			, rangekey=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26117, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1)),method
			, nMode, shift, ldmulte, rangekey)

	def CNVTOL(self, lab=defaultNamedNotOptArg, value=defaultNamedNotOptArg, toler=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26130, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1)),lab
			, value, toler)

	def CUTCONTROL(self, lab=defaultNamedNotOptArg, value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26107, LCID, 1, (3, 0), ((3, 1), (5, 1)),lab
			, value)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def DELTIM(self, dtime=defaultNamedNotOptArg, dtmin=defaultNamedNotOptArg, dtmax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26106, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1)),dtime
			, dtmin, dtmax)

	def DMPRAT(self, rat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26126, LCID, 1, (3, 0), ((5, 1),),rat
			)

	def DMPSTR(self, dmp=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26125, LCID, 1, (3, 0), ((5, 1),),dmp
			)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteAnalysisCase(self, nSetID=defaultNamedNotOptArg, nCaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25005, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nCaseID)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def DeleteStep(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25023, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def EQSLV(self, lab=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26102, LCID, 1, (3, 0), ((3, 1),),lab
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetContactTable(self, Count=pythoncom.Missing, rowSeg=pythoncom.Missing, colSeg=pythoncom.Missing, tieType=pythoncom.Missing
			, distTol=pythoncom.Missing, sepForce=pythoncom.Missing, friction=pythoncom.Missing, interClose=pythoncom.Missing):
		return self._ApplyTypes_(25002, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetContactTable', None,Count
			, rowSeg, colSeg, tieType, distTol, sepForce
			, friction, interClose)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetOptLimits(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25019, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def GetStandardTrim(self, useTrim=pythoncom.Missing, TrimID=pythoncom.Missing, TrimVal=pythoncom.Missing):
		return self._ApplyTypes_(25006, 1, (3, 0), ((16396, 2), (16396, 2), (16396, 2)), 'GetStandardTrim', None,useTrim
			, TrimID, TrimVal)

	def GetStep(self, entID=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(25021, LCID, 1, (9, 0), ((3, 1),),entID
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetStep', None)
		return ret

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def GetTrimControlSurf(self, useTrim=pythoncom.Missing, TrimID=pythoncom.Missing, TrimVal=pythoncom.Missing):
		return self._ApplyTypes_(25008, 1, (3, 0), ((16396, 2), (16396, 2), (16396, 2)), 'GetTrimControlSurf', None,useTrim
			, TrimID, TrimVal)

	def GetUsedFREQS(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def HARFRQ(self, freqb=defaultNamedNotOptArg, freqe=defaultNamedNotOptArg, logopt=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26119, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1)),freqb
			, freqe, logopt)

	def HROPT(self, method=defaultNamedNotOptArg, maxmode=defaultNamedNotOptArg, minmode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26118, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),method
			, maxmode, minmode)

	def HROUT(self, reimky=defaultNamedNotOptArg, clust=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26120, LCID, 1, (3, 0), ((11, 1), (11, 1)),reimky
			, clust)

	def InitAnalysisCase(self, nSetID=defaultNamedNotOptArg, nCaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25004, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nCaseID)

	def KBC(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26100, LCID, 1, (3, 0), ((11, 1),),key
			)

	def LANBOPTION(self, strmck=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26112, LCID, 1, (3, 0), ((11, 1),),strmck
			)

	def LNSRCH(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26133, LCID, 1, (3, 0), ((11, 1),),key
			)

	def LUMPM(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26122, LCID, 1, (3, 0), ((11, 1),),key
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def MIDTOL(self, key=defaultNamedNotOptArg, tolerb=defaultNamedNotOptArg, resfq=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26108, LCID, 1, (3, 0), ((11, 1), (5, 1), (11, 1)),key
			, tolerb, resfq)

	def MODOPT(self, method=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, freqb=defaultNamedNotOptArg, freqe=defaultNamedNotOptArg
			, cpxmod=defaultNamedNotOptArg, nrmkey=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26111, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1), (11, 1)),method
			, nMode, freqb, freqe, cpxmod, nrmkey
			)

	# The method MSCNasCnlConvergenceFlags is actually a property, but must be used as a method to correctly pass the arguments
	def MSCNasCnlConvergenceFlags(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19004, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def NEQIT(self, NEQIT=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26129, LCID, 1, (3, 0), ((3, 1),),NEQIT
			)

	def NLGEOM(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26131, LCID, 1, (3, 0), ((11, 1),),key
			)

	def NROPT(self, option1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26128, LCID, 1, (3, 0), ((3, 1),),option1
			)

	def NSUBST(self, nsbst=defaultNamedNotOptArg, nsbmx=defaultNamedNotOptArg, nsbmn=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26105, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nsbst
			, nsbmx, nsbmn)

	# The method NasCnlConvergenceFlags is actually a property, but must be used as a method to correctly pass the arguments
	def NasCnlConvergenceFlags(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19002, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasCnlConvergenceValue is actually a property, but must be used as a method to correctly pass the arguments
	def NasCnlConvergenceValue(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasModeFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def NasModeFreqRange(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasModeImagFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def NasModeImagFreqRange(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasModeXYRequest is actually a property, but must be used as a method to correctly pass the arguments
	def NasModeXYRequest(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method NasSubseqCase is actually a property, but must be used as a method to correctly pass the arguments
	def NasSubseqCase(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method NasSubseqFactor is actually a property, but must be used as a method to correctly pass the arguments
	def NasSubseqFactor(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def OUTPR(self, item=defaultNamedNotOptArg, FREQ=defaultNamedNotOptArg, nth=defaultNamedNotOptArg, cname=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26110, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),item
			, FREQ, nth, cname)

	def OUTRES(self, item=defaultNamedNotOptArg, FREQ=defaultNamedNotOptArg, nth=defaultNamedNotOptArg, cname=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26109, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),item
			, FREQ, nth, cname)

	# The method Output is actually a property, but must be used as a method to correctly pass the arguments
	def Output(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def PCGOPT(self, strmck=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26113, LCID, 1, (3, 0), ((11, 1),),strmck
			)

	def PFACT(self, tblno=defaultNamedNotOptArg, excit=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26137, LCID, 1, (3, 0), ((3, 1), (11, 1)),tblno
			, excit)

	def PRED(self, sskey=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26134, LCID, 1, (3, 0), ((11, 1),),sskey
			)

	def PSDCOM(self, signif=defaultNamedNotOptArg, comode=defaultNamedNotOptArg, forcetype=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26138, LCID, 1, (3, 0), ((5, 1), (3, 1), (11, 1)),signif
			, comode, forcetype)

	def PSDUNIT(self, tblno=defaultNamedNotOptArg, type=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26136, LCID, 1, (3, 0), ((3, 1), (3, 1)),tblno
			, type)

	def PSTRES(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26101, LCID, 1, (3, 0), ((11, 1),),key
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutContactTable(self, Count=defaultNamedNotOptArg, rowSeg=defaultNamedNotOptArg, colSeg=defaultNamedNotOptArg, tieType=defaultNamedNotOptArg
			, distTol=defaultNamedNotOptArg, sepForce=defaultNamedNotOptArg, friction=defaultNamedNotOptArg, interClose=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25003, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, rowSeg, colSeg, tieType, distTol, sepForce
			, friction, interClose)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutOptLimits(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25020, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def PutStandardTrim(self, useTrim=defaultNamedNotOptArg, TrimID=defaultNamedNotOptArg, TrimVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25007, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1)),useTrim
			, TrimID, TrimVal)

	def PutStep(self, pDispatch=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25022, LCID, 1, (3, 0), ((16393, 1),),pDispatch
			)

	def PutTrimControlSurf(self, useTrim=defaultNamedNotOptArg, TrimID=defaultNamedNotOptArg, TrimVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25009, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1)),useTrim
			, TrimID, TrimVal)

	def PutUsedFREQS(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def QRDOPT(self, reusekey=defaultNamedNotOptArg, symmeth=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26116, LCID, 1, (3, 0), ((11, 1), (3, 1)),reusekey
			, symmeth)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SNOPTION(self, rangefact=defaultNamedNotOptArg, blocksize=defaultNamedNotOptArg, robustlev=defaultNamedNotOptArg, compute=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26115, LCID, 1, (3, 0), ((5, 1), (3, 1), (3, 1), (3, 1)),rangefact
			, blocksize, robustlev, compute)

	def SPOPT(self, sptype=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, elcalc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26135, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),sptype
			, nMode, elcalc)

	def SUBOPT(self, strmck=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26114, LCID, 1, (3, 0), ((11, 1),),strmck
			)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetBCSet is actually a property, but must be used as a method to correctly pass the arguments
	def SetBCSet(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetMSCNasCnlConvergenceFlags is actually a property, but must be used as a method to correctly pass the arguments
	def SetMSCNasCnlConvergenceFlags(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19004, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasCnlConvergenceFlags is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasCnlConvergenceFlags(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19002, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasCnlConvergenceValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasCnlConvergenceValue(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasModeFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasModeFreqRange(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasModeImagFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasModeImagFreqRange(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasModeXYRequest is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasModeXYRequest(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetNasSubseqCase is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasSubseqCase(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetNasSubseqFactor is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasSubseqFactor(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetOutput is actually a property, but must be used as a method to correctly pass the arguments
	def SetOutput(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def TIME(self, TIME=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26103, LCID, 1, (3, 0), ((5, 1),),TIME
			)

	def TINTP(self, gamma=defaultNamedNotOptArg, alpha=defaultNamedNotOptArg, delta=defaultNamedNotOptArg, theta=defaultNamedNotOptArg
			, oslm=defaultNamedNotOptArg, tol=defaultNamedNotOptArg, avsmooth=defaultNamedNotOptArg, alphaf=defaultNamedNotOptArg, alpham=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26127, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (5, 1), (5, 1)),gamma
			, alpha, delta, theta, oslm, tol
			, avsmooth, alphaf, alpham)

	def TRNOUT(self, method=defaultNamedNotOptArg, maxmode=defaultNamedNotOptArg, minmode=defaultNamedNotOptArg, mcout=defaultNamedNotOptArg
			, tintopt=defaultNamedNotOptArg, vaout=defaultNamedNotOptArg, dmpsfreq=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26121, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (5, 1)),method
			, maxmode, minmode, mcout, tintopt, vaout
			, dmpsfreq)

	def TurnOffFreq(self, freqID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26003, LCID, 1, (3, 0), ((3, 1),),freqID
			)

	def TurnOnFreq(self, freqID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26002, LCID, 1, (3, 0), ((3, 1),),freqID
			)

	_prop_map_get_ = {
		"AbaHistAnalysisType": (15031, 2, (3, 0), (), "AbaHistAnalysisType", None),
		"AbaHistAutoContact": (15025, 2, (11, 0), (), "AbaHistAutoContact", None),
		"AbaHistEigenvectors": (15017, 2, (3, 0), (), "AbaHistEigenvectors", None),
		"AbaHistInitTimeInc": (15014, 2, (5, 0), (), "AbaHistInitTimeInc", None),
		"AbaHistLinearPert": (15024, 2, (11, 0), (), "AbaHistLinearPert", None),
		"AbaHistMaxFreq": (15019, 2, (5, 0), (), "AbaHistMaxFreq", None),
		"AbaHistMaxTimeInc": (15016, 2, (5, 0), (), "AbaHistMaxTimeInc", None),
		"AbaHistMinFreq": (15018, 2, (5, 0), (), "AbaHistMinFreq", None),
		"AbaHistMinTimeInc": (15015, 2, (5, 0), (), "AbaHistMinTimeInc", None),
		"AbaHistNonlinGeom": (15023, 2, (11, 0), (), "AbaHistNonlinGeom", None),
		"AbaHistOn": (15012, 2, (11, 0), (), "AbaHistOn", None),
		"AbaHistOutInterval": (15022, 2, (3, 0), (), "AbaHistOutInterval", None),
		"AbaHistOutZeroInc": (15027, 2, (11, 0), (), "AbaHistOutZeroInc", None),
		"AbaHistScaleFactor": (15021, 2, (5, 0), (), "AbaHistScaleFactor", None),
		"AbaHistShiftFreq": (15020, 2, (5, 0), (), "AbaHistShiftFreq", None),
		"AbaHistStabilize": (15026, 2, (11, 0), (), "AbaHistStabilize", None),
		"AbaHistStepAmp": (15028, 2, (3, 0), (), "AbaHistStepAmp", None),
		"AbaHistStepConstr": (15030, 2, (3, 0), (), "AbaHistStepConstr", None),
		"AbaHistStepLoad": (15029, 2, (3, 0), (), "AbaHistStepLoad", None),
		"AbaHistTimePeriod": (15013, 2, (5, 0), (), "AbaHistTimePeriod", None),
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AnsArclen": (16244, 2, (11, 0), (), "AnsArclen", None),
		"AnsAutots": (16109, 2, (11, 0), (), "AnsAutots", None),
		"AnsBisect": (16125, 2, (11, 0), (), "AnsBisect", None),
		"AnsBisectfactor": (16126, 2, (5, 0), (), "AnsBisectfactor", None),
		"AnsBuckleLdmulte": (16199, 2, (5, 0), (), "AnsBuckleLdmulte", None),
		"AnsBuckleMethod": (16196, 2, (3, 0), (), "AnsBuckleMethod", None),
		"AnsBuckleNmode": (16197, 2, (3, 0), (), "AnsBuckleNmode", None),
		"AnsBuckleOptOn": (16195, 2, (11, 0), (), "AnsBuckleOptOn", None),
		"AnsBuckleRangekey": (16200, 2, (11, 0), (), "AnsBuckleRangekey", None),
		"AnsBuckleShift": (16198, 2, (5, 0), (), "AnsBuckleShift", None),
		"AnsBuckleStrmck": (16201, 2, (11, 0), (), "AnsBuckleStrmck", None),
		"AnsCnvtolDvol": (16239, 2, (11, 0), (), "AnsCnvtolDvol", None),
		"AnsCnvtolF": (16235, 2, (11, 0), (), "AnsCnvtolF", None),
		"AnsCnvtolHdsp": (16241, 2, (11, 0), (), "AnsCnvtolHdsp", None),
		"AnsCnvtolM": (16237, 2, (11, 0), (), "AnsCnvtolM", None),
		"AnsCnvtolRot": (16233, 2, (11, 0), (), "AnsCnvtolRot", None),
		"AnsCnvtolU": (16231, 2, (11, 0), (), "AnsCnvtolU", None),
		"AnsCrplimit": (16119, 2, (11, 0), (), "AnsCrplimit", None),
		"AnsCrplimitvalue": (16120, 2, (5, 0), (), "AnsCrplimitvalue", None),
		"AnsDOFAutomatic": (15034, 2, (11, 0), (), "AnsDOFAutomatic", None),
		"AnsDOFDoSet": (15033, 2, (11, 0), (), "AnsDOFDoSet", None),
		"AnsDOFNoRotation": (15035, 2, (11, 0), (), "AnsDOFNoRotation", None),
		"AnsDOFNumber": (15037, 2, (3, 0), (), "AnsDOFNumber", None),
		"AnsDOFOn": (15032, 2, (11, 0), (), "AnsDOFOn", None),
		"AnsDOFSetID": (15036, 2, (3, 0), (), "AnsDOFSetID", None),
		"AnsDpplimit": (16121, 2, (11, 0), (), "AnsDpplimit", None),
		"AnsDpplimitvalue": (16122, 2, (5, 0), (), "AnsDpplimitvalue", None),
		"AnsDsplimit": (16123, 2, (11, 0), (), "AnsDsplimit", None),
		"AnsDsplimitvalue": (16124, 2, (5, 0), (), "AnsDsplimitvalue", None),
		"AnsDtime": (16114, 2, (5, 0), (), "AnsDtime", None),
		"AnsDtmax": (16116, 2, (5, 0), (), "AnsDtmax", None),
		"AnsDtmin": (16115, 2, (5, 0), (), "AnsDtmin", None),
		"AnsDvoltoler": (16240, 2, (5, 0), (), "AnsDvoltoler", None),
		"AnsEqslv": (16103, 2, (3, 0), (), "AnsEqslv", None),
		"AnsFtoler": (16236, 2, (5, 0), (), "AnsFtoler", None),
		"AnsHarmonicClust": (16210, 2, (11, 0), (), "AnsHarmonicClust", None),
		"AnsHarmonicFreqb": (16206, 2, (5, 0), (), "AnsHarmonicFreqb", None),
		"AnsHarmonicFreqe": (16207, 2, (5, 0), (), "AnsHarmonicFreqe", None),
		"AnsHarmonicLogopt": (16208, 2, (3, 0), (), "AnsHarmonicLogopt", None),
		"AnsHarmonicMaxmode": (16205, 2, (3, 0), (), "AnsHarmonicMaxmode", None),
		"AnsHarmonicMethod": (16203, 2, (11, 0), (), "AnsHarmonicMethod", None),
		"AnsHarmonicMinmode": (16204, 2, (3, 0), (), "AnsHarmonicMinmode", None),
		"AnsHarmonicOptOn": (16202, 2, (11, 0), (), "AnsHarmonicOptOn", None),
		"AnsHarmonicReimky": (16209, 2, (11, 0), (), "AnsHarmonicReimky", None),
		"AnsHdsptoler": (16242, 2, (5, 0), (), "AnsHdsptoler", None),
		"AnsHeatEndTime": (15045, 2, (5, 0), (), "AnsHeatEndTime", None),
		"AnsHeatOn": (15044, 2, (11, 0), (), "AnsHeatOn", None),
		"AnsHeatOutputFreq": (15047, 2, (3, 0), (), "AnsHeatOutputFreq", None),
		"AnsHeatTimeStep": (15046, 2, (5, 0), (), "AnsHeatTimeStep", None),
		"AnsKbc": (16101, 2, (11, 0), (), "AnsKbc", None),
		"AnsLdstepOn": (16100, 2, (11, 0), (), "AnsLdstepOn", None),
		"AnsLnsrch": (16245, 2, (11, 0), (), "AnsLnsrch", None),
		"AnsMidtol": (16128, 2, (11, 0), (), "AnsMidtol", None),
		"AnsModalBlocksize": (16190, 2, (3, 0), (), "AnsModalBlocksize", None),
		"AnsModalCompute": (16192, 2, (3, 0), (), "AnsModalCompute", None),
		"AnsModalFreqb": (16185, 2, (5, 0), (), "AnsModalFreqb", None),
		"AnsModalFreqe": (16186, 2, (5, 0), (), "AnsModalFreqe", None),
		"AnsModalMethod": (16183, 2, (3, 0), (), "AnsModalMethod", None),
		"AnsModalNmode": (16184, 2, (3, 0), (), "AnsModalNmode", None),
		"AnsModalNrmkey": (16187, 2, (11, 0), (), "AnsModalNrmkey", None),
		"AnsModalOptOn": (16182, 2, (11, 0), (), "AnsModalOptOn", None),
		"AnsModalRangefact": (16189, 2, (5, 0), (), "AnsModalRangefact", None),
		"AnsModalReusekey": (16193, 2, (11, 0), (), "AnsModalReusekey", None),
		"AnsModalRobustlev": (16191, 2, (3, 0), (), "AnsModalRobustlev", None),
		"AnsModalStrmck": (16188, 2, (11, 0), (), "AnsModalStrmck", None),
		"AnsModalSymmeth": (16194, 2, (3, 0), (), "AnsModalSymmeth", None),
		"AnsModesElemResults": (15043, 2, (11, 0), (), "AnsModesElemResults", None),
		"AnsModesMaxFreq": (15041, 2, (5, 0), (), "AnsModesMaxFreq", None),
		"AnsModesMinFreq": (15040, 2, (5, 0), (), "AnsModesMinFreq", None),
		"AnsModesModalMethod": (15042, 2, (5, 0), (), "AnsModesModalMethod", None),
		"AnsModesNumModes": (15039, 2, (3, 0), (), "AnsModesNumModes", None),
		"AnsModesOn": (15038, 2, (11, 0), (), "AnsModesOn", None),
		"AnsMtoler": (16238, 2, (5, 0), (), "AnsMtoler", None),
		"AnsNeqit": (16230, 2, (3, 0), (), "AnsNeqit", None),
		"AnsNewConstraint": (16104, 2, (11, 0), (), "AnsNewConstraint", None),
		"AnsNewContact": (16106, 2, (11, 0), (), "AnsNewContact", None),
		"AnsNewLoad": (16105, 2, (11, 0), (), "AnsNewLoad", None),
		"AnsNlOptOn": (16228, 2, (11, 0), (), "AnsNlOptOn", None),
		"AnsNlgeom": (16243, 2, (11, 0), (), "AnsNlgeom", None),
		"AnsNropt": (16229, 2, (3, 0), (), "AnsNropt", None),
		"AnsNsbmn": (16113, 2, (3, 0), (), "AnsNsbmn", None),
		"AnsNsbmx": (16112, 2, (3, 0), (), "AnsNsbmx", None),
		"AnsNsbstep": (16111, 2, (3, 0), (), "AnsNsbstep", None),
		"AnsNsubs": (16110, 2, (11, 0), (), "AnsNsubs", None),
		"AnsOutprAcc": (16167, 2, (11, 0), (), "AnsOutprAcc", None),
		"AnsOutprAccFreq": (16169, 2, (3, 0), (), "AnsOutprAccFreq", None),
		"AnsOutprAccNth": (16171, 2, (3, 0), (), "AnsOutprAccNth", None),
		"AnsOutprAll": (16133, 2, (11, 0), (), "AnsOutprAll", None),
		"AnsOutprAllFreq": (16135, 2, (3, 0), (), "AnsOutprAllFreq", None),
		"AnsOutprAllNth": (16137, 2, (3, 0), (), "AnsOutprAllNth", None),
		"AnsOutprBasic": (16139, 2, (11, 0), (), "AnsOutprBasic", None),
		"AnsOutprBasicFreq": (16141, 2, (3, 0), (), "AnsOutprBasicFreq", None),
		"AnsOutprBasicNth": (16143, 2, (3, 0), (), "AnsOutprBasicNth", None),
		"AnsOutprEsol": (16175, 2, (11, 0), (), "AnsOutprEsol", None),
		"AnsOutprEsolFreq": (16177, 2, (3, 0), (), "AnsOutprEsolFreq", None),
		"AnsOutprEsolNth": (16179, 2, (3, 0), (), "AnsOutprEsolNth", None),
		"AnsOutprNsol": (16151, 2, (11, 0), (), "AnsOutprNsol", None),
		"AnsOutprNsolFreq": (16153, 2, (3, 0), (), "AnsOutprNsolFreq", None),
		"AnsOutprNsolNth": (16155, 2, (3, 0), (), "AnsOutprNsolNth", None),
		"AnsOutprRsol": (16145, 2, (11, 0), (), "AnsOutprRsol", None),
		"AnsOutprRsolFreq": (16147, 2, (3, 0), (), "AnsOutprRsolFreq", None),
		"AnsOutprRsolNth": (16149, 2, (3, 0), (), "AnsOutprRsolNth", None),
		"AnsOutprVel": (16159, 2, (11, 0), (), "AnsOutprVel", None),
		"AnsOutprVelFreq": (16161, 2, (3, 0), (), "AnsOutprVelFreq", None),
		"AnsOutprVelNth": (16163, 2, (3, 0), (), "AnsOutprVelNth", None),
		"AnsOutputOn": (16131, 2, (11, 0), (), "AnsOutputOn", None),
		"AnsOutresAcc": (16166, 2, (11, 0), (), "AnsOutresAcc", None),
		"AnsOutresAccFreq": (16168, 2, (3, 0), (), "AnsOutresAccFreq", None),
		"AnsOutresAccNth": (16170, 2, (3, 0), (), "AnsOutresAccNth", None),
		"AnsOutresAll": (16132, 2, (11, 0), (), "AnsOutresAll", None),
		"AnsOutresAllFreq": (16134, 2, (3, 0), (), "AnsOutresAllFreq", None),
		"AnsOutresAllNth": (16136, 2, (3, 0), (), "AnsOutresAllNth", None),
		"AnsOutresBasic": (16138, 2, (11, 0), (), "AnsOutresBasic", None),
		"AnsOutresBasicFreq": (16140, 2, (3, 0), (), "AnsOutresBasicFreq", None),
		"AnsOutresBasicNth": (16142, 2, (3, 0), (), "AnsOutresBasicNth", None),
		"AnsOutresEsol": (16174, 2, (11, 0), (), "AnsOutresEsol", None),
		"AnsOutresEsolFreq": (16176, 2, (3, 0), (), "AnsOutresEsolFreq", None),
		"AnsOutresEsolNth": (16178, 2, (3, 0), (), "AnsOutresEsolNth", None),
		"AnsOutresNsol": (16150, 2, (11, 0), (), "AnsOutresNsol", None),
		"AnsOutresNsolFreq": (16152, 2, (3, 0), (), "AnsOutresNsolFreq", None),
		"AnsOutresNsolNth": (16154, 2, (3, 0), (), "AnsOutresNsolNth", None),
		"AnsOutresRsol": (16144, 2, (11, 0), (), "AnsOutresRsol", None),
		"AnsOutresRsolFreq": (16146, 2, (3, 0), (), "AnsOutresRsolFreq", None),
		"AnsOutresRsolNth": (16148, 2, (3, 0), (), "AnsOutresRsolNth", None),
		"AnsOutresVel": (16158, 2, (11, 0), (), "AnsOutresVel", None),
		"AnsOutresVelFreq": (16160, 2, (3, 0), (), "AnsOutresVelFreq", None),
		"AnsOutresVelNth": (16162, 2, (3, 0), (), "AnsOutresVelNth", None),
		"AnsPlslimit": (16117, 2, (11, 0), (), "AnsPlslimit", None),
		"AnsPlslimitvalue": (16118, 2, (5, 0), (), "AnsPlslimitvalue", None),
		"AnsPred": (16246, 2, (11, 0), (), "AnsPred", None),
		"AnsPredictor": (16127, 2, (11, 0), (), "AnsPredictor", None),
		"AnsPstres": (16102, 2, (11, 0), (), "AnsPstres", None),
		"AnsResfq": (16130, 2, (11, 0), (), "AnsResfq", None),
		"AnsRottoler": (16234, 2, (5, 0), (), "AnsRottoler", None),
		"AnsTime": (16108, 2, (5, 0), (), "AnsTime", None),
		"AnsTimestepOn": (16107, 2, (11, 0), (), "AnsTimestepOn", None),
		"AnsTolerb": (16129, 2, (5, 0), (), "AnsTolerb", None),
		"AnsTransAlpha": (16224, 2, (5, 0), (), "AnsTransAlpha", None),
		"AnsTransAlphad": (16218, 2, (5, 0), (), "AnsTransAlphad", None),
		"AnsTransAlphaf": (16226, 2, (5, 0), (), "AnsTransAlphaf", None),
		"AnsTransAlpham": (16227, 2, (5, 0), (), "AnsTransAlpham", None),
		"AnsTransBetad": (16219, 2, (5, 0), (), "AnsTransBetad", None),
		"AnsTransDelta": (16225, 2, (5, 0), (), "AnsTransDelta", None),
		"AnsTransDmprat": (16221, 2, (5, 0), (), "AnsTransDmprat", None),
		"AnsTransDmpsfreq": (16216, 2, (5, 0), (), "AnsTransDmpsfreq", None),
		"AnsTransDmpstr": (16220, 2, (5, 0), (), "AnsTransDmpstr", None),
		"AnsTransGamma": (16222, 2, (11, 0), (), "AnsTransGamma", None),
		"AnsTransGammavalue": (16223, 2, (5, 0), (), "AnsTransGammavalue", None),
		"AnsTransLumpm": (16217, 2, (11, 0), (), "AnsTransLumpm", None),
		"AnsTransMaxmode": (16214, 2, (3, 0), (), "AnsTransMaxmode", None),
		"AnsTransMethod": (16212, 2, (11, 0), (), "AnsTransMethod", None),
		"AnsTransMinmode": (16213, 2, (3, 0), (), "AnsTransMinmode", None),
		"AnsTransOptOn": (16211, 2, (11, 0), (), "AnsTransOptOn", None),
		"AnsTransTintopt": (16215, 2, (11, 0), (), "AnsTransTintopt", None),
		"AnsUtoler": (16232, 2, (5, 0), (), "AnsUtoler", None),
		"CaseLabel": (15176, 2, (8, 0), (), "CaseLabel", None),
		"CaseTitle": (15000, 2, (8, 0), (), "CaseTitle", None),
		"CaseType": (15088, 2, (3, 0), (), "CaseType", None),
		"ContactOption": (15177, 2, (3, 0), (), "ContactOption", None),
		"ContactSetType": (15178, 2, (3, 0), (), "ContactSetType", None),
		"CornerOutput": (15010, 2, (3, 0), (), "CornerOutput", None),
		"Destination": (15008, 2, (3, 0), (), "Destination", None),
		"DynHistBodyLoadGrp": (15090, 2, (3, 0), (), "DynHistBodyLoadGrp", None),
		"DynHistGroupHistId": (15100, 2, (3, 0), (), "DynHistGroupHistId", None),
		"DynHistImplicit": (15093, 2, (11, 0), (), "DynHistImplicit", None),
		"DynHistMassDampOn": (15091, 2, (11, 0), (), "DynHistMassDampOn", None),
		"DynHistMsssDamp": (15092, 2, (5, 0), (), "DynHistMsssDamp", None),
		"DynHistOn": (15089, 2, (11, 0), (), "DynHistOn", None),
		"DynHistPlateIntgPts": (15099, 2, (3, 0), (), "DynHistPlateIntgPts", None),
		"DynHistPrintHistOutput": (15098, 2, (5, 0), (), "DynHistPrintHistOutput", None),
		"DynHistSpringback": (15094, 2, (11, 0), (), "DynHistSpringback", None),
		"DynHistStrainOutput": (15095, 2, (11, 0), (), "DynHistStrainOutput", None),
		"DynHistTimeHistOuput": (15097, 2, (5, 0), (), "DynHistTimeHistOuput", None),
		"DynHistTotalTime": (15096, 2, (5, 0), (), "DynHistTotalTime", None),
		"Echo": (15004, 2, (8, 0), (), "Echo", None),
		"EndText": (15007, 2, (3, 0), (), "EndText", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Imaginary": (15009, 2, (3, 0), (), "Imaginary", None),
		"IntegrationOutput": (15011, 2, (3, 0), (), "IntegrationOutput", None),
		"MarCtblOn": (15082, 2, (11, 0), (), "MarCtblOn", None),
		"MarCtblWrite": (15083, 2, (11, 0), (), "MarCtblWrite", None),
		"MarHistAnalCaseSol": (15064, 2, (3, 0), (), "MarHistAnalCaseSol", None),
		"MarHistAutoSwitch": (15063, 2, (11, 0), (), "MarHistAutoSwitch", None),
		"MarHistBuckleNumModes": (15065, 2, (3, 0), (), "MarHistBuckleNumModes", None),
		"MarHistBucklePosEigen": (15066, 2, (3, 0), (), "MarHistBucklePosEigen", None),
		"MarHistChecking": (15062, 2, (3, 0), (), "MarHistChecking", None),
		"MarHistContactProp": (15049, 2, (3, 0), (), "MarHistContactProp", None),
		"MarHistConvergeMeth": (15056, 2, (3, 0), (), "MarHistConvergeMeth", None),
		"MarHistCtrlMaxRecycle": (15053, 2, (3, 0), (), "MarHistCtrlMaxRecycle", None),
		"MarHistCtrlMaxStep": (15052, 2, (3, 0), (), "MarHistCtrlMaxStep", None),
		"MarHistCtrlMethod": (15050, 2, (3, 0), (), "MarHistCtrlMethod", None),
		"MarHistCtrlMinRecycle": (15054, 2, (3, 0), (), "MarHistCtrlMinRecycle", None),
		"MarHistMaxResidual": (15055, 2, (5, 0), (), "MarHistMaxResidual", None),
		"MarHistModalEigen": (15061, 2, (3, 0), (), "MarHistModalEigen", None),
		"MarHistModalMaxFreq": (15060, 2, (5, 0), (), "MarHistModalMaxFreq", None),
		"MarHistModalMinFreq": (15059, 2, (5, 0), (), "MarHistModalMinFreq", None),
		"MarHistNonPosDefinite": (15057, 2, (11, 0), (), "MarHistNonPosDefinite", None),
		"MarHistNonSymmetric": (15058, 2, (11, 0), (), "MarHistNonSymmetric", None),
		"MarHistOn": (15048, 2, (11, 0), (), "MarHistOn", None),
		"MarHistSolverMeth": (15051, 2, (3, 0), (), "MarHistSolverMeth", None),
		"MarIncArcLenMeth": (15068, 2, (3, 0), (), "MarIncArcLenMeth", None),
		"MarIncCtrlMaxRecycle": (15079, 2, (3, 0), (), "MarIncCtrlMaxRecycle", None),
		"MarIncFracFirst": (15077, 2, (5, 0), (), "MarIncFracFirst", None),
		"MarIncInitTimeInc": (15070, 2, (5, 0), (), "MarIncInitTimeInc", None),
		"MarIncMaxFracForAll": (15080, 2, (5, 0), (), "MarIncMaxFracForAll", None),
		"MarIncMaxNumInc": (15078, 2, (3, 0), (), "MarIncMaxNumInc", None),
		"MarIncMaxStep": (15074, 2, (3, 0), (), "MarIncMaxStep", None),
		"MarIncMaxTimeInc": (15072, 2, (5, 0), (), "MarIncMaxTimeInc", None),
		"MarIncMinTimeInc": (15071, 2, (5, 0), (), "MarIncMinTimeInc", None),
		"MarIncNumOutInc": (15075, 2, (3, 0), (), "MarIncNumOutInc", None),
		"MarIncOn": (15067, 2, (11, 0), (), "MarIncOn", None),
		"MarIncQuasiStatDamp": (15076, 2, (11, 0), (), "MarIncQuasiStatDamp", None),
		"MarIncScaleFact": (15073, 2, (5, 0), (), "MarIncScaleFact", None),
		"MarIncTimePeriod": (15069, 2, (5, 0), (), "MarIncTimePeriod", None),
		"MarIncTotalTime": (15081, 2, (5, 0), (), "MarIncTotalTime", None),
		"NasCaeDynPressure": (15152, 2, (5, 0), (), "NasCaeDynPressure", None),
		"NasCaeMachNumber": (15151, 2, (5, 0), (), "NasCaeMachNumber", None),
		"NasCaeOn": (15150, 2, (11, 0), (), "NasCaeOn", None),
		"NasCaeRigidTrim": (15154, 2, (11, 0), (), "NasCaeRigidTrim", None),
		"NasCaeWrtieTrim": (15155, 2, (11, 0), (), "NasCaeWrtieTrim", None),
		"NasCaseAlternateTextLocation": (15342, 2, (11, 0), (), "NasCaseAlternateTextLocation", None),
		"NasCaseFHAC": (15524, 2, (8, 0), (), "NasCaseFHAC", None),
		"NasCaseFHACOn": (15523, 2, (11, 0), (), "NasCaseFHACOn", None),
		"NasCaseFHAR": (15522, 2, (8, 0), (), "NasCaseFHAR", None),
		"NasCaseFHAROn": (15521, 2, (11, 0), (), "NasCaseFHAROn", None),
		"NasCaseModeSel": (15527, 2, (8, 0), (), "NasCaseModeSel", None),
		"NasCaseModeSelInc": (15526, 2, (11, 0), (), "NasCaseModeSelInc", None),
		"NasCaseModeSelOn": (15525, 2, (11, 0), (), "NasCaseModeSelOn", None),
		"NasCaseMonitorAeroEnabled": (15354, 2, (11, 0), (), "NasCaseMonitorAeroEnabled", None),
		"NasCaseMonitorElemEnabled": (15425, 2, (11, 0), (), "NasCaseMonitorElemEnabled", None),
		"NasCaseMonitorEnabled": (15353, 2, (11, 0), (), "NasCaseMonitorEnabled", None),
		"NasCaseMonitorLoadEnabled": (15355, 2, (11, 0), (), "NasCaseMonitorLoadEnabled", None),
		"NasCflDenID": (15158, 2, (3, 0), (), "NasCflDenID", None),
		"NasCflEig": (15162, 2, (3, 0), (), "NasCflEig", None),
		"NasCflEps": (15163, 2, (5, 0), (), "NasCflEps", None),
		"NasCflFliMethod": (15161, 2, (3, 0), (), "NasCflFliMethod", None),
		"NasCflMachFactID": (15159, 2, (3, 0), (), "NasCflMachFactID", None),
		"NasCflMethod": (15157, 2, (3, 0), (), "NasCflMethod", None),
		"NasCflOn": (15156, 2, (11, 0), (), "NasCflOn", None),
		"NasCflRfreqFactID": (15160, 2, (3, 0), (), "NasCflRfreqFactID", None),
		"NasCflSdampID": (15171, 2, (3, 0), (), "NasCflSdampID", None),
		"NasCflWriteFlutter": (15164, 2, (11, 0), (), "NasCflWriteFlutter", None),
		"NasCnlArcConstraintType": (15117, 2, (3, 0), (), "NasCnlArcConstraintType", None),
		"NasCnlArcDesiredIter": (15121, 2, (3, 0), (), "NasCnlArcDesiredIter", None),
		"NasCnlArcLoadScale": (15120, 2, (5, 0), (), "NasCnlArcLoadScale", None),
		"NasCnlArcMaxAdjust": (15119, 2, (5, 0), (), "NasCnlArcMaxAdjust", None),
		"NasCnlArcMaxSteps": (15122, 2, (3, 0), (), "NasCnlArcMaxSteps", None),
		"NasCnlArcMinAdjust": (15118, 2, (5, 0), (), "NasCnlArcMinAdjust", None),
		"NasCnlBoundsRb": (15125, 2, (5, 0), (), "NasCnlBoundsRb", None),
		"NasCnlCreep": (15135, 2, (11, 0), (), "NasCnlCreep", None),
		"NasCnlCtiffnessMethod": (15108, 2, (3, 0), (), "NasCnlCtiffnessMethod", None),
		"NasCnlDivergenceLimit": (15127, 2, (3, 0), (), "NasCnlDivergenceLimit", None),
		"NasCnlDominantPeriodSteps": (15124, 2, (3, 0), (), "NasCnlDominantPeriodSteps", None),
		"NasCnlFstress": (15133, 2, (5, 0), (), "NasCnlFstress", None),
		"NasCnlIncrements": (15103, 2, (3, 0), (), "NasCnlIncrements", None),
		"NasCnlIntermediateOutput": (15110, 2, (3, 0), (), "NasCnlIntermediateOutput", None),
		"NasCnlKstep": (15109, 2, (3, 0), (), "NasCnlKstep", None),
		"NasCnlLineSearchTolerance": (15130, 2, (5, 0), (), "NasCnlLineSearchTolerance", None),
		"NasCnlMaxAdjust": (15134, 2, (5, 0), (), "NasCnlMaxAdjust", None),
		"NasCnlMaxBisections": (15131, 2, (3, 0), (), "NasCnlMaxBisections", None),
		"NasCnlMaxIter": (15105, 2, (3, 0), (), "NasCnlMaxIter", None),
		"NasCnlMaxLineSearch": (15129, 2, (3, 0), (), "NasCnlMaxLineSearch", None),
		"NasCnlMaxRotation": (15132, 2, (5, 0), (), "NasCnlMaxRotation", None),
		"NasCnlModnewtonBisection": (15116, 2, (11, 0), (), "NasCnlModnewtonBisection", None),
		"NasCnlModnewtonLineSearch": (15114, 2, (11, 0), (), "NasCnlModnewtonLineSearch", None),
		"NasCnlModnewtonQuasiNewton": (15115, 2, (11, 0), (), "NasCnlModnewtonQuasiNewton", None),
		"NasCnlOn": (15101, 2, (11, 0), (), "NasCnlOn", None),
		"NasCnlOutputInterval": (15111, 2, (3, 0), (), "NasCnlOutputInterval", None),
		"NasCnlQuasiNewtonVectors": (15128, 2, (3, 0), (), "NasCnlQuasiNewtonVectors", None),
		"NasCnlSkipNLPARM": (15136, 2, (11, 0), (), "NasCnlSkipNLPARM", None),
		"NasCnlSolutionOverrides": (15113, 2, (3, 0), (), "NasCnlSolutionOverrides", None),
		"NasCnlSolutionStrategy": (15112, 2, (3, 0), (), "NasCnlSolutionStrategy", None),
		"NasCnlStabilityTolerance": (15126, 2, (5, 0), (), "NasCnlStabilityTolerance", None),
		"NasCnlStiffnessMethod": (15175, 2, (3, 0), (), "NasCnlStiffnessMethod", None),
		"NasCnlTimeSkipAdjust": (15123, 2, (3, 0), (), "NasCnlTimeSkipAdjust", None),
		"NasCnlTime_Increment": (15104, 2, (5, 0), (), "NasCnlTime_Increment", None),
		"NasCnlUseLoadSet": (15102, 2, (11, 0), (), "NasCnlUseLoadSet", None),
		"NasCnlkDAMP": (15172, 2, (11, 0), (), "NasCnlkDAMP", None),
		"NasCnlkUPDATE": (15173, 2, (3, 0), (), "NasCnlkUPDATE", None),
		"NasCurvatureStrain": (15180, 2, (11, 0), (), "NasCurvatureStrain", None),
		"NasDMIGB2GG": (15346, 2, (3, 0), (), "NasDMIGB2GG", None),
		"NasDMIGB2PP": (15351, 2, (3, 0), (), "NasDMIGB2PP", None),
		"NasDMIGK2GG": (15344, 2, (3, 0), (), "NasDMIGK2GG", None),
		"NasDMIGK2PP": (15349, 2, (3, 0), (), "NasDMIGK2PP", None),
		"NasDMIGK42GG": (15347, 2, (3, 0), (), "NasDMIGK42GG", None),
		"NasDMIGM2GG": (15345, 2, (3, 0), (), "NasDMIGM2GG", None),
		"NasDMIGM2PP": (15350, 2, (3, 0), (), "NasDMIGM2PP", None),
		"NasDMIGP2G": (15348, 2, (3, 0), (), "NasDMIGP2G", None),
		"NasEnableDMIG": (15343, 2, (11, 0), (), "NasEnableDMIG", None),
		"NasInlStepOptADJUST": (15394, 2, (3, 0), (), "NasInlStepOptADJUST", None),
		"NasInlStepOptCREEP": (15366, 2, (11, 0), (), "NasInlStepOptCREEP", None),
		"NasInlStepOptCTRLDEF": (15362, 2, (3, 0), (), "NasInlStepOptCTRLDEF", None),
		"NasInlStepOptConvA": (15411, 2, (11, 0), (), "NasInlStepOptConvA", None),
		"NasInlStepOptConvN": (15410, 2, (11, 0), (), "NasInlStepOptConvN", None),
		"NasInlStepOptConvP": (15407, 2, (11, 0), (), "NasInlStepOptConvP", None),
		"NasInlStepOptConvU": (15406, 2, (11, 0), (), "NasInlStepOptConvU", None),
		"NasInlStepOptConvV": (15409, 2, (11, 0), (), "NasInlStepOptConvV", None),
		"NasInlStepOptConvW": (15408, 2, (11, 0), (), "NasInlStepOptConvW", None),
		"NasInlStepOptDAMP": (15378, 2, (5, 0), (), "NasInlStepOptDAMP", None),
		"NasInlStepOptDTINITF": (15370, 2, (5, 0), (), "NasInlStepOptDTINITF", None),
		"NasInlStepOptDTINITFA": (15399, 2, (5, 0), (), "NasInlStepOptDTINITFA", None),
		"NasInlStepOptDTMAXF": (15372, 2, (5, 0), (), "NasInlStepOptDTMAXF", None),
		"NasInlStepOptDTMINF": (15371, 2, (5, 0), (), "NasInlStepOptDTMINF", None),
		"NasInlStepOptEPSP": (15413, 2, (5, 0), (), "NasInlStepOptEPSP", None),
		"NasInlStepOptEPSU": (15412, 2, (5, 0), (), "NasInlStepOptEPSU", None),
		"NasInlStepOptEPSW": (15414, 2, (5, 0), (), "NasInlStepOptEPSW", None),
		"NasInlStepOptEnableCriteria": (15379, 2, (11, 0), (), "NasInlStepOptEnableCriteria", None),
		"NasInlStepOptFSTRESS": (15421, 2, (5, 0), (), "NasInlStepOptFSTRESS", None),
		"NasInlStepOptGroupIDs": (15385, 2, (12, 0), (), "NasInlStepOptGroupIDs", None),
		"NasInlStepOptID": (15360, 2, (3, 0), (), "NasInlStepOptID", None),
		"NasInlStepOptIDAMP": (15377, 2, (3, 0), (), "NasInlStepOptIDAMP", None),
		"NasInlStepOptINTOUT": (15375, 2, (3, 0), (), "NasInlStepOptINTOUT", None),
		"NasInlStepOptIPHYS": (15380, 2, (3, 0), (), "NasInlStepOptIPHYS", None),
		"NasInlStepOptIncrements": (15384, 2, (12, 0), (), "NasInlStepOptIncrements", None),
		"NasInlStepOptKMETHOD": (15415, 2, (3, 0), (), "NasInlStepOptKMETHOD", None),
		"NasInlStepOptKSTEP": (15416, 2, (3, 0), (), "NasInlStepOptKSTEP", None),
		"NasInlStepOptLIMTAR": (15381, 2, (3, 0), (), "NasInlStepOptLIMTAR", None),
		"NasInlStepOptLSTOL": (15420, 2, (5, 0), (), "NasInlStepOptLSTOL", None),
		"NasInlStepOptLoadStepping": (15367, 2, (3, 0), (), "NasInlStepOptLoadStepping", None),
		"NasInlStepOptMAXALR": (15401, 2, (5, 0), (), "NasInlStepOptMAXALR", None),
		"NasInlStepOptMAXBIS": (15365, 2, (3, 0), (), "NasInlStepOptMAXBIS", None),
		"NasInlStepOptMAXITER": (15363, 2, (3, 0), (), "NasInlStepOptMAXITER", None),
		"NasInlStepOptMAXLS": (15419, 2, (3, 0), (), "NasInlStepOptMAXLS", None),
		"NasInlStepOptMAXQN": (15418, 2, (3, 0), (), "NasInlStepOptMAXQN", None),
		"NasInlStepOptMECH": (15405, 2, (11, 0), (), "NasInlStepOptMECH", None),
		"NasInlStepOptMINALR": (15400, 2, (5, 0), (), "NasInlStepOptMINALR", None),
		"NasInlStepOptMINITER": (15364, 2, (3, 0), (), "NasInlStepOptMINITER", None),
		"NasInlStepOptMRCONV": (15417, 2, (3, 0), (), "NasInlStepOptMRCONV", None),
		"NasInlStepOptMSTEP": (15395, 2, (3, 0), (), "NasInlStepOptMSTEP", None),
		"NasInlStepOptMT1_i": (15390, 2, (12, 0), (), "NasInlStepOptMT1_i", None),
		"NasInlStepOptMT2_i": (15391, 2, (12, 0), (), "NasInlStepOptMT2_i", None),
		"NasInlStepOptMT3_i": (15392, 2, (12, 0), (), "NasInlStepOptMT3_i", None),
		"NasInlStepOptMT4_i": (15393, 2, (12, 0), (), "NasInlStepOptMT4_i", None),
		"NasInlStepOptNDESIR": (15373, 2, (3, 0), (), "NasInlStepOptNDESIR", None),
		"NasInlStepOptNDESIRA": (15403, 2, (3, 0), (), "NasInlStepOptNDESIRA", None),
		"NasInlStepOptNINC": (15368, 2, (3, 0), (), "NasInlStepOptNINC", None),
		"NasInlStepOptNO": (15369, 2, (3, 0), (), "NasInlStepOptNO", None),
		"NasInlStepOptNSMAX": (15376, 2, (3, 0), (), "NasInlStepOptNSMAX", None),
		"NasInlStepOptNSMAXA": (15404, 2, (3, 0), (), "NasInlStepOptNSMAXA", None),
		"NasInlStepOptOn": (15358, 2, (11, 0), (), "NasInlStepOptOn", None),
		"NasInlStepOptRB": (15396, 2, (5, 0), (), "NasInlStepOptRB", None),
		"NasInlStepOptRBIG": (15383, 2, (5, 0), (), "NasInlStepOptRBIG", None),
		"NasInlStepOptRSMALL": (15382, 2, (5, 0), (), "NasInlStepOptRSMALL", None),
		"NasInlStepOptSCALEA": (15402, 2, (5, 0), (), "NasInlStepOptSCALEA", None),
		"NasInlStepOptSFACT": (15374, 2, (5, 0), (), "NasInlStepOptSFACT", None),
		"NasInlStepOptSkipNLSTEP": (15359, 2, (11, 0), (), "NasInlStepOptSkipNLSTEP", None),
		"NasInlStepOptTOTTIM": (15361, 2, (5, 0), (), "NasInlStepOptTOTTIM", None),
		"NasInlStepOptTYPE": (15398, 2, (3, 0), (), "NasInlStepOptTYPE", None),
		"NasInlStepOptUTOL": (15397, 2, (5, 0), (), "NasInlStepOptUTOL", None),
		"NasInlStepOptYT1_i": (15386, 2, (12, 0), (), "NasInlStepOptYT1_i", None),
		"NasInlStepOptYT2_i": (15387, 2, (12, 0), (), "NasInlStepOptYT2_i", None),
		"NasInlStepOptYT3_i": (15388, 2, (12, 0), (), "NasInlStepOptYT3_i", None),
		"NasInlStepOptYT4_i": (15389, 2, (12, 0), (), "NasInlStepOptYT4_i", None),
		"NasModeDampOverall": (10404, 2, (5, 0), (), "NasModeDampOverall", None),
		"NasModeDesiredRoots": (10056, 2, (3, 0), (), "NasModeDesiredRoots", None),
		"NasModeEigrSet": (10051, 2, (3, 0), (), "NasModeEigrSet", None),
		"NasModeEstRoots": (10055, 2, (3, 0), (), "NasModeEstRoots", None),
		"NasModeMassForm": (10060, 2, (3, 0), (), "NasModeMassForm", None),
		"NasModeMethod": (10052, 2, (3, 0), (), "NasModeMethod", None),
		"NasModeNormDOF": (10059, 2, (3, 0), (), "NasModeNormDOF", None),
		"NasModeNormNode": (10058, 2, (3, 0), (), "NasModeNormNode", None),
		"NasModeNormOpt": (10057, 2, (3, 0), (), "NasModeNormOpt", None),
		"NasModeOn": (10050, 2, (11, 0), (), "NasModeOn", None),
		"NasModeSolutionType": (10053, 2, (11, 0), (), "NasModeSolutionType", None),
		"NasModeXYOn": (10061, 2, (11, 0), (), "NasModeXYOn", None),
		"NasModeXYRefNode": (10063, 2, (3, 0), (), "NasModeXYRefNode", None),
		"NasModesComplexConverge": (10321, 2, (5, 0), (), "NasModesComplexConverge", None),
		"NasModesComplexRegionWidth": (10322, 2, (5, 0), (), "NasModesComplexRegionWidth", None),
		"NasModesSkipEigr": (10319, 2, (11, 0), (), "NasModesSkipEigr", None),
		"NasMsnlArcLenConstr": (15292, 2, (3, 0), (), "NasMsnlArcLenConstr", None),
		"NasMsnlArcLenDIter": (15297, 2, (3, 0), (), "NasMsnlArcLenDIter", None),
		"NasMsnlArcLenInitLdfac": (15299, 2, (5, 0), (), "NasMsnlArcLenInitLdfac", None),
		"NasMsnlArcLenMaxAlr": (15294, 2, (5, 0), (), "NasMsnlArcLenMaxAlr", None),
		"NasMsnlArcLenMaxR": (15295, 2, (5, 0), (), "NasMsnlArcLenMaxR", None),
		"NasMsnlArcLenMinAlr": (15293, 2, (5, 0), (), "NasMsnlArcLenMinAlr", None),
		"NasMsnlArcLenMxInc": (15298, 2, (3, 0), (), "NasMsnlArcLenMxInc", None),
		"NasMsnlArcLenMxLdfac": (15300, 2, (5, 0), (), "NasMsnlArcLenMxLdfac", None),
		"NasMsnlArcLenOn": (15291, 2, (11, 0), (), "NasMsnlArcLenOn", None),
		"NasMsnlArcLenScale": (15296, 2, (5, 0), (), "NasMsnlArcLenScale", None),
		"NasMsnlArcLenSkipFac": (15301, 2, (3, 0), (), "NasMsnlArcLenSkipFac", None),
		"NasMsnlCntALFA": (15305, 2, (5, 0), (), "NasMsnlCntALFA", None),
		"NasMsnlCntAutotim": (15223, 2, (11, 0), (), "NasMsnlCntAutotim", None),
		"NasMsnlCntBETA": (15303, 2, (5, 0), (), "NasMsnlCntBETA", None),
		"NasMsnlCntCRLIMR": (15428, 2, (5, 0), (), "NasMsnlCntCRLIMR", None),
		"NasMsnlCntCntmdiv": (15206, 2, (3, 0), (), "NasMsnlCntCntmdiv", None),
		"NasMsnlCntCrcerat": (15212, 2, (5, 0), (), "NasMsnlCntCrcerat", None),
		"NasMsnlCntCrcinc": (15213, 2, (5, 0), (), "NasMsnlCntCrcinc", None),
		"NasMsnlCntCreep": (15214, 2, (11, 0), (), "NasMsnlCntCreep", None),
		"NasMsnlCntCricoff": (15215, 2, (5, 0), (), "NasMsnlCntCricoff", None),
		"NasMsnlCntCrinfac": (15216, 2, (5, 0), (), "NasMsnlCntCrinfac", None),
		"NasMsnlCntCrmfmn": (15217, 2, (5, 0), (), "NasMsnlCntCrmfmn", None),
		"NasMsnlCntCrmfmx": (15218, 2, (5, 0), (), "NasMsnlCntCrmfmx", None),
		"NasMsnlCntCrteabs": (15219, 2, (5, 0), (), "NasMsnlCntCrteabs", None),
		"NasMsnlCntCrterel": (15221, 2, (5, 0), (), "NasMsnlCntCrterel", None),
		"NasMsnlCntDtinit": (15224, 2, (5, 0), (), "NasMsnlCntDtinit", None),
		"NasMsnlCntDtmax": (15225, 2, (5, 0), (), "NasMsnlCntDtmax", None),
		"NasMsnlCntDtmin": (15226, 2, (5, 0), (), "NasMsnlCntDtmin", None),
		"NasMsnlCntDtsbcdt": (15227, 2, (11, 0), (), "NasMsnlCntDtsbcdt", None),
		"NasMsnlCntEpsbolt": (15190, 2, (5, 0), (), "NasMsnlCntEpsbolt", None),
		"NasMsnlCntEqmfmin": (15228, 2, (5, 0), (), "NasMsnlCntEqmfmin", None),
		"NasMsnlCntEqmfmx": (15229, 2, (5, 0), (), "NasMsnlCntEqmfmx", None),
		"NasMsnlCntFollowk": (15200, 2, (11, 0), (), "NasMsnlCntFollowk", None),
		"NasMsnlCntFsymtol": (15207, 2, (5, 0), (), "NasMsnlCntFsymtol", None),
		"NasMsnlCntGAMA": (15304, 2, (5, 0), (), "NasMsnlCntGAMA", None),
		"NasMsnlCntINACCN": (15329, 2, (11, 0), (), "NasMsnlCntINACCN", None),
		"NasMsnlCntINERTIA": (15330, 2, (11, 0), (), "NasMsnlCntINERTIA", None),
		"NasMsnlCntItrbolt": (15192, 2, (3, 0), (), "NasMsnlCntItrbolt", None),
		"NasMsnlCntKMODSCL": (15445, 2, (5, 0), (), "NasMsnlCntKMODSCL", None),
		"NasMsnlCntKMODTN": (15427, 2, (3, 0), (), "NasMsnlCntKMODTN", None),
		"NasMsnlCntKsym": (15208, 2, (3, 0), (), "NasMsnlCntKsym", None),
		"NasMsnlCntKsymtol": (15209, 2, (5, 0), (), "NasMsnlCntKsymtol", None),
		"NasMsnlCntKupdate": (15201, 2, (3, 0), (), "NasMsnlCntKupdate", None),
		"NasMsnlCntLOADOFF": (15331, 2, (3, 0), (), "NasMsnlCntLOADOFF", None),
		"NasMsnlCntLSTCONV": (15446, 2, (11, 0), (), "NasMsnlCntLSTCONV", None),
		"NasMsnlCntLvar": (15195, 2, (11, 0), (), "NasMsnlCntLvar", None),
		"NasMsnlCntMSFAC": (15333, 2, (5, 0), (), "NasMsnlCntMSFAC", None),
		"NasMsnlCntMSTAB": (15332, 2, (11, 0), (), "NasMsnlCntMSTAB", None),
		"NasMsnlCntMaxbis": (15186, 2, (3, 0), (), "NasMsnlCntMaxbis", None),
		"NasMsnlCntMaxdiv": (15187, 2, (3, 0), (), "NasMsnlCntMaxdiv", None),
		"NasMsnlCntMaxiter": (15188, 2, (3, 0), (), "NasMsnlCntMaxiter", None),
		"NasMsnlCntMaxqn": (15189, 2, (3, 0), (), "NasMsnlCntMaxqn", None),
		"NasMsnlCntMisfblt": (15193, 2, (5, 0), (), "NasMsnlCntMisfblt", None),
		"NasMsnlCntMsglvl": (15196, 2, (3, 0), (), "NasMsnlCntMsglvl", None),
		"NasMsnlCntMsglvlb": (15194, 2, (3, 0), (), "NasMsnlCntMsglvlb", None),
		"NasMsnlCntMsglvlc": (15210, 2, (3, 0), (), "NasMsnlCntMsglvlc", None),
		"NasMsnlCntNORMP": (15334, 2, (3, 0), (), "NasMsnlCntNORMP", None),
		"NasMsnlCntNORMU": (15335, 2, (3, 0), (), "NasMsnlCntNORMU", None),
		"NasMsnlCntOn": (15182, 2, (11, 0), (), "NasMsnlCntOn", None),
		"NasMsnlCntPLLIM": (15429, 2, (5, 0), (), "NasMsnlCntPLLIM", None),
		"NasMsnlCntPLLIMF": (15430, 2, (5, 0), (), "NasMsnlCntPLLIMF", None),
		"NasMsnlCntPLSHUT": (15423, 2, (11, 0), (), "NasMsnlCntPLSHUT", None),
		"NasMsnlCntPlastic": (15222, 2, (11, 0), (), "NasMsnlCntPlastic", None),
		"NasMsnlCntQuasiNewtonIter": (15356, 2, (3, 0), (), "NasMsnlCntQuasiNewtonIter", None),
		"NasMsnlCntREFP": (15336, 2, (5, 0), (), "NasMsnlCntREFP", None),
		"NasMsnlCntREFU": (15337, 2, (5, 0), (), "NasMsnlCntREFU", None),
		"NasMsnlCntRFVAR": (15357, 2, (3, 0), (), "NasMsnlCntRFVAR", None),
		"NasMsnlCntRHOINF": (15338, 2, (5, 0), (), "NasMsnlCntRHOINF", None),
		"NasMsnlCntSkipNLCNTL": (15183, 2, (11, 0), (), "NasMsnlCntSkipNLCNTL", None),
		"NasMsnlCntSolver": (15197, 2, (3, 0), (), "NasMsnlCntSolver", None),
		"NasMsnlCntSpink": (15202, 2, (11, 0), (), "NasMsnlCntSpink", None),
		"NasMsnlCntStfoptn": (15203, 2, (3, 0), (), "NasMsnlCntStfoptn", None),
		"NasMsnlCntStressk": (15204, 2, (11, 0), (), "NasMsnlCntStressk", None),
		"NasMsnlCntTETA": (15306, 2, (5, 0), (), "NasMsnlCntTETA", None),
		"NasMsnlCntTINTMTH": (15302, 2, (3, 0), (), "NasMsnlCntTINTMTH", None),
		"NasMsnlCntThrmst": (15198, 2, (11, 0), (), "NasMsnlCntThrmst", None),
		"NasMsnlCntTsccr": (15230, 2, (3, 0), (), "NasMsnlCntTsccr", None),
		"NasMsnlCntTsceq": (15231, 2, (11, 0), (), "NasMsnlCntTsceq", None),
		"NasMsnlCntTscumat": (15232, 2, (11, 0), (), "NasMsnlCntTscumat", None),
		"NasMsnlCntTstepk": (15205, 2, (11, 0), (), "NasMsnlCntTstepk", None),
		"NasMsnlCntTvar": (15199, 2, (11, 0), (), "NasMsnlCntTvar", None),
		"NasMsnlCntUmfmin": (15233, 2, (5, 0), (), "NasMsnlCntUmfmin", None),
		"NasMsnlCntUmfmx": (15234, 2, (5, 0), (), "NasMsnlCntUmfmx", None),
		"NasMsnlCntUsolver": (15211, 2, (3, 0), (), "NasMsnlCntUsolver", None),
		"NasMsnlCntZerbolt": (15191, 2, (5, 0), (), "NasMsnlCntZerbolt", None),
		"NasMsnlCntdCrteco": (15220, 2, (5, 0), (), "NasMsnlCntdCrteco", None),
		"NasMsnlModalMassForm": (15352, 2, (3, 0), (), "NasMsnlModalMassForm", None),
		"NasMsnlTSEndTime": (15288, 2, (12, 0), (), "NasMsnlTSEndTime", None),
		"NasMsnlTSNumIncrements": (15287, 2, (12, 0), (), "NasMsnlTSNumIncrements", None),
		"NasMsnlTSOn": (15285, 2, (11, 0), (), "NasMsnlTSOn", None),
		"NasMsnlTSOutputFreq": (15290, 2, (12, 0), (), "NasMsnlTSOutputFreq", None),
		"NasMsnlTSSkipFactor": (15289, 2, (12, 0), (), "NasMsnlTSSkipFactor", None),
		"NasMsnlTSSkipTSTEP": (15286, 2, (11, 0), (), "NasMsnlTSSkipTSTEP", None),
		"NasMsnlkCnt2ALFA": (15253, 2, (5, 0), (), "NasMsnlkCnt2ALFA", None),
		"NasMsnlkCnt2AMAX": (15260, 2, (5, 0), (), "NasMsnlkCnt2AMAX", None),
		"NasMsnlkCnt2AMIN": (15259, 2, (5, 0), (), "NasMsnlkCnt2AMIN", None),
		"NasMsnlkCnt2AUTOTIM": (15322, 2, (11, 0), (), "NasMsnlkCnt2AUTOTIM", None),
		"NasMsnlkCnt2BALF": (15452, 2, (3, 0), (), "NasMsnlkCnt2BALF", None),
		"NasMsnlkCnt2BETA": (15251, 2, (5, 0), (), "NasMsnlkCnt2BETA", None),
		"NasMsnlkCnt2CIBL": (15272, 2, (11, 0), (), "NasMsnlkCnt2CIBL", None),
		"NasMsnlkCnt2CREEP": (15244, 2, (11, 0), (), "NasMsnlkCnt2CREEP", None),
		"NasMsnlkCnt2CRICOFF": (15433, 2, (5, 0), (), "NasMsnlkCnt2CRICOFF", None),
		"NasMsnlkCnt2CRINFAC": (15314, 2, (5, 0), (), "NasMsnlkCnt2CRINFAC", None),
		"NasMsnlkCnt2CRLIMR": (15434, 2, (5, 0), (), "NasMsnlkCnt2CRLIMR", None),
		"NasMsnlkCnt2DCON": (15280, 2, (5, 0), (), "NasMsnlkCnt2DCON", None),
		"NasMsnlkCnt2DEFLIM": (15239, 2, (5, 0), (), "NasMsnlkCnt2DEFLIM", None),
		"NasMsnlkCnt2DIPR": (15242, 2, (11, 0), (), "NasMsnlkCnt2DIPR", None),
		"NasMsnlkCnt2DISLIM": (15237, 2, (5, 0), (), "NasMsnlkCnt2DISLIM", None),
		"NasMsnlkCnt2DTI0": (15273, 2, (5, 0), (), "NasMsnlkCnt2DTI0", None),
		"NasMsnlkCnt2DTINIT": (15323, 2, (5, 0), (), "NasMsnlkCnt2DTINIT", None),
		"NasMsnlkCnt2DTMAX": (15325, 2, (5, 0), (), "NasMsnlkCnt2DTMAX", None),
		"NasMsnlkCnt2DTMIN": (15324, 2, (5, 0), (), "NasMsnlkCnt2DTMIN", None),
		"NasMsnlkCnt2EQMFMIN": (15327, 2, (5, 0), (), "NasMsnlkCnt2EQMFMIN", None),
		"NasMsnlkCnt2EQMFMX": (15326, 2, (5, 0), (), "NasMsnlkCnt2EQMFMX", None),
		"NasMsnlkCnt2ERCD": (15248, 2, (11, 0), (), "NasMsnlkCnt2ERCD", None),
		"NasMsnlkCnt2GAMA": (15252, 2, (5, 0), (), "NasMsnlkCnt2GAMA", None),
		"NasMsnlkCnt2HMAX": (15275, 2, (5, 0), (), "NasMsnlkCnt2HMAX", None),
		"NasMsnlkCnt2HMIN": (15274, 2, (5, 0), (), "NasMsnlkCnt2HMIN", None),
		"NasMsnlkCnt2HPRCO": (15256, 2, (5, 0), (), "NasMsnlkCnt2HPRCO", None),
		"NasMsnlkCnt2IA12": (15454, 2, (3, 0), (), "NasMsnlkCnt2IA12", None),
		"NasMsnlkCnt2IA16": (15442, 2, (3, 0), (), "NasMsnlkCnt2IA16", None),
		"NasMsnlkCnt2IA19": (15443, 2, (3, 0), (), "NasMsnlkCnt2IA19", None),
		"NasMsnlkCnt2IA4": (15453, 2, (3, 0), (), "NasMsnlkCnt2IA4", None),
		"NasMsnlkCnt2IAR0": (15339, 2, (11, 0), (), "NasMsnlkCnt2IAR0", None),
		"NasMsnlkCnt2ILNS": (15257, 2, (3, 0), (), "NasMsnlkCnt2ILNS", None),
		"NasMsnlkCnt2IMPG": (15282, 2, (3, 0), (), "NasMsnlkCnt2IMPG", None),
		"NasMsnlkCnt2IMPL": (15250, 2, (3, 0), (), "NasMsnlkCnt2IMPL", None),
		"NasMsnlkCnt2IMPR": (15283, 2, (3, 0), (), "NasMsnlkCnt2IMPR", None),
		"NasMsnlkCnt2IMPV": (15284, 2, (3, 0), (), "NasMsnlkCnt2IMPV", None),
		"NasMsnlkCnt2INERTIA": (15313, 2, (3, 0), (), "NasMsnlkCnt2INERTIA", None),
		"NasMsnlkCnt2IRDY": (15451, 2, (3, 0), (), "NasMsnlkCnt2IRDY", None),
		"NasMsnlkCnt2ISTO": (15450, 2, (3, 0), (), "NasMsnlkCnt2ISTO", None),
		"NasMsnlkCnt2IT1K": (15268, 2, (3, 0), (), "NasMsnlkCnt2IT1K", None),
		"NasMsnlkCnt2IT2K": (15269, 2, (3, 0), (), "NasMsnlkCnt2IT2K", None),
		"NasMsnlkCnt2IT3K": (15270, 2, (3, 0), (), "NasMsnlkCnt2IT3K", None),
		"NasMsnlkCnt2ITEREF": (15315, 2, (3, 0), (), "NasMsnlkCnt2ITEREF", None),
		"NasMsnlkCnt2ITHE": (15431, 2, (3, 0), (), "NasMsnlkCnt2ITHE", None),
		"NasMsnlkCnt2ITMA": (15261, 2, (3, 0), (), "NasMsnlkCnt2ITMA", None),
		"NasMsnlkCnt2KMODTN": (15440, 2, (3, 0), (), "NasMsnlkCnt2KMODTN", None),
		"NasMsnlkCnt2KUPDATE": (15444, 2, (3, 0), (), "NasMsnlkCnt2KUPDATE", None),
		"NasMsnlkCnt2LL2": (15432, 2, (3, 0), (), "NasMsnlkCnt2LL2", None),
		"NasMsnlkCnt2LVAR": (15240, 2, (11, 0), (), "NasMsnlkCnt2LVAR", None),
		"NasMsnlkCnt2MADI": (15247, 2, (5, 0), (), "NasMsnlkCnt2MADI", None),
		"NasMsnlkCnt2MATSYM": (15312, 2, (11, 0), (), "NasMsnlkCnt2MATSYM", None),
		"NasMsnlkCnt2MAXBIS": (15437, 2, (3, 0), (), "NasMsnlkCnt2MAXBIS", None),
		"NasMsnlkCnt2MSGLVLC": (15441, 2, (3, 0), (), "NasMsnlkCnt2MSGLVLC", None),
		"NasMsnlkCnt2NORM": (15243, 2, (11, 0), (), "NasMsnlkCnt2NORM", None),
		"NasMsnlkCnt2OTRE": (15340, 2, (3, 0), (), "NasMsnlkCnt2OTRE", None),
		"NasMsnlkCnt2PLAS": (15271, 2, (3, 0), (), "NasMsnlkCnt2PLAS", None),
		"NasMsnlkCnt2PLASTIC": (15245, 2, (11, 0), (), "NasMsnlkCnt2PLASTIC", None),
		"NasMsnlkCnt2PLLIM": (15435, 2, (5, 0), (), "NasMsnlkCnt2PLLIM", None),
		"NasMsnlkCnt2PLSHUT": (15424, 2, (11, 0), (), "NasMsnlkCnt2PLSHUT", None),
		"NasMsnlkCnt2PRCE": (15266, 2, (5, 0), (), "NasMsnlkCnt2PRCE", None),
		"NasMsnlkCnt2PRCF": (15341, 2, (5, 0), (), "NasMsnlkCnt2PRCF", None),
		"NasMsnlkCnt2PRCO": (15255, 2, (5, 0), (), "NasMsnlkCnt2PRCO", None),
		"NasMsnlkCnt2PRCQ": (15264, 2, (5, 0), (), "NasMsnlkCnt2PRCQ", None),
		"NasMsnlkCnt2PRCR": (15262, 2, (5, 0), (), "NasMsnlkCnt2PRCR", None),
		"NasMsnlkCnt2PRCS": (15281, 2, (5, 0), (), "NasMsnlkCnt2PRCS", None),
		"NasMsnlkCnt2PRDE": (15449, 2, (5, 0), (), "NasMsnlkCnt2PRDE", None),
		"NasMsnlkCnt2PRDR": (15448, 2, (5, 0), (), "NasMsnlkCnt2PRDR", None),
		"NasMsnlkCnt2PRED": (15249, 2, (5, 0), (), "NasMsnlkCnt2PRED", None),
		"NasMsnlkCnt2PRLN": (15258, 2, (5, 0), (), "NasMsnlkCnt2PRLN", None),
		"NasMsnlkCnt2RDOW": (15277, 2, (5, 0), (), "NasMsnlkCnt2RDOW", None),
		"NasMsnlkCnt2REFE": (15267, 2, (5, 0), (), "NasMsnlkCnt2REFE", None),
		"NasMsnlkCnt2REFP": (15263, 2, (5, 0), (), "NasMsnlkCnt2REFP", None),
		"NasMsnlkCnt2REFU": (15265, 2, (5, 0), (), "NasMsnlkCnt2REFU", None),
		"NasMsnlkCnt2RELC": (15279, 2, (5, 0), (), "NasMsnlkCnt2RELC", None),
		"NasMsnlkCnt2RFVAR": (15447, 2, (3, 0), (), "NasMsnlkCnt2RFVAR", None),
		"NasMsnlkCnt2RHOINF": (15436, 2, (5, 0), (), "NasMsnlkCnt2RHOINF", None),
		"NasMsnlkCnt2RJPN": (15318, 2, (3, 0), (), "NasMsnlkCnt2RJPN", None),
		"NasMsnlkCnt2RJPZ": (15317, 2, (11, 0), (), "NasMsnlkCnt2RJPZ", None),
		"NasMsnlkCnt2ROTLIM": (15238, 2, (5, 0), (), "NasMsnlkCnt2ROTLIM", None),
		"NasMsnlkCnt2RSUB": (15278, 2, (3, 0), (), "NasMsnlkCnt2RSUB", None),
		"NasMsnlkCnt2RUP": (15276, 2, (5, 0), (), "NasMsnlkCnt2RUP", None),
		"NasMsnlkCnt2STAB": (15246, 2, (5, 0), (), "NasMsnlkCnt2STAB", None),
		"NasMsnlkCnt2TETA": (15254, 2, (5, 0), (), "NasMsnlkCnt2TETA", None),
		"NasMsnlkCnt2TINTMTH": (15328, 2, (3, 0), (), "NasMsnlkCnt2TINTMTH", None),
		"NasMsnlkCnt2TSDYN": (15316, 2, (11, 0), (), "NasMsnlkCnt2TSDYN", None),
		"NasMsnlkCnt2TSVSC": (15319, 2, (11, 0), (), "NasMsnlkCnt2TSVSC", None),
		"NasMsnlkCnt2TVAR": (15241, 2, (11, 0), (), "NasMsnlkCnt2TVAR", None),
		"NasMsnlkCnt2VSCOSN": (15321, 2, (3, 0), (), "NasMsnlkCnt2VSCOSN", None),
		"NasMsnlkCnt2VSCOTE": (15320, 2, (5, 0), (), "NasMsnlkCnt2VSCOTE", None),
		"NasMsnlkCnt2bSkipNLCNTL2": (15236, 2, (11, 0), (), "NasMsnlkCnt2bSkipNLCNTL2", None),
		"NasMsnlkCnt2on": (15235, 2, (11, 0), (), "NasMsnlkCnt2on", None),
		"NasOmodes": (15085, 2, (8, 0), (), "NasOmodes", None),
		"NasOmodesOn": (15084, 2, (11, 0), (), "NasOmodesOn", None),
		"NasRelEMotion": (15174, 2, (11, 0), (), "NasRelEMotion", None),
		"NasSELoad": (15165, 2, (3, 0), (), "NasSELoad", None),
		"NasStatsubBuckle": (15310, 2, (3, 0), (), "NasStatsubBuckle", None),
		"NasStatsubOn": (15307, 2, (11, 0), (), "NasStatsubOn", None),
		"NasStatsubPreload": (15311, 2, (3, 0), (), "NasStatsubPreload", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"SkipStandard": (15005, 2, (11, 0), (), "SkipStandard", None),
		"StartText": (15006, 2, (3, 0), (), "StartText", None),
		"SubcaseAnalysisType": (15181, 2, (3, 0), (), "SubcaseAnalysisType", None),
		"SubcaseNotSeqDep": (15426, 2, (11, 0), (), "SubcaseNotSeqDep", None),
		"caseID": (15001, 2, (3, 0), (), "caseID", None),
		"vBCSet": (15086, 2, (12, 0), (), "vBCSet", None),
		"vMSCNasCnlConvergenceFlags": (15179, 2, (12, 0), (), "vMSCNasCnlConvergenceFlags", None),
		"vNasCnlConvergenceFlags": (15106, 2, (12, 0), (), "vNasCnlConvergenceFlags", None),
		"vNasCnlConvergenceValue": (15107, 2, (12, 0), (), "vNasCnlConvergenceValue", None),
		"vNasModeFreqRange": (10216, 2, (12, 0), (), "vNasModeFreqRange", None),
		"vNasModeImagFreqRange": (10320, 2, (12, 0), (), "vNasModeImagFreqRange", None),
		"vNasModeXYRequest": (10217, 2, (12, 0), (), "vNasModeXYRequest", None),
		"vNasMsnlCntConv_flags": (15184, 2, (12, 0), (), "vNasMsnlCntConv_flags", None),
		"vNasMsnlCntConv_value": (15185, 2, (12, 0), (), "vNasMsnlCntConv_value", None),
		"vOutput": (15087, 2, (12, 0), (), "vOutput", None),
	}
	_prop_map_put_ = {
		"AbaHistAnalysisType" : ((15031, LCID, 4, 0),()),
		"AbaHistAutoContact" : ((15025, LCID, 4, 0),()),
		"AbaHistEigenvectors" : ((15017, LCID, 4, 0),()),
		"AbaHistInitTimeInc" : ((15014, LCID, 4, 0),()),
		"AbaHistLinearPert" : ((15024, LCID, 4, 0),()),
		"AbaHistMaxFreq" : ((15019, LCID, 4, 0),()),
		"AbaHistMaxTimeInc" : ((15016, LCID, 4, 0),()),
		"AbaHistMinFreq" : ((15018, LCID, 4, 0),()),
		"AbaHistMinTimeInc" : ((15015, LCID, 4, 0),()),
		"AbaHistNonlinGeom" : ((15023, LCID, 4, 0),()),
		"AbaHistOn" : ((15012, LCID, 4, 0),()),
		"AbaHistOutInterval" : ((15022, LCID, 4, 0),()),
		"AbaHistOutZeroInc" : ((15027, LCID, 4, 0),()),
		"AbaHistScaleFactor" : ((15021, LCID, 4, 0),()),
		"AbaHistShiftFreq" : ((15020, LCID, 4, 0),()),
		"AbaHistStabilize" : ((15026, LCID, 4, 0),()),
		"AbaHistStepAmp" : ((15028, LCID, 4, 0),()),
		"AbaHistStepConstr" : ((15030, LCID, 4, 0),()),
		"AbaHistStepLoad" : ((15029, LCID, 4, 0),()),
		"AbaHistTimePeriod" : ((15013, LCID, 4, 0),()),
		"Active" : ((17002, LCID, 4, 0),()),
		"AnsArclen" : ((16244, LCID, 4, 0),()),
		"AnsAutots" : ((16109, LCID, 4, 0),()),
		"AnsBisect" : ((16125, LCID, 4, 0),()),
		"AnsBisectfactor" : ((16126, LCID, 4, 0),()),
		"AnsBuckleLdmulte" : ((16199, LCID, 4, 0),()),
		"AnsBuckleMethod" : ((16196, LCID, 4, 0),()),
		"AnsBuckleNmode" : ((16197, LCID, 4, 0),()),
		"AnsBuckleOptOn" : ((16195, LCID, 4, 0),()),
		"AnsBuckleRangekey" : ((16200, LCID, 4, 0),()),
		"AnsBuckleShift" : ((16198, LCID, 4, 0),()),
		"AnsBuckleStrmck" : ((16201, LCID, 4, 0),()),
		"AnsCnvtolDvol" : ((16239, LCID, 4, 0),()),
		"AnsCnvtolF" : ((16235, LCID, 4, 0),()),
		"AnsCnvtolHdsp" : ((16241, LCID, 4, 0),()),
		"AnsCnvtolM" : ((16237, LCID, 4, 0),()),
		"AnsCnvtolRot" : ((16233, LCID, 4, 0),()),
		"AnsCnvtolU" : ((16231, LCID, 4, 0),()),
		"AnsCrplimit" : ((16119, LCID, 4, 0),()),
		"AnsCrplimitvalue" : ((16120, LCID, 4, 0),()),
		"AnsDOFAutomatic" : ((15034, LCID, 4, 0),()),
		"AnsDOFDoSet" : ((15033, LCID, 4, 0),()),
		"AnsDOFNoRotation" : ((15035, LCID, 4, 0),()),
		"AnsDOFNumber" : ((15037, LCID, 4, 0),()),
		"AnsDOFOn" : ((15032, LCID, 4, 0),()),
		"AnsDOFSetID" : ((15036, LCID, 4, 0),()),
		"AnsDpplimit" : ((16121, LCID, 4, 0),()),
		"AnsDpplimitvalue" : ((16122, LCID, 4, 0),()),
		"AnsDsplimit" : ((16123, LCID, 4, 0),()),
		"AnsDsplimitvalue" : ((16124, LCID, 4, 0),()),
		"AnsDtime" : ((16114, LCID, 4, 0),()),
		"AnsDtmax" : ((16116, LCID, 4, 0),()),
		"AnsDtmin" : ((16115, LCID, 4, 0),()),
		"AnsDvoltoler" : ((16240, LCID, 4, 0),()),
		"AnsEqslv" : ((16103, LCID, 4, 0),()),
		"AnsFtoler" : ((16236, LCID, 4, 0),()),
		"AnsHarmonicClust" : ((16210, LCID, 4, 0),()),
		"AnsHarmonicFreqb" : ((16206, LCID, 4, 0),()),
		"AnsHarmonicFreqe" : ((16207, LCID, 4, 0),()),
		"AnsHarmonicLogopt" : ((16208, LCID, 4, 0),()),
		"AnsHarmonicMaxmode" : ((16205, LCID, 4, 0),()),
		"AnsHarmonicMethod" : ((16203, LCID, 4, 0),()),
		"AnsHarmonicMinmode" : ((16204, LCID, 4, 0),()),
		"AnsHarmonicOptOn" : ((16202, LCID, 4, 0),()),
		"AnsHarmonicReimky" : ((16209, LCID, 4, 0),()),
		"AnsHdsptoler" : ((16242, LCID, 4, 0),()),
		"AnsHeatEndTime" : ((15045, LCID, 4, 0),()),
		"AnsHeatOn" : ((15044, LCID, 4, 0),()),
		"AnsHeatOutputFreq" : ((15047, LCID, 4, 0),()),
		"AnsHeatTimeStep" : ((15046, LCID, 4, 0),()),
		"AnsKbc" : ((16101, LCID, 4, 0),()),
		"AnsLdstepOn" : ((16100, LCID, 4, 0),()),
		"AnsLnsrch" : ((16245, LCID, 4, 0),()),
		"AnsMidtol" : ((16128, LCID, 4, 0),()),
		"AnsModalBlocksize" : ((16190, LCID, 4, 0),()),
		"AnsModalCompute" : ((16192, LCID, 4, 0),()),
		"AnsModalFreqb" : ((16185, LCID, 4, 0),()),
		"AnsModalFreqe" : ((16186, LCID, 4, 0),()),
		"AnsModalMethod" : ((16183, LCID, 4, 0),()),
		"AnsModalNmode" : ((16184, LCID, 4, 0),()),
		"AnsModalNrmkey" : ((16187, LCID, 4, 0),()),
		"AnsModalOptOn" : ((16182, LCID, 4, 0),()),
		"AnsModalRangefact" : ((16189, LCID, 4, 0),()),
		"AnsModalReusekey" : ((16193, LCID, 4, 0),()),
		"AnsModalRobustlev" : ((16191, LCID, 4, 0),()),
		"AnsModalStrmck" : ((16188, LCID, 4, 0),()),
		"AnsModalSymmeth" : ((16194, LCID, 4, 0),()),
		"AnsModesElemResults" : ((15043, LCID, 4, 0),()),
		"AnsModesMaxFreq" : ((15041, LCID, 4, 0),()),
		"AnsModesMinFreq" : ((15040, LCID, 4, 0),()),
		"AnsModesModalMethod" : ((15042, LCID, 4, 0),()),
		"AnsModesNumModes" : ((15039, LCID, 4, 0),()),
		"AnsModesOn" : ((15038, LCID, 4, 0),()),
		"AnsMtoler" : ((16238, LCID, 4, 0),()),
		"AnsNeqit" : ((16230, LCID, 4, 0),()),
		"AnsNewConstraint" : ((16104, LCID, 4, 0),()),
		"AnsNewContact" : ((16106, LCID, 4, 0),()),
		"AnsNewLoad" : ((16105, LCID, 4, 0),()),
		"AnsNlOptOn" : ((16228, LCID, 4, 0),()),
		"AnsNlgeom" : ((16243, LCID, 4, 0),()),
		"AnsNropt" : ((16229, LCID, 4, 0),()),
		"AnsNsbmn" : ((16113, LCID, 4, 0),()),
		"AnsNsbmx" : ((16112, LCID, 4, 0),()),
		"AnsNsbstep" : ((16111, LCID, 4, 0),()),
		"AnsNsubs" : ((16110, LCID, 4, 0),()),
		"AnsOutprAcc" : ((16167, LCID, 4, 0),()),
		"AnsOutprAccFreq" : ((16169, LCID, 4, 0),()),
		"AnsOutprAccNth" : ((16171, LCID, 4, 0),()),
		"AnsOutprAll" : ((16133, LCID, 4, 0),()),
		"AnsOutprAllFreq" : ((16135, LCID, 4, 0),()),
		"AnsOutprAllNth" : ((16137, LCID, 4, 0),()),
		"AnsOutprBasic" : ((16139, LCID, 4, 0),()),
		"AnsOutprBasicFreq" : ((16141, LCID, 4, 0),()),
		"AnsOutprBasicNth" : ((16143, LCID, 4, 0),()),
		"AnsOutprEsol" : ((16175, LCID, 4, 0),()),
		"AnsOutprEsolFreq" : ((16177, LCID, 4, 0),()),
		"AnsOutprEsolNth" : ((16179, LCID, 4, 0),()),
		"AnsOutprNsol" : ((16151, LCID, 4, 0),()),
		"AnsOutprNsolFreq" : ((16153, LCID, 4, 0),()),
		"AnsOutprNsolNth" : ((16155, LCID, 4, 0),()),
		"AnsOutprRsol" : ((16145, LCID, 4, 0),()),
		"AnsOutprRsolFreq" : ((16147, LCID, 4, 0),()),
		"AnsOutprRsolNth" : ((16149, LCID, 4, 0),()),
		"AnsOutprVel" : ((16159, LCID, 4, 0),()),
		"AnsOutprVelFreq" : ((16161, LCID, 4, 0),()),
		"AnsOutprVelNth" : ((16163, LCID, 4, 0),()),
		"AnsOutputOn" : ((16131, LCID, 4, 0),()),
		"AnsOutresAcc" : ((16166, LCID, 4, 0),()),
		"AnsOutresAccFreq" : ((16168, LCID, 4, 0),()),
		"AnsOutresAccNth" : ((16170, LCID, 4, 0),()),
		"AnsOutresAll" : ((16132, LCID, 4, 0),()),
		"AnsOutresAllFreq" : ((16134, LCID, 4, 0),()),
		"AnsOutresAllNth" : ((16136, LCID, 4, 0),()),
		"AnsOutresBasic" : ((16138, LCID, 4, 0),()),
		"AnsOutresBasicFreq" : ((16140, LCID, 4, 0),()),
		"AnsOutresBasicNth" : ((16142, LCID, 4, 0),()),
		"AnsOutresEsol" : ((16174, LCID, 4, 0),()),
		"AnsOutresEsolFreq" : ((16176, LCID, 4, 0),()),
		"AnsOutresEsolNth" : ((16178, LCID, 4, 0),()),
		"AnsOutresNsol" : ((16150, LCID, 4, 0),()),
		"AnsOutresNsolFreq" : ((16152, LCID, 4, 0),()),
		"AnsOutresNsolNth" : ((16154, LCID, 4, 0),()),
		"AnsOutresRsol" : ((16144, LCID, 4, 0),()),
		"AnsOutresRsolFreq" : ((16146, LCID, 4, 0),()),
		"AnsOutresRsolNth" : ((16148, LCID, 4, 0),()),
		"AnsOutresVel" : ((16158, LCID, 4, 0),()),
		"AnsOutresVelFreq" : ((16160, LCID, 4, 0),()),
		"AnsOutresVelNth" : ((16162, LCID, 4, 0),()),
		"AnsPlslimit" : ((16117, LCID, 4, 0),()),
		"AnsPlslimitvalue" : ((16118, LCID, 4, 0),()),
		"AnsPred" : ((16246, LCID, 4, 0),()),
		"AnsPredictor" : ((16127, LCID, 4, 0),()),
		"AnsPstres" : ((16102, LCID, 4, 0),()),
		"AnsResfq" : ((16130, LCID, 4, 0),()),
		"AnsRottoler" : ((16234, LCID, 4, 0),()),
		"AnsTime" : ((16108, LCID, 4, 0),()),
		"AnsTimestepOn" : ((16107, LCID, 4, 0),()),
		"AnsTolerb" : ((16129, LCID, 4, 0),()),
		"AnsTransAlpha" : ((16224, LCID, 4, 0),()),
		"AnsTransAlphad" : ((16218, LCID, 4, 0),()),
		"AnsTransAlphaf" : ((16226, LCID, 4, 0),()),
		"AnsTransAlpham" : ((16227, LCID, 4, 0),()),
		"AnsTransBetad" : ((16219, LCID, 4, 0),()),
		"AnsTransDelta" : ((16225, LCID, 4, 0),()),
		"AnsTransDmprat" : ((16221, LCID, 4, 0),()),
		"AnsTransDmpsfreq" : ((16216, LCID, 4, 0),()),
		"AnsTransDmpstr" : ((16220, LCID, 4, 0),()),
		"AnsTransGamma" : ((16222, LCID, 4, 0),()),
		"AnsTransGammavalue" : ((16223, LCID, 4, 0),()),
		"AnsTransLumpm" : ((16217, LCID, 4, 0),()),
		"AnsTransMaxmode" : ((16214, LCID, 4, 0),()),
		"AnsTransMethod" : ((16212, LCID, 4, 0),()),
		"AnsTransMinmode" : ((16213, LCID, 4, 0),()),
		"AnsTransOptOn" : ((16211, LCID, 4, 0),()),
		"AnsTransTintopt" : ((16215, LCID, 4, 0),()),
		"AnsUtoler" : ((16232, LCID, 4, 0),()),
		"CaseLabel" : ((15176, LCID, 4, 0),()),
		"CaseTitle" : ((15000, LCID, 4, 0),()),
		"CaseType" : ((15088, LCID, 4, 0),()),
		"ContactOption" : ((15177, LCID, 4, 0),()),
		"ContactSetType" : ((15178, LCID, 4, 0),()),
		"CornerOutput" : ((15010, LCID, 4, 0),()),
		"Destination" : ((15008, LCID, 4, 0),()),
		"DynHistBodyLoadGrp" : ((15090, LCID, 4, 0),()),
		"DynHistGroupHistId" : ((15100, LCID, 4, 0),()),
		"DynHistImplicit" : ((15093, LCID, 4, 0),()),
		"DynHistMassDampOn" : ((15091, LCID, 4, 0),()),
		"DynHistMsssDamp" : ((15092, LCID, 4, 0),()),
		"DynHistOn" : ((15089, LCID, 4, 0),()),
		"DynHistPlateIntgPts" : ((15099, LCID, 4, 0),()),
		"DynHistPrintHistOutput" : ((15098, LCID, 4, 0),()),
		"DynHistSpringback" : ((15094, LCID, 4, 0),()),
		"DynHistStrainOutput" : ((15095, LCID, 4, 0),()),
		"DynHistTimeHistOuput" : ((15097, LCID, 4, 0),()),
		"DynHistTotalTime" : ((15096, LCID, 4, 0),()),
		"Echo" : ((15004, LCID, 4, 0),()),
		"EndText" : ((15007, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Imaginary" : ((15009, LCID, 4, 0),()),
		"IntegrationOutput" : ((15011, LCID, 4, 0),()),
		"MarCtblOn" : ((15082, LCID, 4, 0),()),
		"MarCtblWrite" : ((15083, LCID, 4, 0),()),
		"MarHistAnalCaseSol" : ((15064, LCID, 4, 0),()),
		"MarHistAutoSwitch" : ((15063, LCID, 4, 0),()),
		"MarHistBuckleNumModes" : ((15065, LCID, 4, 0),()),
		"MarHistBucklePosEigen" : ((15066, LCID, 4, 0),()),
		"MarHistChecking" : ((15062, LCID, 4, 0),()),
		"MarHistContactProp" : ((15049, LCID, 4, 0),()),
		"MarHistConvergeMeth" : ((15056, LCID, 4, 0),()),
		"MarHistCtrlMaxRecycle" : ((15053, LCID, 4, 0),()),
		"MarHistCtrlMaxStep" : ((15052, LCID, 4, 0),()),
		"MarHistCtrlMethod" : ((15050, LCID, 4, 0),()),
		"MarHistCtrlMinRecycle" : ((15054, LCID, 4, 0),()),
		"MarHistMaxResidual" : ((15055, LCID, 4, 0),()),
		"MarHistModalEigen" : ((15061, LCID, 4, 0),()),
		"MarHistModalMaxFreq" : ((15060, LCID, 4, 0),()),
		"MarHistModalMinFreq" : ((15059, LCID, 4, 0),()),
		"MarHistNonPosDefinite" : ((15057, LCID, 4, 0),()),
		"MarHistNonSymmetric" : ((15058, LCID, 4, 0),()),
		"MarHistOn" : ((15048, LCID, 4, 0),()),
		"MarHistSolverMeth" : ((15051, LCID, 4, 0),()),
		"MarIncArcLenMeth" : ((15068, LCID, 4, 0),()),
		"MarIncCtrlMaxRecycle" : ((15079, LCID, 4, 0),()),
		"MarIncFracFirst" : ((15077, LCID, 4, 0),()),
		"MarIncInitTimeInc" : ((15070, LCID, 4, 0),()),
		"MarIncMaxFracForAll" : ((15080, LCID, 4, 0),()),
		"MarIncMaxNumInc" : ((15078, LCID, 4, 0),()),
		"MarIncMaxStep" : ((15074, LCID, 4, 0),()),
		"MarIncMaxTimeInc" : ((15072, LCID, 4, 0),()),
		"MarIncMinTimeInc" : ((15071, LCID, 4, 0),()),
		"MarIncNumOutInc" : ((15075, LCID, 4, 0),()),
		"MarIncOn" : ((15067, LCID, 4, 0),()),
		"MarIncQuasiStatDamp" : ((15076, LCID, 4, 0),()),
		"MarIncScaleFact" : ((15073, LCID, 4, 0),()),
		"MarIncTimePeriod" : ((15069, LCID, 4, 0),()),
		"MarIncTotalTime" : ((15081, LCID, 4, 0),()),
		"NasCaeDynPressure" : ((15152, LCID, 4, 0),()),
		"NasCaeMachNumber" : ((15151, LCID, 4, 0),()),
		"NasCaeOn" : ((15150, LCID, 4, 0),()),
		"NasCaeRigidTrim" : ((15154, LCID, 4, 0),()),
		"NasCaeWrtieTrim" : ((15155, LCID, 4, 0),()),
		"NasCaseAlternateTextLocation" : ((15342, LCID, 4, 0),()),
		"NasCaseFHAC" : ((15524, LCID, 4, 0),()),
		"NasCaseFHACOn" : ((15523, LCID, 4, 0),()),
		"NasCaseFHAR" : ((15522, LCID, 4, 0),()),
		"NasCaseFHAROn" : ((15521, LCID, 4, 0),()),
		"NasCaseModeSel" : ((15527, LCID, 4, 0),()),
		"NasCaseModeSelInc" : ((15526, LCID, 4, 0),()),
		"NasCaseModeSelOn" : ((15525, LCID, 4, 0),()),
		"NasCaseMonitorAeroEnabled" : ((15354, LCID, 4, 0),()),
		"NasCaseMonitorElemEnabled" : ((15425, LCID, 4, 0),()),
		"NasCaseMonitorEnabled" : ((15353, LCID, 4, 0),()),
		"NasCaseMonitorLoadEnabled" : ((15355, LCID, 4, 0),()),
		"NasCflDenID" : ((15158, LCID, 4, 0),()),
		"NasCflEig" : ((15162, LCID, 4, 0),()),
		"NasCflEps" : ((15163, LCID, 4, 0),()),
		"NasCflFliMethod" : ((15161, LCID, 4, 0),()),
		"NasCflMachFactID" : ((15159, LCID, 4, 0),()),
		"NasCflMethod" : ((15157, LCID, 4, 0),()),
		"NasCflOn" : ((15156, LCID, 4, 0),()),
		"NasCflRfreqFactID" : ((15160, LCID, 4, 0),()),
		"NasCflSdampID" : ((15171, LCID, 4, 0),()),
		"NasCflWriteFlutter" : ((15164, LCID, 4, 0),()),
		"NasCnlArcConstraintType" : ((15117, LCID, 4, 0),()),
		"NasCnlArcDesiredIter" : ((15121, LCID, 4, 0),()),
		"NasCnlArcLoadScale" : ((15120, LCID, 4, 0),()),
		"NasCnlArcMaxAdjust" : ((15119, LCID, 4, 0),()),
		"NasCnlArcMaxSteps" : ((15122, LCID, 4, 0),()),
		"NasCnlArcMinAdjust" : ((15118, LCID, 4, 0),()),
		"NasCnlBoundsRb" : ((15125, LCID, 4, 0),()),
		"NasCnlCreep" : ((15135, LCID, 4, 0),()),
		"NasCnlCtiffnessMethod" : ((15108, LCID, 4, 0),()),
		"NasCnlDivergenceLimit" : ((15127, LCID, 4, 0),()),
		"NasCnlDominantPeriodSteps" : ((15124, LCID, 4, 0),()),
		"NasCnlFstress" : ((15133, LCID, 4, 0),()),
		"NasCnlIncrements" : ((15103, LCID, 4, 0),()),
		"NasCnlIntermediateOutput" : ((15110, LCID, 4, 0),()),
		"NasCnlKstep" : ((15109, LCID, 4, 0),()),
		"NasCnlLineSearchTolerance" : ((15130, LCID, 4, 0),()),
		"NasCnlMaxAdjust" : ((15134, LCID, 4, 0),()),
		"NasCnlMaxBisections" : ((15131, LCID, 4, 0),()),
		"NasCnlMaxIter" : ((15105, LCID, 4, 0),()),
		"NasCnlMaxLineSearch" : ((15129, LCID, 4, 0),()),
		"NasCnlMaxRotation" : ((15132, LCID, 4, 0),()),
		"NasCnlModnewtonBisection" : ((15116, LCID, 4, 0),()),
		"NasCnlModnewtonLineSearch" : ((15114, LCID, 4, 0),()),
		"NasCnlModnewtonQuasiNewton" : ((15115, LCID, 4, 0),()),
		"NasCnlOn" : ((15101, LCID, 4, 0),()),
		"NasCnlOutputInterval" : ((15111, LCID, 4, 0),()),
		"NasCnlQuasiNewtonVectors" : ((15128, LCID, 4, 0),()),
		"NasCnlSkipNLPARM" : ((15136, LCID, 4, 0),()),
		"NasCnlSolutionOverrides" : ((15113, LCID, 4, 0),()),
		"NasCnlSolutionStrategy" : ((15112, LCID, 4, 0),()),
		"NasCnlStabilityTolerance" : ((15126, LCID, 4, 0),()),
		"NasCnlStiffnessMethod" : ((15175, LCID, 4, 0),()),
		"NasCnlTimeSkipAdjust" : ((15123, LCID, 4, 0),()),
		"NasCnlTime_Increment" : ((15104, LCID, 4, 0),()),
		"NasCnlUseLoadSet" : ((15102, LCID, 4, 0),()),
		"NasCnlkDAMP" : ((15172, LCID, 4, 0),()),
		"NasCnlkUPDATE" : ((15173, LCID, 4, 0),()),
		"NasCurvatureStrain" : ((15180, LCID, 4, 0),()),
		"NasDMIGB2GG" : ((15346, LCID, 4, 0),()),
		"NasDMIGB2PP" : ((15351, LCID, 4, 0),()),
		"NasDMIGK2GG" : ((15344, LCID, 4, 0),()),
		"NasDMIGK2PP" : ((15349, LCID, 4, 0),()),
		"NasDMIGK42GG" : ((15347, LCID, 4, 0),()),
		"NasDMIGM2GG" : ((15345, LCID, 4, 0),()),
		"NasDMIGM2PP" : ((15350, LCID, 4, 0),()),
		"NasDMIGP2G" : ((15348, LCID, 4, 0),()),
		"NasEnableDMIG" : ((15343, LCID, 4, 0),()),
		"NasInlStepOptADJUST" : ((15394, LCID, 4, 0),()),
		"NasInlStepOptCREEP" : ((15366, LCID, 4, 0),()),
		"NasInlStepOptCTRLDEF" : ((15362, LCID, 4, 0),()),
		"NasInlStepOptConvA" : ((15411, LCID, 4, 0),()),
		"NasInlStepOptConvN" : ((15410, LCID, 4, 0),()),
		"NasInlStepOptConvP" : ((15407, LCID, 4, 0),()),
		"NasInlStepOptConvU" : ((15406, LCID, 4, 0),()),
		"NasInlStepOptConvV" : ((15409, LCID, 4, 0),()),
		"NasInlStepOptConvW" : ((15408, LCID, 4, 0),()),
		"NasInlStepOptDAMP" : ((15378, LCID, 4, 0),()),
		"NasInlStepOptDTINITF" : ((15370, LCID, 4, 0),()),
		"NasInlStepOptDTINITFA" : ((15399, LCID, 4, 0),()),
		"NasInlStepOptDTMAXF" : ((15372, LCID, 4, 0),()),
		"NasInlStepOptDTMINF" : ((15371, LCID, 4, 0),()),
		"NasInlStepOptEPSP" : ((15413, LCID, 4, 0),()),
		"NasInlStepOptEPSU" : ((15412, LCID, 4, 0),()),
		"NasInlStepOptEPSW" : ((15414, LCID, 4, 0),()),
		"NasInlStepOptEnableCriteria" : ((15379, LCID, 4, 0),()),
		"NasInlStepOptFSTRESS" : ((15421, LCID, 4, 0),()),
		"NasInlStepOptGroupIDs" : ((15385, LCID, 4, 0),()),
		"NasInlStepOptID" : ((15360, LCID, 4, 0),()),
		"NasInlStepOptIDAMP" : ((15377, LCID, 4, 0),()),
		"NasInlStepOptINTOUT" : ((15375, LCID, 4, 0),()),
		"NasInlStepOptIPHYS" : ((15380, LCID, 4, 0),()),
		"NasInlStepOptIncrements" : ((15384, LCID, 4, 0),()),
		"NasInlStepOptKMETHOD" : ((15415, LCID, 4, 0),()),
		"NasInlStepOptKSTEP" : ((15416, LCID, 4, 0),()),
		"NasInlStepOptLIMTAR" : ((15381, LCID, 4, 0),()),
		"NasInlStepOptLSTOL" : ((15420, LCID, 4, 0),()),
		"NasInlStepOptLoadStepping" : ((15367, LCID, 4, 0),()),
		"NasInlStepOptMAXALR" : ((15401, LCID, 4, 0),()),
		"NasInlStepOptMAXBIS" : ((15365, LCID, 4, 0),()),
		"NasInlStepOptMAXITER" : ((15363, LCID, 4, 0),()),
		"NasInlStepOptMAXLS" : ((15419, LCID, 4, 0),()),
		"NasInlStepOptMAXQN" : ((15418, LCID, 4, 0),()),
		"NasInlStepOptMECH" : ((15405, LCID, 4, 0),()),
		"NasInlStepOptMINALR" : ((15400, LCID, 4, 0),()),
		"NasInlStepOptMINITER" : ((15364, LCID, 4, 0),()),
		"NasInlStepOptMRCONV" : ((15417, LCID, 4, 0),()),
		"NasInlStepOptMSTEP" : ((15395, LCID, 4, 0),()),
		"NasInlStepOptMT1_i" : ((15390, LCID, 4, 0),()),
		"NasInlStepOptMT2_i" : ((15391, LCID, 4, 0),()),
		"NasInlStepOptMT3_i" : ((15392, LCID, 4, 0),()),
		"NasInlStepOptMT4_i" : ((15393, LCID, 4, 0),()),
		"NasInlStepOptNDESIR" : ((15373, LCID, 4, 0),()),
		"NasInlStepOptNDESIRA" : ((15403, LCID, 4, 0),()),
		"NasInlStepOptNINC" : ((15368, LCID, 4, 0),()),
		"NasInlStepOptNO" : ((15369, LCID, 4, 0),()),
		"NasInlStepOptNSMAX" : ((15376, LCID, 4, 0),()),
		"NasInlStepOptNSMAXA" : ((15404, LCID, 4, 0),()),
		"NasInlStepOptOn" : ((15358, LCID, 4, 0),()),
		"NasInlStepOptRB" : ((15396, LCID, 4, 0),()),
		"NasInlStepOptRBIG" : ((15383, LCID, 4, 0),()),
		"NasInlStepOptRSMALL" : ((15382, LCID, 4, 0),()),
		"NasInlStepOptSCALEA" : ((15402, LCID, 4, 0),()),
		"NasInlStepOptSFACT" : ((15374, LCID, 4, 0),()),
		"NasInlStepOptSkipNLSTEP" : ((15359, LCID, 4, 0),()),
		"NasInlStepOptTOTTIM" : ((15361, LCID, 4, 0),()),
		"NasInlStepOptTYPE" : ((15398, LCID, 4, 0),()),
		"NasInlStepOptUTOL" : ((15397, LCID, 4, 0),()),
		"NasInlStepOptYT1_i" : ((15386, LCID, 4, 0),()),
		"NasInlStepOptYT2_i" : ((15387, LCID, 4, 0),()),
		"NasInlStepOptYT3_i" : ((15388, LCID, 4, 0),()),
		"NasInlStepOptYT4_i" : ((15389, LCID, 4, 0),()),
		"NasModeDampOverall" : ((10404, LCID, 4, 0),()),
		"NasModeDesiredRoots" : ((10056, LCID, 4, 0),()),
		"NasModeEigrSet" : ((10051, LCID, 4, 0),()),
		"NasModeEstRoots" : ((10055, LCID, 4, 0),()),
		"NasModeMassForm" : ((10060, LCID, 4, 0),()),
		"NasModeMethod" : ((10052, LCID, 4, 0),()),
		"NasModeNormDOF" : ((10059, LCID, 4, 0),()),
		"NasModeNormNode" : ((10058, LCID, 4, 0),()),
		"NasModeNormOpt" : ((10057, LCID, 4, 0),()),
		"NasModeOn" : ((10050, LCID, 4, 0),()),
		"NasModeSolutionType" : ((10053, LCID, 4, 0),()),
		"NasModeXYOn" : ((10061, LCID, 4, 0),()),
		"NasModeXYRefNode" : ((10063, LCID, 4, 0),()),
		"NasModesComplexConverge" : ((10321, LCID, 4, 0),()),
		"NasModesComplexRegionWidth" : ((10322, LCID, 4, 0),()),
		"NasModesSkipEigr" : ((10319, LCID, 4, 0),()),
		"NasMsnlArcLenConstr" : ((15292, LCID, 4, 0),()),
		"NasMsnlArcLenDIter" : ((15297, LCID, 4, 0),()),
		"NasMsnlArcLenInitLdfac" : ((15299, LCID, 4, 0),()),
		"NasMsnlArcLenMaxAlr" : ((15294, LCID, 4, 0),()),
		"NasMsnlArcLenMaxR" : ((15295, LCID, 4, 0),()),
		"NasMsnlArcLenMinAlr" : ((15293, LCID, 4, 0),()),
		"NasMsnlArcLenMxInc" : ((15298, LCID, 4, 0),()),
		"NasMsnlArcLenMxLdfac" : ((15300, LCID, 4, 0),()),
		"NasMsnlArcLenOn" : ((15291, LCID, 4, 0),()),
		"NasMsnlArcLenScale" : ((15296, LCID, 4, 0),()),
		"NasMsnlArcLenSkipFac" : ((15301, LCID, 4, 0),()),
		"NasMsnlCntALFA" : ((15305, LCID, 4, 0),()),
		"NasMsnlCntAutotim" : ((15223, LCID, 4, 0),()),
		"NasMsnlCntBETA" : ((15303, LCID, 4, 0),()),
		"NasMsnlCntCRLIMR" : ((15428, LCID, 4, 0),()),
		"NasMsnlCntCntmdiv" : ((15206, LCID, 4, 0),()),
		"NasMsnlCntCrcerat" : ((15212, LCID, 4, 0),()),
		"NasMsnlCntCrcinc" : ((15213, LCID, 4, 0),()),
		"NasMsnlCntCreep" : ((15214, LCID, 4, 0),()),
		"NasMsnlCntCricoff" : ((15215, LCID, 4, 0),()),
		"NasMsnlCntCrinfac" : ((15216, LCID, 4, 0),()),
		"NasMsnlCntCrmfmn" : ((15217, LCID, 4, 0),()),
		"NasMsnlCntCrmfmx" : ((15218, LCID, 4, 0),()),
		"NasMsnlCntCrteabs" : ((15219, LCID, 4, 0),()),
		"NasMsnlCntCrterel" : ((15221, LCID, 4, 0),()),
		"NasMsnlCntDtinit" : ((15224, LCID, 4, 0),()),
		"NasMsnlCntDtmax" : ((15225, LCID, 4, 0),()),
		"NasMsnlCntDtmin" : ((15226, LCID, 4, 0),()),
		"NasMsnlCntDtsbcdt" : ((15227, LCID, 4, 0),()),
		"NasMsnlCntEpsbolt" : ((15190, LCID, 4, 0),()),
		"NasMsnlCntEqmfmin" : ((15228, LCID, 4, 0),()),
		"NasMsnlCntEqmfmx" : ((15229, LCID, 4, 0),()),
		"NasMsnlCntFollowk" : ((15200, LCID, 4, 0),()),
		"NasMsnlCntFsymtol" : ((15207, LCID, 4, 0),()),
		"NasMsnlCntGAMA" : ((15304, LCID, 4, 0),()),
		"NasMsnlCntINACCN" : ((15329, LCID, 4, 0),()),
		"NasMsnlCntINERTIA" : ((15330, LCID, 4, 0),()),
		"NasMsnlCntItrbolt" : ((15192, LCID, 4, 0),()),
		"NasMsnlCntKMODSCL" : ((15445, LCID, 4, 0),()),
		"NasMsnlCntKMODTN" : ((15427, LCID, 4, 0),()),
		"NasMsnlCntKsym" : ((15208, LCID, 4, 0),()),
		"NasMsnlCntKsymtol" : ((15209, LCID, 4, 0),()),
		"NasMsnlCntKupdate" : ((15201, LCID, 4, 0),()),
		"NasMsnlCntLOADOFF" : ((15331, LCID, 4, 0),()),
		"NasMsnlCntLSTCONV" : ((15446, LCID, 4, 0),()),
		"NasMsnlCntLvar" : ((15195, LCID, 4, 0),()),
		"NasMsnlCntMSFAC" : ((15333, LCID, 4, 0),()),
		"NasMsnlCntMSTAB" : ((15332, LCID, 4, 0),()),
		"NasMsnlCntMaxbis" : ((15186, LCID, 4, 0),()),
		"NasMsnlCntMaxdiv" : ((15187, LCID, 4, 0),()),
		"NasMsnlCntMaxiter" : ((15188, LCID, 4, 0),()),
		"NasMsnlCntMaxqn" : ((15189, LCID, 4, 0),()),
		"NasMsnlCntMisfblt" : ((15193, LCID, 4, 0),()),
		"NasMsnlCntMsglvl" : ((15196, LCID, 4, 0),()),
		"NasMsnlCntMsglvlb" : ((15194, LCID, 4, 0),()),
		"NasMsnlCntMsglvlc" : ((15210, LCID, 4, 0),()),
		"NasMsnlCntNORMP" : ((15334, LCID, 4, 0),()),
		"NasMsnlCntNORMU" : ((15335, LCID, 4, 0),()),
		"NasMsnlCntOn" : ((15182, LCID, 4, 0),()),
		"NasMsnlCntPLLIM" : ((15429, LCID, 4, 0),()),
		"NasMsnlCntPLLIMF" : ((15430, LCID, 4, 0),()),
		"NasMsnlCntPLSHUT" : ((15423, LCID, 4, 0),()),
		"NasMsnlCntPlastic" : ((15222, LCID, 4, 0),()),
		"NasMsnlCntQuasiNewtonIter" : ((15356, LCID, 4, 0),()),
		"NasMsnlCntREFP" : ((15336, LCID, 4, 0),()),
		"NasMsnlCntREFU" : ((15337, LCID, 4, 0),()),
		"NasMsnlCntRFVAR" : ((15357, LCID, 4, 0),()),
		"NasMsnlCntRHOINF" : ((15338, LCID, 4, 0),()),
		"NasMsnlCntSkipNLCNTL" : ((15183, LCID, 4, 0),()),
		"NasMsnlCntSolver" : ((15197, LCID, 4, 0),()),
		"NasMsnlCntSpink" : ((15202, LCID, 4, 0),()),
		"NasMsnlCntStfoptn" : ((15203, LCID, 4, 0),()),
		"NasMsnlCntStressk" : ((15204, LCID, 4, 0),()),
		"NasMsnlCntTETA" : ((15306, LCID, 4, 0),()),
		"NasMsnlCntTINTMTH" : ((15302, LCID, 4, 0),()),
		"NasMsnlCntThrmst" : ((15198, LCID, 4, 0),()),
		"NasMsnlCntTsccr" : ((15230, LCID, 4, 0),()),
		"NasMsnlCntTsceq" : ((15231, LCID, 4, 0),()),
		"NasMsnlCntTscumat" : ((15232, LCID, 4, 0),()),
		"NasMsnlCntTstepk" : ((15205, LCID, 4, 0),()),
		"NasMsnlCntTvar" : ((15199, LCID, 4, 0),()),
		"NasMsnlCntUmfmin" : ((15233, LCID, 4, 0),()),
		"NasMsnlCntUmfmx" : ((15234, LCID, 4, 0),()),
		"NasMsnlCntUsolver" : ((15211, LCID, 4, 0),()),
		"NasMsnlCntZerbolt" : ((15191, LCID, 4, 0),()),
		"NasMsnlCntdCrteco" : ((15220, LCID, 4, 0),()),
		"NasMsnlModalMassForm" : ((15352, LCID, 4, 0),()),
		"NasMsnlTSEndTime" : ((15288, LCID, 4, 0),()),
		"NasMsnlTSNumIncrements" : ((15287, LCID, 4, 0),()),
		"NasMsnlTSOn" : ((15285, LCID, 4, 0),()),
		"NasMsnlTSOutputFreq" : ((15290, LCID, 4, 0),()),
		"NasMsnlTSSkipFactor" : ((15289, LCID, 4, 0),()),
		"NasMsnlTSSkipTSTEP" : ((15286, LCID, 4, 0),()),
		"NasMsnlkCnt2ALFA" : ((15253, LCID, 4, 0),()),
		"NasMsnlkCnt2AMAX" : ((15260, LCID, 4, 0),()),
		"NasMsnlkCnt2AMIN" : ((15259, LCID, 4, 0),()),
		"NasMsnlkCnt2AUTOTIM" : ((15322, LCID, 4, 0),()),
		"NasMsnlkCnt2BALF" : ((15452, LCID, 4, 0),()),
		"NasMsnlkCnt2BETA" : ((15251, LCID, 4, 0),()),
		"NasMsnlkCnt2CIBL" : ((15272, LCID, 4, 0),()),
		"NasMsnlkCnt2CREEP" : ((15244, LCID, 4, 0),()),
		"NasMsnlkCnt2CRICOFF" : ((15433, LCID, 4, 0),()),
		"NasMsnlkCnt2CRINFAC" : ((15314, LCID, 4, 0),()),
		"NasMsnlkCnt2CRLIMR" : ((15434, LCID, 4, 0),()),
		"NasMsnlkCnt2DCON" : ((15280, LCID, 4, 0),()),
		"NasMsnlkCnt2DEFLIM" : ((15239, LCID, 4, 0),()),
		"NasMsnlkCnt2DIPR" : ((15242, LCID, 4, 0),()),
		"NasMsnlkCnt2DISLIM" : ((15237, LCID, 4, 0),()),
		"NasMsnlkCnt2DTI0" : ((15273, LCID, 4, 0),()),
		"NasMsnlkCnt2DTINIT" : ((15323, LCID, 4, 0),()),
		"NasMsnlkCnt2DTMAX" : ((15325, LCID, 4, 0),()),
		"NasMsnlkCnt2DTMIN" : ((15324, LCID, 4, 0),()),
		"NasMsnlkCnt2EQMFMIN" : ((15327, LCID, 4, 0),()),
		"NasMsnlkCnt2EQMFMX" : ((15326, LCID, 4, 0),()),
		"NasMsnlkCnt2ERCD" : ((15248, LCID, 4, 0),()),
		"NasMsnlkCnt2GAMA" : ((15252, LCID, 4, 0),()),
		"NasMsnlkCnt2HMAX" : ((15275, LCID, 4, 0),()),
		"NasMsnlkCnt2HMIN" : ((15274, LCID, 4, 0),()),
		"NasMsnlkCnt2HPRCO" : ((15256, LCID, 4, 0),()),
		"NasMsnlkCnt2IA12" : ((15454, LCID, 4, 0),()),
		"NasMsnlkCnt2IA16" : ((15442, LCID, 4, 0),()),
		"NasMsnlkCnt2IA19" : ((15443, LCID, 4, 0),()),
		"NasMsnlkCnt2IA4" : ((15453, LCID, 4, 0),()),
		"NasMsnlkCnt2IAR0" : ((15339, LCID, 4, 0),()),
		"NasMsnlkCnt2ILNS" : ((15257, LCID, 4, 0),()),
		"NasMsnlkCnt2IMPG" : ((15282, LCID, 4, 0),()),
		"NasMsnlkCnt2IMPL" : ((15250, LCID, 4, 0),()),
		"NasMsnlkCnt2IMPR" : ((15283, LCID, 4, 0),()),
		"NasMsnlkCnt2IMPV" : ((15284, LCID, 4, 0),()),
		"NasMsnlkCnt2INERTIA" : ((15313, LCID, 4, 0),()),
		"NasMsnlkCnt2IRDY" : ((15451, LCID, 4, 0),()),
		"NasMsnlkCnt2ISTO" : ((15450, LCID, 4, 0),()),
		"NasMsnlkCnt2IT1K" : ((15268, LCID, 4, 0),()),
		"NasMsnlkCnt2IT2K" : ((15269, LCID, 4, 0),()),
		"NasMsnlkCnt2IT3K" : ((15270, LCID, 4, 0),()),
		"NasMsnlkCnt2ITEREF" : ((15315, LCID, 4, 0),()),
		"NasMsnlkCnt2ITHE" : ((15431, LCID, 4, 0),()),
		"NasMsnlkCnt2ITMA" : ((15261, LCID, 4, 0),()),
		"NasMsnlkCnt2KMODTN" : ((15440, LCID, 4, 0),()),
		"NasMsnlkCnt2KUPDATE" : ((15444, LCID, 4, 0),()),
		"NasMsnlkCnt2LL2" : ((15432, LCID, 4, 0),()),
		"NasMsnlkCnt2LVAR" : ((15240, LCID, 4, 0),()),
		"NasMsnlkCnt2MADI" : ((15247, LCID, 4, 0),()),
		"NasMsnlkCnt2MATSYM" : ((15312, LCID, 4, 0),()),
		"NasMsnlkCnt2MAXBIS" : ((15437, LCID, 4, 0),()),
		"NasMsnlkCnt2MSGLVLC" : ((15441, LCID, 4, 0),()),
		"NasMsnlkCnt2NORM" : ((15243, LCID, 4, 0),()),
		"NasMsnlkCnt2OTRE" : ((15340, LCID, 4, 0),()),
		"NasMsnlkCnt2PLAS" : ((15271, LCID, 4, 0),()),
		"NasMsnlkCnt2PLASTIC" : ((15245, LCID, 4, 0),()),
		"NasMsnlkCnt2PLLIM" : ((15435, LCID, 4, 0),()),
		"NasMsnlkCnt2PLSHUT" : ((15424, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCE" : ((15266, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCF" : ((15341, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCO" : ((15255, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCQ" : ((15264, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCR" : ((15262, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCS" : ((15281, LCID, 4, 0),()),
		"NasMsnlkCnt2PRDE" : ((15449, LCID, 4, 0),()),
		"NasMsnlkCnt2PRDR" : ((15448, LCID, 4, 0),()),
		"NasMsnlkCnt2PRED" : ((15249, LCID, 4, 0),()),
		"NasMsnlkCnt2PRLN" : ((15258, LCID, 4, 0),()),
		"NasMsnlkCnt2RDOW" : ((15277, LCID, 4, 0),()),
		"NasMsnlkCnt2REFE" : ((15267, LCID, 4, 0),()),
		"NasMsnlkCnt2REFP" : ((15263, LCID, 4, 0),()),
		"NasMsnlkCnt2REFU" : ((15265, LCID, 4, 0),()),
		"NasMsnlkCnt2RELC" : ((15279, LCID, 4, 0),()),
		"NasMsnlkCnt2RFVAR" : ((15447, LCID, 4, 0),()),
		"NasMsnlkCnt2RHOINF" : ((15436, LCID, 4, 0),()),
		"NasMsnlkCnt2RJPN" : ((15318, LCID, 4, 0),()),
		"NasMsnlkCnt2RJPZ" : ((15317, LCID, 4, 0),()),
		"NasMsnlkCnt2ROTLIM" : ((15238, LCID, 4, 0),()),
		"NasMsnlkCnt2RSUB" : ((15278, LCID, 4, 0),()),
		"NasMsnlkCnt2RUP" : ((15276, LCID, 4, 0),()),
		"NasMsnlkCnt2STAB" : ((15246, LCID, 4, 0),()),
		"NasMsnlkCnt2TETA" : ((15254, LCID, 4, 0),()),
		"NasMsnlkCnt2TINTMTH" : ((15328, LCID, 4, 0),()),
		"NasMsnlkCnt2TSDYN" : ((15316, LCID, 4, 0),()),
		"NasMsnlkCnt2TSVSC" : ((15319, LCID, 4, 0),()),
		"NasMsnlkCnt2TVAR" : ((15241, LCID, 4, 0),()),
		"NasMsnlkCnt2VSCOSN" : ((15321, LCID, 4, 0),()),
		"NasMsnlkCnt2VSCOTE" : ((15320, LCID, 4, 0),()),
		"NasMsnlkCnt2bSkipNLCNTL2" : ((15236, LCID, 4, 0),()),
		"NasMsnlkCnt2on" : ((15235, LCID, 4, 0),()),
		"NasOmodes" : ((15085, LCID, 4, 0),()),
		"NasOmodesOn" : ((15084, LCID, 4, 0),()),
		"NasRelEMotion" : ((15174, LCID, 4, 0),()),
		"NasSELoad" : ((15165, LCID, 4, 0),()),
		"NasStatsubBuckle" : ((15310, LCID, 4, 0),()),
		"NasStatsubOn" : ((15307, LCID, 4, 0),()),
		"NasStatsubPreload" : ((15311, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"SkipStandard" : ((15005, LCID, 4, 0),()),
		"StartText" : ((15006, LCID, 4, 0),()),
		"SubcaseAnalysisType" : ((15181, LCID, 4, 0),()),
		"SubcaseNotSeqDep" : ((15426, LCID, 4, 0),()),
		"caseID" : ((15001, LCID, 4, 0),()),
		"vBCSet" : ((15086, LCID, 4, 0),()),
		"vMSCNasCnlConvergenceFlags" : ((15179, LCID, 4, 0),()),
		"vNasCnlConvergenceFlags" : ((15106, LCID, 4, 0),()),
		"vNasCnlConvergenceValue" : ((15107, LCID, 4, 0),()),
		"vNasModeFreqRange" : ((10216, LCID, 4, 0),()),
		"vNasModeImagFreqRange" : ((10320, LCID, 4, 0),()),
		"vNasModeXYRequest" : ((10217, LCID, 4, 0),()),
		"vNasMsnlCntConv_flags" : ((15184, LCID, 4, 0),()),
		"vNasMsnlCntConv_value" : ((15185, LCID, 4, 0),()),
		"vOutput" : ((15087, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAnalysisMgr(DispatchBaseClass):
	CLSID = IID('{00EF42F8-0E77-11D5-9471-001083FFF11C}')
	coclass_clsid = IID('{00EF42FA-0E77-11D5-9471-001083FFF11C}')

	def ALPHAD(self, alpha=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26123, LCID, 1, (3, 0), ((5, 1),),alpha
			)

	def ARCLEN(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26132, LCID, 1, (3, 0), ((11, 1),),key
			)

	def AUTOTS(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26104, LCID, 1, (3, 0), ((11, 1),),key
			)

	def ActiveContactEntities(self, bContact=defaultNamedNotOptArg, nConnectorSetID=defaultNamedNotOptArg, nRegionSetID=defaultNamedNotOptArg, nConPropSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25010, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (3, 1)),bContact
			, nConnectorSetID, nRegionSetID, nConPropSetID)

	def AllFreqOff(self):
		return self._oleobj_.InvokeTypes(26001, LCID, 1, (3, 0), (),)

	def AllFreqOn(self):
		return self._oleobj_.InvokeTypes(26000, LCID, 1, (3, 0), (),)

	def Analyze(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def AnalyzeMultiple(self, SetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1),),SetID
			)

	def AnsRSTcomp(self, level=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26147, LCID, 1, (3, 0), ((3, 1),),level
			)

	def AnsSkipCsys(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26140, LCID, 1, (3, 0), ((11, 1),),key
			)

	def AnsSkipElem(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26144, LCID, 1, (3, 0), ((11, 1),),key
			)

	def AnsSkipGroup(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26145, LCID, 1, (3, 0), ((11, 1),),key
			)

	def AnsSkipMatl(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26142, LCID, 1, (3, 0), ((11, 1),),key
			)

	def AnsSkipMisc(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26146, LCID, 1, (3, 0), ((11, 1),),key
			)

	def AnsSkipNode(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26141, LCID, 1, (3, 0), ((11, 1),),key
			)

	def AnsSkipProp(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26143, LCID, 1, (3, 0), ((11, 1),),key
			)

	def AnsWriteGroup(self, group=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26139, LCID, 1, (3, 0), ((3, 1),),group
			)

	# The method BCSet is actually a property, but must be used as a method to correctly pass the arguments
	def BCSet(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def BETAD(self, beta=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26124, LCID, 1, (3, 0), ((5, 1),),beta
			)

	def BUCOPT(self, method=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, shift=defaultNamedNotOptArg, ldmulte=defaultNamedNotOptArg
			, rangekey=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26117, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1)),method
			, nMode, shift, ldmulte, rangekey)

	def CNVTOL(self, lab=defaultNamedNotOptArg, value=defaultNamedNotOptArg, toler=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26130, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1)),lab
			, value, toler)

	def CUTCONTROL(self, lab=defaultNamedNotOptArg, value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26107, LCID, 1, (3, 0), ((3, 1), (5, 1)),lab
			, value)

	# Result is of type IAnalysisCase
	def Case(self, entID=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20006, LCID, 1, (9, 0), ((3, 1),),entID
			)
		if ret is not None:
			ret = Dispatch(ret, 'Case', '{AB06C174-0E7E-11D5-9471-001083FFF11C}')
		return ret

	def ClearAnalysisQueue(self):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), (),)

	def ClearFLXSLISet(self):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), (),)

	def ClearJobMonitorData(self):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), (),)

	def ClearMptSet(self):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), (),)

	def ClearOMEGASet(self):
		return self._oleobj_.InvokeTypes(20043, LCID, 1, (3, 0), (),)

	def ClearOUTMGTSet(self):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def DELTIM(self, dtime=defaultNamedNotOptArg, dtmin=defaultNamedNotOptArg, dtmax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26106, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1)),dtime
			, dtmin, dtmax)

	def DMPRAT(self, rat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26126, LCID, 1, (3, 0), ((5, 1),),rat
			)

	def DMPSTR(self, dmp=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26125, LCID, 1, (3, 0), ((5, 1),),dmp
			)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteAnalysisCase(self, nSetID=defaultNamedNotOptArg, nCaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25005, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nCaseID)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def DynSkipCsys(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26501, LCID, 1, (3, 0), ((11, 1),),key
			)

	def DynSkipElem(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26505, LCID, 1, (3, 0), ((11, 1),),key
			)

	def DynSkipGroup(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26506, LCID, 1, (3, 0), ((11, 1),),key
			)

	def DynSkipMatl(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26503, LCID, 1, (3, 0), ((11, 1),),key
			)

	def DynSkipMisc(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26507, LCID, 1, (3, 0), ((11, 1),),key
			)

	def DynSkipNode(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26502, LCID, 1, (3, 0), ((11, 1),),key
			)

	def DynSkipProp(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26504, LCID, 1, (3, 0), ((11, 1),),key
			)

	def DynWriteGroup(self, group=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26500, LCID, 1, (3, 0), ((3, 1),),group
			)

	def EQSLV(self, lab=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26102, LCID, 1, (3, 0), ((3, 1),),lab
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	# The method FStDynFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def FStDynFreqRange(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetContactTable(self, Count=pythoncom.Missing, rowSeg=pythoncom.Missing, colSeg=pythoncom.Missing, tieType=pythoncom.Missing
			, distTol=pythoncom.Missing, sepForce=pythoncom.Missing, friction=pythoncom.Missing, interClose=pythoncom.Missing):
		return self._ApplyTypes_(25002, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetContactTable', None,Count
			, rowSeg, colSeg, tieType, distTol, sepForce
			, friction, interClose)

	def GetCorrelate(self, Count=pythoncom.Missing, excitedCase=pythoncom.Missing, appliedCase=pythoncom.Missing, realScale=pythoncom.Missing
			, imagScale=pythoncom.Missing, realFunc=pythoncom.Missing, imagFunc=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetCorrelate', None,Count
			, excitedCase, appliedCase, realScale, imagScale, realFunc
			, imagFunc)

	def GetCorrelate2(self, Count=pythoncom.Missing, excitedCase=pythoncom.Missing, appliedCase=pythoncom.Missing, realScale=pythoncom.Missing
			, imagScale=pythoncom.Missing, realFunc=pythoncom.Missing, imagFunc=pythoncom.Missing, realInterp=pythoncom.Missing, imagInterp=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetCorrelate2', None,Count
			, excitedCase, appliedCase, realScale, imagScale, realFunc
			, imagFunc, realInterp, imagInterp)

	def GetCorrelateGust(self, gustTableID=pythoncom.Missing, realScale=pythoncom.Missing, gustPSDType=pythoncom.Missing, turbFactor=pythoncom.Missing
			, rmsGustVel=pythoncom.Missing):
		return self._ApplyTypes_(20034, 1, (3, 0), ((16387, 2), (16389, 2), (16387, 2), (16389, 2), (16389, 2)), 'GetCorrelateGust', None,gustTableID
			, realScale, gustPSDType, turbFactor, rmsGustVel)

	def GetFLXSLISet(self, pSelectedFLXSLISet=pythoncom.Missing):
		return self._ApplyTypes_(20030, 1, (3, 0), ((16393, 2),), 'GetFLXSLISet', None,pSelectedFLXSLISet
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetMptSet(self, pSelectedMptSet=pythoncom.Missing):
		return self._ApplyTypes_(20026, 1, (3, 0), ((16393, 2),), 'GetMptSet', None,pSelectedMptSet
			)

	def GetOMEGASet(self, pSelectedOMEGASet=pythoncom.Missing):
		return self._ApplyTypes_(20042, 1, (3, 0), ((16393, 2),), 'GetOMEGASet', None,pSelectedOMEGASet
			)

	def GetOUTMGTSet(self, pSelectedOUTMGTSet=pythoncom.Missing):
		return self._ApplyTypes_(20038, 1, (3, 0), ((16393, 2),), 'GetOUTMGTSet', None,pSelectedOUTMGTSet
			)

	def GetOptLimits(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def GetOptMCs(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def GetOptVars(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def GetStandardTrim(self, useTrim=pythoncom.Missing, TrimID=pythoncom.Missing, TrimVal=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((16396, 2), (16396, 2), (16396, 2)), 'GetStandardTrim', None,useTrim
			, TrimID, TrimVal)

	def GetText(self, textID=defaultNamedNotOptArg, text=pythoncom.Missing):
		return self._ApplyTypes_(20000, 1, (3, 0), ((3, 1), (16392, 2)), 'GetText', None,textID
			, text)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def GetTrimControlSurf(self, useTrim=pythoncom.Missing, TrimID=pythoncom.Missing, TrimVal=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((16396, 2), (16396, 2), (16396, 2)), 'GetTrimControlSurf', None,useTrim
			, TrimID, TrimVal)

	def GetUsedFREQS(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def HARFRQ(self, freqb=defaultNamedNotOptArg, freqe=defaultNamedNotOptArg, logopt=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26119, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1)),freqb
			, freqe, logopt)

	def HROPT(self, method=defaultNamedNotOptArg, maxmode=defaultNamedNotOptArg, minmode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26118, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),method
			, maxmode, minmode)

	def HROUT(self, reimky=defaultNamedNotOptArg, clust=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26120, LCID, 1, (3, 0), ((11, 1), (11, 1)),reimky
			, clust)

	def InitAnalysisMgr(self, analysis_program=defaultNamedNotOptArg, analysis_type=defaultNamedNotOptArg, InitMasterCase=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25004, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),analysis_program
			, analysis_type, InitMasterCase)

	def IsGust(self):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), (),)

	def KBC(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26100, LCID, 1, (3, 0), ((11, 1),),key
			)

	def LANBOPTION(self, strmck=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26112, LCID, 1, (3, 0), ((11, 1),),strmck
			)

	def LNSRCH(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26133, LCID, 1, (3, 0), ((11, 1),),key
			)

	def LUMPM(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26122, LCID, 1, (3, 0), ((11, 1),),key
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def MIDTOL(self, key=defaultNamedNotOptArg, tolerb=defaultNamedNotOptArg, resfq=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26108, LCID, 1, (3, 0), ((11, 1), (5, 1), (11, 1)),key
			, tolerb, resfq)

	def MODOPT(self, method=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, freqb=defaultNamedNotOptArg, freqe=defaultNamedNotOptArg
			, cpxmod=defaultNamedNotOptArg, nrmkey=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26111, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1), (11, 1)),method
			, nMode, freqb, freqe, cpxmod, nrmkey
			)

	# The method MSCNasCnlConvergenceFlags is actually a property, but must be used as a method to correctly pass the arguments
	def MSCNasCnlConvergenceFlags(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19004, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def NEQIT(self, NEQIT=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26129, LCID, 1, (3, 0), ((3, 1),),NEQIT
			)

	def NLGEOM(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26131, LCID, 1, (3, 0), ((11, 1),),key
			)

	def NROPT(self, option1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26128, LCID, 1, (3, 0), ((3, 1),),option1
			)

	def NSUBST(self, nsbst=defaultNamedNotOptArg, nsbmx=defaultNamedNotOptArg, nsbmn=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26105, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nsbst
			, nsbmx, nsbmn)

	# The method NasBulkAlpha1Val is actually a property, but must be used as a method to correctly pass the arguments
	def NasBulkAlpha1Val(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18026, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasBulkAlpha2Val is actually a property, but must be used as a method to correctly pass the arguments
	def NasBulkAlpha2Val(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18027, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasCnlConvergenceFlags is actually a property, but must be used as a method to correctly pass the arguments
	def NasCnlConvergenceFlags(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19002, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasCnlConvergenceValue is actually a property, but must be used as a method to correctly pass the arguments
	def NasCnlConvergenceValue(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasDdamCoeffOn is actually a property, but must be used as a method to correctly pass the arguments
	def NasDdamCoeffOn(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18014, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasDdamCoeffVal is actually a property, but must be used as a method to correctly pass the arguments
	def NasDdamCoeffVal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18015, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasDynKeepFreq is actually a property, but must be used as a method to correctly pass the arguments
	def NasDynKeepFreq(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18016, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasGCheckMsg is actually a property, but must be used as a method to correctly pass the arguments
	def NasGCheckMsg(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method NasGCheckMsg2 is actually a property, but must be used as a method to correctly pass the arguments
	def NasGCheckMsg2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18025, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method NasGCheckTest is actually a property, but must be used as a method to correctly pass the arguments
	def NasGCheckTest(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasGCheckTest2 is actually a property, but must be used as a method to correctly pass the arguments
	def NasGCheckTest2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18023, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasGCheckTol is actually a property, but must be used as a method to correctly pass the arguments
	def NasGCheckTol(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasGCheckTol2 is actually a property, but must be used as a method to correctly pass the arguments
	def NasGCheckTol2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18024, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasGenSpecRequest is actually a property, but must be used as a method to correctly pass the arguments
	def NasGenSpecRequest(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasMCheckGrndDOFSet is actually a property, but must be used as a method to correctly pass the arguments
	def NasMCheckGrndDOFSet(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasMCheckWtDOFSet is actually a property, but must be used as a method to correctly pass the arguments
	def NasMCheckWtDOFSet(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasModeFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def NasModeFreqRange(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasModeImagFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def NasModeImagFreqRange(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasModeXYRequest is actually a property, but must be used as a method to correctly pass the arguments
	def NasModeXYRequest(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method NasNonlinEps is actually a property, but must be used as a method to correctly pass the arguments
	def NasNonlinEps(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasNonlinEpsFlag is actually a property, but must be used as a method to correctly pass the arguments
	def NasNonlinEpsFlag(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasRandXYRequest is actually a property, but must be used as a method to correctly pass the arguments
	def NasRandXYRequest(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NasRandomRequest is actually a property, but must be used as a method to correctly pass the arguments
	def NasRandomRequest(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method NasRotorRegionSelection is actually a property, but must be used as a method to correctly pass the arguments
	def NasRotorRegionSelection(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18028, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method NasRotorSpeedMultiplier is actually a property, but must be used as a method to correctly pass the arguments
	def NasRotorSpeedMultiplier(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18029, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method NasRotorSpeedMultiplierFn is actually a property, but must be used as a method to correctly pass the arguments
	def NasRotorSpeedMultiplierFn(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18030, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def OUTPR(self, item=defaultNamedNotOptArg, FREQ=defaultNamedNotOptArg, nth=defaultNamedNotOptArg, cname=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26110, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),item
			, FREQ, nth, cname)

	def OUTRES(self, item=defaultNamedNotOptArg, FREQ=defaultNamedNotOptArg, nth=defaultNamedNotOptArg, cname=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26109, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),item
			, FREQ, nth, cname)

	# The method Output is actually a property, but must be used as a method to correctly pass the arguments
	def Output(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def PCGOPT(self, strmck=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26113, LCID, 1, (3, 0), ((11, 1),),strmck
			)

	def PFACT(self, tblno=defaultNamedNotOptArg, excit=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26137, LCID, 1, (3, 0), ((3, 1), (11, 1)),tblno
			, excit)

	def PRED(self, sskey=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26134, LCID, 1, (3, 0), ((11, 1),),sskey
			)

	def PSDCOM(self, signif=defaultNamedNotOptArg, comode=defaultNamedNotOptArg, forcetype=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26138, LCID, 1, (3, 0), ((5, 1), (3, 1), (11, 1)),signif
			, comode, forcetype)

	def PSDUNIT(self, tblno=defaultNamedNotOptArg, type=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26136, LCID, 1, (3, 0), ((3, 1), (3, 1)),tblno
			, type)

	def PSTRES(self, key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26101, LCID, 1, (3, 0), ((11, 1),),key
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Preview(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutContactTable(self, Count=defaultNamedNotOptArg, rowSeg=defaultNamedNotOptArg, colSeg=defaultNamedNotOptArg, tieType=defaultNamedNotOptArg
			, distTol=defaultNamedNotOptArg, sepForce=defaultNamedNotOptArg, friction=defaultNamedNotOptArg, interClose=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25003, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, rowSeg, colSeg, tieType, distTol, sepForce
			, friction, interClose)

	def PutCorrelate(self, Count=defaultNamedNotOptArg, excitedCase=defaultNamedNotOptArg, appliedCase=defaultNamedNotOptArg, realScale=defaultNamedNotOptArg
			, imagScale=defaultNamedNotOptArg, realFunc=defaultNamedNotOptArg, imagFunc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, excitedCase, appliedCase, realScale, imagScale, realFunc
			, imagFunc)

	def PutCorrelate2(self, Count=defaultNamedNotOptArg, excitedCase=defaultNamedNotOptArg, appliedCase=defaultNamedNotOptArg, realScale=defaultNamedNotOptArg
			, imagScale=defaultNamedNotOptArg, realFunc=defaultNamedNotOptArg, imagFunc=defaultNamedNotOptArg, realInterp=defaultNamedNotOptArg, imagInterp=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, excitedCase, appliedCase, realScale, imagScale, realFunc
			, imagFunc, realInterp, imagInterp)

	def PutCorrelateGust(self, gustTableID=defaultNamedNotOptArg, realScale=defaultNamedNotOptArg, gustPSDType=defaultNamedNotOptArg, turbFactor=defaultNamedNotOptArg
			, rmsGustVel=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), ((3, 1), (5, 1), (3, 1), (5, 1), (5, 1)),gustTableID
			, realScale, gustPSDType, turbFactor, rmsGustVel)

	def PutFLXSLISet(self, pSelectedFLXSLISet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((16393, 1),),pSelectedFLXSLISet
			)

	def PutFLXSLISetID(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutMptSet(self, pSelectedMptSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), ((16393, 1),),pSelectedMptSet
			)

	def PutMptSetID(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def PutOMEGASet(self, pSelectedOMEGASet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20044, LCID, 1, (3, 0), ((16393, 1),),pSelectedOMEGASet
			)

	def PutOMEGASetID(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20041, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def PutOUTMGTSet(self, pSelectedOUTMGTSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), ((16393, 1),),pSelectedOUTMGTSet
			)

	def PutOUTMGTSetID(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def PutOptLimits(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def PutOptMCs(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def PutOptVars(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def PutStandardTrim(self, useTrim=defaultNamedNotOptArg, TrimID=defaultNamedNotOptArg, TrimVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1)),useTrim
			, TrimID, TrimVal)

	def PutText(self, textID=defaultNamedNotOptArg, text=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (8, 1)),textID
			, text)

	def PutTrimControlSurf(self, useTrim=defaultNamedNotOptArg, TrimID=defaultNamedNotOptArg, TrimVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1)),useTrim
			, TrimID, TrimVal)

	def PutUsedFREQS(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def QRDOPT(self, reusekey=defaultNamedNotOptArg, symmeth=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26116, LCID, 1, (3, 0), ((11, 1), (3, 1)),reusekey
			, symmeth)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SNOPTION(self, rangefact=defaultNamedNotOptArg, blocksize=defaultNamedNotOptArg, robustlev=defaultNamedNotOptArg, compute=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26115, LCID, 1, (3, 0), ((5, 1), (3, 1), (3, 1), (3, 1)),rangefact
			, blocksize, robustlev, compute)

	def SPOPT(self, sptype=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, elcalc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26135, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),sptype
			, nMode, elcalc)

	def SUBOPT(self, strmck=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26114, LCID, 1, (3, 0), ((11, 1),),strmck
			)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetBCSet is actually a property, but must be used as a method to correctly pass the arguments
	def SetBCSet(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetFStDynFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def SetFStDynFreqRange(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetMSCNasCnlConvergenceFlags is actually a property, but must be used as a method to correctly pass the arguments
	def SetMSCNasCnlConvergenceFlags(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19004, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasBulkAlpha1Val is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasBulkAlpha1Val(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18026, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasBulkAlpha2Val is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasBulkAlpha2Val(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18027, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasCnlConvergenceFlags is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasCnlConvergenceFlags(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19002, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasCnlConvergenceValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasCnlConvergenceValue(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasDdamCoeffOn is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasDdamCoeffOn(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18014, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasDdamCoeffVal is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasDdamCoeffVal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18015, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasDynKeepFreq is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasDynKeepFreq(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18016, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasGCheckMsg is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasGCheckMsg(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetNasGCheckMsg2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasGCheckMsg2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18025, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetNasGCheckTest is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasGCheckTest(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasGCheckTest2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasGCheckTest2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18023, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasGCheckTol is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasGCheckTol(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasGCheckTol2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasGCheckTol2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18024, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasGenSpecRequest is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasGenSpecRequest(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasMCheckGrndDOFSet is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasMCheckGrndDOFSet(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasMCheckWtDOFSet is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasMCheckWtDOFSet(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasModeFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasModeFreqRange(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasModeImagFreqRange is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasModeImagFreqRange(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasModeXYRequest is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasModeXYRequest(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetNasNonlinEps is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasNonlinEps(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasNonlinEpsFlag is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasNonlinEpsFlag(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasRandXYRequest is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasRandXYRequest(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNasRandomRequest is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasRandomRequest(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetNasRotorRegionSelection is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasRotorRegionSelection(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18028, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetNasRotorSpeedMultiplier is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasRotorSpeedMultiplier(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18029, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetNasRotorSpeedMultiplierFn is actually a property, but must be used as a method to correctly pass the arguments
	def SetNasRotorSpeedMultiplierFn(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18030, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetOutput is actually a property, but must be used as a method to correctly pass the arguments
	def SetOutput(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def TIME(self, TIME=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26103, LCID, 1, (3, 0), ((5, 1),),TIME
			)

	def TINTP(self, gamma=defaultNamedNotOptArg, alpha=defaultNamedNotOptArg, delta=defaultNamedNotOptArg, theta=defaultNamedNotOptArg
			, oslm=defaultNamedNotOptArg, tol=defaultNamedNotOptArg, avsmooth=defaultNamedNotOptArg, alphaf=defaultNamedNotOptArg, alpham=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26127, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (5, 1), (5, 1)),gamma
			, alpha, delta, theta, oslm, tol
			, avsmooth, alphaf, alpham)

	def TRNOUT(self, method=defaultNamedNotOptArg, maxmode=defaultNamedNotOptArg, minmode=defaultNamedNotOptArg, mcout=defaultNamedNotOptArg
			, tintopt=defaultNamedNotOptArg, vaout=defaultNamedNotOptArg, dmpsfreq=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26121, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (5, 1)),method
			, maxmode, minmode, mcout, tintopt, vaout
			, dmpsfreq)

	def TurnOffFreq(self, freqID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26003, LCID, 1, (3, 0), ((3, 1),),freqID
			)

	def TurnOnFreq(self, freqID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(26002, LCID, 1, (3, 0), ((3, 1),),freqID
			)

	_prop_map_get_ = {
		"AbaHistAnalysisType": (15031, 2, (3, 0), (), "AbaHistAnalysisType", None),
		"AbaHistAutoContact": (15025, 2, (11, 0), (), "AbaHistAutoContact", None),
		"AbaHistEigenvectors": (15017, 2, (3, 0), (), "AbaHistEigenvectors", None),
		"AbaHistInitTimeInc": (15014, 2, (5, 0), (), "AbaHistInitTimeInc", None),
		"AbaHistLinearPert": (15024, 2, (11, 0), (), "AbaHistLinearPert", None),
		"AbaHistMaxFreq": (15019, 2, (5, 0), (), "AbaHistMaxFreq", None),
		"AbaHistMaxTimeInc": (15016, 2, (5, 0), (), "AbaHistMaxTimeInc", None),
		"AbaHistMinFreq": (15018, 2, (5, 0), (), "AbaHistMinFreq", None),
		"AbaHistMinTimeInc": (15015, 2, (5, 0), (), "AbaHistMinTimeInc", None),
		"AbaHistNonlinGeom": (15023, 2, (11, 0), (), "AbaHistNonlinGeom", None),
		"AbaHistOn": (15012, 2, (11, 0), (), "AbaHistOn", None),
		"AbaHistOutInterval": (15022, 2, (3, 0), (), "AbaHistOutInterval", None),
		"AbaHistOutZeroInc": (15027, 2, (11, 0), (), "AbaHistOutZeroInc", None),
		"AbaHistScaleFactor": (15021, 2, (5, 0), (), "AbaHistScaleFactor", None),
		"AbaHistShiftFreq": (15020, 2, (5, 0), (), "AbaHistShiftFreq", None),
		"AbaHistStabilize": (15026, 2, (11, 0), (), "AbaHistStabilize", None),
		"AbaHistStepAmp": (15028, 2, (3, 0), (), "AbaHistStepAmp", None),
		"AbaHistStepConstr": (15030, 2, (3, 0), (), "AbaHistStepConstr", None),
		"AbaHistStepLoad": (15029, 2, (3, 0), (), "AbaHistStepLoad", None),
		"AbaHistTimePeriod": (15013, 2, (5, 0), (), "AbaHistTimePeriod", None),
		"AbaModCbushAsMatrix": (10514, 2, (11, 0), (), "AbaModCbushAsMatrix", None),
		"AbaModEndText": (10105, 2, (3, 0), (), "AbaModEndText", None),
		"AbaModGroupsAsSets": (10101, 2, (11, 0), (), "AbaModGroupsAsSets", None),
		"AbaModOn": (10099, 2, (11, 0), (), "AbaModOn", None),
		"AbaModSkipStandard": (10102, 2, (11, 0), (), "AbaModSkipStandard", None),
		"AbaModStartText": (10104, 2, (3, 0), (), "AbaModStartText", None),
		"AbaModTitleSetNames": (10100, 2, (11, 0), (), "AbaModTitleSetNames", None),
		"AbaModVersion": (10103, 2, (3, 0), (), "AbaModVersion", None),
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AnalysisType": (10001, 2, (3, 0), (), "AnalysisType", None),
		"AnsArclen": (16244, 2, (11, 0), (), "AnsArclen", None),
		"AnsAutots": (16109, 2, (11, 0), (), "AnsAutots", None),
		"AnsBisect": (16125, 2, (11, 0), (), "AnsBisect", None),
		"AnsBisectfactor": (16126, 2, (5, 0), (), "AnsBisectfactor", None),
		"AnsBuckleLdmulte": (16199, 2, (5, 0), (), "AnsBuckleLdmulte", None),
		"AnsBuckleMethod": (16196, 2, (3, 0), (), "AnsBuckleMethod", None),
		"AnsBuckleNmode": (16197, 2, (3, 0), (), "AnsBuckleNmode", None),
		"AnsBuckleOptOn": (16195, 2, (11, 0), (), "AnsBuckleOptOn", None),
		"AnsBuckleRangekey": (16200, 2, (11, 0), (), "AnsBuckleRangekey", None),
		"AnsBuckleShift": (16198, 2, (5, 0), (), "AnsBuckleShift", None),
		"AnsBuckleStrmck": (16201, 2, (11, 0), (), "AnsBuckleStrmck", None),
		"AnsCmlDBmem": (160007, 2, (3, 0), (), "AnsCmlDBmem", None),
		"AnsCmlDir": (16006, 2, (8, 0), (), "AnsCmlDir", None),
		"AnsCmlJobname": (16005, 2, (8, 0), (), "AnsCmlJobname", None),
		"AnsCmlList": (16004, 2, (11, 0), (), "AnsCmlList", None),
		"AnsCmlOn": (16000, 2, (11, 0), (), "AnsCmlOn", None),
		"AnsCmlPid": (16002, 2, (3, 0), (), "AnsCmlPid", None),
		"AnsCmlProd": (16003, 2, (8, 0), (), "AnsCmlProd", None),
		"AnsCmlUser": (16009, 2, (8, 0), (), "AnsCmlUser", None),
		"AnsCmlVersion": (16001, 2, (3, 0), (), "AnsCmlVersion", None),
		"AnsCmlWSmem": (160008, 2, (3, 0), (), "AnsCmlWSmem", None),
		"AnsCnvtolDvol": (16239, 2, (11, 0), (), "AnsCnvtolDvol", None),
		"AnsCnvtolF": (16235, 2, (11, 0), (), "AnsCnvtolF", None),
		"AnsCnvtolHdsp": (16241, 2, (11, 0), (), "AnsCnvtolHdsp", None),
		"AnsCnvtolM": (16237, 2, (11, 0), (), "AnsCnvtolM", None),
		"AnsCnvtolRot": (16233, 2, (11, 0), (), "AnsCnvtolRot", None),
		"AnsCnvtolU": (16231, 2, (11, 0), (), "AnsCnvtolU", None),
		"AnsCrplimit": (16119, 2, (11, 0), (), "AnsCrplimit", None),
		"AnsCrplimitvalue": (16120, 2, (5, 0), (), "AnsCrplimitvalue", None),
		"AnsDOFAutomatic": (15034, 2, (11, 0), (), "AnsDOFAutomatic", None),
		"AnsDOFDoSet": (15033, 2, (11, 0), (), "AnsDOFDoSet", None),
		"AnsDOFNoRotation": (15035, 2, (11, 0), (), "AnsDOFNoRotation", None),
		"AnsDOFNumber": (15037, 2, (3, 0), (), "AnsDOFNumber", None),
		"AnsDOFOn": (15032, 2, (11, 0), (), "AnsDOFOn", None),
		"AnsDOFSetID": (15036, 2, (3, 0), (), "AnsDOFSetID", None),
		"AnsDpplimit": (16121, 2, (11, 0), (), "AnsDpplimit", None),
		"AnsDpplimitvalue": (16122, 2, (5, 0), (), "AnsDpplimitvalue", None),
		"AnsDsplimit": (16123, 2, (11, 0), (), "AnsDsplimit", None),
		"AnsDsplimitvalue": (16124, 2, (5, 0), (), "AnsDsplimitvalue", None),
		"AnsDtime": (16114, 2, (5, 0), (), "AnsDtime", None),
		"AnsDtmax": (16116, 2, (5, 0), (), "AnsDtmax", None),
		"AnsDtmin": (16115, 2, (5, 0), (), "AnsDtmin", None),
		"AnsDvoltoler": (16240, 2, (5, 0), (), "AnsDvoltoler", None),
		"AnsEqslv": (16103, 2, (3, 0), (), "AnsEqslv", None),
		"AnsFtoler": (16236, 2, (5, 0), (), "AnsFtoler", None),
		"AnsHarmonicClust": (16210, 2, (11, 0), (), "AnsHarmonicClust", None),
		"AnsHarmonicFreqb": (16206, 2, (5, 0), (), "AnsHarmonicFreqb", None),
		"AnsHarmonicFreqe": (16207, 2, (5, 0), (), "AnsHarmonicFreqe", None),
		"AnsHarmonicLogopt": (16208, 2, (3, 0), (), "AnsHarmonicLogopt", None),
		"AnsHarmonicMaxmode": (16205, 2, (3, 0), (), "AnsHarmonicMaxmode", None),
		"AnsHarmonicMethod": (16203, 2, (11, 0), (), "AnsHarmonicMethod", None),
		"AnsHarmonicMinmode": (16204, 2, (3, 0), (), "AnsHarmonicMinmode", None),
		"AnsHarmonicOptOn": (16202, 2, (11, 0), (), "AnsHarmonicOptOn", None),
		"AnsHarmonicReimky": (16209, 2, (11, 0), (), "AnsHarmonicReimky", None),
		"AnsHdsptoler": (16242, 2, (5, 0), (), "AnsHdsptoler", None),
		"AnsHeatEndTime": (15045, 2, (5, 0), (), "AnsHeatEndTime", None),
		"AnsHeatOn": (15044, 2, (11, 0), (), "AnsHeatOn", None),
		"AnsHeatOutputFreq": (15047, 2, (3, 0), (), "AnsHeatOutputFreq", None),
		"AnsHeatTimeStep": (15046, 2, (5, 0), (), "AnsHeatTimeStep", None),
		"AnsKbc": (16101, 2, (11, 0), (), "AnsKbc", None),
		"AnsLdstepOn": (16100, 2, (11, 0), (), "AnsLdstepOn", None),
		"AnsLnsrch": (16245, 2, (11, 0), (), "AnsLnsrch", None),
		"AnsMidtol": (16128, 2, (11, 0), (), "AnsMidtol", None),
		"AnsModEndText": (10111, 2, (3, 0), (), "AnsModEndText", None),
		"AnsModGroupsAsSets": (10108, 2, (11, 0), (), "AnsModGroupsAsSets", None),
		"AnsModMemory": (10116, 2, (3, 0), (), "AnsModMemory", None),
		"AnsModOn": (10106, 2, (11, 0), (), "AnsModOn", None),
		"AnsModSkipPreprocessCMD": (10448, 2, (11, 0), (), "AnsModSkipPreprocessCMD", None),
		"AnsModSkipStandard": (10109, 2, (11, 0), (), "AnsModSkipStandard", None),
		"AnsModStartText": (10110, 2, (3, 0), (), "AnsModStartText", None),
		"AnsModTitle": (10112, 2, (8, 0), (), "AnsModTitle", None),
		"AnsModTitleSetNames": (10107, 2, (11, 0), (), "AnsModTitleSetNames", None),
		"AnsModVersion": (10117, 2, (3, 0), (), "AnsModVersion", None),
		"AnsModWriteIter": (10114, 2, (11, 0), (), "AnsModWriteIter", None),
		"AnsModWriteLargeDef": (10115, 2, (11, 0), (), "AnsModWriteLargeDef", None),
		"AnsModWriteSolCmd": (10113, 2, (11, 0), (), "AnsModWriteSolCmd", None),
		"AnsModalBlocksize": (16190, 2, (3, 0), (), "AnsModalBlocksize", None),
		"AnsModalCompute": (16192, 2, (3, 0), (), "AnsModalCompute", None),
		"AnsModalFreqb": (16185, 2, (5, 0), (), "AnsModalFreqb", None),
		"AnsModalFreqe": (16186, 2, (5, 0), (), "AnsModalFreqe", None),
		"AnsModalMethod": (16183, 2, (3, 0), (), "AnsModalMethod", None),
		"AnsModalNmode": (16184, 2, (3, 0), (), "AnsModalNmode", None),
		"AnsModalNrmkey": (16187, 2, (11, 0), (), "AnsModalNrmkey", None),
		"AnsModalOptOn": (16182, 2, (11, 0), (), "AnsModalOptOn", None),
		"AnsModalRangefact": (16189, 2, (5, 0), (), "AnsModalRangefact", None),
		"AnsModalReusekey": (16193, 2, (11, 0), (), "AnsModalReusekey", None),
		"AnsModalRobustlev": (16191, 2, (3, 0), (), "AnsModalRobustlev", None),
		"AnsModalStrmck": (16188, 2, (11, 0), (), "AnsModalStrmck", None),
		"AnsModalSymmeth": (16194, 2, (3, 0), (), "AnsModalSymmeth", None),
		"AnsModelGroupID": (16247, 2, (3, 0), (), "AnsModelGroupID", None),
		"AnsModelRSTcomp": (16255, 2, (3, 0), (), "AnsModelRSTcomp", None),
		"AnsModelSkipCsys": (16248, 2, (11, 0), (), "AnsModelSkipCsys", None),
		"AnsModelSkipElem": (16252, 2, (11, 0), (), "AnsModelSkipElem", None),
		"AnsModelSkipGroup": (16253, 2, (11, 0), (), "AnsModelSkipGroup", None),
		"AnsModelSkipMatl": (16250, 2, (11, 0), (), "AnsModelSkipMatl", None),
		"AnsModelSkipMisc": (16254, 2, (11, 0), (), "AnsModelSkipMisc", None),
		"AnsModelSkipNode": (16249, 2, (11, 0), (), "AnsModelSkipNode", None),
		"AnsModelSkipProp": (16251, 2, (11, 0), (), "AnsModelSkipProp", None),
		"AnsModesElemResults": (15043, 2, (11, 0), (), "AnsModesElemResults", None),
		"AnsModesMaxFreq": (15041, 2, (5, 0), (), "AnsModesMaxFreq", None),
		"AnsModesMinFreq": (15040, 2, (5, 0), (), "AnsModesMinFreq", None),
		"AnsModesModalMethod": (15042, 2, (5, 0), (), "AnsModesModalMethod", None),
		"AnsModesNumModes": (15039, 2, (3, 0), (), "AnsModesNumModes", None),
		"AnsModesOn": (15038, 2, (11, 0), (), "AnsModesOn", None),
		"AnsMtoler": (16238, 2, (5, 0), (), "AnsMtoler", None),
		"AnsNeqit": (16230, 2, (3, 0), (), "AnsNeqit", None),
		"AnsNewConstraint": (16104, 2, (11, 0), (), "AnsNewConstraint", None),
		"AnsNewContact": (16106, 2, (11, 0), (), "AnsNewContact", None),
		"AnsNewLoad": (16105, 2, (11, 0), (), "AnsNewLoad", None),
		"AnsNlOptOn": (16228, 2, (11, 0), (), "AnsNlOptOn", None),
		"AnsNlgeom": (16243, 2, (11, 0), (), "AnsNlgeom", None),
		"AnsNropt": (16229, 2, (3, 0), (), "AnsNropt", None),
		"AnsNsbmn": (16113, 2, (3, 0), (), "AnsNsbmn", None),
		"AnsNsbmx": (16112, 2, (3, 0), (), "AnsNsbmx", None),
		"AnsNsbstep": (16111, 2, (3, 0), (), "AnsNsbstep", None),
		"AnsNsubs": (16110, 2, (11, 0), (), "AnsNsubs", None),
		"AnsOutprAcc": (16167, 2, (11, 0), (), "AnsOutprAcc", None),
		"AnsOutprAccFreq": (16169, 2, (3, 0), (), "AnsOutprAccFreq", None),
		"AnsOutprAccNth": (16171, 2, (3, 0), (), "AnsOutprAccNth", None),
		"AnsOutprAll": (16133, 2, (11, 0), (), "AnsOutprAll", None),
		"AnsOutprAllFreq": (16135, 2, (3, 0), (), "AnsOutprAllFreq", None),
		"AnsOutprAllNth": (16137, 2, (3, 0), (), "AnsOutprAllNth", None),
		"AnsOutprBasic": (16139, 2, (11, 0), (), "AnsOutprBasic", None),
		"AnsOutprBasicFreq": (16141, 2, (3, 0), (), "AnsOutprBasicFreq", None),
		"AnsOutprBasicNth": (16143, 2, (3, 0), (), "AnsOutprBasicNth", None),
		"AnsOutprEsol": (16175, 2, (11, 0), (), "AnsOutprEsol", None),
		"AnsOutprEsolFreq": (16177, 2, (3, 0), (), "AnsOutprEsolFreq", None),
		"AnsOutprEsolNth": (16179, 2, (3, 0), (), "AnsOutprEsolNth", None),
		"AnsOutprNsol": (16151, 2, (11, 0), (), "AnsOutprNsol", None),
		"AnsOutprNsolFreq": (16153, 2, (3, 0), (), "AnsOutprNsolFreq", None),
		"AnsOutprNsolNth": (16155, 2, (3, 0), (), "AnsOutprNsolNth", None),
		"AnsOutprRsol": (16145, 2, (11, 0), (), "AnsOutprRsol", None),
		"AnsOutprRsolFreq": (16147, 2, (3, 0), (), "AnsOutprRsolFreq", None),
		"AnsOutprRsolNth": (16149, 2, (3, 0), (), "AnsOutprRsolNth", None),
		"AnsOutprVel": (16159, 2, (11, 0), (), "AnsOutprVel", None),
		"AnsOutprVelFreq": (16161, 2, (3, 0), (), "AnsOutprVelFreq", None),
		"AnsOutprVelNth": (16163, 2, (3, 0), (), "AnsOutprVelNth", None),
		"AnsOutputOn": (16131, 2, (11, 0), (), "AnsOutputOn", None),
		"AnsOutresAcc": (16166, 2, (11, 0), (), "AnsOutresAcc", None),
		"AnsOutresAccFreq": (16168, 2, (3, 0), (), "AnsOutresAccFreq", None),
		"AnsOutresAccNth": (16170, 2, (3, 0), (), "AnsOutresAccNth", None),
		"AnsOutresAll": (16132, 2, (11, 0), (), "AnsOutresAll", None),
		"AnsOutresAllFreq": (16134, 2, (3, 0), (), "AnsOutresAllFreq", None),
		"AnsOutresAllNth": (16136, 2, (3, 0), (), "AnsOutresAllNth", None),
		"AnsOutresBasic": (16138, 2, (11, 0), (), "AnsOutresBasic", None),
		"AnsOutresBasicFreq": (16140, 2, (3, 0), (), "AnsOutresBasicFreq", None),
		"AnsOutresBasicNth": (16142, 2, (3, 0), (), "AnsOutresBasicNth", None),
		"AnsOutresEsol": (16174, 2, (11, 0), (), "AnsOutresEsol", None),
		"AnsOutresEsolFreq": (16176, 2, (3, 0), (), "AnsOutresEsolFreq", None),
		"AnsOutresEsolNth": (16178, 2, (3, 0), (), "AnsOutresEsolNth", None),
		"AnsOutresNsol": (16150, 2, (11, 0), (), "AnsOutresNsol", None),
		"AnsOutresNsolFreq": (16152, 2, (3, 0), (), "AnsOutresNsolFreq", None),
		"AnsOutresNsolNth": (16154, 2, (3, 0), (), "AnsOutresNsolNth", None),
		"AnsOutresRsol": (16144, 2, (11, 0), (), "AnsOutresRsol", None),
		"AnsOutresRsolFreq": (16146, 2, (3, 0), (), "AnsOutresRsolFreq", None),
		"AnsOutresRsolNth": (16148, 2, (3, 0), (), "AnsOutresRsolNth", None),
		"AnsOutresVel": (16158, 2, (11, 0), (), "AnsOutresVel", None),
		"AnsOutresVelFreq": (16160, 2, (3, 0), (), "AnsOutresVelFreq", None),
		"AnsOutresVelNth": (16162, 2, (3, 0), (), "AnsOutresVelNth", None),
		"AnsPlslimit": (16117, 2, (11, 0), (), "AnsPlslimit", None),
		"AnsPlslimitvalue": (16118, 2, (5, 0), (), "AnsPlslimitvalue", None),
		"AnsPred": (16246, 2, (11, 0), (), "AnsPred", None),
		"AnsPredictor": (16127, 2, (11, 0), (), "AnsPredictor", None),
		"AnsPstres": (16102, 2, (11, 0), (), "AnsPstres", None),
		"AnsRandAccel": (10121, 2, (11, 0), (), "AnsRandAccel", None),
		"AnsRandAccelRelative": (10124, 2, (11, 0), (), "AnsRandAccelRelative", None),
		"AnsRandDisp": (10119, 2, (11, 0), (), "AnsRandDisp", None),
		"AnsRandDispRelative": (10122, 2, (11, 0), (), "AnsRandDispRelative", None),
		"AnsRandOn": (10118, 2, (11, 0), (), "AnsRandOn", None),
		"AnsRandVel": (10120, 2, (11, 0), (), "AnsRandVel", None),
		"AnsRandVelRelative": (10123, 2, (11, 0), (), "AnsRandVelRelative", None),
		"AnsResfq": (16130, 2, (11, 0), (), "AnsResfq", None),
		"AnsRottoler": (16234, 2, (5, 0), (), "AnsRottoler", None),
		"AnsTime": (16108, 2, (5, 0), (), "AnsTime", None),
		"AnsTimestepOn": (16107, 2, (11, 0), (), "AnsTimestepOn", None),
		"AnsTolerb": (16129, 2, (5, 0), (), "AnsTolerb", None),
		"AnsTransAlpha": (16224, 2, (5, 0), (), "AnsTransAlpha", None),
		"AnsTransAlphad": (16218, 2, (5, 0), (), "AnsTransAlphad", None),
		"AnsTransAlphaf": (16226, 2, (5, 0), (), "AnsTransAlphaf", None),
		"AnsTransAlpham": (16227, 2, (5, 0), (), "AnsTransAlpham", None),
		"AnsTransBetad": (16219, 2, (5, 0), (), "AnsTransBetad", None),
		"AnsTransDelta": (16225, 2, (5, 0), (), "AnsTransDelta", None),
		"AnsTransDmprat": (16221, 2, (5, 0), (), "AnsTransDmprat", None),
		"AnsTransDmpsfreq": (16216, 2, (5, 0), (), "AnsTransDmpsfreq", None),
		"AnsTransDmpstr": (16220, 2, (5, 0), (), "AnsTransDmpstr", None),
		"AnsTransGamma": (16222, 2, (11, 0), (), "AnsTransGamma", None),
		"AnsTransGammavalue": (16223, 2, (5, 0), (), "AnsTransGammavalue", None),
		"AnsTransLumpm": (16217, 2, (11, 0), (), "AnsTransLumpm", None),
		"AnsTransMaxmode": (16214, 2, (3, 0), (), "AnsTransMaxmode", None),
		"AnsTransMethod": (16212, 2, (11, 0), (), "AnsTransMethod", None),
		"AnsTransMinmode": (16213, 2, (3, 0), (), "AnsTransMinmode", None),
		"AnsTransOptOn": (16211, 2, (11, 0), (), "AnsTransOptOn", None),
		"AnsTransTintopt": (16215, 2, (11, 0), (), "AnsTransTintopt", None),
		"AnsUtoler": (16232, 2, (5, 0), (), "AnsUtoler", None),
		"CaseLabel": (15176, 2, (8, 0), (), "CaseLabel", None),
		"CaseTitle": (15000, 2, (8, 0), (), "CaseTitle", None),
		"CaseType": (15088, 2, (3, 0), (), "CaseType", None),
		"ContactOption": (15177, 2, (3, 0), (), "ContactOption", None),
		"ContactSetType": (15178, 2, (3, 0), (), "ContactSetType", None),
		"CornerOutput": (15010, 2, (3, 0), (), "CornerOutput", None),
		"Destination": (15008, 2, (3, 0), (), "Destination", None),
		"DynHistBodyLoadGrp": (15090, 2, (3, 0), (), "DynHistBodyLoadGrp", None),
		"DynHistGroupHistId": (15100, 2, (3, 0), (), "DynHistGroupHistId", None),
		"DynHistImplicit": (15093, 2, (11, 0), (), "DynHistImplicit", None),
		"DynHistMassDampOn": (15091, 2, (11, 0), (), "DynHistMassDampOn", None),
		"DynHistMsssDamp": (15092, 2, (5, 0), (), "DynHistMsssDamp", None),
		"DynHistOn": (15089, 2, (11, 0), (), "DynHistOn", None),
		"DynHistPlateIntgPts": (15099, 2, (3, 0), (), "DynHistPlateIntgPts", None),
		"DynHistPrintHistOutput": (15098, 2, (5, 0), (), "DynHistPrintHistOutput", None),
		"DynHistSpringback": (15094, 2, (11, 0), (), "DynHistSpringback", None),
		"DynHistStrainOutput": (15095, 2, (11, 0), (), "DynHistStrainOutput", None),
		"DynHistTimeHistOuput": (15097, 2, (5, 0), (), "DynHistTimeHistOuput", None),
		"DynHistTotalTime": (15096, 2, (5, 0), (), "DynHistTotalTime", None),
		"DynModEndText": (10306, 2, (3, 0), (), "DynModEndText", None),
		"DynModExportRigidNodes": (10301, 2, (11, 0), (), "DynModExportRigidNodes", None),
		"DynModGroupsAsSets": (10303, 2, (11, 0), (), "DynModGroupsAsSets", None),
		"DynModMatlBasedParts": (10302, 2, (11, 0), (), "DynModMatlBasedParts", None),
		"DynModOn": (10300, 2, (11, 0), (), "DynModOn", None),
		"DynModSkipStandard": (10304, 2, (11, 0), (), "DynModSkipStandard", None),
		"DynModStartText": (10305, 2, (3, 0), (), "DynModStartText", None),
		"DynModelGroupID": (16500, 2, (3, 0), (), "DynModelGroupID", None),
		"DynModelSkipCsys": (16501, 2, (11, 0), (), "DynModelSkipCsys", None),
		"DynModelSkipElem": (16505, 2, (11, 0), (), "DynModelSkipElem", None),
		"DynModelSkipGroup": (16506, 2, (11, 0), (), "DynModelSkipGroup", None),
		"DynModelSkipMatl": (16503, 2, (11, 0), (), "DynModelSkipMatl", None),
		"DynModelSkipMisc": (16507, 2, (11, 0), (), "DynModelSkipMisc", None),
		"DynModelSkipNode": (16502, 2, (11, 0), (), "DynModelSkipNode", None),
		"DynModelSkipProp": (16504, 2, (11, 0), (), "DynModelSkipProp", None),
		"Echo": (15004, 2, (8, 0), (), "Echo", None),
		"EndText": (15007, 2, (3, 0), (), "EndText", None),
		"FStDynFreqMethod": (10145, 2, (3, 0), (), "FStDynFreqMethod", None),
		"FStDynIterVec": (10149, 2, (3, 0), (), "FStDynIterVec", None),
		"FStDynMassDir": (10147, 2, (3, 0), (), "FStDynMassDir", None),
		"FStDynMassForm": (10140, 2, (11, 0), (), "FStDynMassForm", None),
		"FStDynMassTol": (10148, 2, (5, 0), (), "FStDynMassTol", None),
		"FStDynMaxIter": (10150, 2, (3, 0), (), "FStDynMaxIter", None),
		"FStDynModalDamp": (10141, 2, (11, 0), (), "FStDynModalDamp", None),
		"FStDynModalNorm": (10142, 2, (11, 0), (), "FStDynModalNorm", None),
		"FStDynNumModes": (10143, 2, (3, 0), (), "FStDynNumModes", None),
		"FStDynOn": (10138, 2, (11, 0), (), "FStDynOn", None),
		"FStDynRigidModes": (10144, 2, (3, 0), (), "FStDynRigidModes", None),
		"FStDynSigDigits": (10151, 2, (3, 0), (), "FStDynSigDigits", None),
		"FStDynSolMethod": (10139, 2, (3, 0), (), "FStDynSolMethod", None),
		"FStFilEchoLogFile": (10128, 2, (11, 0), (), "FStFilEchoLogFile", None),
		"FStFilHyper1": (10129, 2, (8, 0), (), "FStFilHyper1", None),
		"FStFilHyper2": (10130, 2, (8, 0), (), "FStFilHyper2", None),
		"FStFilKeepHyper": (10131, 2, (11, 0), (), "FStFilKeepHyper", None),
		"FStFilKeepLogFile": (10127, 2, (11, 0), (), "FStFilKeepLogFile", None),
		"FStFilLogFile": (10126, 2, (8, 0), (), "FStFilLogFile", None),
		"FStFilOn": (10125, 2, (11, 0), (), "FStFilOn", None),
		"FStFilScratch1": (10132, 2, (8, 0), (), "FStFilScratch1", None),
		"FStFilScratch2": (10133, 2, (8, 0), (), "FStFilScratch2", None),
		"FStHeatConvergeType": (10136, 2, (3, 0), (), "FStHeatConvergeType", None),
		"FStHeatMaxIter": (10137, 2, (3, 0), (), "FStHeatMaxIter", None),
		"FStHeatOn": (10134, 2, (11, 0), (), "FStHeatOn", None),
		"FStHeatTempTol": (10135, 2, (5, 0), (), "FStHeatTempTol", None),
		"FStSolElemGroup": (10169, 2, (3, 0), (), "FStSolElemGroup", None),
		"FStSolIter": (10153, 2, (11, 0), (), "FStSolIter", None),
		"FStSolIterConvTol": (10154, 2, (5, 0), (), "FStSolIterConvTol", None),
		"FStSolIterMaxIter": (10155, 2, (3, 0), (), "FStSolIterMaxIter", None),
		"FStSolMemAppPct": (10158, 2, (3, 0), (), "FStSolMemAppPct", None),
		"FStSolMemFortranPct": (10159, 2, (3, 0), (), "FStSolMemFortranPct", None),
		"FStSolMemIterMax": (10156, 2, (3, 0), (), "FStSolMemIterMax", None),
		"FStSolMemVirtMax": (10157, 2, (3, 0), (), "FStSolMemVirtMax", None),
		"FStSolNodeGroup": (10168, 2, (3, 0), (), "FStSolNodeGroup", None),
		"FStSolOn": (10152, 2, (11, 0), (), "FStSolOn", None),
		"FStSolShellAuto": (10163, 2, (3, 0), (), "FStSolShellAuto", None),
		"FStSolShellAutoAng": (10166, 2, (5, 0), (), "FStSolShellAutoAng", None),
		"FStSolSingCriteria": (10167, 2, (5, 0), (), "FStSolSingCriteria", None),
		"FStSolSingularity": (10164, 2, (11, 0), (), "FStSolSingularity", None),
		"FStSolSpinSoft": (10161, 2, (11, 0), (), "FStSolSpinSoft", None),
		"FStSolStiffSoftLoad": (10162, 2, (3, 0), (), "FStSolStiffSoftLoad", None),
		"FStSolStressStiff": (10160, 2, (11, 0), (), "FStSolStressStiff", None),
		"FStSolVerification": (10165, 2, (11, 0), (), "FStSolVerification", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Imaginary": (15009, 2, (3, 0), (), "Imaginary", None),
		"IntegrationOutput": (15011, 2, (3, 0), (), "IntegrationOutput", None),
		"LinkedSolverOption": (10501, 2, (3, 0), (), "LinkedSolverOption", None),
		"MarCtblOn": (15082, 2, (11, 0), (), "MarCtblOn", None),
		"MarCtblWrite": (15083, 2, (11, 0), (), "MarCtblWrite", None),
		"MarHistAnalCaseSol": (15064, 2, (3, 0), (), "MarHistAnalCaseSol", None),
		"MarHistAutoSwitch": (15063, 2, (11, 0), (), "MarHistAutoSwitch", None),
		"MarHistBuckleNumModes": (15065, 2, (3, 0), (), "MarHistBuckleNumModes", None),
		"MarHistBucklePosEigen": (15066, 2, (3, 0), (), "MarHistBucklePosEigen", None),
		"MarHistChecking": (15062, 2, (3, 0), (), "MarHistChecking", None),
		"MarHistContactProp": (15049, 2, (3, 0), (), "MarHistContactProp", None),
		"MarHistConvergeMeth": (15056, 2, (3, 0), (), "MarHistConvergeMeth", None),
		"MarHistCtrlMaxRecycle": (15053, 2, (3, 0), (), "MarHistCtrlMaxRecycle", None),
		"MarHistCtrlMaxStep": (15052, 2, (3, 0), (), "MarHistCtrlMaxStep", None),
		"MarHistCtrlMethod": (15050, 2, (3, 0), (), "MarHistCtrlMethod", None),
		"MarHistCtrlMinRecycle": (15054, 2, (3, 0), (), "MarHistCtrlMinRecycle", None),
		"MarHistMaxResidual": (15055, 2, (5, 0), (), "MarHistMaxResidual", None),
		"MarHistModalEigen": (15061, 2, (3, 0), (), "MarHistModalEigen", None),
		"MarHistModalMaxFreq": (15060, 2, (5, 0), (), "MarHistModalMaxFreq", None),
		"MarHistModalMinFreq": (15059, 2, (5, 0), (), "MarHistModalMinFreq", None),
		"MarHistNonPosDefinite": (15057, 2, (11, 0), (), "MarHistNonPosDefinite", None),
		"MarHistNonSymmetric": (15058, 2, (11, 0), (), "MarHistNonSymmetric", None),
		"MarHistOn": (15048, 2, (11, 0), (), "MarHistOn", None),
		"MarHistSolverMeth": (15051, 2, (3, 0), (), "MarHistSolverMeth", None),
		"MarIncArcLenMeth": (15068, 2, (3, 0), (), "MarIncArcLenMeth", None),
		"MarIncCtrlMaxRecycle": (15079, 2, (3, 0), (), "MarIncCtrlMaxRecycle", None),
		"MarIncFracFirst": (15077, 2, (5, 0), (), "MarIncFracFirst", None),
		"MarIncInitTimeInc": (15070, 2, (5, 0), (), "MarIncInitTimeInc", None),
		"MarIncMaxFracForAll": (15080, 2, (5, 0), (), "MarIncMaxFracForAll", None),
		"MarIncMaxNumInc": (15078, 2, (3, 0), (), "MarIncMaxNumInc", None),
		"MarIncMaxStep": (15074, 2, (3, 0), (), "MarIncMaxStep", None),
		"MarIncMaxTimeInc": (15072, 2, (5, 0), (), "MarIncMaxTimeInc", None),
		"MarIncMinTimeInc": (15071, 2, (5, 0), (), "MarIncMinTimeInc", None),
		"MarIncNumOutInc": (15075, 2, (3, 0), (), "MarIncNumOutInc", None),
		"MarIncOn": (15067, 2, (11, 0), (), "MarIncOn", None),
		"MarIncQuasiStatDamp": (15076, 2, (11, 0), (), "MarIncQuasiStatDamp", None),
		"MarIncScaleFact": (15073, 2, (5, 0), (), "MarIncScaleFact", None),
		"MarIncTimePeriod": (15069, 2, (5, 0), (), "MarIncTimePeriod", None),
		"MarIncTotalTime": (15081, 2, (5, 0), (), "MarIncTotalTime", None),
		"MarModBWOpt": (10208, 2, (11, 0), (), "MarModBWOpt", None),
		"MarModConstDil": (10184, 2, (11, 0), (), "MarModConstDil", None),
		"MarModCoreVal": (10203, 2, (3, 0), (), "MarModCoreVal", None),
		"MarModDistLoadElem": (10195, 2, (3, 0), (), "MarModDistLoadElem", None),
		"MarModDistLoadList": (10194, 2, (3, 0), (), "MarModDistLoadList", None),
		"MarModDistLoadNode": (10196, 2, (3, 0), (), "MarModDistLoadNode", None),
		"MarModDistLoadOn": (10193, 2, (11, 0), (), "MarModDistLoadOn", None),
		"MarModEchoInput": (10188, 2, (11, 0), (), "MarModEchoInput", None),
		"MarModElasIs": (10183, 2, (11, 0), (), "MarModElasIs", None),
		"MarModElasOn": (10181, 2, (11, 0), (), "MarModElasOn", None),
		"MarModElasTotal": (10182, 2, (11, 0), (), "MarModElasTotal", None),
		"MarModEndText": (10173, 2, (3, 0), (), "MarModEndText", None),
		"MarModExtInput": (10190, 2, (11, 0), (), "MarModExtInput", None),
		"MarModFinite": (10187, 2, (11, 0), (), "MarModFinite", None),
		"MarModFolOn": (10177, 2, (11, 0), (), "MarModFolOn", None),
		"MarModFolOpt": (10178, 2, (3, 0), (), "MarModFolOpt", None),
		"MarModLgDisp": (10185, 2, (11, 0), (), "MarModLgDisp", None),
		"MarModMaxConstrain": (10176, 2, (3, 0), (), "MarModMaxConstrain", None),
		"MarModNoCpu": (10205, 2, (3, 0), (), "MarModNoCpu", None),
		"MarModOn": (10170, 2, (11, 0), (), "MarModOn", None),
		"MarModOutOfCore": (10202, 2, (11, 0), (), "MarModOutOfCore", None),
		"MarModParallel": (10207, 2, (11, 0), (), "MarModParallel", None),
		"MarModPlasOn": (10179, 2, (11, 0), (), "MarModPlasOn", None),
		"MarModPlasOpt": (10180, 2, (3, 0), (), "MarModPlasOpt", None),
		"MarModPltIntegPt": (10192, 2, (3, 0), (), "MarModPltIntegPt", None),
		"MarModProcessors": (10204, 2, (11, 0), (), "MarModProcessors", None),
		"MarModShlTrShear": (10191, 2, (11, 0), (), "MarModShlTrShear", None),
		"MarModSkipStandard": (10171, 2, (11, 0), (), "MarModSkipStandard", None),
		"MarModStartText": (10172, 2, (3, 0), (), "MarModStartText", None),
		"MarModTitle": (10174, 2, (8, 0), (), "MarModTitle", None),
		"MarModTyingCe": (10198, 2, (3, 0), (), "MarModTyingCe", None),
		"MarModTyingOn": (10197, 2, (11, 0), (), "MarModTyingOn", None),
		"MarModTyingServoLk": (10201, 2, (3, 0), (), "MarModTyingServoLk", None),
		"MarModTyingServoNd": (10200, 2, (3, 0), (), "MarModTyingServoNd", None),
		"MarModTyingType": (10199, 2, (3, 0), (), "MarModTyingType", None),
		"MarModUpdate": (10186, 2, (11, 0), (), "MarModUpdate", None),
		"MarModVecLength": (10206, 2, (3, 0), (), "MarModVecLength", None),
		"MarModWorkSpVec": (10175, 2, (3, 0), (), "MarModWorkSpVec", None),
		"MarModWriteGroupSet": (10189, 2, (11, 0), (), "MarModWriteGroupSet", None),
		"NasAeroAeunit": (10426, 2, (11, 0), (), "NasAeroAeunit", None),
		"NasAeroAeunitVal": (10427, 2, (5, 0), (), "NasAeroAeunitVal", None),
		"NasAeroCsID": (10416, 2, (3, 0), (), "NasAeroCsID", None),
		"NasAeroDampMethod": (10432, 2, (3, 0), (), "NasAeroDampMethod", None),
		"NasAeroMkFuID": (10425, 2, (3, 0), (), "NasAeroMkFuID", None),
		"NasAeroModesKeep": (10429, 2, (3, 0), (), "NasAeroModesKeep", None),
		"NasAeroOn": (10415, 2, (11, 0), (), "NasAeroOn", None),
		"NasAeroRefArea": (10420, 2, (5, 0), (), "NasAeroRefArea", None),
		"NasAeroRefCsID": (10417, 2, (3, 0), (), "NasAeroRefCsID", None),
		"NasAeroRefDens": (10424, 2, (5, 0), (), "NasAeroRefDens", None),
		"NasAeroRefLength": (10418, 2, (5, 0), (), "NasAeroRefLength", None),
		"NasAeroRefSpan": (10419, 2, (5, 0), (), "NasAeroRefSpan", None),
		"NasAeroSymXY": (10421, 2, (3, 0), (), "NasAeroSymXY", None),
		"NasAeroSymxz": (10422, 2, (3, 0), (), "NasAeroSymxz", None),
		"NasAeroVelo": (10423, 2, (5, 0), (), "NasAeroVelo", None),
		"NasAerobOPPHIPA": (10496, 2, (11, 0), (), "NasAerobOPPHIPA", None),
		"NasAerobPARAMfzero": (10430, 2, (11, 0), (), "NasAerobPARAMfzero", None),
		"NasAerodPARAMfzero": (10431, 2, (5, 0), (), "NasAerodPARAMfzero", None),
		"NasAerodPARAMmach": (10617, 2, (5, 0), (), "NasAerodPARAMmach", None),
		"NasAerodPARAMq": (10618, 2, (5, 0), (), "NasAerodPARAMq", None),
		"NasAeronPARAMgustaero": (10616, 2, (3, 0), (), "NasAeronPARAMgustaero", None),
		"NasAppSpecCID": (10633, 2, (3, 0), (), "NasAppSpecCID", None),
		"NasAppSpecClose": (10080, 2, (5, 0), (), "NasAppSpecClose", None),
		"NasAppSpecDamp": (10082, 2, (3, 0), (), "NasAppSpecDamp", None),
		"NasAppSpecDir": (10634, 2, (3, 0), (), "NasAppSpecDir", None),
		"NasAppSpecFunction": (10077, 2, (3, 0), (), "NasAppSpecFunction", None),
		"NasAppSpecMethod": (10079, 2, (3, 0), (), "NasAppSpecMethod", None),
		"NasAppSpecOn": (10075, 2, (11, 0), (), "NasAppSpecOn", None),
		"NasAppSpecScale": (10078, 2, (5, 0), (), "NasAppSpecScale", None),
		"NasAppSpecSuport": (10081, 2, (3, 0), (), "NasAppSpecSuport", None),
		"NasAppSpecType": (10076, 2, (3, 0), (), "NasAppSpecType", None),
		"NasAppSpecUseRelativeMethod": (10632, 2, (11, 0), (), "NasAppSpecUseRelativeMethod", None),
		"NasAutoCt2D": (10571, 2, (11, 0), (), "NasAutoCt2D", None),
		"NasAutoCtBEAMCAP": (10570, 2, (11, 0), (), "NasAutoCtBEAMCAP", None),
		"NasAutoCtBEAMCNT": (10569, 2, (11, 0), (), "NasAutoCtBEAMCNT", None),
		"NasAutoCtBodyVal": (10561, 2, (3, 0), (), "NasAutoCtBodyVal", None),
		"NasAutoCtCTYPE": (10562, 2, (3, 0), (), "NasAutoCtCTYPE", None),
		"NasAutoCtConProp": (10599, 2, (3, 0), (), "NasAutoCtConProp", None),
		"NasAutoCtDISTANCE": (10563, 2, (5, 0), (), "NasAutoCtDISTANCE", None),
		"NasAutoCtEDGECNT": (10572, 2, (11, 0), (), "NasAutoCtEDGECNT", None),
		"NasAutoCtESET": (10564, 2, (3, 0), (), "NasAutoCtESET", None),
		"NasAutoCtEnabled": (10560, 2, (11, 0), (), "NasAutoCtEnabled", None),
		"NasAutoCtFRIC": (10574, 2, (5, 0), (), "NasAutoCtFRIC", None),
		"NasAutoCtFRICTABLE": (10575, 2, (3, 0), (), "NasAutoCtFRICTABLE", None),
		"NasAutoCtFRICVal": (10576, 2, (11, 0), (), "NasAutoCtFRICVal", None),
		"NasAutoCtFTYPE": (10573, 2, (3, 0), (), "NasAutoCtFTYPE", None),
		"NasAutoCtIGNTHK": (10577, 2, (11, 0), (), "NasAutoCtIGNTHK", None),
		"NasAutoCtINISTF": (10578, 2, (11, 0), (), "NasAutoCtINISTF", None),
		"NasAutoCtOn": (10559, 2, (11, 0), (), "NasAutoCtOn", None),
		"NasAutoCtPropSet": (10567, 2, (3, 0), (), "NasAutoCtPropSet", None),
		"NasAutoCtRegion": (10598, 2, (3, 0), (), "NasAutoCtRegion", None),
		"NasAutoCtRigidSet": (10568, 2, (3, 0), (), "NasAutoCtRigidSet", None),
		"NasAutoCtSeedESet": (10565, 2, (3, 0), (), "NasAutoCtSeedESet", None),
		"NasAutoCtSeedGSet": (10566, 2, (3, 0), (), "NasAutoCtSeedGSet", None),
		"NasAutoCtSelfCont": (10579, 2, (11, 0), (), "NasAutoCtSelfCont", None),
		"NasBulkADTOQDLD": (10621, 2, (11, 0), (), "NasBulkADTOQDLD", None),
		"NasBulkAlpha1": (10489, 2, (11, 0), (), "NasBulkAlpha1", None),
		"NasBulkAlpha2": (10490, 2, (11, 0), (), "NasBulkAlpha2", None),
		"NasBulkAutompc": (10227, 2, (11, 0), (), "NasBulkAutompc", None),
		"NasBulkAutospc": (10019, 2, (11, 0), (), "NasBulkAutospc", None),
		"NasBulkAutospcType": (10307, 2, (3, 0), (), "NasBulkAutospcType", None),
		"NasBulkBoltFact": (10370, 2, (11, 0), (), "NasBulkBoltFact", None),
		"NasBulkBoltFactVal": (10371, 2, (5, 0), (), "NasBulkBoltFactVal", None),
		"NasBulkCntAset": (10414, 2, (11, 0), (), "NasBulkCntAset", None),
		"NasBulkDFREQ": (10628, 2, (11, 0), (), "NasBulkDFREQ", None),
		"NasBulkDFREQVal": (10629, 2, (5, 0), (), "NasBulkDFREQVal", None),
		"NasBulkDdrmmOff": (10029, 2, (11, 0), (), "NasBulkDdrmmOff", None),
		"NasBulkDynLdAsLOADSET": (10380, 2, (11, 0), (), "NasBulkDynLdAsLOADSET", None),
		"NasBulkEndText": (10041, 2, (3, 0), (), "NasBulkEndText", None),
		"NasBulkEndTextOutsideBulk": (10499, 2, (11, 0), (), "NasBulkEndTextOutsideBulk", None),
		"NasBulkEnfmotn": (10405, 2, (11, 0), (), "NasBulkEnfmotn", None),
		"NasBulkEnfmotnOpt": (10406, 2, (3, 0), (), "NasBulkEnfmotnOpt", None),
		"NasBulkFHPNST": (10626, 2, (11, 0), (), "NasBulkFHPNST", None),
		"NasBulkFHPNSTVal": (10627, 2, (3, 0), (), "NasBulkFHPNSTVal", None),
		"NasBulkFHPOST": (10624, 2, (11, 0), (), "NasBulkFHPOST", None),
		"NasBulkFHPOSTVal": (10625, 2, (3, 0), (), "NasBulkFHPOSTVal", None),
		"NasBulkGapConnectionProp": (10605, 2, (3, 0), (), "NasBulkGapConnectionProp", None),
		"NasBulkGapsAsContact": (10367, 2, (11, 0), (), "NasBulkGapsAsContact", None),
		"NasBulkGrdpnt": (10020, 2, (11, 0), (), "NasBulkGrdpnt", None),
		"NasBulkGrdpntVal": (10032, 2, (3, 0), (), "NasBulkGrdpntVal", None),
		"NasBulkGroupID": (10042, 2, (3, 0), (), "NasBulkGroupID", None),
		"NasBulkInrel": (10025, 2, (11, 0), (), "NasBulkInrel", None),
		"NasBulkInrelVal": (10366, 2, (3, 0), (), "NasBulkInrelVal", None),
		"NasBulkK6rot": (10022, 2, (11, 0), (), "NasBulkK6rot", None),
		"NasBulkK6rotVal": (10034, 2, (5, 0), (), "NasBulkK6rotVal", None),
		"NasBulkLangle": (10026, 2, (11, 0), (), "NasBulkLangle", None),
		"NasBulkLargeField": (10037, 2, (3, 0), (), "NasBulkLargeField", None),
		"NasBulkLgdisp": (10028, 2, (11, 0), (), "NasBulkLgdisp", None),
		"NasBulkLgstrn": (10318, 2, (11, 0), (), "NasBulkLgstrn", None),
		"NasBulkMatnl": (10518, 2, (3, 0), (), "NasBulkMatnl", None),
		"NasBulkMaxratio": (10023, 2, (11, 0), (), "NasBulkMaxratio", None),
		"NasBulkMaxratioVal": (10035, 2, (5, 0), (), "NasBulkMaxratioVal", None),
		"NasBulkMdofVal": (10492, 2, (3, 0), (), "NasBulkMdofVal", None),
		"NasBulkMgrid": (10487, 2, (11, 0), (), "NasBulkMgrid", None),
		"NasBulkMgridID": (10493, 2, (3, 0), (), "NasBulkMgridID", None),
		"NasBulkModacc": (10030, 2, (11, 0), (), "NasBulkModacc", None),
		"NasBulkNdamp": (10024, 2, (11, 0), (), "NasBulkNdamp", None),
		"NasBulkNdampVal": (10036, 2, (5, 0), (), "NasBulkNdampVal", None),
		"NasBulkNofisr": (10317, 2, (11, 0), (), "NasBulkNofisr", None),
		"NasBulkOgeom": (10211, 2, (11, 0), (), "NasBulkOgeom", None),
		"NasBulkOn": (10018, 2, (11, 0), (), "NasBulkOn", None),
		"NasBulkPARAMBailout": (10449, 2, (11, 0), (), "NasBulkPARAMBailout", None),
		"NasBulkPARAMBuckle": (10532, 2, (11, 0), (), "NasBulkPARAMBuckle", None),
		"NasBulkPrgpst": (10027, 2, (11, 0), (), "NasBulkPrgpst", None),
		"NasBulkQuadr": (10038, 2, (11, 0), (), "NasBulkQuadr", None),
		"NasBulkRDMTRAK": (10630, 2, (11, 0), (), "NasBulkRDMTRAK", None),
		"NasBulkRDMTRAKVal": (10631, 2, (5, 0), (), "NasBulkRDMTRAKVal", None),
		"NasBulkResVec": (10031, 2, (11, 0), (), "NasBulkResVec", None),
		"NasBulkResVecOn": (10210, 2, (11, 0), (), "NasBulkResVecOn", None),
		"NasBulkResViner": (10381, 2, (11, 0), (), "NasBulkResViner", None),
		"NasBulkRigidMethod": (10513, 2, (3, 0), (), "NasBulkRigidMethod", None),
		"NasBulkRigidThermalExp": (10315, 2, (11, 0), (), "NasBulkRigidThermalExp", None),
		"NasBulkSecomb": (10445, 2, (11, 0), (), "NasBulkSecomb", None),
		"NasBulkSkipBeamShape": (10212, 2, (11, 0), (), "NasBulkSkipBeamShape", None),
		"NasBulkSkipStandard": (10039, 2, (11, 0), (), "NasBulkSkipStandard", None),
		"NasBulkSrcomps": (10316, 2, (11, 0), (), "NasBulkSrcomps", None),
		"NasBulkStartText": (10040, 2, (3, 0), (), "NasBulkStartText", None),
		"NasBulkSwpangle": (10488, 2, (11, 0), (), "NasBulkSwpangle", None),
		"NasBulkSwpangleVal": (10491, 2, (5, 0), (), "NasBulkSwpangleVal", None),
		"NasBulkTENSOQD": (10606, 2, (11, 0), (), "NasBulkTENSOQD", None),
		"NasBulkTENSOQDval": (10607, 2, (3, 0), (), "NasBulkTENSOQDval", None),
		"NasBulkTOQDGAUS": (10620, 2, (3, 0), (), "NasBulkTOQDGAUS", None),
		"NasBulkWriteAllLoadBCSets": (10383, 2, (11, 0), (), "NasBulkWriteAllLoadBCSets", None),
		"NasBulkWtmass": (10021, 2, (11, 0), (), "NasBulkWtmass", None),
		"NasBulkWtmassVal": (10033, 2, (5, 0), (), "NasBulkWtmassVal", None),
		"NasCaeDynPressure": (15139, 2, (5, 0), (), "NasCaeDynPressure", None),
		"NasCaeMachNumber": (15138, 2, (5, 0), (), "NasCaeMachNumber", None),
		"NasCaeOn": (15137, 2, (11, 0), (), "NasCaeOn", None),
		"NasCaeRigidTrim": (15141, 2, (11, 0), (), "NasCaeRigidTrim", None),
		"NasCaeWrtieTrim": (15142, 2, (11, 0), (), "NasCaeWrtieTrim", None),
		"NasCaseFHAC": (15524, 2, (8, 0), (), "NasCaseFHAC", None),
		"NasCaseFHACOn": (15523, 2, (11, 0), (), "NasCaseFHACOn", None),
		"NasCaseFHAR": (15522, 2, (8, 0), (), "NasCaseFHAR", None),
		"NasCaseFHAROn": (15521, 2, (11, 0), (), "NasCaseFHAROn", None),
		"NasCflDenID": (15145, 2, (3, 0), (), "NasCflDenID", None),
		"NasCflEig": (15149, 2, (3, 0), (), "NasCflEig", None),
		"NasCflEps": (15150, 2, (5, 0), (), "NasCflEps", None),
		"NasCflFliMethod": (15148, 2, (3, 0), (), "NasCflFliMethod", None),
		"NasCflMachFactID": (15146, 2, (3, 0), (), "NasCflMachFactID", None),
		"NasCflMethod": (15144, 2, (3, 0), (), "NasCflMethod", None),
		"NasCflOn": (15143, 2, (11, 0), (), "NasCflOn", None),
		"NasCflRfreqFactID": (15147, 2, (3, 0), (), "NasCflRfreqFactID", None),
		"NasCflSdampID": (15152, 2, (3, 0), (), "NasCflSdampID", None),
		"NasCflWriteFlutter": (15151, 2, (11, 0), (), "NasCflWriteFlutter", None),
		"NasCnlArcConstraintType": (15117, 2, (3, 0), (), "NasCnlArcConstraintType", None),
		"NasCnlArcDesiredIter": (15121, 2, (3, 0), (), "NasCnlArcDesiredIter", None),
		"NasCnlArcLoadScale": (15120, 2, (5, 0), (), "NasCnlArcLoadScale", None),
		"NasCnlArcMaxAdjust": (15119, 2, (5, 0), (), "NasCnlArcMaxAdjust", None),
		"NasCnlArcMaxSteps": (15122, 2, (3, 0), (), "NasCnlArcMaxSteps", None),
		"NasCnlArcMinAdjust": (15118, 2, (5, 0), (), "NasCnlArcMinAdjust", None),
		"NasCnlBoundsRb": (15125, 2, (5, 0), (), "NasCnlBoundsRb", None),
		"NasCnlCreep": (15135, 2, (11, 0), (), "NasCnlCreep", None),
		"NasCnlCtiffnessMethod": (15108, 2, (3, 0), (), "NasCnlCtiffnessMethod", None),
		"NasCnlDivergenceLimit": (15127, 2, (3, 0), (), "NasCnlDivergenceLimit", None),
		"NasCnlDominantPeriodSteps": (15124, 2, (3, 0), (), "NasCnlDominantPeriodSteps", None),
		"NasCnlFstress": (15133, 2, (5, 0), (), "NasCnlFstress", None),
		"NasCnlIncrements": (15103, 2, (3, 0), (), "NasCnlIncrements", None),
		"NasCnlIntermediateOutput": (15110, 2, (3, 0), (), "NasCnlIntermediateOutput", None),
		"NasCnlKstep": (15109, 2, (3, 0), (), "NasCnlKstep", None),
		"NasCnlLineSearchTolerance": (15130, 2, (5, 0), (), "NasCnlLineSearchTolerance", None),
		"NasCnlMaxAdjust": (15134, 2, (5, 0), (), "NasCnlMaxAdjust", None),
		"NasCnlMaxBisections": (15131, 2, (3, 0), (), "NasCnlMaxBisections", None),
		"NasCnlMaxIter": (15105, 2, (3, 0), (), "NasCnlMaxIter", None),
		"NasCnlMaxLineSearch": (15129, 2, (3, 0), (), "NasCnlMaxLineSearch", None),
		"NasCnlMaxRotation": (15132, 2, (5, 0), (), "NasCnlMaxRotation", None),
		"NasCnlModnewtonBisection": (15116, 2, (11, 0), (), "NasCnlModnewtonBisection", None),
		"NasCnlModnewtonLineSearch": (15114, 2, (11, 0), (), "NasCnlModnewtonLineSearch", None),
		"NasCnlModnewtonQuasiNewton": (15115, 2, (11, 0), (), "NasCnlModnewtonQuasiNewton", None),
		"NasCnlOn": (15101, 2, (11, 0), (), "NasCnlOn", None),
		"NasCnlOutputInterval": (15111, 2, (3, 0), (), "NasCnlOutputInterval", None),
		"NasCnlQuasiNewtonVectors": (15128, 2, (3, 0), (), "NasCnlQuasiNewtonVectors", None),
		"NasCnlSkipNLPARM": (15136, 2, (11, 0), (), "NasCnlSkipNLPARM", None),
		"NasCnlSolutionOverrides": (15113, 2, (3, 0), (), "NasCnlSolutionOverrides", None),
		"NasCnlSolutionStrategy": (15112, 2, (3, 0), (), "NasCnlSolutionStrategy", None),
		"NasCnlStabilityTolerance": (15126, 2, (5, 0), (), "NasCnlStabilityTolerance", None),
		"NasCnlStiffnessMethod": (15175, 2, (3, 0), (), "NasCnlStiffnessMethod", None),
		"NasCnlTimeSkipAdjust": (15123, 2, (3, 0), (), "NasCnlTimeSkipAdjust", None),
		"NasCnlTime_Increment": (15104, 2, (5, 0), (), "NasCnlTime_Increment", None),
		"NasCnlUseLoadSet": (15102, 2, (11, 0), (), "NasCnlUseLoadSet", None),
		"NasCnlkDAMP": (15154, 2, (11, 0), (), "NasCnlkDAMP", None),
		"NasCnlkUPDATE": (15155, 2, (3, 0), (), "NasCnlkUPDATE", None),
		"NasCurvatureStrain": (15180, 2, (11, 0), (), "NasCurvatureStrain", None),
		"NasDMIGB2GG": (15329, 2, (3, 0), (), "NasDMIGB2GG", None),
		"NasDMIGB2PP": (15334, 2, (3, 0), (), "NasDMIGB2PP", None),
		"NasDMIGK2GG": (15327, 2, (3, 0), (), "NasDMIGK2GG", None),
		"NasDMIGK2PP": (15332, 2, (3, 0), (), "NasDMIGK2PP", None),
		"NasDMIGK42GG": (15330, 2, (3, 0), (), "NasDMIGK42GG", None),
		"NasDMIGM2GG": (15328, 2, (3, 0), (), "NasDMIGM2GG", None),
		"NasDMIGM2PP": (15333, 2, (3, 0), (), "NasDMIGM2PP", None),
		"NasDMIGP2G": (15331, 2, (3, 0), (), "NasDMIGP2G", None),
		"NasDdamAccelConversion": (10411, 2, (5, 0), (), "NasDdamAccelConversion", None),
		"NasDdamDirectionSequence": (10335, 2, (3, 0), (), "NasDdamDirectionSequence", None),
		"NasDdamElasticPlastic": (10332, 2, (3, 0), (), "NasDdamElasticPlastic", None),
		"NasDdamEnabled": (10325, 2, (11, 0), (), "NasDdamEnabled", None),
		"NasDdamEquationType": (10329, 2, (3, 0), (), "NasDdamEquationType", None),
		"NasDdamEquipmentLocation": (10331, 2, (3, 0), (), "NasDdamEquipmentLocation", None),
		"NasDdamFileUnit": (10614, 2, (3, 0), (), "NasDdamFileUnit", None),
		"NasDdamForceConversion": (10410, 2, (5, 0), (), "NasDdamForceConversion", None),
		"NasDdamForeAftDirection": (10333, 2, (3, 0), (), "NasDdamForeAftDirection", None),
		"NasDdamGCutoff": (10338, 2, (5, 0), (), "NasDdamGCutoff", None),
		"NasDdamIncludePath": (10326, 2, (11, 0), (), "NasDdamIncludePath", None),
		"NasDdamIsDDAM": (10327, 2, (3, 0), (), "NasDdamIsDDAM", None),
		"NasDdamMassToWeight": (10336, 2, (5, 0), (), "NasDdamMassToWeight", None),
		"NasDdamOn": (10324, 2, (11, 0), (), "NasDdamOn", None),
		"NasDdamSelModeMethod": (10600, 2, (3, 0), (), "NasDdamSelModeMethod", None),
		"NasDdamSelModeVal": (10601, 2, (5, 0), (), "NasDdamSelModeVal", None),
		"NasDdamSpdirCOMP": (10613, 2, (3, 0), (), "NasDdamSpdirCOMP", None),
		"NasDdamSpdirCSID": (10612, 2, (3, 0), (), "NasDdamSpdirCSID", None),
		"NasDdamSpecCoeffFile": (10339, 2, (8, 0), (), "NasDdamSpecCoeffFile", None),
		"NasDdamSurfaceShip": (10330, 2, (3, 0), (), "NasDdamSurfaceShip", None),
		"NasDdamUseBuiltInCoeff": (10328, 2, (3, 0), (), "NasDdamUseBuiltInCoeff", None),
		"NasDdamVerticalDirection": (10334, 2, (3, 0), (), "NasDdamVerticalDirection", None),
		"NasDdamWeightCutoffPct": (10337, 2, (5, 0), (), "NasDdamWeightCutoffPct", None),
		"NasDynDampModalMethod": (10396, 2, (11, 0), (), "NasDynDampModalMethod", None),
		"NasDynDampModalTbl": (10392, 2, (3, 0), (), "NasDynDampModalTbl", None),
		"NasDynDampOverall": (10386, 2, (5, 0), (), "NasDynDampOverall", None),
		"NasDynDampW3": (10387, 2, (5, 0), (), "NasDynDampW3", None),
		"NasDynDampW4": (10388, 2, (5, 0), (), "NasDynDampW4", None),
		"NasDynFreqID": (10398, 2, (3, 0), (), "NasDynFreqID", None),
		"NasDynFreqTbl": (10391, 2, (3, 0), (), "NasDynFreqTbl", None),
		"NasDynFzero": (10407, 2, (11, 0), (), "NasDynFzero", None),
		"NasDynFzeroVal": (10408, 2, (5, 0), (), "NasDynFzeroVal", None),
		"NasDynKeepModes": (10393, 2, (3, 0), (), "NasDynKeepModes", None),
		"NasDynOn": (10384, 2, (11, 0), (), "NasDynOn", None),
		"NasDynRespSpect": (10397, 2, (3, 0), (), "NasDynRespSpect", None),
		"NasDynTranDT": (10390, 2, (5, 0), (), "NasDynTranDT", None),
		"NasDynTranTimeSteps": (10394, 2, (3, 0), (), "NasDynTranTimeSteps", None),
		"NasDynTransOutInt": (10395, 2, (3, 0), (), "NasDynTransOutInt", None),
		"NasDynUseLoadSet": (10385, 2, (11, 0), (), "NasDynUseLoadSet", None),
		"NasDynWmodal": (10409, 2, (11, 0), (), "NasDynWmodal", None),
		"NasEnableDMIG": (15326, 2, (11, 0), (), "NasEnableDMIG", None),
		"NasExecAllowDuplicateNodes": (10446, 2, (11, 0), (), "NasExecAllowDuplicateNodes", None),
		"NasExecAnalyzeFilename": (10458, 2, (8, 0), (), "NasExecAnalyzeFilename", None),
		"NasExecDiag": (10009, 2, (8, 0), (), "NasExecDiag", None),
		"NasExecDuplicateTolerance": (10450, 2, (5, 0), (), "NasExecDuplicateTolerance", None),
		"NasExecEndText": (10017, 2, (3, 0), (), "NasExecEndText", None),
		"NasExecExtendedMessages": (10309, 2, (11, 0), (), "NasExecExtendedMessages", None),
		"NasExecGPU": (10498, 2, (11, 0), (), "NasExecGPU", None),
		"NasExecGPUOpt": (10500, 2, (3, 0), (), "NasExecGPUOpt", None),
		"NasExecIterSolve": (10010, 2, (11, 0), (), "NasExecIterSolve", None),
		"NasExecIterSolve2": (10213, 2, (3, 0), (), "NasExecIterSolve2", None),
		"NasExecMaxTime": (10008, 2, (5, 0), (), "NasExecMaxTime", None),
		"NasExecMemory": (10308, 2, (3, 0), (), "NasExecMemory", None),
		"NasExecNumCPU": (10011, 2, (3, 0), (), "NasExecNumCPU", None),
		"NasExecNumDmpCPU": (10615, 2, (3, 0), (), "NasExecNumDmpCPU", None),
		"NasExecOn": (10003, 2, (11, 0), (), "NasExecOn", None),
		"NasExecOutDir": (10005, 2, (8, 0), (), "NasExecOutDir", None),
		"NasExecProblem": (10006, 2, (8, 0), (), "NasExecProblem", None),
		"NasExecRestart": (10013, 2, (11, 0), (), "NasExecRestart", None),
		"NasExecRestartDB": (10014, 2, (8, 0), (), "NasExecRestartDB", None),
		"NasExecRestartReadOnly": (10451, 2, (11, 0), (), "NasExecRestartReadOnly", None),
		"NasExecRestartSubcase": (10453, 2, (3, 0), (), "NasExecRestartSubcase", None),
		"NasExecRestartVersion": (10452, 2, (3, 0), (), "NasExecRestartVersion", None),
		"NasExecSaveDB": (10012, 2, (11, 0), (), "NasExecSaveDB", None),
		"NasExecScratchDir1": (10311, 2, (8, 0), (), "NasExecScratchDir1", None),
		"NasExecScratchDir2": (10312, 2, (8, 0), (), "NasExecScratchDir2", None),
		"NasExecScratchSize1": (10313, 2, (3, 0), (), "NasExecScratchSize1", None),
		"NasExecScratchSize2": (10314, 2, (3, 0), (), "NasExecScratchSize2", None),
		"NasExecSkipStandard": (10015, 2, (11, 0), (), "NasExecSkipStandard", None),
		"NasExecSolName": (10007, 2, (8, 0), (), "NasExecSolName", None),
		"NasExecSolutionMonitor": (10379, 2, (11, 0), (), "NasExecSolutionMonitor", None),
		"NasExecSolutionMonitorOpt": (10608, 2, (3, 0), (), "NasExecSolutionMonitorOpt", None),
		"NasExecStartText": (10016, 2, (3, 0), (), "NasExecStartText", None),
		"NasExecSystemCell": (10310, 2, (8, 0), (), "NasExecSystemCell", None),
		"NasExecUserCmdLine": (10503, 2, (8, 0), (), "NasExecUserCmdLine", None),
		"NasExecVersion": (10004, 2, (3, 0), (), "NasExecVersion", None),
		"NasExecWriteSERefPath": (10447, 2, (11, 0), (), "NasExecWriteSERefPath", None),
		"NasExtSEOutAssignForm": (10462, 2, (3, 0), (), "NasExtSEOutAssignForm", None),
		"NasExtSEOutAssignTitle": (10441, 2, (8, 0), (), "NasExtSEOutAssignTitle", None),
		"NasExtSEOutExtID": (10434, 2, (3, 0), (), "NasExtSEOutExtID", None),
		"NasExtSEOutMatK4damp": (10437, 2, (11, 0), (), "NasExtSEOutMatK4damp", None),
		"NasExtSEOutMatLoads": (10438, 2, (11, 0), (), "NasExtSEOutMatLoads", None),
		"NasExtSEOutMatMass": (10436, 2, (11, 0), (), "NasExtSEOutMatMass", None),
		"NasExtSEOutMatStiffness": (10435, 2, (11, 0), (), "NasExtSEOutMatStiffness", None),
		"NasExtSEOutOn": (10433, 2, (11, 0), (), "NasExtSEOutOn", None),
		"NasExtSEOutOptAsmbulk": (10443, 2, (11, 0), (), "NasExtSEOutOptAsmbulk", None),
		"NasExtSEOutOptExtbulk": (10444, 2, (11, 0), (), "NasExtSEOutOptExtbulk", None),
		"NasExtSEOutOptGeom": (10442, 2, (11, 0), (), "NasExtSEOutOptGeom", None),
		"NasExtSEOutTo": (10439, 2, (3, 0), (), "NasExtSEOutTo", None),
		"NasExtSEOutUnitID": (10440, 2, (3, 0), (), "NasExtSEOutUnitID", None),
		"NasGCheckMsgLimit": (10088, 2, (3, 0), (), "NasGCheckMsgLimit", None),
		"NasGCheckNone": (10382, 2, (11, 0), (), "NasGCheckNone", None),
		"NasGCheckOn": (10083, 2, (11, 0), (), "NasGCheckOn", None),
		"NasGCheckSummary": (10087, 2, (11, 0), (), "NasGCheckSummary", None),
		"NasGenSpecAbsolute": (10073, 2, (11, 0), (), "NasGenSpecAbsolute", None),
		"NasGenSpecNodeGroup": (10074, 2, (3, 0), (), "NasGenSpecNodeGroup", None),
		"NasGenSpecOn": (10071, 2, (11, 0), (), "NasGenSpecOn", None),
		"NasGenerateHDF5": (15500, 2, (11, 0), (), "NasGenerateHDF5", None),
		"NasHDF5WithCompression": (15501, 2, (11, 0), (), "NasHDF5WithCompression", None),
		"NasHDF5WithInputData": (15502, 2, (11, 0), (), "NasHDF5WithInputData", None),
		"NasInlStepOptADJUST": (15394, 2, (3, 0), (), "NasInlStepOptADJUST", None),
		"NasInlStepOptCREEP": (15366, 2, (11, 0), (), "NasInlStepOptCREEP", None),
		"NasInlStepOptCTRLDEF": (15362, 2, (3, 0), (), "NasInlStepOptCTRLDEF", None),
		"NasInlStepOptConvA": (15411, 2, (11, 0), (), "NasInlStepOptConvA", None),
		"NasInlStepOptConvN": (15410, 2, (11, 0), (), "NasInlStepOptConvN", None),
		"NasInlStepOptConvP": (15407, 2, (11, 0), (), "NasInlStepOptConvP", None),
		"NasInlStepOptConvU": (15406, 2, (11, 0), (), "NasInlStepOptConvU", None),
		"NasInlStepOptConvV": (15409, 2, (11, 0), (), "NasInlStepOptConvV", None),
		"NasInlStepOptConvW": (15408, 2, (11, 0), (), "NasInlStepOptConvW", None),
		"NasInlStepOptDAMP": (15378, 2, (5, 0), (), "NasInlStepOptDAMP", None),
		"NasInlStepOptDTINITF": (15370, 2, (5, 0), (), "NasInlStepOptDTINITF", None),
		"NasInlStepOptDTINITFA": (15399, 2, (5, 0), (), "NasInlStepOptDTINITFA", None),
		"NasInlStepOptDTMAXF": (15372, 2, (5, 0), (), "NasInlStepOptDTMAXF", None),
		"NasInlStepOptDTMINF": (15371, 2, (5, 0), (), "NasInlStepOptDTMINF", None),
		"NasInlStepOptEPSP": (15413, 2, (5, 0), (), "NasInlStepOptEPSP", None),
		"NasInlStepOptEPSU": (15412, 2, (5, 0), (), "NasInlStepOptEPSU", None),
		"NasInlStepOptEPSW": (15414, 2, (5, 0), (), "NasInlStepOptEPSW", None),
		"NasInlStepOptEnableCriteria": (15379, 2, (11, 0), (), "NasInlStepOptEnableCriteria", None),
		"NasInlStepOptFSTRESS": (15421, 2, (5, 0), (), "NasInlStepOptFSTRESS", None),
		"NasInlStepOptGroupIDs": (15385, 2, (12, 0), (), "NasInlStepOptGroupIDs", None),
		"NasInlStepOptID": (15360, 2, (3, 0), (), "NasInlStepOptID", None),
		"NasInlStepOptIDAMP": (15377, 2, (3, 0), (), "NasInlStepOptIDAMP", None),
		"NasInlStepOptINTOUT": (15375, 2, (3, 0), (), "NasInlStepOptINTOUT", None),
		"NasInlStepOptIPHYS": (15380, 2, (3, 0), (), "NasInlStepOptIPHYS", None),
		"NasInlStepOptIncrements": (15384, 2, (12, 0), (), "NasInlStepOptIncrements", None),
		"NasInlStepOptKMETHOD": (15415, 2, (3, 0), (), "NasInlStepOptKMETHOD", None),
		"NasInlStepOptKSTEP": (15416, 2, (3, 0), (), "NasInlStepOptKSTEP", None),
		"NasInlStepOptLIMTAR": (15381, 2, (3, 0), (), "NasInlStepOptLIMTAR", None),
		"NasInlStepOptLSTOL": (15420, 2, (5, 0), (), "NasInlStepOptLSTOL", None),
		"NasInlStepOptLoadStepping": (15367, 2, (3, 0), (), "NasInlStepOptLoadStepping", None),
		"NasInlStepOptMAXALR": (15401, 2, (5, 0), (), "NasInlStepOptMAXALR", None),
		"NasInlStepOptMAXBIS": (15365, 2, (3, 0), (), "NasInlStepOptMAXBIS", None),
		"NasInlStepOptMAXITER": (15363, 2, (3, 0), (), "NasInlStepOptMAXITER", None),
		"NasInlStepOptMAXLS": (15419, 2, (3, 0), (), "NasInlStepOptMAXLS", None),
		"NasInlStepOptMAXQN": (15418, 2, (3, 0), (), "NasInlStepOptMAXQN", None),
		"NasInlStepOptMECH": (15405, 2, (11, 0), (), "NasInlStepOptMECH", None),
		"NasInlStepOptMINALR": (15400, 2, (5, 0), (), "NasInlStepOptMINALR", None),
		"NasInlStepOptMINITER": (15364, 2, (3, 0), (), "NasInlStepOptMINITER", None),
		"NasInlStepOptMRCONV": (15417, 2, (3, 0), (), "NasInlStepOptMRCONV", None),
		"NasInlStepOptMSTEP": (15395, 2, (3, 0), (), "NasInlStepOptMSTEP", None),
		"NasInlStepOptMT1_i": (15390, 2, (12, 0), (), "NasInlStepOptMT1_i", None),
		"NasInlStepOptMT2_i": (15391, 2, (12, 0), (), "NasInlStepOptMT2_i", None),
		"NasInlStepOptMT3_i": (15392, 2, (12, 0), (), "NasInlStepOptMT3_i", None),
		"NasInlStepOptMT4_i": (15393, 2, (12, 0), (), "NasInlStepOptMT4_i", None),
		"NasInlStepOptNDESIR": (15373, 2, (3, 0), (), "NasInlStepOptNDESIR", None),
		"NasInlStepOptNDESIRA": (15403, 2, (3, 0), (), "NasInlStepOptNDESIRA", None),
		"NasInlStepOptNINC": (15368, 2, (3, 0), (), "NasInlStepOptNINC", None),
		"NasInlStepOptNO": (15369, 2, (3, 0), (), "NasInlStepOptNO", None),
		"NasInlStepOptNSMAX": (15376, 2, (3, 0), (), "NasInlStepOptNSMAX", None),
		"NasInlStepOptNSMAXA": (15404, 2, (3, 0), (), "NasInlStepOptNSMAXA", None),
		"NasInlStepOptOn": (15358, 2, (11, 0), (), "NasInlStepOptOn", None),
		"NasInlStepOptRB": (15396, 2, (5, 0), (), "NasInlStepOptRB", None),
		"NasInlStepOptRBIG": (15383, 2, (5, 0), (), "NasInlStepOptRBIG", None),
		"NasInlStepOptRSMALL": (15382, 2, (5, 0), (), "NasInlStepOptRSMALL", None),
		"NasInlStepOptSCALEA": (15402, 2, (5, 0), (), "NasInlStepOptSCALEA", None),
		"NasInlStepOptSFACT": (15374, 2, (5, 0), (), "NasInlStepOptSFACT", None),
		"NasInlStepOptSkipNLSTEP": (15359, 2, (11, 0), (), "NasInlStepOptSkipNLSTEP", None),
		"NasInlStepOptTOTTIM": (15361, 2, (5, 0), (), "NasInlStepOptTOTTIM", None),
		"NasInlStepOptTYPE": (15398, 2, (3, 0), (), "NasInlStepOptTYPE", None),
		"NasInlStepOptUTOL": (15397, 2, (5, 0), (), "NasInlStepOptUTOL", None),
		"NasInlStepOptYT1_i": (15386, 2, (12, 0), (), "NasInlStepOptYT1_i", None),
		"NasInlStepOptYT2_i": (15387, 2, (12, 0), (), "NasInlStepOptYT2_i", None),
		"NasInlStepOptYT3_i": (15388, 2, (12, 0), (), "NasInlStepOptYT3_i", None),
		"NasInlStepOptYT4_i": (15389, 2, (12, 0), (), "NasInlStepOptYT4_i", None),
		"NasLicenseType": (10512, 2, (3, 0), (), "NasLicenseType", None),
		"NasMCheckDataRec": (10097, 2, (11, 0), (), "NasMCheckDataRec", None),
		"NasMCheckDataTol": (10098, 2, (5, 0), (), "NasMCheckDataTol", None),
		"NasMCheckGrndRefNode": (10094, 2, (3, 0), (), "NasMCheckGrndRefNode", None),
		"NasMCheckMaxStrnEn": (10096, 2, (5, 0), (), "NasMCheckMaxStrnEn", None),
		"NasMCheckOn": (10089, 2, (11, 0), (), "NasMCheckOn", None),
		"NasMCheckWtCG": (10091, 2, (11, 0), (), "NasMCheckWtCG", None),
		"NasMCheckWtRefNode": (10092, 2, (3, 0), (), "NasMCheckWtRefNode", None),
		"NasMCheckWtUnits": (10093, 2, (3, 0), (), "NasMCheckWtUnits", None),
		"NasModeDampOverall": (10404, 2, (5, 0), (), "NasModeDampOverall", None),
		"NasModeDesiredRoots": (10056, 2, (3, 0), (), "NasModeDesiredRoots", None),
		"NasModeEigrSet": (10051, 2, (3, 0), (), "NasModeEigrSet", None),
		"NasModeEstRoots": (10055, 2, (3, 0), (), "NasModeEstRoots", None),
		"NasModeMassForm": (10060, 2, (3, 0), (), "NasModeMassForm", None),
		"NasModeMethod": (10052, 2, (3, 0), (), "NasModeMethod", None),
		"NasModeNormDOF": (10059, 2, (3, 0), (), "NasModeNormDOF", None),
		"NasModeNormNode": (10058, 2, (3, 0), (), "NasModeNormNode", None),
		"NasModeNormOpt": (10057, 2, (3, 0), (), "NasModeNormOpt", None),
		"NasModeOn": (10050, 2, (11, 0), (), "NasModeOn", None),
		"NasModeSel": (10604, 2, (8, 0), (), "NasModeSel", None),
		"NasModeSelInc": (10603, 2, (11, 0), (), "NasModeSelInc", None),
		"NasModeSelOn": (10602, 2, (11, 0), (), "NasModeSelOn", None),
		"NasModeSolutionType": (10053, 2, (11, 0), (), "NasModeSolutionType", None),
		"NasModeXYOn": (10061, 2, (11, 0), (), "NasModeXYOn", None),
		"NasModeXYRefNode": (10063, 2, (3, 0), (), "NasModeXYRefNode", None),
		"NasModesComplexConverge": (10321, 2, (5, 0), (), "NasModesComplexConverge", None),
		"NasModesComplexRegionWidth": (10322, 2, (5, 0), (), "NasModesComplexRegionWidth", None),
		"NasModesSkipEigr": (10319, 2, (11, 0), (), "NasModesSkipEigr", None),
		"NasMonitorAeroEnabled": (10545, 2, (11, 0), (), "NasMonitorAeroEnabled", None),
		"NasMonitorElemEnabled": (10619, 2, (11, 0), (), "NasMonitorElemEnabled", None),
		"NasMonitorEnabled": (10533, 2, (11, 0), (), "NasMonitorEnabled", None),
		"NasMonitorLoadEnabled": (10546, 2, (11, 0), (), "NasMonitorLoadEnabled", None),
		"NasMptSetID": (10534, 2, (3, 0), (), "NasMptSetID", None),
		"NasMsNLKGlobalBOLTMETH": (10610, 2, (3, 0), (), "NasMsNLKGlobalBOLTMETH", None),
		"NasMsNLKGlobalEXEFROM": (10543, 2, (3, 0), (), "NasMsNLKGlobalEXEFROM", None),
		"NasMsNLKGlobalFHMETH": (10623, 2, (3, 0), (), "NasMsNLKGlobalFHMETH", None),
		"NasMsNLKGlobalINLY": (10527, 2, (11, 0), (), "NasMsNLKGlobalINLY", None),
		"NasMsNLKGlobalIREF": (10526, 2, (3, 0), (), "NasMsNLKGlobalIREF", None),
		"NasMsNLKGlobalKINI": (10622, 2, (11, 0), (), "NasMsNLKGlobalKINI", None),
		"NasMsNLKGlobalMDLVAL": (10544, 2, (11, 0), (), "NasMsNLKGlobalMDLVAL", None),
		"NasMsNLKGlobalMODEVERS": (10539, 2, (3, 0), (), "NasMsNLKGlobalMODEVERS", None),
		"NasMsNLKGlobalNKINE": (10538, 2, (3, 0), (), "NasMsNLKGlobalNKINE", None),
		"NasMsNLKGlobalOn": (10523, 2, (11, 0), (), "NasMsNLKGlobalOn", None),
		"NasMsNLKGlobalPLSHSOL": (10611, 2, (3, 0), (), "NasMsNLKGlobalPLSHSOL", None),
		"NasMsNLKGlobalPRECPIVO": (10537, 2, (5, 0), (), "NasMsNLKGlobalPRECPIVO", None),
		"NasMsNLKGlobalRESO": (10524, 2, (3, 0), (), "NasMsNLKGlobalRESO", None),
		"NasMsNLKGlobalRESXTRP": (10609, 2, (3, 0), (), "NasMsNLKGlobalRESXTRP", None),
		"NasMsNLKGlobalRSTFROM": (10542, 2, (3, 0), (), "NasMsNLKGlobalRSTFROM", None),
		"NasMsNLKGlobalRSTGEN": (10540, 2, (11, 0), (), "NasMsNLKGlobalRSTGEN", None),
		"NasMsNLKGlobalRSTUNIT": (10541, 2, (3, 0), (), "NasMsNLKGlobalRSTUNIT", None),
		"NasMsNLKGlobalSTRCONV": (10536, 2, (3, 0), (), "NasMsNLKGlobalSTRCONV", None),
		"NasMsNLKGlobalSTRMEAS": (10525, 2, (3, 0), (), "NasMsNLKGlobalSTRMEAS", None),
		"NasMsNLKGlobalSTROUT": (10535, 2, (3, 0), (), "NasMsNLKGlobalSTROUT", None),
		"NasMscCtAUGDIST": (10480, 2, (5, 0), (), "NasMscCtAUGDIST", None),
		"NasMscCtAUGMENT": (10469, 2, (3, 0), (), "NasMscCtAUGMENT", None),
		"NasMscCtBEAMB": (10470, 2, (11, 0), (), "NasMscCtBEAMB", None),
		"NasMscCtBIAS": (10481, 2, (5, 0), (), "NasMscCtBIAS", None),
		"NasMscCtDDULMT": (10465, 2, (5, 0), (), "NasMscCtDDULMT", None),
		"NasMscCtERRBAS": (10471, 2, (11, 0), (), "NasMscCtERRBAS", None),
		"NasMscCtERROR": (10482, 2, (5, 0), (), "NasMscCtERROR", None),
		"NasMscCtEnable": (10464, 2, (11, 0), (), "NasMscCtEnable", None),
		"NasMscCtFGCFLG": (10551, 2, (11, 0), (), "NasMscCtFGCFLG", None),
		"NasMscCtFGCNST": (10552, 2, (5, 0), (), "NasMscCtFGCNST", None),
		"NasMscCtFGCNSTI": (10556, 2, (3, 0), (), "NasMscCtFGCNSTI", None),
		"NasMscCtFGCNSTR": (10554, 2, (3, 0), (), "NasMscCtFGCNSTR", None),
		"NasMscCtFGCRCEN": (10558, 2, (3, 0), (), "NasMscCtFGCRCEN", None),
		"NasMscCtFGCTST": (10553, 2, (5, 0), (), "NasMscCtFGCTST", None),
		"NasMscCtFGCTSTI": (10557, 2, (3, 0), (), "NasMscCtFGCTSTI", None),
		"NasMscCtFGCTSTR": (10555, 2, (3, 0), (), "NasMscCtFGCTSTR", None),
		"NasMscCtFNTOL": (10483, 2, (5, 0), (), "NasMscCtFNTOL", None),
		"NasMscCtFTYPE": (10472, 2, (3, 0), (), "NasMscCtFTYPE", None),
		"NasMscCtIBSEP": (10473, 2, (3, 0), (), "NasMscCtIBSEP", None),
		"NasMscCtICSEP": (10474, 2, (3, 0), (), "NasMscCtICSEP", None),
		"NasMscCtLINCNT": (10548, 2, (11, 0), (), "NasMscCtLINCNT", None),
		"NasMscCtMAXSEP": (10475, 2, (3, 0), (), "NasMscCtMAXSEP", None),
		"NasMscCtMETHOD": (10476, 2, (3, 0), (), "NasMscCtMETHOD", None),
		"NasMscCtNLGLUE": (10477, 2, (11, 0), (), "NasMscCtNLGLUE", None),
		"NasMscCtNODSEP": (10478, 2, (3, 0), (), "NasMscCtNODSEP", None),
		"NasMscCtOn": (10463, 2, (11, 0), (), "NasMscCtOn", None),
		"NasMscCtPENALT": (10484, 2, (5, 0), (), "NasMscCtPENALT", None),
		"NasMscCtRVCNST": (10466, 2, (5, 0), (), "NasMscCtRVCNST", None),
		"NasMscCtSEGSYM": (10479, 2, (11, 0), (), "NasMscCtSEGSYM", None),
		"NasMscCtSFNPNLT": (10549, 2, (5, 0), (), "NasMscCtSFNPNLT", None),
		"NasMscCtSFTPNLT": (10550, 2, (5, 0), (), "NasMscCtSFTPNLT", None),
		"NasMscCtSLDLMT": (10467, 2, (5, 0), (), "NasMscCtSLDLMT", None),
		"NasMscCtSTKSLP": (10485, 2, (5, 0), (), "NasMscCtSTKSLP", None),
		"NasMscCtTAUGMNT": (10468, 2, (11, 0), (), "NasMscCtTAUGMNT", None),
		"NasMscCtTHKOFF": (10547, 2, (11, 0), (), "NasMscCtTHKOFF", None),
		"NasMscCtTPENALT": (10486, 2, (5, 0), (), "NasMscCtTPENALT", None),
		"NasMsnlCntALFA": (15294, 2, (5, 0), (), "NasMsnlCntALFA", None),
		"NasMsnlCntAutotim": (15223, 2, (11, 0), (), "NasMsnlCntAutotim", None),
		"NasMsnlCntBETA": (15292, 2, (5, 0), (), "NasMsnlCntBETA", None),
		"NasMsnlCntCRLIMR": (15427, 2, (5, 0), (), "NasMsnlCntCRLIMR", None),
		"NasMsnlCntCntmdiv": (15206, 2, (3, 0), (), "NasMsnlCntCntmdiv", None),
		"NasMsnlCntCrcerat": (15212, 2, (5, 0), (), "NasMsnlCntCrcerat", None),
		"NasMsnlCntCrcinc": (15213, 2, (5, 0), (), "NasMsnlCntCrcinc", None),
		"NasMsnlCntCreep": (15214, 2, (11, 0), (), "NasMsnlCntCreep", None),
		"NasMsnlCntCricoff": (15215, 2, (5, 0), (), "NasMsnlCntCricoff", None),
		"NasMsnlCntCrinfac": (15216, 2, (5, 0), (), "NasMsnlCntCrinfac", None),
		"NasMsnlCntCrmfmn": (15217, 2, (5, 0), (), "NasMsnlCntCrmfmn", None),
		"NasMsnlCntCrmfmx": (15218, 2, (5, 0), (), "NasMsnlCntCrmfmx", None),
		"NasMsnlCntCrteabs": (15219, 2, (5, 0), (), "NasMsnlCntCrteabs", None),
		"NasMsnlCntCrterel": (15221, 2, (5, 0), (), "NasMsnlCntCrterel", None),
		"NasMsnlCntDtinit": (15224, 2, (5, 0), (), "NasMsnlCntDtinit", None),
		"NasMsnlCntDtmax": (15225, 2, (5, 0), (), "NasMsnlCntDtmax", None),
		"NasMsnlCntDtmin": (15226, 2, (5, 0), (), "NasMsnlCntDtmin", None),
		"NasMsnlCntDtsbcdt": (15227, 2, (11, 0), (), "NasMsnlCntDtsbcdt", None),
		"NasMsnlCntEpsbolt": (15190, 2, (5, 0), (), "NasMsnlCntEpsbolt", None),
		"NasMsnlCntEqmfmin": (15228, 2, (5, 0), (), "NasMsnlCntEqmfmin", None),
		"NasMsnlCntEqmfmx": (15229, 2, (5, 0), (), "NasMsnlCntEqmfmx", None),
		"NasMsnlCntFollowk": (15200, 2, (11, 0), (), "NasMsnlCntFollowk", None),
		"NasMsnlCntFsymtol": (15207, 2, (5, 0), (), "NasMsnlCntFsymtol", None),
		"NasMsnlCntGAMA": (15293, 2, (5, 0), (), "NasMsnlCntGAMA", None),
		"NasMsnlCntINACCN": (15313, 2, (11, 0), (), "NasMsnlCntINACCN", None),
		"NasMsnlCntINERTIA": (15314, 2, (11, 0), (), "NasMsnlCntINERTIA", None),
		"NasMsnlCntItrbolt": (15192, 2, (3, 0), (), "NasMsnlCntItrbolt", None),
		"NasMsnlCntKMODSCL": (15444, 2, (5, 0), (), "NasMsnlCntKMODSCL", None),
		"NasMsnlCntKMODTN": (15426, 2, (3, 0), (), "NasMsnlCntKMODTN", None),
		"NasMsnlCntKsym": (15208, 2, (3, 0), (), "NasMsnlCntKsym", None),
		"NasMsnlCntKsymtol": (15209, 2, (5, 0), (), "NasMsnlCntKsymtol", None),
		"NasMsnlCntKupdate": (15201, 2, (3, 0), (), "NasMsnlCntKupdate", None),
		"NasMsnlCntLOADOFF": (15315, 2, (3, 0), (), "NasMsnlCntLOADOFF", None),
		"NasMsnlCntLSTCONV": (15445, 2, (11, 0), (), "NasMsnlCntLSTCONV", None),
		"NasMsnlCntLvar": (15195, 2, (11, 0), (), "NasMsnlCntLvar", None),
		"NasMsnlCntMSFAC": (15317, 2, (5, 0), (), "NasMsnlCntMSFAC", None),
		"NasMsnlCntMSTAB": (15316, 2, (11, 0), (), "NasMsnlCntMSTAB", None),
		"NasMsnlCntMaxbis": (15186, 2, (3, 0), (), "NasMsnlCntMaxbis", None),
		"NasMsnlCntMaxdiv": (15187, 2, (3, 0), (), "NasMsnlCntMaxdiv", None),
		"NasMsnlCntMaxiter": (15188, 2, (3, 0), (), "NasMsnlCntMaxiter", None),
		"NasMsnlCntMaxqn": (15189, 2, (3, 0), (), "NasMsnlCntMaxqn", None),
		"NasMsnlCntMisfblt": (15193, 2, (5, 0), (), "NasMsnlCntMisfblt", None),
		"NasMsnlCntMsglvl": (15196, 2, (3, 0), (), "NasMsnlCntMsglvl", None),
		"NasMsnlCntMsglvlb": (15194, 2, (3, 0), (), "NasMsnlCntMsglvlb", None),
		"NasMsnlCntMsglvlc": (15210, 2, (3, 0), (), "NasMsnlCntMsglvlc", None),
		"NasMsnlCntNORMP": (15318, 2, (3, 0), (), "NasMsnlCntNORMP", None),
		"NasMsnlCntNORMU": (15319, 2, (3, 0), (), "NasMsnlCntNORMU", None),
		"NasMsnlCntOn": (15182, 2, (11, 0), (), "NasMsnlCntOn", None),
		"NasMsnlCntPLLIM": (15428, 2, (5, 0), (), "NasMsnlCntPLLIM", None),
		"NasMsnlCntPLLIMF": (15429, 2, (5, 0), (), "NasMsnlCntPLLIMF", None),
		"NasMsnlCntPLSHUT": (15423, 2, (11, 0), (), "NasMsnlCntPLSHUT", None),
		"NasMsnlCntPlastic": (15222, 2, (11, 0), (), "NasMsnlCntPlastic", None),
		"NasMsnlCntQuasiNewtonIter": (15356, 2, (3, 0), (), "NasMsnlCntQuasiNewtonIter", None),
		"NasMsnlCntREFP": (15320, 2, (5, 0), (), "NasMsnlCntREFP", None),
		"NasMsnlCntREFU": (15321, 2, (5, 0), (), "NasMsnlCntREFU", None),
		"NasMsnlCntRFVAR": (15357, 2, (3, 0), (), "NasMsnlCntRFVAR", None),
		"NasMsnlCntRHOINF": (15322, 2, (5, 0), (), "NasMsnlCntRHOINF", None),
		"NasMsnlCntSkipNLCNTL": (15183, 2, (11, 0), (), "NasMsnlCntSkipNLCNTL", None),
		"NasMsnlCntSolver": (15197, 2, (3, 0), (), "NasMsnlCntSolver", None),
		"NasMsnlCntSpink": (15202, 2, (11, 0), (), "NasMsnlCntSpink", None),
		"NasMsnlCntStfoptn": (15203, 2, (3, 0), (), "NasMsnlCntStfoptn", None),
		"NasMsnlCntStressk": (15204, 2, (11, 0), (), "NasMsnlCntStressk", None),
		"NasMsnlCntTETA": (15295, 2, (5, 0), (), "NasMsnlCntTETA", None),
		"NasMsnlCntTINTMTH": (15291, 2, (3, 0), (), "NasMsnlCntTINTMTH", None),
		"NasMsnlCntThrmst": (15198, 2, (11, 0), (), "NasMsnlCntThrmst", None),
		"NasMsnlCntTsccr": (15230, 2, (3, 0), (), "NasMsnlCntTsccr", None),
		"NasMsnlCntTsceq": (15231, 2, (11, 0), (), "NasMsnlCntTsceq", None),
		"NasMsnlCntTscumat": (15232, 2, (11, 0), (), "NasMsnlCntTscumat", None),
		"NasMsnlCntTstepk": (15205, 2, (11, 0), (), "NasMsnlCntTstepk", None),
		"NasMsnlCntTvar": (15199, 2, (11, 0), (), "NasMsnlCntTvar", None),
		"NasMsnlCntUmfmin": (15233, 2, (5, 0), (), "NasMsnlCntUmfmin", None),
		"NasMsnlCntUmfmx": (15234, 2, (5, 0), (), "NasMsnlCntUmfmx", None),
		"NasMsnlCntUsolver": (15211, 2, (3, 0), (), "NasMsnlCntUsolver", None),
		"NasMsnlCntZerbolt": (15191, 2, (5, 0), (), "NasMsnlCntZerbolt", None),
		"NasMsnlCntdCrteco": (15220, 2, (5, 0), (), "NasMsnlCntdCrteco", None),
		"NasMsnlModalMassForm": (15352, 2, (3, 0), (), "NasMsnlModalMassForm", None),
		"NasMsnlTSEndTime": (15288, 2, (12, 0), (), "NasMsnlTSEndTime", None),
		"NasMsnlTSNumIncrements": (15287, 2, (12, 0), (), "NasMsnlTSNumIncrements", None),
		"NasMsnlTSOn": (15285, 2, (11, 0), (), "NasMsnlTSOn", None),
		"NasMsnlTSOutputFreq": (15290, 2, (12, 0), (), "NasMsnlTSOutputFreq", None),
		"NasMsnlTSSkipFactor": (15289, 2, (12, 0), (), "NasMsnlTSSkipFactor", None),
		"NasMsnlTSSkipTSTEP": (15286, 2, (11, 0), (), "NasMsnlTSSkipTSTEP", None),
		"NasMsnlkCnt2ALFA": (15253, 2, (5, 0), (), "NasMsnlkCnt2ALFA", None),
		"NasMsnlkCnt2AMAX": (15260, 2, (5, 0), (), "NasMsnlkCnt2AMAX", None),
		"NasMsnlkCnt2AMIN": (15259, 2, (5, 0), (), "NasMsnlkCnt2AMIN", None),
		"NasMsnlkCnt2AUTOTIM": (15306, 2, (11, 0), (), "NasMsnlkCnt2AUTOTIM", None),
		"NasMsnlkCnt2BALF": (15451, 2, (3, 0), (), "NasMsnlkCnt2BALF", None),
		"NasMsnlkCnt2BETA": (15251, 2, (5, 0), (), "NasMsnlkCnt2BETA", None),
		"NasMsnlkCnt2CIBL": (15272, 2, (11, 0), (), "NasMsnlkCnt2CIBL", None),
		"NasMsnlkCnt2CREEP": (15244, 2, (11, 0), (), "NasMsnlkCnt2CREEP", None),
		"NasMsnlkCnt2CRICOFF": (15432, 2, (5, 0), (), "NasMsnlkCnt2CRICOFF", None),
		"NasMsnlkCnt2CRINFAC": (15298, 2, (5, 0), (), "NasMsnlkCnt2CRINFAC", None),
		"NasMsnlkCnt2CRLIMR": (15433, 2, (5, 0), (), "NasMsnlkCnt2CRLIMR", None),
		"NasMsnlkCnt2DCON": (15280, 2, (5, 0), (), "NasMsnlkCnt2DCON", None),
		"NasMsnlkCnt2DEFLIM": (15239, 2, (5, 0), (), "NasMsnlkCnt2DEFLIM", None),
		"NasMsnlkCnt2DIPR": (15242, 2, (11, 0), (), "NasMsnlkCnt2DIPR", None),
		"NasMsnlkCnt2DISLIM": (15237, 2, (5, 0), (), "NasMsnlkCnt2DISLIM", None),
		"NasMsnlkCnt2DTI0": (15273, 2, (5, 0), (), "NasMsnlkCnt2DTI0", None),
		"NasMsnlkCnt2DTINIT": (15307, 2, (5, 0), (), "NasMsnlkCnt2DTINIT", None),
		"NasMsnlkCnt2DTMAX": (15309, 2, (5, 0), (), "NasMsnlkCnt2DTMAX", None),
		"NasMsnlkCnt2DTMIN": (15308, 2, (5, 0), (), "NasMsnlkCnt2DTMIN", None),
		"NasMsnlkCnt2EQMFMIN": (15311, 2, (5, 0), (), "NasMsnlkCnt2EQMFMIN", None),
		"NasMsnlkCnt2EQMFMX": (15310, 2, (5, 0), (), "NasMsnlkCnt2EQMFMX", None),
		"NasMsnlkCnt2ERCD": (15248, 2, (11, 0), (), "NasMsnlkCnt2ERCD", None),
		"NasMsnlkCnt2GAMA": (15252, 2, (5, 0), (), "NasMsnlkCnt2GAMA", None),
		"NasMsnlkCnt2HMAX": (15275, 2, (5, 0), (), "NasMsnlkCnt2HMAX", None),
		"NasMsnlkCnt2HMIN": (15274, 2, (5, 0), (), "NasMsnlkCnt2HMIN", None),
		"NasMsnlkCnt2HPRCO": (15256, 2, (5, 0), (), "NasMsnlkCnt2HPRCO", None),
		"NasMsnlkCnt2IA12": (15453, 2, (3, 0), (), "NasMsnlkCnt2IA12", None),
		"NasMsnlkCnt2IA16": (15441, 2, (3, 0), (), "NasMsnlkCnt2IA16", None),
		"NasMsnlkCnt2IA19": (15442, 2, (3, 0), (), "NasMsnlkCnt2IA19", None),
		"NasMsnlkCnt2IA4": (15452, 2, (3, 0), (), "NasMsnlkCnt2IA4", None),
		"NasMsnlkCnt2IAR0": (15323, 2, (11, 0), (), "NasMsnlkCnt2IAR0", None),
		"NasMsnlkCnt2ILNS": (15257, 2, (3, 0), (), "NasMsnlkCnt2ILNS", None),
		"NasMsnlkCnt2IMPG": (15282, 2, (3, 0), (), "NasMsnlkCnt2IMPG", None),
		"NasMsnlkCnt2IMPL": (15250, 2, (3, 0), (), "NasMsnlkCnt2IMPL", None),
		"NasMsnlkCnt2IMPR": (15283, 2, (3, 0), (), "NasMsnlkCnt2IMPR", None),
		"NasMsnlkCnt2IMPV": (15284, 2, (3, 0), (), "NasMsnlkCnt2IMPV", None),
		"NasMsnlkCnt2INERTIA": (15297, 2, (3, 0), (), "NasMsnlkCnt2INERTIA", None),
		"NasMsnlkCnt2IRDY": (15450, 2, (3, 0), (), "NasMsnlkCnt2IRDY", None),
		"NasMsnlkCnt2ISTO": (15449, 2, (3, 0), (), "NasMsnlkCnt2ISTO", None),
		"NasMsnlkCnt2IT1K": (15268, 2, (3, 0), (), "NasMsnlkCnt2IT1K", None),
		"NasMsnlkCnt2IT2K": (15269, 2, (3, 0), (), "NasMsnlkCnt2IT2K", None),
		"NasMsnlkCnt2IT3K": (15270, 2, (3, 0), (), "NasMsnlkCnt2IT3K", None),
		"NasMsnlkCnt2ITEREF": (15299, 2, (3, 0), (), "NasMsnlkCnt2ITEREF", None),
		"NasMsnlkCnt2ITHE": (15430, 2, (3, 0), (), "NasMsnlkCnt2ITHE", None),
		"NasMsnlkCnt2ITMA": (15261, 2, (3, 0), (), "NasMsnlkCnt2ITMA", None),
		"NasMsnlkCnt2KMODTN": (15439, 2, (3, 0), (), "NasMsnlkCnt2KMODTN", None),
		"NasMsnlkCnt2KUPDATE": (15443, 2, (3, 0), (), "NasMsnlkCnt2KUPDATE", None),
		"NasMsnlkCnt2LL2": (15431, 2, (3, 0), (), "NasMsnlkCnt2LL2", None),
		"NasMsnlkCnt2LVAR": (15240, 2, (11, 0), (), "NasMsnlkCnt2LVAR", None),
		"NasMsnlkCnt2MADI": (15247, 2, (5, 0), (), "NasMsnlkCnt2MADI", None),
		"NasMsnlkCnt2MATSYM": (15296, 2, (11, 0), (), "NasMsnlkCnt2MATSYM", None),
		"NasMsnlkCnt2MAXBIS": (15436, 2, (3, 0), (), "NasMsnlkCnt2MAXBIS", None),
		"NasMsnlkCnt2MSGLVLC": (15440, 2, (3, 0), (), "NasMsnlkCnt2MSGLVLC", None),
		"NasMsnlkCnt2NORM": (15243, 2, (11, 0), (), "NasMsnlkCnt2NORM", None),
		"NasMsnlkCnt2OTRE": (15324, 2, (3, 0), (), "NasMsnlkCnt2OTRE", None),
		"NasMsnlkCnt2PLAS": (15271, 2, (3, 0), (), "NasMsnlkCnt2PLAS", None),
		"NasMsnlkCnt2PLASTIC": (15245, 2, (11, 0), (), "NasMsnlkCnt2PLASTIC", None),
		"NasMsnlkCnt2PLLIM": (15434, 2, (5, 0), (), "NasMsnlkCnt2PLLIM", None),
		"NasMsnlkCnt2PLSHUT": (15424, 2, (11, 0), (), "NasMsnlkCnt2PLSHUT", None),
		"NasMsnlkCnt2PRCE": (15266, 2, (5, 0), (), "NasMsnlkCnt2PRCE", None),
		"NasMsnlkCnt2PRCF": (15325, 2, (5, 0), (), "NasMsnlkCnt2PRCF", None),
		"NasMsnlkCnt2PRCO": (15255, 2, (5, 0), (), "NasMsnlkCnt2PRCO", None),
		"NasMsnlkCnt2PRCQ": (15264, 2, (5, 0), (), "NasMsnlkCnt2PRCQ", None),
		"NasMsnlkCnt2PRCR": (15262, 2, (5, 0), (), "NasMsnlkCnt2PRCR", None),
		"NasMsnlkCnt2PRCS": (15281, 2, (5, 0), (), "NasMsnlkCnt2PRCS", None),
		"NasMsnlkCnt2PRDE": (15448, 2, (5, 0), (), "NasMsnlkCnt2PRDE", None),
		"NasMsnlkCnt2PRDR": (15447, 2, (5, 0), (), "NasMsnlkCnt2PRDR", None),
		"NasMsnlkCnt2PRED": (15249, 2, (5, 0), (), "NasMsnlkCnt2PRED", None),
		"NasMsnlkCnt2PRLN": (15258, 2, (5, 0), (), "NasMsnlkCnt2PRLN", None),
		"NasMsnlkCnt2RDOW": (15277, 2, (5, 0), (), "NasMsnlkCnt2RDOW", None),
		"NasMsnlkCnt2REFE": (15267, 2, (5, 0), (), "NasMsnlkCnt2REFE", None),
		"NasMsnlkCnt2REFP": (15263, 2, (5, 0), (), "NasMsnlkCnt2REFP", None),
		"NasMsnlkCnt2REFU": (15265, 2, (5, 0), (), "NasMsnlkCnt2REFU", None),
		"NasMsnlkCnt2RELC": (15279, 2, (5, 0), (), "NasMsnlkCnt2RELC", None),
		"NasMsnlkCnt2RFVAR": (15446, 2, (3, 0), (), "NasMsnlkCnt2RFVAR", None),
		"NasMsnlkCnt2RHOINF": (15435, 2, (5, 0), (), "NasMsnlkCnt2RHOINF", None),
		"NasMsnlkCnt2RJPN": (15302, 2, (3, 0), (), "NasMsnlkCnt2RJPN", None),
		"NasMsnlkCnt2RJPZ": (15301, 2, (11, 0), (), "NasMsnlkCnt2RJPZ", None),
		"NasMsnlkCnt2ROTLIM": (15238, 2, (5, 0), (), "NasMsnlkCnt2ROTLIM", None),
		"NasMsnlkCnt2RSUB": (15278, 2, (3, 0), (), "NasMsnlkCnt2RSUB", None),
		"NasMsnlkCnt2RUP": (15276, 2, (5, 0), (), "NasMsnlkCnt2RUP", None),
		"NasMsnlkCnt2STAB": (15246, 2, (5, 0), (), "NasMsnlkCnt2STAB", None),
		"NasMsnlkCnt2SkipNLCNTL2": (15236, 2, (11, 0), (), "NasMsnlkCnt2SkipNLCNTL2", None),
		"NasMsnlkCnt2TETA": (15254, 2, (5, 0), (), "NasMsnlkCnt2TETA", None),
		"NasMsnlkCnt2TINTMTH": (15312, 2, (3, 0), (), "NasMsnlkCnt2TINTMTH", None),
		"NasMsnlkCnt2TSDYN": (15300, 2, (11, 0), (), "NasMsnlkCnt2TSDYN", None),
		"NasMsnlkCnt2TSVSC": (15303, 2, (11, 0), (), "NasMsnlkCnt2TSVSC", None),
		"NasMsnlkCnt2TVAR": (15241, 2, (11, 0), (), "NasMsnlkCnt2TVAR", None),
		"NasMsnlkCnt2VSCOSN": (15305, 2, (3, 0), (), "NasMsnlkCnt2VSCOSN", None),
		"NasMsnlkCnt2VSCOTE": (15304, 2, (5, 0), (), "NasMsnlkCnt2VSCOTE", None),
		"NasMsnlkCnt2on": (15235, 2, (11, 0), (), "NasMsnlkCnt2on", None),
		"NasMsnlkJCON": (15422, 2, (11, 0), (), "NasMsnlkJCON", None),
		"NasNXStratAlpha": (10241, 2, (5, 0), (), "NasNXStratAlpha", None),
		"NasNXStratAtsdamp": (10266, 2, (5, 0), (), "NasNXStratAtsdamp", None),
		"NasNXStratAtsdfac": (10264, 2, (5, 0), (), "NasNXStratAtsdfac", None),
		"NasNXStratAtslows": (10265, 2, (11, 0), (), "NasNXStratAtslows", None),
		"NasNXStratAtsmass": (10412, 2, (5, 0), (), "NasNXStratAtsmass", None),
		"NasNXStratAtsmxdt": (10262, 2, (5, 0), (), "NasNXStratAtsmxdt", None),
		"NasNXStratAtsnext": (10263, 2, (3, 0), (), "NasNXStratAtsnext", None),
		"NasNXStratAtssubd": (10261, 2, (3, 0), (), "NasNXStratAtssubd", None),
		"NasNXStratAuto": (10230, 2, (3, 0), (), "NasNXStratAuto", None),
		"NasNXStratBeama": (10285, 2, (5, 0), (), "NasNXStratBeama", None),
		"NasNXStratBeamalg": (10497, 2, (11, 0), (), "NasNXStratBeamalg", None),
		"NasNXStratBeame": (10284, 2, (5, 0), (), "NasNXStratBeame", None),
		"NasNXStratBoltstp": (10369, 2, (3, 0), (), "NasNXStratBoltstp", None),
		"NasNXStratConvcri": (10249, 2, (3, 0), (), "NasNXStratConvcri", None),
		"NasNXStratCstype": (10299, 2, (3, 0), (), "NasNXStratCstype", None),
		"NasNXStratCtdamp": (10363, 2, (3, 0), (), "NasNXStratCtdamp", None),
		"NasNXStratCtdampN": (10364, 2, (5, 0), (), "NasNXStratCtdampN", None),
		"NasNXStratCtdampT": (10365, 2, (5, 0), (), "NasNXStratCtdampT", None),
		"NasNXStratCtdisp": (10362, 2, (3, 0), (), "NasNXStratCtdisp", None),
		"NasNXStratCvssval": (10372, 2, (11, 0), (), "NasNXStratCvssval", None),
		"NasNXStratDelta": (10242, 2, (5, 0), (), "NasNXStratDelta", None),
		"NasNXStratDispopt": (10239, 2, (11, 0), (), "NasNXStratDispopt", None),
		"NasNXStratDmnorm": (10257, 2, (5, 0), (), "NasNXStratDmnorm", None),
		"NasNXStratDnorm": (10256, 2, (5, 0), (), "NasNXStratDnorm", None),
		"NasNXStratDrillkf": (10376, 2, (5, 0), (), "NasNXStratDrillkf", None),
		"NasNXStratDtdelay": (10236, 2, (5, 0), (), "NasNXStratDtdelay", None),
		"NasNXStratDtol": (10255, 2, (5, 0), (), "NasNXStratDtol", None),
		"NasNXStratElcv": (10280, 2, (11, 0), (), "NasNXStratElcv", None),
		"NasNXStratElrescs": (10323, 2, (11, 0), (), "NasNXStratElrescs", None),
		"NasNXStratEnlsth": (10260, 2, (5, 0), (), "NasNXStratEnlsth", None),
		"NasNXStratEpsia": (10244, 2, (5, 0), (), "NasNXStratEpsia", None),
		"NasNXStratEpsib": (10245, 2, (5, 0), (), "NasNXStratEpsib", None),
		"NasNXStratEpsii": (10246, 2, (5, 0), (), "NasNXStratEpsii", None),
		"NasNXStratEqrbar": (10281, 2, (3, 0), (), "NasNXStratEqrbar", None),
		"NasNXStratEqrbe2": (10282, 2, (3, 0), (), "NasNXStratEqrbe2", None),
		"NasNXStratEtol": (10250, 2, (5, 0), (), "NasNXStratEtol", None),
		"NasNXStratIcmode": (10293, 2, (3, 0), (), "NasNXStratIcmode", None),
		"NasNXStratImpact": (10274, 2, (3, 0), (), "NasNXStratImpact", None),
		"NasNXStratIrint": (10278, 2, (3, 0), (), "NasNXStratIrint", None),
		"NasNXStratItemax": (10243, 2, (3, 0), (), "NasNXStratItemax", None),
		"NasNXStratLdccont": (10272, 2, (11, 0), (), "NasNXStratLdccont", None),
		"NasNXStratLdcdisp": (10269, 2, (5, 0), (), "NasNXStratLdcdisp", None),
		"NasNXStratLdcdmax": (10271, 2, (5, 0), (), "NasNXStratLdcdmax", None),
		"NasNXStratLdcdof": (10268, 2, (3, 0), (), "NasNXStratLdcdof", None),
		"NasNXStratLdcgrid": (10267, 2, (3, 0), (), "NasNXStratLdcgrid", None),
		"NasNXStratLdcimax": (10270, 2, (5, 0), (), "NasNXStratLdcimax", None),
		"NasNXStratLdcsubd": (10273, 2, (3, 0), (), "NasNXStratLdcsubd", None),
		"NasNXStratLoadopt": (10240, 2, (11, 0), (), "NasNXStratLoadopt", None),
		"NasNXStratLsearch": (10247, 2, (3, 0), (), "NasNXStratLsearch", None),
		"NasNXStratLslower": (10377, 2, (5, 0), (), "NasNXStratLslower", None),
		"NasNXStratLsupper": (10378, 2, (5, 0), (), "NasNXStratLsupper", None),
		"NasNXStratMasstyp": (10232, 2, (11, 0), (), "NasNXStratMasstyp", None),
		"NasNXStratMaxDisp": (10368, 2, (5, 0), (), "NasNXStratMaxDisp", None),
		"NasNXStratMaxite": (10248, 2, (3, 0), (), "NasNXStratMaxite", None),
		"NasNXStratModexNew": (10413, 2, (3, 0), (), "NasNXStratModexNew", None),
		"NasNXStratMsfac": (10235, 2, (5, 0), (), "NasNXStratMsfac", None),
		"NasNXStratMstab": (10234, 2, (11, 0), (), "NasNXStratMstab", None),
		"NasNXStratNposit": (10231, 2, (11, 0), (), "NasNXStratNposit", None),
		"NasNXStratNsubgrp": (10279, 2, (3, 0), (), "NasNXStratNsubgrp", None),
		"NasNXStratNsupp": (10275, 2, (3, 0), (), "NasNXStratNsupp", None),
		"NasNXStratOn": (10228, 2, (11, 0), (), "NasNXStratOn", None),
		"NasNXStratPlasalg": (10502, 2, (3, 0), (), "NasNXStratPlasalg", None),
		"NasNXStratRblcrit": (10286, 2, (5, 0), (), "NasNXStratRblcrit", None),
		"NasNXStratRconsm": (10259, 2, (5, 0), (), "NasNXStratRconsm", None),
		"NasNXStratRctol": (10254, 2, (5, 0), (), "NasNXStratRctol", None),
		"NasNXStratRmnorm": (10253, 2, (5, 0), (), "NasNXStratRmnorm", None),
		"NasNXStratRnorm": (10252, 2, (5, 0), (), "NasNXStratRnorm", None),
		"NasNXStratRtalg": (10374, 2, (11, 0), (), "NasNXStratRtalg", None),
		"NasNXStratRtol": (10251, 2, (5, 0), (), "NasNXStratRtol", None),
		"NasNXStratSdofang": (10237, 2, (5, 0), (), "NasNXStratSdofang", None),
		"NasNXStratSkipFactor": (10297, 2, (12, 0), (), "NasNXStratSkipFactor", None),
		"NasNXStratSolver": (10229, 2, (3, 0), (), "NasNXStratSolver", None),
		"NasNXStratSpringk": (10283, 2, (5, 0), (), "NasNXStratSpringk", None),
		"NasNXStratStol": (10258, 2, (5, 0), (), "NasNXStratStol", None),
		"NasNXStratTimeIncrement": (10296, 2, (12, 0), (), "NasNXStratTimeIncrement", None),
		"NasNXStratTimeSteps": (10295, 2, (12, 0), (), "NasNXStratTimeSteps", None),
		"NasNXStratTint": (10233, 2, (3, 0), (), "NasNXStratTint", None),
		"NasNXStratTnslcf": (10375, 2, (11, 0), (), "NasNXStratTnslcf", None),
		"NasNXStratTstart": (10277, 2, (5, 0), (), "NasNXStratTstart", None),
		"NasNXStratUlform": (10294, 2, (3, 0), (), "NasNXStratUlform", None),
		"NasNXStratUpform": (10238, 2, (11, 0), (), "NasNXStratUpform", None),
		"NasNXStratXdtcal": (10288, 2, (3, 0), (), "NasNXStratXdtcal", None),
		"NasNXStratXdtfac": (10289, 2, (5, 0), (), "NasNXStratXdtfac", None),
		"NasNXStratXdtmin1": (10291, 2, (5, 0), (), "NasNXStratXdtmin1", None),
		"NasNXStratXdtmin2": (10292, 2, (5, 0), (), "NasNXStratXdtmin2", None),
		"NasNXStratXmscale": (10290, 2, (5, 0), (), "NasNXStratXmscale", None),
		"NasNXStratXstep": (10287, 2, (3, 0), (), "NasNXStratXstep", None),
		"NasNXStratXtcurve": (10373, 2, (11, 0), (), "NasNXStratXtcurve", None),
		"NasNonlinAdapt": (10511, 2, (11, 0), (), "NasNonlinAdapt", None),
		"NasNonlinBehaviorASSM": (10585, 2, (3, 0), (), "NasNonlinBehaviorASSM", None),
		"NasNonlinBehaviorCPROJ": (10597, 2, (11, 0), (), "NasNonlinBehaviorCPROJ", None),
		"NasNonlinBehaviorCreepExp": (10581, 2, (3, 0), (), "NasNonlinBehaviorCreepExp", None),
		"NasNonlinBehaviorCreepImp": (10584, 2, (3, 0), (), "NasNonlinBehaviorCreepImp", None),
		"NasNonlinBehaviorCreepOn": (10596, 2, (11, 0), (), "NasNonlinBehaviorCreepOn", None),
		"NasNonlinBehaviorCreepType": (10583, 2, (11, 0), (), "NasNonlinBehaviorCreepType", None),
		"NasNonlinBehaviorDIRECT": (10590, 2, (3, 0), (), "NasNonlinBehaviorDIRECT", None),
		"NasNonlinBehaviorEnable": (10582, 2, (11, 0), (), "NasNonlinBehaviorEnable", None),
		"NasNonlinBehaviorIPRINT": (10592, 2, (3, 0), (), "NasNonlinBehaviorIPRINT", None),
		"NasNonlinBehaviorLRGSTRN": (10587, 2, (3, 0), (), "NasNonlinBehaviorLRGSTRN", None),
		"NasNonlinBehaviorOn": (10580, 2, (11, 0), (), "NasNonlinBehaviorOn", None),
		"NasNonlinBehaviorPROPBEH": (10589, 2, (3, 0), (), "NasNonlinBehaviorPROPBEH", None),
		"NasNonlinBehaviorPROPMAP": (10588, 2, (3, 0), (), "NasNonlinBehaviorPROPMAP", None),
		"NasNonlinBehaviorTHICKOP": (10591, 2, (5, 0), (), "NasNonlinBehaviorTHICKOP", None),
		"NasNonlinBehaviorTSHEAR": (10586, 2, (11, 0), (), "NasNonlinBehaviorTSHEAR", None),
		"NasNonlinBehaviorVALD1": (10593, 2, (3, 0), (), "NasNonlinBehaviorVALD1", None),
		"NasNonlinBehaviorVALD2": (10594, 2, (3, 0), (), "NasNonlinBehaviorVALD2", None),
		"NasNonlinBehaviorVCOORD": (10595, 2, (3, 0), (), "NasNonlinBehaviorVCOORD", None),
		"NasNonlinDT": (10045, 2, (5, 0), (), "NasNonlinDT", None),
		"NasNonlinKDAMP": (10456, 2, (11, 0), (), "NasNonlinKDAMP", None),
		"NasNonlinKUPDATE": (10457, 2, (3, 0), (), "NasNonlinKUPDATE", None),
		"NasNonlinMaxIter": (10047, 2, (3, 0), (), "NasNonlinMaxIter", None),
		"NasNonlinNDT": (10044, 2, (3, 0), (), "NasNonlinNDT", None),
		"NasNonlinNO": (10046, 2, (3, 0), (), "NasNonlinNO", None),
		"NasNonlinOn": (10043, 2, (11, 0), (), "NasNonlinOn", None),
		"NasOmodes": (15085, 2, (8, 0), (), "NasOmodes", None),
		"NasOmodesOn": (15084, 2, (11, 0), (), "NasOmodesOn", None),
		"NasOptimAnalysisType": (10454, 2, (3, 0), (), "NasOptimAnalysisType", None),
		"NasOptimCycles": (10515, 2, (3, 0), (), "NasOptimCycles", None),
		"NasOptimDresp": (10520, 2, (3, 0), (), "NasOptimDresp", None),
		"NasOptimEcho": (10528, 2, (11, 0), (), "NasOptimEcho", None),
		"NasOptimGoal": (10521, 2, (3, 0), (), "NasOptimGoal", None),
		"NasOptimInterval": (10529, 2, (11, 0), (), "NasOptimInterval", None),
		"NasOptimIntervalVal": (10522, 2, (3, 0), (), "NasOptimIntervalVal", None),
		"NasOptimIsTopology": (10517, 2, (11, 0), (), "NasOptimIsTopology", None),
		"NasOptimMCDelay": (10531, 2, (11, 0), (), "NasOptimMCDelay", None),
		"NasOptimMCDelayVal": (10530, 2, (3, 0), (), "NasOptimMCDelayVal", None),
		"NasOptimMinDesobj": (10519, 2, (11, 0), (), "NasOptimMinDesobj", None),
		"NasOptimOn": (10516, 2, (11, 0), (), "NasOptimOn", None),
		"NasOptimTrackModes": (10455, 2, (11, 0), (), "NasOptimTrackModes", None),
		"NasRandCorrLagInterval": (10505, 2, (3, 0), (), "NasRandCorrLagInterval", None),
		"NasRandCorrLagMax": (10507, 2, (5, 0), (), "NasRandCorrLagMax", None),
		"NasRandCorrLagStart": (10506, 2, (5, 0), (), "NasRandCorrLagStart", None),
		"NasRandCorrOn": (10504, 2, (11, 0), (), "NasRandCorrOn", None),
		"NasRandXYAuto": (10509, 2, (11, 0), (), "NasRandXYAuto", None),
		"NasRandXYElemGroup": (10070, 2, (3, 0), (), "NasRandXYElemGroup", None),
		"NasRandXYNodeGroup": (10069, 2, (3, 0), (), "NasRandXYNodeGroup", None),
		"NasRandXYOn": (10066, 2, (11, 0), (), "NasRandXYOn", None),
		"NasRandXYPsdf": (10510, 2, (11, 0), (), "NasRandXYPsdf", None),
		"NasRandXYSummary": (10068, 2, (11, 0), (), "NasRandXYSummary", None),
		"NasRandomOn": (10064, 2, (11, 0), (), "NasRandomOn", None),
		"NasRelEMotion": (15156, 2, (11, 0), (), "NasRelEMotion", None),
		"NasRotorAsyncResponse": (10347, 2, (11, 0), (), "NasRotorAsyncResponse", None),
		"NasRotorComplexModeOutput": (10356, 2, (5, 0), (), "NasRotorComplexModeOutput", None),
		"NasRotorDoCSV": (10350, 2, (11, 0), (), "NasRotorDoCSV", None),
		"NasRotorDoGPF": (10351, 2, (11, 0), (), "NasRotorDoGPF", None),
		"NasRotorEnabled": (10343, 2, (11, 0), (), "NasRotorEnabled", None),
		"NasRotorExcitationOrder": (10358, 2, (5, 0), (), "NasRotorExcitationOrder", None),
		"NasRotorFixedRefSys": (10346, 2, (11, 0), (), "NasRotorFixedRefSys", None),
		"NasRotorForceExcitation": (10349, 2, (11, 0), (), "NasRotorForceExcitation", None),
		"NasRotorIncludePath": (10344, 2, (11, 0), (), "NasRotorIncludePath", None),
		"NasRotorInputUnits": (10352, 2, (3, 0), (), "NasRotorInputUnits", None),
		"NasRotorModeSelection": (10361, 2, (8, 0), (), "NasRotorModeSelection", None),
		"NasRotorOn": (10342, 2, (11, 0), (), "NasRotorOn", None),
		"NasRotorOutputUnits": (10353, 2, (3, 0), (), "NasRotorOutputUnits", None),
		"NasRotorPrintedOutput": (10354, 2, (3, 0), (), "NasRotorPrintedOutput", None),
		"NasRotorSingleRotor": (10345, 2, (11, 0), (), "NasRotorSingleRotor", None),
		"NasRotorSpeedNumSteps": (10355, 2, (3, 0), (), "NasRotorSpeedNumSteps", None),
		"NasRotorSpeedStart": (10359, 2, (5, 0), (), "NasRotorSpeedStart", None),
		"NasRotorSpeedStep": (10360, 2, (5, 0), (), "NasRotorSpeedStep", None),
		"NasRotorSteinerInertia": (10348, 2, (11, 0), (), "NasRotorSteinerInertia", None),
		"NasRotorWhirlThreshold": (10357, 2, (5, 0), (), "NasRotorWhirlThreshold", None),
		"NasSELoad": (15153, 2, (3, 0), (), "NasSELoad", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"SkipStandard": (15005, 2, (11, 0), (), "SkipStandard", None),
		"Solver": (10000, 2, (3, 0), (), "Solver", None),
		"StartText": (15006, 2, (3, 0), (), "StartText", None),
		"SubcaseAnalysisType": (15181, 2, (3, 0), (), "SubcaseAnalysisType", None),
		"SubcaseNotSeqDep": (15425, 2, (11, 0), (), "SubcaseNotSeqDep", None),
		"title": (10002, 2, (8, 0), (), "title", None),
		"vBCSet": (15086, 2, (12, 0), (), "vBCSet", None),
		"vFStDynFreqRange": (10226, 2, (12, 0), (), "vFStDynFreqRange", None),
		"vMSCNasCnlConvergenceFlags": (15179, 2, (12, 0), (), "vMSCNasCnlConvergenceFlags", None),
		"vNasAeroFreqKeep": (10428, 2, (12, 0), (), "vNasAeroFreqKeep", None),
		"vNasBulkAlpha1Val": (10494, 2, (12, 0), (), "vNasBulkAlpha1Val", None),
		"vNasBulkAlpha2Val": (10495, 2, (12, 0), (), "vNasBulkAlpha2Val", None),
		"vNasCnlConvergenceFlags": (15106, 2, (12, 0), (), "vNasCnlConvergenceFlags", None),
		"vNasCnlConvergenceValue": (15107, 2, (12, 0), (), "vNasCnlConvergenceValue", None),
		"vNasDdamCoeffOn": (10340, 2, (12, 0), (), "vNasDdamCoeffOn", None),
		"vNasDdamCoeffVal": (10341, 2, (12, 0), (), "vNasDdamCoeffVal", None),
		"vNasDynKeepFreq": (10389, 2, (12, 0), (), "vNasDynKeepFreq", None),
		"vNasGCheckMsg": (10223, 2, (12, 0), (), "vNasGCheckMsg", None),
		"vNasGCheckMsg2": (10461, 2, (12, 0), (), "vNasGCheckMsg2", None),
		"vNasGCheckTest": (10221, 2, (12, 0), (), "vNasGCheckTest", None),
		"vNasGCheckTest2": (10459, 2, (12, 0), (), "vNasGCheckTest2", None),
		"vNasGCheckTol": (10222, 2, (12, 0), (), "vNasGCheckTol", None),
		"vNasGCheckTol2": (10460, 2, (12, 0), (), "vNasGCheckTol2", None),
		"vNasGenSpecRequest": (10220, 2, (12, 0), (), "vNasGenSpecRequest", None),
		"vNasMCheckGrndDOFSet": (10225, 2, (12, 0), (), "vNasMCheckGrndDOFSet", None),
		"vNasMCheckWtDOFSet": (10224, 2, (12, 0), (), "vNasMCheckWtDOFSet", None),
		"vNasModeFreqRange": (10216, 2, (12, 0), (), "vNasModeFreqRange", None),
		"vNasModeImagFreqRange": (10320, 2, (12, 0), (), "vNasModeImagFreqRange", None),
		"vNasModeXYRequest": (10217, 2, (12, 0), (), "vNasModeXYRequest", None),
		"vNasMsnlCntConv_flags": (15184, 2, (12, 0), (), "vNasMsnlCntConv_flags", None),
		"vNasMsnlCntConv_value": (15185, 2, (12, 0), (), "vNasMsnlCntConv_value", None),
		"vNasNonlinEps": (10215, 2, (12, 0), (), "vNasNonlinEps", None),
		"vNasNonlinEpsFlag": (10214, 2, (12, 0), (), "vNasNonlinEpsFlag", None),
		"vNasRandXYRequest": (10219, 2, (12, 0), (), "vNasRandXYRequest", None),
		"vNasRandXYRequest2": (10508, 2, (12, 0), (), "vNasRandXYRequest2", None),
		"vNasRandomRequest": (10218, 2, (12, 0), (), "vNasRandomRequest", None),
		"vNasRotorRegionSelection": (10635, 2, (12, 0), (), "vNasRotorRegionSelection", None),
		"vNasRotorSpeedMultiplier": (10636, 2, (12, 0), (), "vNasRotorSpeedMultiplier", None),
		"vNasRotorSpeedMultiplierFn": (10637, 2, (12, 0), (), "vNasRotorSpeedMultiplierFn", None),
		"vOutput": (15087, 2, (12, 0), (), "vOutput", None),
	}
	_prop_map_put_ = {
		"AbaHistAnalysisType" : ((15031, LCID, 4, 0),()),
		"AbaHistAutoContact" : ((15025, LCID, 4, 0),()),
		"AbaHistEigenvectors" : ((15017, LCID, 4, 0),()),
		"AbaHistInitTimeInc" : ((15014, LCID, 4, 0),()),
		"AbaHistLinearPert" : ((15024, LCID, 4, 0),()),
		"AbaHistMaxFreq" : ((15019, LCID, 4, 0),()),
		"AbaHistMaxTimeInc" : ((15016, LCID, 4, 0),()),
		"AbaHistMinFreq" : ((15018, LCID, 4, 0),()),
		"AbaHistMinTimeInc" : ((15015, LCID, 4, 0),()),
		"AbaHistNonlinGeom" : ((15023, LCID, 4, 0),()),
		"AbaHistOn" : ((15012, LCID, 4, 0),()),
		"AbaHistOutInterval" : ((15022, LCID, 4, 0),()),
		"AbaHistOutZeroInc" : ((15027, LCID, 4, 0),()),
		"AbaHistScaleFactor" : ((15021, LCID, 4, 0),()),
		"AbaHistShiftFreq" : ((15020, LCID, 4, 0),()),
		"AbaHistStabilize" : ((15026, LCID, 4, 0),()),
		"AbaHistStepAmp" : ((15028, LCID, 4, 0),()),
		"AbaHistStepConstr" : ((15030, LCID, 4, 0),()),
		"AbaHistStepLoad" : ((15029, LCID, 4, 0),()),
		"AbaHistTimePeriod" : ((15013, LCID, 4, 0),()),
		"AbaModCbushAsMatrix" : ((10514, LCID, 4, 0),()),
		"AbaModEndText" : ((10105, LCID, 4, 0),()),
		"AbaModGroupsAsSets" : ((10101, LCID, 4, 0),()),
		"AbaModOn" : ((10099, LCID, 4, 0),()),
		"AbaModSkipStandard" : ((10102, LCID, 4, 0),()),
		"AbaModStartText" : ((10104, LCID, 4, 0),()),
		"AbaModTitleSetNames" : ((10100, LCID, 4, 0),()),
		"AbaModVersion" : ((10103, LCID, 4, 0),()),
		"Active" : ((17002, LCID, 4, 0),()),
		"AnalysisType" : ((10001, LCID, 4, 0),()),
		"AnsArclen" : ((16244, LCID, 4, 0),()),
		"AnsAutots" : ((16109, LCID, 4, 0),()),
		"AnsBisect" : ((16125, LCID, 4, 0),()),
		"AnsBisectfactor" : ((16126, LCID, 4, 0),()),
		"AnsBuckleLdmulte" : ((16199, LCID, 4, 0),()),
		"AnsBuckleMethod" : ((16196, LCID, 4, 0),()),
		"AnsBuckleNmode" : ((16197, LCID, 4, 0),()),
		"AnsBuckleOptOn" : ((16195, LCID, 4, 0),()),
		"AnsBuckleRangekey" : ((16200, LCID, 4, 0),()),
		"AnsBuckleShift" : ((16198, LCID, 4, 0),()),
		"AnsBuckleStrmck" : ((16201, LCID, 4, 0),()),
		"AnsCmlDBmem" : ((160007, LCID, 4, 0),()),
		"AnsCmlDir" : ((16006, LCID, 4, 0),()),
		"AnsCmlJobname" : ((16005, LCID, 4, 0),()),
		"AnsCmlList" : ((16004, LCID, 4, 0),()),
		"AnsCmlOn" : ((16000, LCID, 4, 0),()),
		"AnsCmlPid" : ((16002, LCID, 4, 0),()),
		"AnsCmlProd" : ((16003, LCID, 4, 0),()),
		"AnsCmlUser" : ((16009, LCID, 4, 0),()),
		"AnsCmlVersion" : ((16001, LCID, 4, 0),()),
		"AnsCmlWSmem" : ((160008, LCID, 4, 0),()),
		"AnsCnvtolDvol" : ((16239, LCID, 4, 0),()),
		"AnsCnvtolF" : ((16235, LCID, 4, 0),()),
		"AnsCnvtolHdsp" : ((16241, LCID, 4, 0),()),
		"AnsCnvtolM" : ((16237, LCID, 4, 0),()),
		"AnsCnvtolRot" : ((16233, LCID, 4, 0),()),
		"AnsCnvtolU" : ((16231, LCID, 4, 0),()),
		"AnsCrplimit" : ((16119, LCID, 4, 0),()),
		"AnsCrplimitvalue" : ((16120, LCID, 4, 0),()),
		"AnsDOFAutomatic" : ((15034, LCID, 4, 0),()),
		"AnsDOFDoSet" : ((15033, LCID, 4, 0),()),
		"AnsDOFNoRotation" : ((15035, LCID, 4, 0),()),
		"AnsDOFNumber" : ((15037, LCID, 4, 0),()),
		"AnsDOFOn" : ((15032, LCID, 4, 0),()),
		"AnsDOFSetID" : ((15036, LCID, 4, 0),()),
		"AnsDpplimit" : ((16121, LCID, 4, 0),()),
		"AnsDpplimitvalue" : ((16122, LCID, 4, 0),()),
		"AnsDsplimit" : ((16123, LCID, 4, 0),()),
		"AnsDsplimitvalue" : ((16124, LCID, 4, 0),()),
		"AnsDtime" : ((16114, LCID, 4, 0),()),
		"AnsDtmax" : ((16116, LCID, 4, 0),()),
		"AnsDtmin" : ((16115, LCID, 4, 0),()),
		"AnsDvoltoler" : ((16240, LCID, 4, 0),()),
		"AnsEqslv" : ((16103, LCID, 4, 0),()),
		"AnsFtoler" : ((16236, LCID, 4, 0),()),
		"AnsHarmonicClust" : ((16210, LCID, 4, 0),()),
		"AnsHarmonicFreqb" : ((16206, LCID, 4, 0),()),
		"AnsHarmonicFreqe" : ((16207, LCID, 4, 0),()),
		"AnsHarmonicLogopt" : ((16208, LCID, 4, 0),()),
		"AnsHarmonicMaxmode" : ((16205, LCID, 4, 0),()),
		"AnsHarmonicMethod" : ((16203, LCID, 4, 0),()),
		"AnsHarmonicMinmode" : ((16204, LCID, 4, 0),()),
		"AnsHarmonicOptOn" : ((16202, LCID, 4, 0),()),
		"AnsHarmonicReimky" : ((16209, LCID, 4, 0),()),
		"AnsHdsptoler" : ((16242, LCID, 4, 0),()),
		"AnsHeatEndTime" : ((15045, LCID, 4, 0),()),
		"AnsHeatOn" : ((15044, LCID, 4, 0),()),
		"AnsHeatOutputFreq" : ((15047, LCID, 4, 0),()),
		"AnsHeatTimeStep" : ((15046, LCID, 4, 0),()),
		"AnsKbc" : ((16101, LCID, 4, 0),()),
		"AnsLdstepOn" : ((16100, LCID, 4, 0),()),
		"AnsLnsrch" : ((16245, LCID, 4, 0),()),
		"AnsMidtol" : ((16128, LCID, 4, 0),()),
		"AnsModEndText" : ((10111, LCID, 4, 0),()),
		"AnsModGroupsAsSets" : ((10108, LCID, 4, 0),()),
		"AnsModMemory" : ((10116, LCID, 4, 0),()),
		"AnsModOn" : ((10106, LCID, 4, 0),()),
		"AnsModSkipPreprocessCMD" : ((10448, LCID, 4, 0),()),
		"AnsModSkipStandard" : ((10109, LCID, 4, 0),()),
		"AnsModStartText" : ((10110, LCID, 4, 0),()),
		"AnsModTitle" : ((10112, LCID, 4, 0),()),
		"AnsModTitleSetNames" : ((10107, LCID, 4, 0),()),
		"AnsModVersion" : ((10117, LCID, 4, 0),()),
		"AnsModWriteIter" : ((10114, LCID, 4, 0),()),
		"AnsModWriteLargeDef" : ((10115, LCID, 4, 0),()),
		"AnsModWriteSolCmd" : ((10113, LCID, 4, 0),()),
		"AnsModalBlocksize" : ((16190, LCID, 4, 0),()),
		"AnsModalCompute" : ((16192, LCID, 4, 0),()),
		"AnsModalFreqb" : ((16185, LCID, 4, 0),()),
		"AnsModalFreqe" : ((16186, LCID, 4, 0),()),
		"AnsModalMethod" : ((16183, LCID, 4, 0),()),
		"AnsModalNmode" : ((16184, LCID, 4, 0),()),
		"AnsModalNrmkey" : ((16187, LCID, 4, 0),()),
		"AnsModalOptOn" : ((16182, LCID, 4, 0),()),
		"AnsModalRangefact" : ((16189, LCID, 4, 0),()),
		"AnsModalReusekey" : ((16193, LCID, 4, 0),()),
		"AnsModalRobustlev" : ((16191, LCID, 4, 0),()),
		"AnsModalStrmck" : ((16188, LCID, 4, 0),()),
		"AnsModalSymmeth" : ((16194, LCID, 4, 0),()),
		"AnsModelGroupID" : ((16247, LCID, 4, 0),()),
		"AnsModelRSTcomp" : ((16255, LCID, 4, 0),()),
		"AnsModelSkipCsys" : ((16248, LCID, 4, 0),()),
		"AnsModelSkipElem" : ((16252, LCID, 4, 0),()),
		"AnsModelSkipGroup" : ((16253, LCID, 4, 0),()),
		"AnsModelSkipMatl" : ((16250, LCID, 4, 0),()),
		"AnsModelSkipMisc" : ((16254, LCID, 4, 0),()),
		"AnsModelSkipNode" : ((16249, LCID, 4, 0),()),
		"AnsModelSkipProp" : ((16251, LCID, 4, 0),()),
		"AnsModesElemResults" : ((15043, LCID, 4, 0),()),
		"AnsModesMaxFreq" : ((15041, LCID, 4, 0),()),
		"AnsModesMinFreq" : ((15040, LCID, 4, 0),()),
		"AnsModesModalMethod" : ((15042, LCID, 4, 0),()),
		"AnsModesNumModes" : ((15039, LCID, 4, 0),()),
		"AnsModesOn" : ((15038, LCID, 4, 0),()),
		"AnsMtoler" : ((16238, LCID, 4, 0),()),
		"AnsNeqit" : ((16230, LCID, 4, 0),()),
		"AnsNewConstraint" : ((16104, LCID, 4, 0),()),
		"AnsNewContact" : ((16106, LCID, 4, 0),()),
		"AnsNewLoad" : ((16105, LCID, 4, 0),()),
		"AnsNlOptOn" : ((16228, LCID, 4, 0),()),
		"AnsNlgeom" : ((16243, LCID, 4, 0),()),
		"AnsNropt" : ((16229, LCID, 4, 0),()),
		"AnsNsbmn" : ((16113, LCID, 4, 0),()),
		"AnsNsbmx" : ((16112, LCID, 4, 0),()),
		"AnsNsbstep" : ((16111, LCID, 4, 0),()),
		"AnsNsubs" : ((16110, LCID, 4, 0),()),
		"AnsOutprAcc" : ((16167, LCID, 4, 0),()),
		"AnsOutprAccFreq" : ((16169, LCID, 4, 0),()),
		"AnsOutprAccNth" : ((16171, LCID, 4, 0),()),
		"AnsOutprAll" : ((16133, LCID, 4, 0),()),
		"AnsOutprAllFreq" : ((16135, LCID, 4, 0),()),
		"AnsOutprAllNth" : ((16137, LCID, 4, 0),()),
		"AnsOutprBasic" : ((16139, LCID, 4, 0),()),
		"AnsOutprBasicFreq" : ((16141, LCID, 4, 0),()),
		"AnsOutprBasicNth" : ((16143, LCID, 4, 0),()),
		"AnsOutprEsol" : ((16175, LCID, 4, 0),()),
		"AnsOutprEsolFreq" : ((16177, LCID, 4, 0),()),
		"AnsOutprEsolNth" : ((16179, LCID, 4, 0),()),
		"AnsOutprNsol" : ((16151, LCID, 4, 0),()),
		"AnsOutprNsolFreq" : ((16153, LCID, 4, 0),()),
		"AnsOutprNsolNth" : ((16155, LCID, 4, 0),()),
		"AnsOutprRsol" : ((16145, LCID, 4, 0),()),
		"AnsOutprRsolFreq" : ((16147, LCID, 4, 0),()),
		"AnsOutprRsolNth" : ((16149, LCID, 4, 0),()),
		"AnsOutprVel" : ((16159, LCID, 4, 0),()),
		"AnsOutprVelFreq" : ((16161, LCID, 4, 0),()),
		"AnsOutprVelNth" : ((16163, LCID, 4, 0),()),
		"AnsOutputOn" : ((16131, LCID, 4, 0),()),
		"AnsOutresAcc" : ((16166, LCID, 4, 0),()),
		"AnsOutresAccFreq" : ((16168, LCID, 4, 0),()),
		"AnsOutresAccNth" : ((16170, LCID, 4, 0),()),
		"AnsOutresAll" : ((16132, LCID, 4, 0),()),
		"AnsOutresAllFreq" : ((16134, LCID, 4, 0),()),
		"AnsOutresAllNth" : ((16136, LCID, 4, 0),()),
		"AnsOutresBasic" : ((16138, LCID, 4, 0),()),
		"AnsOutresBasicFreq" : ((16140, LCID, 4, 0),()),
		"AnsOutresBasicNth" : ((16142, LCID, 4, 0),()),
		"AnsOutresEsol" : ((16174, LCID, 4, 0),()),
		"AnsOutresEsolFreq" : ((16176, LCID, 4, 0),()),
		"AnsOutresEsolNth" : ((16178, LCID, 4, 0),()),
		"AnsOutresNsol" : ((16150, LCID, 4, 0),()),
		"AnsOutresNsolFreq" : ((16152, LCID, 4, 0),()),
		"AnsOutresNsolNth" : ((16154, LCID, 4, 0),()),
		"AnsOutresRsol" : ((16144, LCID, 4, 0),()),
		"AnsOutresRsolFreq" : ((16146, LCID, 4, 0),()),
		"AnsOutresRsolNth" : ((16148, LCID, 4, 0),()),
		"AnsOutresVel" : ((16158, LCID, 4, 0),()),
		"AnsOutresVelFreq" : ((16160, LCID, 4, 0),()),
		"AnsOutresVelNth" : ((16162, LCID, 4, 0),()),
		"AnsPlslimit" : ((16117, LCID, 4, 0),()),
		"AnsPlslimitvalue" : ((16118, LCID, 4, 0),()),
		"AnsPred" : ((16246, LCID, 4, 0),()),
		"AnsPredictor" : ((16127, LCID, 4, 0),()),
		"AnsPstres" : ((16102, LCID, 4, 0),()),
		"AnsRandAccel" : ((10121, LCID, 4, 0),()),
		"AnsRandAccelRelative" : ((10124, LCID, 4, 0),()),
		"AnsRandDisp" : ((10119, LCID, 4, 0),()),
		"AnsRandDispRelative" : ((10122, LCID, 4, 0),()),
		"AnsRandOn" : ((10118, LCID, 4, 0),()),
		"AnsRandVel" : ((10120, LCID, 4, 0),()),
		"AnsRandVelRelative" : ((10123, LCID, 4, 0),()),
		"AnsResfq" : ((16130, LCID, 4, 0),()),
		"AnsRottoler" : ((16234, LCID, 4, 0),()),
		"AnsTime" : ((16108, LCID, 4, 0),()),
		"AnsTimestepOn" : ((16107, LCID, 4, 0),()),
		"AnsTolerb" : ((16129, LCID, 4, 0),()),
		"AnsTransAlpha" : ((16224, LCID, 4, 0),()),
		"AnsTransAlphad" : ((16218, LCID, 4, 0),()),
		"AnsTransAlphaf" : ((16226, LCID, 4, 0),()),
		"AnsTransAlpham" : ((16227, LCID, 4, 0),()),
		"AnsTransBetad" : ((16219, LCID, 4, 0),()),
		"AnsTransDelta" : ((16225, LCID, 4, 0),()),
		"AnsTransDmprat" : ((16221, LCID, 4, 0),()),
		"AnsTransDmpsfreq" : ((16216, LCID, 4, 0),()),
		"AnsTransDmpstr" : ((16220, LCID, 4, 0),()),
		"AnsTransGamma" : ((16222, LCID, 4, 0),()),
		"AnsTransGammavalue" : ((16223, LCID, 4, 0),()),
		"AnsTransLumpm" : ((16217, LCID, 4, 0),()),
		"AnsTransMaxmode" : ((16214, LCID, 4, 0),()),
		"AnsTransMethod" : ((16212, LCID, 4, 0),()),
		"AnsTransMinmode" : ((16213, LCID, 4, 0),()),
		"AnsTransOptOn" : ((16211, LCID, 4, 0),()),
		"AnsTransTintopt" : ((16215, LCID, 4, 0),()),
		"AnsUtoler" : ((16232, LCID, 4, 0),()),
		"CaseLabel" : ((15176, LCID, 4, 0),()),
		"CaseTitle" : ((15000, LCID, 4, 0),()),
		"CaseType" : ((15088, LCID, 4, 0),()),
		"ContactOption" : ((15177, LCID, 4, 0),()),
		"ContactSetType" : ((15178, LCID, 4, 0),()),
		"CornerOutput" : ((15010, LCID, 4, 0),()),
		"Destination" : ((15008, LCID, 4, 0),()),
		"DynHistBodyLoadGrp" : ((15090, LCID, 4, 0),()),
		"DynHistGroupHistId" : ((15100, LCID, 4, 0),()),
		"DynHistImplicit" : ((15093, LCID, 4, 0),()),
		"DynHistMassDampOn" : ((15091, LCID, 4, 0),()),
		"DynHistMsssDamp" : ((15092, LCID, 4, 0),()),
		"DynHistOn" : ((15089, LCID, 4, 0),()),
		"DynHistPlateIntgPts" : ((15099, LCID, 4, 0),()),
		"DynHistPrintHistOutput" : ((15098, LCID, 4, 0),()),
		"DynHistSpringback" : ((15094, LCID, 4, 0),()),
		"DynHistStrainOutput" : ((15095, LCID, 4, 0),()),
		"DynHistTimeHistOuput" : ((15097, LCID, 4, 0),()),
		"DynHistTotalTime" : ((15096, LCID, 4, 0),()),
		"DynModEndText" : ((10306, LCID, 4, 0),()),
		"DynModExportRigidNodes" : ((10301, LCID, 4, 0),()),
		"DynModGroupsAsSets" : ((10303, LCID, 4, 0),()),
		"DynModMatlBasedParts" : ((10302, LCID, 4, 0),()),
		"DynModOn" : ((10300, LCID, 4, 0),()),
		"DynModSkipStandard" : ((10304, LCID, 4, 0),()),
		"DynModStartText" : ((10305, LCID, 4, 0),()),
		"DynModelGroupID" : ((16500, LCID, 4, 0),()),
		"DynModelSkipCsys" : ((16501, LCID, 4, 0),()),
		"DynModelSkipElem" : ((16505, LCID, 4, 0),()),
		"DynModelSkipGroup" : ((16506, LCID, 4, 0),()),
		"DynModelSkipMatl" : ((16503, LCID, 4, 0),()),
		"DynModelSkipMisc" : ((16507, LCID, 4, 0),()),
		"DynModelSkipNode" : ((16502, LCID, 4, 0),()),
		"DynModelSkipProp" : ((16504, LCID, 4, 0),()),
		"Echo" : ((15004, LCID, 4, 0),()),
		"EndText" : ((15007, LCID, 4, 0),()),
		"FStDynFreqMethod" : ((10145, LCID, 4, 0),()),
		"FStDynIterVec" : ((10149, LCID, 4, 0),()),
		"FStDynMassDir" : ((10147, LCID, 4, 0),()),
		"FStDynMassForm" : ((10140, LCID, 4, 0),()),
		"FStDynMassTol" : ((10148, LCID, 4, 0),()),
		"FStDynMaxIter" : ((10150, LCID, 4, 0),()),
		"FStDynModalDamp" : ((10141, LCID, 4, 0),()),
		"FStDynModalNorm" : ((10142, LCID, 4, 0),()),
		"FStDynNumModes" : ((10143, LCID, 4, 0),()),
		"FStDynOn" : ((10138, LCID, 4, 0),()),
		"FStDynRigidModes" : ((10144, LCID, 4, 0),()),
		"FStDynSigDigits" : ((10151, LCID, 4, 0),()),
		"FStDynSolMethod" : ((10139, LCID, 4, 0),()),
		"FStFilEchoLogFile" : ((10128, LCID, 4, 0),()),
		"FStFilHyper1" : ((10129, LCID, 4, 0),()),
		"FStFilHyper2" : ((10130, LCID, 4, 0),()),
		"FStFilKeepHyper" : ((10131, LCID, 4, 0),()),
		"FStFilKeepLogFile" : ((10127, LCID, 4, 0),()),
		"FStFilLogFile" : ((10126, LCID, 4, 0),()),
		"FStFilOn" : ((10125, LCID, 4, 0),()),
		"FStFilScratch1" : ((10132, LCID, 4, 0),()),
		"FStFilScratch2" : ((10133, LCID, 4, 0),()),
		"FStHeatConvergeType" : ((10136, LCID, 4, 0),()),
		"FStHeatMaxIter" : ((10137, LCID, 4, 0),()),
		"FStHeatOn" : ((10134, LCID, 4, 0),()),
		"FStHeatTempTol" : ((10135, LCID, 4, 0),()),
		"FStSolElemGroup" : ((10169, LCID, 4, 0),()),
		"FStSolIter" : ((10153, LCID, 4, 0),()),
		"FStSolIterConvTol" : ((10154, LCID, 4, 0),()),
		"FStSolIterMaxIter" : ((10155, LCID, 4, 0),()),
		"FStSolMemAppPct" : ((10158, LCID, 4, 0),()),
		"FStSolMemFortranPct" : ((10159, LCID, 4, 0),()),
		"FStSolMemIterMax" : ((10156, LCID, 4, 0),()),
		"FStSolMemVirtMax" : ((10157, LCID, 4, 0),()),
		"FStSolNodeGroup" : ((10168, LCID, 4, 0),()),
		"FStSolOn" : ((10152, LCID, 4, 0),()),
		"FStSolShellAuto" : ((10163, LCID, 4, 0),()),
		"FStSolShellAutoAng" : ((10166, LCID, 4, 0),()),
		"FStSolSingCriteria" : ((10167, LCID, 4, 0),()),
		"FStSolSingularity" : ((10164, LCID, 4, 0),()),
		"FStSolSpinSoft" : ((10161, LCID, 4, 0),()),
		"FStSolStiffSoftLoad" : ((10162, LCID, 4, 0),()),
		"FStSolStressStiff" : ((10160, LCID, 4, 0),()),
		"FStSolVerification" : ((10165, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Imaginary" : ((15009, LCID, 4, 0),()),
		"IntegrationOutput" : ((15011, LCID, 4, 0),()),
		"LinkedSolverOption" : ((10501, LCID, 4, 0),()),
		"MarCtblOn" : ((15082, LCID, 4, 0),()),
		"MarCtblWrite" : ((15083, LCID, 4, 0),()),
		"MarHistAnalCaseSol" : ((15064, LCID, 4, 0),()),
		"MarHistAutoSwitch" : ((15063, LCID, 4, 0),()),
		"MarHistBuckleNumModes" : ((15065, LCID, 4, 0),()),
		"MarHistBucklePosEigen" : ((15066, LCID, 4, 0),()),
		"MarHistChecking" : ((15062, LCID, 4, 0),()),
		"MarHistContactProp" : ((15049, LCID, 4, 0),()),
		"MarHistConvergeMeth" : ((15056, LCID, 4, 0),()),
		"MarHistCtrlMaxRecycle" : ((15053, LCID, 4, 0),()),
		"MarHistCtrlMaxStep" : ((15052, LCID, 4, 0),()),
		"MarHistCtrlMethod" : ((15050, LCID, 4, 0),()),
		"MarHistCtrlMinRecycle" : ((15054, LCID, 4, 0),()),
		"MarHistMaxResidual" : ((15055, LCID, 4, 0),()),
		"MarHistModalEigen" : ((15061, LCID, 4, 0),()),
		"MarHistModalMaxFreq" : ((15060, LCID, 4, 0),()),
		"MarHistModalMinFreq" : ((15059, LCID, 4, 0),()),
		"MarHistNonPosDefinite" : ((15057, LCID, 4, 0),()),
		"MarHistNonSymmetric" : ((15058, LCID, 4, 0),()),
		"MarHistOn" : ((15048, LCID, 4, 0),()),
		"MarHistSolverMeth" : ((15051, LCID, 4, 0),()),
		"MarIncArcLenMeth" : ((15068, LCID, 4, 0),()),
		"MarIncCtrlMaxRecycle" : ((15079, LCID, 4, 0),()),
		"MarIncFracFirst" : ((15077, LCID, 4, 0),()),
		"MarIncInitTimeInc" : ((15070, LCID, 4, 0),()),
		"MarIncMaxFracForAll" : ((15080, LCID, 4, 0),()),
		"MarIncMaxNumInc" : ((15078, LCID, 4, 0),()),
		"MarIncMaxStep" : ((15074, LCID, 4, 0),()),
		"MarIncMaxTimeInc" : ((15072, LCID, 4, 0),()),
		"MarIncMinTimeInc" : ((15071, LCID, 4, 0),()),
		"MarIncNumOutInc" : ((15075, LCID, 4, 0),()),
		"MarIncOn" : ((15067, LCID, 4, 0),()),
		"MarIncQuasiStatDamp" : ((15076, LCID, 4, 0),()),
		"MarIncScaleFact" : ((15073, LCID, 4, 0),()),
		"MarIncTimePeriod" : ((15069, LCID, 4, 0),()),
		"MarIncTotalTime" : ((15081, LCID, 4, 0),()),
		"MarModBWOpt" : ((10208, LCID, 4, 0),()),
		"MarModConstDil" : ((10184, LCID, 4, 0),()),
		"MarModCoreVal" : ((10203, LCID, 4, 0),()),
		"MarModDistLoadElem" : ((10195, LCID, 4, 0),()),
		"MarModDistLoadList" : ((10194, LCID, 4, 0),()),
		"MarModDistLoadNode" : ((10196, LCID, 4, 0),()),
		"MarModDistLoadOn" : ((10193, LCID, 4, 0),()),
		"MarModEchoInput" : ((10188, LCID, 4, 0),()),
		"MarModElasIs" : ((10183, LCID, 4, 0),()),
		"MarModElasOn" : ((10181, LCID, 4, 0),()),
		"MarModElasTotal" : ((10182, LCID, 4, 0),()),
		"MarModEndText" : ((10173, LCID, 4, 0),()),
		"MarModExtInput" : ((10190, LCID, 4, 0),()),
		"MarModFinite" : ((10187, LCID, 4, 0),()),
		"MarModFolOn" : ((10177, LCID, 4, 0),()),
		"MarModFolOpt" : ((10178, LCID, 4, 0),()),
		"MarModLgDisp" : ((10185, LCID, 4, 0),()),
		"MarModMaxConstrain" : ((10176, LCID, 4, 0),()),
		"MarModNoCpu" : ((10205, LCID, 4, 0),()),
		"MarModOn" : ((10170, LCID, 4, 0),()),
		"MarModOutOfCore" : ((10202, LCID, 4, 0),()),
		"MarModParallel" : ((10207, LCID, 4, 0),()),
		"MarModPlasOn" : ((10179, LCID, 4, 0),()),
		"MarModPlasOpt" : ((10180, LCID, 4, 0),()),
		"MarModPltIntegPt" : ((10192, LCID, 4, 0),()),
		"MarModProcessors" : ((10204, LCID, 4, 0),()),
		"MarModShlTrShear" : ((10191, LCID, 4, 0),()),
		"MarModSkipStandard" : ((10171, LCID, 4, 0),()),
		"MarModStartText" : ((10172, LCID, 4, 0),()),
		"MarModTitle" : ((10174, LCID, 4, 0),()),
		"MarModTyingCe" : ((10198, LCID, 4, 0),()),
		"MarModTyingOn" : ((10197, LCID, 4, 0),()),
		"MarModTyingServoLk" : ((10201, LCID, 4, 0),()),
		"MarModTyingServoNd" : ((10200, LCID, 4, 0),()),
		"MarModTyingType" : ((10199, LCID, 4, 0),()),
		"MarModUpdate" : ((10186, LCID, 4, 0),()),
		"MarModVecLength" : ((10206, LCID, 4, 0),()),
		"MarModWorkSpVec" : ((10175, LCID, 4, 0),()),
		"MarModWriteGroupSet" : ((10189, LCID, 4, 0),()),
		"NasAeroAeunit" : ((10426, LCID, 4, 0),()),
		"NasAeroAeunitVal" : ((10427, LCID, 4, 0),()),
		"NasAeroCsID" : ((10416, LCID, 4, 0),()),
		"NasAeroDampMethod" : ((10432, LCID, 4, 0),()),
		"NasAeroMkFuID" : ((10425, LCID, 4, 0),()),
		"NasAeroModesKeep" : ((10429, LCID, 4, 0),()),
		"NasAeroOn" : ((10415, LCID, 4, 0),()),
		"NasAeroRefArea" : ((10420, LCID, 4, 0),()),
		"NasAeroRefCsID" : ((10417, LCID, 4, 0),()),
		"NasAeroRefDens" : ((10424, LCID, 4, 0),()),
		"NasAeroRefLength" : ((10418, LCID, 4, 0),()),
		"NasAeroRefSpan" : ((10419, LCID, 4, 0),()),
		"NasAeroSymXY" : ((10421, LCID, 4, 0),()),
		"NasAeroSymxz" : ((10422, LCID, 4, 0),()),
		"NasAeroVelo" : ((10423, LCID, 4, 0),()),
		"NasAerobOPPHIPA" : ((10496, LCID, 4, 0),()),
		"NasAerobPARAMfzero" : ((10430, LCID, 4, 0),()),
		"NasAerodPARAMfzero" : ((10431, LCID, 4, 0),()),
		"NasAerodPARAMmach" : ((10617, LCID, 4, 0),()),
		"NasAerodPARAMq" : ((10618, LCID, 4, 0),()),
		"NasAeronPARAMgustaero" : ((10616, LCID, 4, 0),()),
		"NasAppSpecCID" : ((10633, LCID, 4, 0),()),
		"NasAppSpecClose" : ((10080, LCID, 4, 0),()),
		"NasAppSpecDamp" : ((10082, LCID, 4, 0),()),
		"NasAppSpecDir" : ((10634, LCID, 4, 0),()),
		"NasAppSpecFunction" : ((10077, LCID, 4, 0),()),
		"NasAppSpecMethod" : ((10079, LCID, 4, 0),()),
		"NasAppSpecOn" : ((10075, LCID, 4, 0),()),
		"NasAppSpecScale" : ((10078, LCID, 4, 0),()),
		"NasAppSpecSuport" : ((10081, LCID, 4, 0),()),
		"NasAppSpecType" : ((10076, LCID, 4, 0),()),
		"NasAppSpecUseRelativeMethod" : ((10632, LCID, 4, 0),()),
		"NasAutoCt2D" : ((10571, LCID, 4, 0),()),
		"NasAutoCtBEAMCAP" : ((10570, LCID, 4, 0),()),
		"NasAutoCtBEAMCNT" : ((10569, LCID, 4, 0),()),
		"NasAutoCtBodyVal" : ((10561, LCID, 4, 0),()),
		"NasAutoCtCTYPE" : ((10562, LCID, 4, 0),()),
		"NasAutoCtConProp" : ((10599, LCID, 4, 0),()),
		"NasAutoCtDISTANCE" : ((10563, LCID, 4, 0),()),
		"NasAutoCtEDGECNT" : ((10572, LCID, 4, 0),()),
		"NasAutoCtESET" : ((10564, LCID, 4, 0),()),
		"NasAutoCtEnabled" : ((10560, LCID, 4, 0),()),
		"NasAutoCtFRIC" : ((10574, LCID, 4, 0),()),
		"NasAutoCtFRICTABLE" : ((10575, LCID, 4, 0),()),
		"NasAutoCtFRICVal" : ((10576, LCID, 4, 0),()),
		"NasAutoCtFTYPE" : ((10573, LCID, 4, 0),()),
		"NasAutoCtIGNTHK" : ((10577, LCID, 4, 0),()),
		"NasAutoCtINISTF" : ((10578, LCID, 4, 0),()),
		"NasAutoCtOn" : ((10559, LCID, 4, 0),()),
		"NasAutoCtPropSet" : ((10567, LCID, 4, 0),()),
		"NasAutoCtRegion" : ((10598, LCID, 4, 0),()),
		"NasAutoCtRigidSet" : ((10568, LCID, 4, 0),()),
		"NasAutoCtSeedESet" : ((10565, LCID, 4, 0),()),
		"NasAutoCtSeedGSet" : ((10566, LCID, 4, 0),()),
		"NasAutoCtSelfCont" : ((10579, LCID, 4, 0),()),
		"NasBulkADTOQDLD" : ((10621, LCID, 4, 0),()),
		"NasBulkAlpha1" : ((10489, LCID, 4, 0),()),
		"NasBulkAlpha2" : ((10490, LCID, 4, 0),()),
		"NasBulkAutompc" : ((10227, LCID, 4, 0),()),
		"NasBulkAutospc" : ((10019, LCID, 4, 0),()),
		"NasBulkAutospcType" : ((10307, LCID, 4, 0),()),
		"NasBulkBoltFact" : ((10370, LCID, 4, 0),()),
		"NasBulkBoltFactVal" : ((10371, LCID, 4, 0),()),
		"NasBulkCntAset" : ((10414, LCID, 4, 0),()),
		"NasBulkDFREQ" : ((10628, LCID, 4, 0),()),
		"NasBulkDFREQVal" : ((10629, LCID, 4, 0),()),
		"NasBulkDdrmmOff" : ((10029, LCID, 4, 0),()),
		"NasBulkDynLdAsLOADSET" : ((10380, LCID, 4, 0),()),
		"NasBulkEndText" : ((10041, LCID, 4, 0),()),
		"NasBulkEndTextOutsideBulk" : ((10499, LCID, 4, 0),()),
		"NasBulkEnfmotn" : ((10405, LCID, 4, 0),()),
		"NasBulkEnfmotnOpt" : ((10406, LCID, 4, 0),()),
		"NasBulkFHPNST" : ((10626, LCID, 4, 0),()),
		"NasBulkFHPNSTVal" : ((10627, LCID, 4, 0),()),
		"NasBulkFHPOST" : ((10624, LCID, 4, 0),()),
		"NasBulkFHPOSTVal" : ((10625, LCID, 4, 0),()),
		"NasBulkGapConnectionProp" : ((10605, LCID, 4, 0),()),
		"NasBulkGapsAsContact" : ((10367, LCID, 4, 0),()),
		"NasBulkGrdpnt" : ((10020, LCID, 4, 0),()),
		"NasBulkGrdpntVal" : ((10032, LCID, 4, 0),()),
		"NasBulkGroupID" : ((10042, LCID, 4, 0),()),
		"NasBulkInrel" : ((10025, LCID, 4, 0),()),
		"NasBulkInrelVal" : ((10366, LCID, 4, 0),()),
		"NasBulkK6rot" : ((10022, LCID, 4, 0),()),
		"NasBulkK6rotVal" : ((10034, LCID, 4, 0),()),
		"NasBulkLangle" : ((10026, LCID, 4, 0),()),
		"NasBulkLargeField" : ((10037, LCID, 4, 0),()),
		"NasBulkLgdisp" : ((10028, LCID, 4, 0),()),
		"NasBulkLgstrn" : ((10318, LCID, 4, 0),()),
		"NasBulkMatnl" : ((10518, LCID, 4, 0),()),
		"NasBulkMaxratio" : ((10023, LCID, 4, 0),()),
		"NasBulkMaxratioVal" : ((10035, LCID, 4, 0),()),
		"NasBulkMdofVal" : ((10492, LCID, 4, 0),()),
		"NasBulkMgrid" : ((10487, LCID, 4, 0),()),
		"NasBulkMgridID" : ((10493, LCID, 4, 0),()),
		"NasBulkModacc" : ((10030, LCID, 4, 0),()),
		"NasBulkNdamp" : ((10024, LCID, 4, 0),()),
		"NasBulkNdampVal" : ((10036, LCID, 4, 0),()),
		"NasBulkNofisr" : ((10317, LCID, 4, 0),()),
		"NasBulkOgeom" : ((10211, LCID, 4, 0),()),
		"NasBulkOn" : ((10018, LCID, 4, 0),()),
		"NasBulkPARAMBailout" : ((10449, LCID, 4, 0),()),
		"NasBulkPARAMBuckle" : ((10532, LCID, 4, 0),()),
		"NasBulkPrgpst" : ((10027, LCID, 4, 0),()),
		"NasBulkQuadr" : ((10038, LCID, 4, 0),()),
		"NasBulkRDMTRAK" : ((10630, LCID, 4, 0),()),
		"NasBulkRDMTRAKVal" : ((10631, LCID, 4, 0),()),
		"NasBulkResVec" : ((10031, LCID, 4, 0),()),
		"NasBulkResVecOn" : ((10210, LCID, 4, 0),()),
		"NasBulkResViner" : ((10381, LCID, 4, 0),()),
		"NasBulkRigidMethod" : ((10513, LCID, 4, 0),()),
		"NasBulkRigidThermalExp" : ((10315, LCID, 4, 0),()),
		"NasBulkSecomb" : ((10445, LCID, 4, 0),()),
		"NasBulkSkipBeamShape" : ((10212, LCID, 4, 0),()),
		"NasBulkSkipStandard" : ((10039, LCID, 4, 0),()),
		"NasBulkSrcomps" : ((10316, LCID, 4, 0),()),
		"NasBulkStartText" : ((10040, LCID, 4, 0),()),
		"NasBulkSwpangle" : ((10488, LCID, 4, 0),()),
		"NasBulkSwpangleVal" : ((10491, LCID, 4, 0),()),
		"NasBulkTENSOQD" : ((10606, LCID, 4, 0),()),
		"NasBulkTENSOQDval" : ((10607, LCID, 4, 0),()),
		"NasBulkTOQDGAUS" : ((10620, LCID, 4, 0),()),
		"NasBulkWriteAllLoadBCSets" : ((10383, LCID, 4, 0),()),
		"NasBulkWtmass" : ((10021, LCID, 4, 0),()),
		"NasBulkWtmassVal" : ((10033, LCID, 4, 0),()),
		"NasCaeDynPressure" : ((15139, LCID, 4, 0),()),
		"NasCaeMachNumber" : ((15138, LCID, 4, 0),()),
		"NasCaeOn" : ((15137, LCID, 4, 0),()),
		"NasCaeRigidTrim" : ((15141, LCID, 4, 0),()),
		"NasCaeWrtieTrim" : ((15142, LCID, 4, 0),()),
		"NasCaseFHAC" : ((15524, LCID, 4, 0),()),
		"NasCaseFHACOn" : ((15523, LCID, 4, 0),()),
		"NasCaseFHAR" : ((15522, LCID, 4, 0),()),
		"NasCaseFHAROn" : ((15521, LCID, 4, 0),()),
		"NasCflDenID" : ((15145, LCID, 4, 0),()),
		"NasCflEig" : ((15149, LCID, 4, 0),()),
		"NasCflEps" : ((15150, LCID, 4, 0),()),
		"NasCflFliMethod" : ((15148, LCID, 4, 0),()),
		"NasCflMachFactID" : ((15146, LCID, 4, 0),()),
		"NasCflMethod" : ((15144, LCID, 4, 0),()),
		"NasCflOn" : ((15143, LCID, 4, 0),()),
		"NasCflRfreqFactID" : ((15147, LCID, 4, 0),()),
		"NasCflSdampID" : ((15152, LCID, 4, 0),()),
		"NasCflWriteFlutter" : ((15151, LCID, 4, 0),()),
		"NasCnlArcConstraintType" : ((15117, LCID, 4, 0),()),
		"NasCnlArcDesiredIter" : ((15121, LCID, 4, 0),()),
		"NasCnlArcLoadScale" : ((15120, LCID, 4, 0),()),
		"NasCnlArcMaxAdjust" : ((15119, LCID, 4, 0),()),
		"NasCnlArcMaxSteps" : ((15122, LCID, 4, 0),()),
		"NasCnlArcMinAdjust" : ((15118, LCID, 4, 0),()),
		"NasCnlBoundsRb" : ((15125, LCID, 4, 0),()),
		"NasCnlCreep" : ((15135, LCID, 4, 0),()),
		"NasCnlCtiffnessMethod" : ((15108, LCID, 4, 0),()),
		"NasCnlDivergenceLimit" : ((15127, LCID, 4, 0),()),
		"NasCnlDominantPeriodSteps" : ((15124, LCID, 4, 0),()),
		"NasCnlFstress" : ((15133, LCID, 4, 0),()),
		"NasCnlIncrements" : ((15103, LCID, 4, 0),()),
		"NasCnlIntermediateOutput" : ((15110, LCID, 4, 0),()),
		"NasCnlKstep" : ((15109, LCID, 4, 0),()),
		"NasCnlLineSearchTolerance" : ((15130, LCID, 4, 0),()),
		"NasCnlMaxAdjust" : ((15134, LCID, 4, 0),()),
		"NasCnlMaxBisections" : ((15131, LCID, 4, 0),()),
		"NasCnlMaxIter" : ((15105, LCID, 4, 0),()),
		"NasCnlMaxLineSearch" : ((15129, LCID, 4, 0),()),
		"NasCnlMaxRotation" : ((15132, LCID, 4, 0),()),
		"NasCnlModnewtonBisection" : ((15116, LCID, 4, 0),()),
		"NasCnlModnewtonLineSearch" : ((15114, LCID, 4, 0),()),
		"NasCnlModnewtonQuasiNewton" : ((15115, LCID, 4, 0),()),
		"NasCnlOn" : ((15101, LCID, 4, 0),()),
		"NasCnlOutputInterval" : ((15111, LCID, 4, 0),()),
		"NasCnlQuasiNewtonVectors" : ((15128, LCID, 4, 0),()),
		"NasCnlSkipNLPARM" : ((15136, LCID, 4, 0),()),
		"NasCnlSolutionOverrides" : ((15113, LCID, 4, 0),()),
		"NasCnlSolutionStrategy" : ((15112, LCID, 4, 0),()),
		"NasCnlStabilityTolerance" : ((15126, LCID, 4, 0),()),
		"NasCnlStiffnessMethod" : ((15175, LCID, 4, 0),()),
		"NasCnlTimeSkipAdjust" : ((15123, LCID, 4, 0),()),
		"NasCnlTime_Increment" : ((15104, LCID, 4, 0),()),
		"NasCnlUseLoadSet" : ((15102, LCID, 4, 0),()),
		"NasCnlkDAMP" : ((15154, LCID, 4, 0),()),
		"NasCnlkUPDATE" : ((15155, LCID, 4, 0),()),
		"NasCurvatureStrain" : ((15180, LCID, 4, 0),()),
		"NasDMIGB2GG" : ((15329, LCID, 4, 0),()),
		"NasDMIGB2PP" : ((15334, LCID, 4, 0),()),
		"NasDMIGK2GG" : ((15327, LCID, 4, 0),()),
		"NasDMIGK2PP" : ((15332, LCID, 4, 0),()),
		"NasDMIGK42GG" : ((15330, LCID, 4, 0),()),
		"NasDMIGM2GG" : ((15328, LCID, 4, 0),()),
		"NasDMIGM2PP" : ((15333, LCID, 4, 0),()),
		"NasDMIGP2G" : ((15331, LCID, 4, 0),()),
		"NasDdamAccelConversion" : ((10411, LCID, 4, 0),()),
		"NasDdamDirectionSequence" : ((10335, LCID, 4, 0),()),
		"NasDdamElasticPlastic" : ((10332, LCID, 4, 0),()),
		"NasDdamEnabled" : ((10325, LCID, 4, 0),()),
		"NasDdamEquationType" : ((10329, LCID, 4, 0),()),
		"NasDdamEquipmentLocation" : ((10331, LCID, 4, 0),()),
		"NasDdamFileUnit" : ((10614, LCID, 4, 0),()),
		"NasDdamForceConversion" : ((10410, LCID, 4, 0),()),
		"NasDdamForeAftDirection" : ((10333, LCID, 4, 0),()),
		"NasDdamGCutoff" : ((10338, LCID, 4, 0),()),
		"NasDdamIncludePath" : ((10326, LCID, 4, 0),()),
		"NasDdamIsDDAM" : ((10327, LCID, 4, 0),()),
		"NasDdamMassToWeight" : ((10336, LCID, 4, 0),()),
		"NasDdamOn" : ((10324, LCID, 4, 0),()),
		"NasDdamSelModeMethod" : ((10600, LCID, 4, 0),()),
		"NasDdamSelModeVal" : ((10601, LCID, 4, 0),()),
		"NasDdamSpdirCOMP" : ((10613, LCID, 4, 0),()),
		"NasDdamSpdirCSID" : ((10612, LCID, 4, 0),()),
		"NasDdamSpecCoeffFile" : ((10339, LCID, 4, 0),()),
		"NasDdamSurfaceShip" : ((10330, LCID, 4, 0),()),
		"NasDdamUseBuiltInCoeff" : ((10328, LCID, 4, 0),()),
		"NasDdamVerticalDirection" : ((10334, LCID, 4, 0),()),
		"NasDdamWeightCutoffPct" : ((10337, LCID, 4, 0),()),
		"NasDynDampModalMethod" : ((10396, LCID, 4, 0),()),
		"NasDynDampModalTbl" : ((10392, LCID, 4, 0),()),
		"NasDynDampOverall" : ((10386, LCID, 4, 0),()),
		"NasDynDampW3" : ((10387, LCID, 4, 0),()),
		"NasDynDampW4" : ((10388, LCID, 4, 0),()),
		"NasDynFreqID" : ((10398, LCID, 4, 0),()),
		"NasDynFreqTbl" : ((10391, LCID, 4, 0),()),
		"NasDynFzero" : ((10407, LCID, 4, 0),()),
		"NasDynFzeroVal" : ((10408, LCID, 4, 0),()),
		"NasDynKeepModes" : ((10393, LCID, 4, 0),()),
		"NasDynOn" : ((10384, LCID, 4, 0),()),
		"NasDynRespSpect" : ((10397, LCID, 4, 0),()),
		"NasDynTranDT" : ((10390, LCID, 4, 0),()),
		"NasDynTranTimeSteps" : ((10394, LCID, 4, 0),()),
		"NasDynTransOutInt" : ((10395, LCID, 4, 0),()),
		"NasDynUseLoadSet" : ((10385, LCID, 4, 0),()),
		"NasDynWmodal" : ((10409, LCID, 4, 0),()),
		"NasEnableDMIG" : ((15326, LCID, 4, 0),()),
		"NasExecAllowDuplicateNodes" : ((10446, LCID, 4, 0),()),
		"NasExecAnalyzeFilename" : ((10458, LCID, 4, 0),()),
		"NasExecDiag" : ((10009, LCID, 4, 0),()),
		"NasExecDuplicateTolerance" : ((10450, LCID, 4, 0),()),
		"NasExecEndText" : ((10017, LCID, 4, 0),()),
		"NasExecExtendedMessages" : ((10309, LCID, 4, 0),()),
		"NasExecGPU" : ((10498, LCID, 4, 0),()),
		"NasExecGPUOpt" : ((10500, LCID, 4, 0),()),
		"NasExecIterSolve" : ((10010, LCID, 4, 0),()),
		"NasExecIterSolve2" : ((10213, LCID, 4, 0),()),
		"NasExecMaxTime" : ((10008, LCID, 4, 0),()),
		"NasExecMemory" : ((10308, LCID, 4, 0),()),
		"NasExecNumCPU" : ((10011, LCID, 4, 0),()),
		"NasExecNumDmpCPU" : ((10615, LCID, 4, 0),()),
		"NasExecOn" : ((10003, LCID, 4, 0),()),
		"NasExecOutDir" : ((10005, LCID, 4, 0),()),
		"NasExecProblem" : ((10006, LCID, 4, 0),()),
		"NasExecRestart" : ((10013, LCID, 4, 0),()),
		"NasExecRestartDB" : ((10014, LCID, 4, 0),()),
		"NasExecRestartReadOnly" : ((10451, LCID, 4, 0),()),
		"NasExecRestartSubcase" : ((10453, LCID, 4, 0),()),
		"NasExecRestartVersion" : ((10452, LCID, 4, 0),()),
		"NasExecSaveDB" : ((10012, LCID, 4, 0),()),
		"NasExecScratchDir1" : ((10311, LCID, 4, 0),()),
		"NasExecScratchDir2" : ((10312, LCID, 4, 0),()),
		"NasExecScratchSize1" : ((10313, LCID, 4, 0),()),
		"NasExecScratchSize2" : ((10314, LCID, 4, 0),()),
		"NasExecSkipStandard" : ((10015, LCID, 4, 0),()),
		"NasExecSolName" : ((10007, LCID, 4, 0),()),
		"NasExecSolutionMonitor" : ((10379, LCID, 4, 0),()),
		"NasExecSolutionMonitorOpt" : ((10608, LCID, 4, 0),()),
		"NasExecStartText" : ((10016, LCID, 4, 0),()),
		"NasExecSystemCell" : ((10310, LCID, 4, 0),()),
		"NasExecUserCmdLine" : ((10503, LCID, 4, 0),()),
		"NasExecVersion" : ((10004, LCID, 4, 0),()),
		"NasExecWriteSERefPath" : ((10447, LCID, 4, 0),()),
		"NasExtSEOutAssignForm" : ((10462, LCID, 4, 0),()),
		"NasExtSEOutAssignTitle" : ((10441, LCID, 4, 0),()),
		"NasExtSEOutExtID" : ((10434, LCID, 4, 0),()),
		"NasExtSEOutMatK4damp" : ((10437, LCID, 4, 0),()),
		"NasExtSEOutMatLoads" : ((10438, LCID, 4, 0),()),
		"NasExtSEOutMatMass" : ((10436, LCID, 4, 0),()),
		"NasExtSEOutMatStiffness" : ((10435, LCID, 4, 0),()),
		"NasExtSEOutOn" : ((10433, LCID, 4, 0),()),
		"NasExtSEOutOptAsmbulk" : ((10443, LCID, 4, 0),()),
		"NasExtSEOutOptExtbulk" : ((10444, LCID, 4, 0),()),
		"NasExtSEOutOptGeom" : ((10442, LCID, 4, 0),()),
		"NasExtSEOutTo" : ((10439, LCID, 4, 0),()),
		"NasExtSEOutUnitID" : ((10440, LCID, 4, 0),()),
		"NasGCheckMsgLimit" : ((10088, LCID, 4, 0),()),
		"NasGCheckNone" : ((10382, LCID, 4, 0),()),
		"NasGCheckOn" : ((10083, LCID, 4, 0),()),
		"NasGCheckSummary" : ((10087, LCID, 4, 0),()),
		"NasGenSpecAbsolute" : ((10073, LCID, 4, 0),()),
		"NasGenSpecNodeGroup" : ((10074, LCID, 4, 0),()),
		"NasGenSpecOn" : ((10071, LCID, 4, 0),()),
		"NasGenerateHDF5" : ((15500, LCID, 4, 0),()),
		"NasHDF5WithCompression" : ((15501, LCID, 4, 0),()),
		"NasHDF5WithInputData" : ((15502, LCID, 4, 0),()),
		"NasInlStepOptADJUST" : ((15394, LCID, 4, 0),()),
		"NasInlStepOptCREEP" : ((15366, LCID, 4, 0),()),
		"NasInlStepOptCTRLDEF" : ((15362, LCID, 4, 0),()),
		"NasInlStepOptConvA" : ((15411, LCID, 4, 0),()),
		"NasInlStepOptConvN" : ((15410, LCID, 4, 0),()),
		"NasInlStepOptConvP" : ((15407, LCID, 4, 0),()),
		"NasInlStepOptConvU" : ((15406, LCID, 4, 0),()),
		"NasInlStepOptConvV" : ((15409, LCID, 4, 0),()),
		"NasInlStepOptConvW" : ((15408, LCID, 4, 0),()),
		"NasInlStepOptDAMP" : ((15378, LCID, 4, 0),()),
		"NasInlStepOptDTINITF" : ((15370, LCID, 4, 0),()),
		"NasInlStepOptDTINITFA" : ((15399, LCID, 4, 0),()),
		"NasInlStepOptDTMAXF" : ((15372, LCID, 4, 0),()),
		"NasInlStepOptDTMINF" : ((15371, LCID, 4, 0),()),
		"NasInlStepOptEPSP" : ((15413, LCID, 4, 0),()),
		"NasInlStepOptEPSU" : ((15412, LCID, 4, 0),()),
		"NasInlStepOptEPSW" : ((15414, LCID, 4, 0),()),
		"NasInlStepOptEnableCriteria" : ((15379, LCID, 4, 0),()),
		"NasInlStepOptFSTRESS" : ((15421, LCID, 4, 0),()),
		"NasInlStepOptGroupIDs" : ((15385, LCID, 4, 0),()),
		"NasInlStepOptID" : ((15360, LCID, 4, 0),()),
		"NasInlStepOptIDAMP" : ((15377, LCID, 4, 0),()),
		"NasInlStepOptINTOUT" : ((15375, LCID, 4, 0),()),
		"NasInlStepOptIPHYS" : ((15380, LCID, 4, 0),()),
		"NasInlStepOptIncrements" : ((15384, LCID, 4, 0),()),
		"NasInlStepOptKMETHOD" : ((15415, LCID, 4, 0),()),
		"NasInlStepOptKSTEP" : ((15416, LCID, 4, 0),()),
		"NasInlStepOptLIMTAR" : ((15381, LCID, 4, 0),()),
		"NasInlStepOptLSTOL" : ((15420, LCID, 4, 0),()),
		"NasInlStepOptLoadStepping" : ((15367, LCID, 4, 0),()),
		"NasInlStepOptMAXALR" : ((15401, LCID, 4, 0),()),
		"NasInlStepOptMAXBIS" : ((15365, LCID, 4, 0),()),
		"NasInlStepOptMAXITER" : ((15363, LCID, 4, 0),()),
		"NasInlStepOptMAXLS" : ((15419, LCID, 4, 0),()),
		"NasInlStepOptMAXQN" : ((15418, LCID, 4, 0),()),
		"NasInlStepOptMECH" : ((15405, LCID, 4, 0),()),
		"NasInlStepOptMINALR" : ((15400, LCID, 4, 0),()),
		"NasInlStepOptMINITER" : ((15364, LCID, 4, 0),()),
		"NasInlStepOptMRCONV" : ((15417, LCID, 4, 0),()),
		"NasInlStepOptMSTEP" : ((15395, LCID, 4, 0),()),
		"NasInlStepOptMT1_i" : ((15390, LCID, 4, 0),()),
		"NasInlStepOptMT2_i" : ((15391, LCID, 4, 0),()),
		"NasInlStepOptMT3_i" : ((15392, LCID, 4, 0),()),
		"NasInlStepOptMT4_i" : ((15393, LCID, 4, 0),()),
		"NasInlStepOptNDESIR" : ((15373, LCID, 4, 0),()),
		"NasInlStepOptNDESIRA" : ((15403, LCID, 4, 0),()),
		"NasInlStepOptNINC" : ((15368, LCID, 4, 0),()),
		"NasInlStepOptNO" : ((15369, LCID, 4, 0),()),
		"NasInlStepOptNSMAX" : ((15376, LCID, 4, 0),()),
		"NasInlStepOptNSMAXA" : ((15404, LCID, 4, 0),()),
		"NasInlStepOptOn" : ((15358, LCID, 4, 0),()),
		"NasInlStepOptRB" : ((15396, LCID, 4, 0),()),
		"NasInlStepOptRBIG" : ((15383, LCID, 4, 0),()),
		"NasInlStepOptRSMALL" : ((15382, LCID, 4, 0),()),
		"NasInlStepOptSCALEA" : ((15402, LCID, 4, 0),()),
		"NasInlStepOptSFACT" : ((15374, LCID, 4, 0),()),
		"NasInlStepOptSkipNLSTEP" : ((15359, LCID, 4, 0),()),
		"NasInlStepOptTOTTIM" : ((15361, LCID, 4, 0),()),
		"NasInlStepOptTYPE" : ((15398, LCID, 4, 0),()),
		"NasInlStepOptUTOL" : ((15397, LCID, 4, 0),()),
		"NasInlStepOptYT1_i" : ((15386, LCID, 4, 0),()),
		"NasInlStepOptYT2_i" : ((15387, LCID, 4, 0),()),
		"NasInlStepOptYT3_i" : ((15388, LCID, 4, 0),()),
		"NasInlStepOptYT4_i" : ((15389, LCID, 4, 0),()),
		"NasLicenseType" : ((10512, LCID, 4, 0),()),
		"NasMCheckDataRec" : ((10097, LCID, 4, 0),()),
		"NasMCheckDataTol" : ((10098, LCID, 4, 0),()),
		"NasMCheckGrndRefNode" : ((10094, LCID, 4, 0),()),
		"NasMCheckMaxStrnEn" : ((10096, LCID, 4, 0),()),
		"NasMCheckOn" : ((10089, LCID, 4, 0),()),
		"NasMCheckWtCG" : ((10091, LCID, 4, 0),()),
		"NasMCheckWtRefNode" : ((10092, LCID, 4, 0),()),
		"NasMCheckWtUnits" : ((10093, LCID, 4, 0),()),
		"NasModeDampOverall" : ((10404, LCID, 4, 0),()),
		"NasModeDesiredRoots" : ((10056, LCID, 4, 0),()),
		"NasModeEigrSet" : ((10051, LCID, 4, 0),()),
		"NasModeEstRoots" : ((10055, LCID, 4, 0),()),
		"NasModeMassForm" : ((10060, LCID, 4, 0),()),
		"NasModeMethod" : ((10052, LCID, 4, 0),()),
		"NasModeNormDOF" : ((10059, LCID, 4, 0),()),
		"NasModeNormNode" : ((10058, LCID, 4, 0),()),
		"NasModeNormOpt" : ((10057, LCID, 4, 0),()),
		"NasModeOn" : ((10050, LCID, 4, 0),()),
		"NasModeSel" : ((10604, LCID, 4, 0),()),
		"NasModeSelInc" : ((10603, LCID, 4, 0),()),
		"NasModeSelOn" : ((10602, LCID, 4, 0),()),
		"NasModeSolutionType" : ((10053, LCID, 4, 0),()),
		"NasModeXYOn" : ((10061, LCID, 4, 0),()),
		"NasModeXYRefNode" : ((10063, LCID, 4, 0),()),
		"NasModesComplexConverge" : ((10321, LCID, 4, 0),()),
		"NasModesComplexRegionWidth" : ((10322, LCID, 4, 0),()),
		"NasModesSkipEigr" : ((10319, LCID, 4, 0),()),
		"NasMonitorAeroEnabled" : ((10545, LCID, 4, 0),()),
		"NasMonitorElemEnabled" : ((10619, LCID, 4, 0),()),
		"NasMonitorEnabled" : ((10533, LCID, 4, 0),()),
		"NasMonitorLoadEnabled" : ((10546, LCID, 4, 0),()),
		"NasMptSetID" : ((10534, LCID, 4, 0),()),
		"NasMsNLKGlobalBOLTMETH" : ((10610, LCID, 4, 0),()),
		"NasMsNLKGlobalEXEFROM" : ((10543, LCID, 4, 0),()),
		"NasMsNLKGlobalFHMETH" : ((10623, LCID, 4, 0),()),
		"NasMsNLKGlobalINLY" : ((10527, LCID, 4, 0),()),
		"NasMsNLKGlobalIREF" : ((10526, LCID, 4, 0),()),
		"NasMsNLKGlobalKINI" : ((10622, LCID, 4, 0),()),
		"NasMsNLKGlobalMDLVAL" : ((10544, LCID, 4, 0),()),
		"NasMsNLKGlobalMODEVERS" : ((10539, LCID, 4, 0),()),
		"NasMsNLKGlobalNKINE" : ((10538, LCID, 4, 0),()),
		"NasMsNLKGlobalOn" : ((10523, LCID, 4, 0),()),
		"NasMsNLKGlobalPLSHSOL" : ((10611, LCID, 4, 0),()),
		"NasMsNLKGlobalPRECPIVO" : ((10537, LCID, 4, 0),()),
		"NasMsNLKGlobalRESO" : ((10524, LCID, 4, 0),()),
		"NasMsNLKGlobalRESXTRP" : ((10609, LCID, 4, 0),()),
		"NasMsNLKGlobalRSTFROM" : ((10542, LCID, 4, 0),()),
		"NasMsNLKGlobalRSTGEN" : ((10540, LCID, 4, 0),()),
		"NasMsNLKGlobalRSTUNIT" : ((10541, LCID, 4, 0),()),
		"NasMsNLKGlobalSTRCONV" : ((10536, LCID, 4, 0),()),
		"NasMsNLKGlobalSTRMEAS" : ((10525, LCID, 4, 0),()),
		"NasMsNLKGlobalSTROUT" : ((10535, LCID, 4, 0),()),
		"NasMscCtAUGDIST" : ((10480, LCID, 4, 0),()),
		"NasMscCtAUGMENT" : ((10469, LCID, 4, 0),()),
		"NasMscCtBEAMB" : ((10470, LCID, 4, 0),()),
		"NasMscCtBIAS" : ((10481, LCID, 4, 0),()),
		"NasMscCtDDULMT" : ((10465, LCID, 4, 0),()),
		"NasMscCtERRBAS" : ((10471, LCID, 4, 0),()),
		"NasMscCtERROR" : ((10482, LCID, 4, 0),()),
		"NasMscCtEnable" : ((10464, LCID, 4, 0),()),
		"NasMscCtFGCFLG" : ((10551, LCID, 4, 0),()),
		"NasMscCtFGCNST" : ((10552, LCID, 4, 0),()),
		"NasMscCtFGCNSTI" : ((10556, LCID, 4, 0),()),
		"NasMscCtFGCNSTR" : ((10554, LCID, 4, 0),()),
		"NasMscCtFGCRCEN" : ((10558, LCID, 4, 0),()),
		"NasMscCtFGCTST" : ((10553, LCID, 4, 0),()),
		"NasMscCtFGCTSTI" : ((10557, LCID, 4, 0),()),
		"NasMscCtFGCTSTR" : ((10555, LCID, 4, 0),()),
		"NasMscCtFNTOL" : ((10483, LCID, 4, 0),()),
		"NasMscCtFTYPE" : ((10472, LCID, 4, 0),()),
		"NasMscCtIBSEP" : ((10473, LCID, 4, 0),()),
		"NasMscCtICSEP" : ((10474, LCID, 4, 0),()),
		"NasMscCtLINCNT" : ((10548, LCID, 4, 0),()),
		"NasMscCtMAXSEP" : ((10475, LCID, 4, 0),()),
		"NasMscCtMETHOD" : ((10476, LCID, 4, 0),()),
		"NasMscCtNLGLUE" : ((10477, LCID, 4, 0),()),
		"NasMscCtNODSEP" : ((10478, LCID, 4, 0),()),
		"NasMscCtOn" : ((10463, LCID, 4, 0),()),
		"NasMscCtPENALT" : ((10484, LCID, 4, 0),()),
		"NasMscCtRVCNST" : ((10466, LCID, 4, 0),()),
		"NasMscCtSEGSYM" : ((10479, LCID, 4, 0),()),
		"NasMscCtSFNPNLT" : ((10549, LCID, 4, 0),()),
		"NasMscCtSFTPNLT" : ((10550, LCID, 4, 0),()),
		"NasMscCtSLDLMT" : ((10467, LCID, 4, 0),()),
		"NasMscCtSTKSLP" : ((10485, LCID, 4, 0),()),
		"NasMscCtTAUGMNT" : ((10468, LCID, 4, 0),()),
		"NasMscCtTHKOFF" : ((10547, LCID, 4, 0),()),
		"NasMscCtTPENALT" : ((10486, LCID, 4, 0),()),
		"NasMsnlCntALFA" : ((15294, LCID, 4, 0),()),
		"NasMsnlCntAutotim" : ((15223, LCID, 4, 0),()),
		"NasMsnlCntBETA" : ((15292, LCID, 4, 0),()),
		"NasMsnlCntCRLIMR" : ((15427, LCID, 4, 0),()),
		"NasMsnlCntCntmdiv" : ((15206, LCID, 4, 0),()),
		"NasMsnlCntCrcerat" : ((15212, LCID, 4, 0),()),
		"NasMsnlCntCrcinc" : ((15213, LCID, 4, 0),()),
		"NasMsnlCntCreep" : ((15214, LCID, 4, 0),()),
		"NasMsnlCntCricoff" : ((15215, LCID, 4, 0),()),
		"NasMsnlCntCrinfac" : ((15216, LCID, 4, 0),()),
		"NasMsnlCntCrmfmn" : ((15217, LCID, 4, 0),()),
		"NasMsnlCntCrmfmx" : ((15218, LCID, 4, 0),()),
		"NasMsnlCntCrteabs" : ((15219, LCID, 4, 0),()),
		"NasMsnlCntCrterel" : ((15221, LCID, 4, 0),()),
		"NasMsnlCntDtinit" : ((15224, LCID, 4, 0),()),
		"NasMsnlCntDtmax" : ((15225, LCID, 4, 0),()),
		"NasMsnlCntDtmin" : ((15226, LCID, 4, 0),()),
		"NasMsnlCntDtsbcdt" : ((15227, LCID, 4, 0),()),
		"NasMsnlCntEpsbolt" : ((15190, LCID, 4, 0),()),
		"NasMsnlCntEqmfmin" : ((15228, LCID, 4, 0),()),
		"NasMsnlCntEqmfmx" : ((15229, LCID, 4, 0),()),
		"NasMsnlCntFollowk" : ((15200, LCID, 4, 0),()),
		"NasMsnlCntFsymtol" : ((15207, LCID, 4, 0),()),
		"NasMsnlCntGAMA" : ((15293, LCID, 4, 0),()),
		"NasMsnlCntINACCN" : ((15313, LCID, 4, 0),()),
		"NasMsnlCntINERTIA" : ((15314, LCID, 4, 0),()),
		"NasMsnlCntItrbolt" : ((15192, LCID, 4, 0),()),
		"NasMsnlCntKMODSCL" : ((15444, LCID, 4, 0),()),
		"NasMsnlCntKMODTN" : ((15426, LCID, 4, 0),()),
		"NasMsnlCntKsym" : ((15208, LCID, 4, 0),()),
		"NasMsnlCntKsymtol" : ((15209, LCID, 4, 0),()),
		"NasMsnlCntKupdate" : ((15201, LCID, 4, 0),()),
		"NasMsnlCntLOADOFF" : ((15315, LCID, 4, 0),()),
		"NasMsnlCntLSTCONV" : ((15445, LCID, 4, 0),()),
		"NasMsnlCntLvar" : ((15195, LCID, 4, 0),()),
		"NasMsnlCntMSFAC" : ((15317, LCID, 4, 0),()),
		"NasMsnlCntMSTAB" : ((15316, LCID, 4, 0),()),
		"NasMsnlCntMaxbis" : ((15186, LCID, 4, 0),()),
		"NasMsnlCntMaxdiv" : ((15187, LCID, 4, 0),()),
		"NasMsnlCntMaxiter" : ((15188, LCID, 4, 0),()),
		"NasMsnlCntMaxqn" : ((15189, LCID, 4, 0),()),
		"NasMsnlCntMisfblt" : ((15193, LCID, 4, 0),()),
		"NasMsnlCntMsglvl" : ((15196, LCID, 4, 0),()),
		"NasMsnlCntMsglvlb" : ((15194, LCID, 4, 0),()),
		"NasMsnlCntMsglvlc" : ((15210, LCID, 4, 0),()),
		"NasMsnlCntNORMP" : ((15318, LCID, 4, 0),()),
		"NasMsnlCntNORMU" : ((15319, LCID, 4, 0),()),
		"NasMsnlCntOn" : ((15182, LCID, 4, 0),()),
		"NasMsnlCntPLLIM" : ((15428, LCID, 4, 0),()),
		"NasMsnlCntPLLIMF" : ((15429, LCID, 4, 0),()),
		"NasMsnlCntPLSHUT" : ((15423, LCID, 4, 0),()),
		"NasMsnlCntPlastic" : ((15222, LCID, 4, 0),()),
		"NasMsnlCntQuasiNewtonIter" : ((15356, LCID, 4, 0),()),
		"NasMsnlCntREFP" : ((15320, LCID, 4, 0),()),
		"NasMsnlCntREFU" : ((15321, LCID, 4, 0),()),
		"NasMsnlCntRFVAR" : ((15357, LCID, 4, 0),()),
		"NasMsnlCntRHOINF" : ((15322, LCID, 4, 0),()),
		"NasMsnlCntSkipNLCNTL" : ((15183, LCID, 4, 0),()),
		"NasMsnlCntSolver" : ((15197, LCID, 4, 0),()),
		"NasMsnlCntSpink" : ((15202, LCID, 4, 0),()),
		"NasMsnlCntStfoptn" : ((15203, LCID, 4, 0),()),
		"NasMsnlCntStressk" : ((15204, LCID, 4, 0),()),
		"NasMsnlCntTETA" : ((15295, LCID, 4, 0),()),
		"NasMsnlCntTINTMTH" : ((15291, LCID, 4, 0),()),
		"NasMsnlCntThrmst" : ((15198, LCID, 4, 0),()),
		"NasMsnlCntTsccr" : ((15230, LCID, 4, 0),()),
		"NasMsnlCntTsceq" : ((15231, LCID, 4, 0),()),
		"NasMsnlCntTscumat" : ((15232, LCID, 4, 0),()),
		"NasMsnlCntTstepk" : ((15205, LCID, 4, 0),()),
		"NasMsnlCntTvar" : ((15199, LCID, 4, 0),()),
		"NasMsnlCntUmfmin" : ((15233, LCID, 4, 0),()),
		"NasMsnlCntUmfmx" : ((15234, LCID, 4, 0),()),
		"NasMsnlCntUsolver" : ((15211, LCID, 4, 0),()),
		"NasMsnlCntZerbolt" : ((15191, LCID, 4, 0),()),
		"NasMsnlCntdCrteco" : ((15220, LCID, 4, 0),()),
		"NasMsnlModalMassForm" : ((15352, LCID, 4, 0),()),
		"NasMsnlTSEndTime" : ((15288, LCID, 4, 0),()),
		"NasMsnlTSNumIncrements" : ((15287, LCID, 4, 0),()),
		"NasMsnlTSOn" : ((15285, LCID, 4, 0),()),
		"NasMsnlTSOutputFreq" : ((15290, LCID, 4, 0),()),
		"NasMsnlTSSkipFactor" : ((15289, LCID, 4, 0),()),
		"NasMsnlTSSkipTSTEP" : ((15286, LCID, 4, 0),()),
		"NasMsnlkCnt2ALFA" : ((15253, LCID, 4, 0),()),
		"NasMsnlkCnt2AMAX" : ((15260, LCID, 4, 0),()),
		"NasMsnlkCnt2AMIN" : ((15259, LCID, 4, 0),()),
		"NasMsnlkCnt2AUTOTIM" : ((15306, LCID, 4, 0),()),
		"NasMsnlkCnt2BALF" : ((15451, LCID, 4, 0),()),
		"NasMsnlkCnt2BETA" : ((15251, LCID, 4, 0),()),
		"NasMsnlkCnt2CIBL" : ((15272, LCID, 4, 0),()),
		"NasMsnlkCnt2CREEP" : ((15244, LCID, 4, 0),()),
		"NasMsnlkCnt2CRICOFF" : ((15432, LCID, 4, 0),()),
		"NasMsnlkCnt2CRINFAC" : ((15298, LCID, 4, 0),()),
		"NasMsnlkCnt2CRLIMR" : ((15433, LCID, 4, 0),()),
		"NasMsnlkCnt2DCON" : ((15280, LCID, 4, 0),()),
		"NasMsnlkCnt2DEFLIM" : ((15239, LCID, 4, 0),()),
		"NasMsnlkCnt2DIPR" : ((15242, LCID, 4, 0),()),
		"NasMsnlkCnt2DISLIM" : ((15237, LCID, 4, 0),()),
		"NasMsnlkCnt2DTI0" : ((15273, LCID, 4, 0),()),
		"NasMsnlkCnt2DTINIT" : ((15307, LCID, 4, 0),()),
		"NasMsnlkCnt2DTMAX" : ((15309, LCID, 4, 0),()),
		"NasMsnlkCnt2DTMIN" : ((15308, LCID, 4, 0),()),
		"NasMsnlkCnt2EQMFMIN" : ((15311, LCID, 4, 0),()),
		"NasMsnlkCnt2EQMFMX" : ((15310, LCID, 4, 0),()),
		"NasMsnlkCnt2ERCD" : ((15248, LCID, 4, 0),()),
		"NasMsnlkCnt2GAMA" : ((15252, LCID, 4, 0),()),
		"NasMsnlkCnt2HMAX" : ((15275, LCID, 4, 0),()),
		"NasMsnlkCnt2HMIN" : ((15274, LCID, 4, 0),()),
		"NasMsnlkCnt2HPRCO" : ((15256, LCID, 4, 0),()),
		"NasMsnlkCnt2IA12" : ((15453, LCID, 4, 0),()),
		"NasMsnlkCnt2IA16" : ((15441, LCID, 4, 0),()),
		"NasMsnlkCnt2IA19" : ((15442, LCID, 4, 0),()),
		"NasMsnlkCnt2IA4" : ((15452, LCID, 4, 0),()),
		"NasMsnlkCnt2IAR0" : ((15323, LCID, 4, 0),()),
		"NasMsnlkCnt2ILNS" : ((15257, LCID, 4, 0),()),
		"NasMsnlkCnt2IMPG" : ((15282, LCID, 4, 0),()),
		"NasMsnlkCnt2IMPL" : ((15250, LCID, 4, 0),()),
		"NasMsnlkCnt2IMPR" : ((15283, LCID, 4, 0),()),
		"NasMsnlkCnt2IMPV" : ((15284, LCID, 4, 0),()),
		"NasMsnlkCnt2INERTIA" : ((15297, LCID, 4, 0),()),
		"NasMsnlkCnt2IRDY" : ((15450, LCID, 4, 0),()),
		"NasMsnlkCnt2ISTO" : ((15449, LCID, 4, 0),()),
		"NasMsnlkCnt2IT1K" : ((15268, LCID, 4, 0),()),
		"NasMsnlkCnt2IT2K" : ((15269, LCID, 4, 0),()),
		"NasMsnlkCnt2IT3K" : ((15270, LCID, 4, 0),()),
		"NasMsnlkCnt2ITEREF" : ((15299, LCID, 4, 0),()),
		"NasMsnlkCnt2ITHE" : ((15430, LCID, 4, 0),()),
		"NasMsnlkCnt2ITMA" : ((15261, LCID, 4, 0),()),
		"NasMsnlkCnt2KMODTN" : ((15439, LCID, 4, 0),()),
		"NasMsnlkCnt2KUPDATE" : ((15443, LCID, 4, 0),()),
		"NasMsnlkCnt2LL2" : ((15431, LCID, 4, 0),()),
		"NasMsnlkCnt2LVAR" : ((15240, LCID, 4, 0),()),
		"NasMsnlkCnt2MADI" : ((15247, LCID, 4, 0),()),
		"NasMsnlkCnt2MATSYM" : ((15296, LCID, 4, 0),()),
		"NasMsnlkCnt2MAXBIS" : ((15436, LCID, 4, 0),()),
		"NasMsnlkCnt2MSGLVLC" : ((15440, LCID, 4, 0),()),
		"NasMsnlkCnt2NORM" : ((15243, LCID, 4, 0),()),
		"NasMsnlkCnt2OTRE" : ((15324, LCID, 4, 0),()),
		"NasMsnlkCnt2PLAS" : ((15271, LCID, 4, 0),()),
		"NasMsnlkCnt2PLASTIC" : ((15245, LCID, 4, 0),()),
		"NasMsnlkCnt2PLLIM" : ((15434, LCID, 4, 0),()),
		"NasMsnlkCnt2PLSHUT" : ((15424, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCE" : ((15266, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCF" : ((15325, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCO" : ((15255, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCQ" : ((15264, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCR" : ((15262, LCID, 4, 0),()),
		"NasMsnlkCnt2PRCS" : ((15281, LCID, 4, 0),()),
		"NasMsnlkCnt2PRDE" : ((15448, LCID, 4, 0),()),
		"NasMsnlkCnt2PRDR" : ((15447, LCID, 4, 0),()),
		"NasMsnlkCnt2PRED" : ((15249, LCID, 4, 0),()),
		"NasMsnlkCnt2PRLN" : ((15258, LCID, 4, 0),()),
		"NasMsnlkCnt2RDOW" : ((15277, LCID, 4, 0),()),
		"NasMsnlkCnt2REFE" : ((15267, LCID, 4, 0),()),
		"NasMsnlkCnt2REFP" : ((15263, LCID, 4, 0),()),
		"NasMsnlkCnt2REFU" : ((15265, LCID, 4, 0),()),
		"NasMsnlkCnt2RELC" : ((15279, LCID, 4, 0),()),
		"NasMsnlkCnt2RFVAR" : ((15446, LCID, 4, 0),()),
		"NasMsnlkCnt2RHOINF" : ((15435, LCID, 4, 0),()),
		"NasMsnlkCnt2RJPN" : ((15302, LCID, 4, 0),()),
		"NasMsnlkCnt2RJPZ" : ((15301, LCID, 4, 0),()),
		"NasMsnlkCnt2ROTLIM" : ((15238, LCID, 4, 0),()),
		"NasMsnlkCnt2RSUB" : ((15278, LCID, 4, 0),()),
		"NasMsnlkCnt2RUP" : ((15276, LCID, 4, 0),()),
		"NasMsnlkCnt2STAB" : ((15246, LCID, 4, 0),()),
		"NasMsnlkCnt2SkipNLCNTL2" : ((15236, LCID, 4, 0),()),
		"NasMsnlkCnt2TETA" : ((15254, LCID, 4, 0),()),
		"NasMsnlkCnt2TINTMTH" : ((15312, LCID, 4, 0),()),
		"NasMsnlkCnt2TSDYN" : ((15300, LCID, 4, 0),()),
		"NasMsnlkCnt2TSVSC" : ((15303, LCID, 4, 0),()),
		"NasMsnlkCnt2TVAR" : ((15241, LCID, 4, 0),()),
		"NasMsnlkCnt2VSCOSN" : ((15305, LCID, 4, 0),()),
		"NasMsnlkCnt2VSCOTE" : ((15304, LCID, 4, 0),()),
		"NasMsnlkCnt2on" : ((15235, LCID, 4, 0),()),
		"NasMsnlkJCON" : ((15422, LCID, 4, 0),()),
		"NasNXStratAlpha" : ((10241, LCID, 4, 0),()),
		"NasNXStratAtsdamp" : ((10266, LCID, 4, 0),()),
		"NasNXStratAtsdfac" : ((10264, LCID, 4, 0),()),
		"NasNXStratAtslows" : ((10265, LCID, 4, 0),()),
		"NasNXStratAtsmass" : ((10412, LCID, 4, 0),()),
		"NasNXStratAtsmxdt" : ((10262, LCID, 4, 0),()),
		"NasNXStratAtsnext" : ((10263, LCID, 4, 0),()),
		"NasNXStratAtssubd" : ((10261, LCID, 4, 0),()),
		"NasNXStratAuto" : ((10230, LCID, 4, 0),()),
		"NasNXStratBeama" : ((10285, LCID, 4, 0),()),
		"NasNXStratBeamalg" : ((10497, LCID, 4, 0),()),
		"NasNXStratBeame" : ((10284, LCID, 4, 0),()),
		"NasNXStratBoltstp" : ((10369, LCID, 4, 0),()),
		"NasNXStratConvcri" : ((10249, LCID, 4, 0),()),
		"NasNXStratCstype" : ((10299, LCID, 4, 0),()),
		"NasNXStratCtdamp" : ((10363, LCID, 4, 0),()),
		"NasNXStratCtdampN" : ((10364, LCID, 4, 0),()),
		"NasNXStratCtdampT" : ((10365, LCID, 4, 0),()),
		"NasNXStratCtdisp" : ((10362, LCID, 4, 0),()),
		"NasNXStratCvssval" : ((10372, LCID, 4, 0),()),
		"NasNXStratDelta" : ((10242, LCID, 4, 0),()),
		"NasNXStratDispopt" : ((10239, LCID, 4, 0),()),
		"NasNXStratDmnorm" : ((10257, LCID, 4, 0),()),
		"NasNXStratDnorm" : ((10256, LCID, 4, 0),()),
		"NasNXStratDrillkf" : ((10376, LCID, 4, 0),()),
		"NasNXStratDtdelay" : ((10236, LCID, 4, 0),()),
		"NasNXStratDtol" : ((10255, LCID, 4, 0),()),
		"NasNXStratElcv" : ((10280, LCID, 4, 0),()),
		"NasNXStratElrescs" : ((10323, LCID, 4, 0),()),
		"NasNXStratEnlsth" : ((10260, LCID, 4, 0),()),
		"NasNXStratEpsia" : ((10244, LCID, 4, 0),()),
		"NasNXStratEpsib" : ((10245, LCID, 4, 0),()),
		"NasNXStratEpsii" : ((10246, LCID, 4, 0),()),
		"NasNXStratEqrbar" : ((10281, LCID, 4, 0),()),
		"NasNXStratEqrbe2" : ((10282, LCID, 4, 0),()),
		"NasNXStratEtol" : ((10250, LCID, 4, 0),()),
		"NasNXStratIcmode" : ((10293, LCID, 4, 0),()),
		"NasNXStratImpact" : ((10274, LCID, 4, 0),()),
		"NasNXStratIrint" : ((10278, LCID, 4, 0),()),
		"NasNXStratItemax" : ((10243, LCID, 4, 0),()),
		"NasNXStratLdccont" : ((10272, LCID, 4, 0),()),
		"NasNXStratLdcdisp" : ((10269, LCID, 4, 0),()),
		"NasNXStratLdcdmax" : ((10271, LCID, 4, 0),()),
		"NasNXStratLdcdof" : ((10268, LCID, 4, 0),()),
		"NasNXStratLdcgrid" : ((10267, LCID, 4, 0),()),
		"NasNXStratLdcimax" : ((10270, LCID, 4, 0),()),
		"NasNXStratLdcsubd" : ((10273, LCID, 4, 0),()),
		"NasNXStratLoadopt" : ((10240, LCID, 4, 0),()),
		"NasNXStratLsearch" : ((10247, LCID, 4, 0),()),
		"NasNXStratLslower" : ((10377, LCID, 4, 0),()),
		"NasNXStratLsupper" : ((10378, LCID, 4, 0),()),
		"NasNXStratMasstyp" : ((10232, LCID, 4, 0),()),
		"NasNXStratMaxDisp" : ((10368, LCID, 4, 0),()),
		"NasNXStratMaxite" : ((10248, LCID, 4, 0),()),
		"NasNXStratModexNew" : ((10413, LCID, 4, 0),()),
		"NasNXStratMsfac" : ((10235, LCID, 4, 0),()),
		"NasNXStratMstab" : ((10234, LCID, 4, 0),()),
		"NasNXStratNposit" : ((10231, LCID, 4, 0),()),
		"NasNXStratNsubgrp" : ((10279, LCID, 4, 0),()),
		"NasNXStratNsupp" : ((10275, LCID, 4, 0),()),
		"NasNXStratOn" : ((10228, LCID, 4, 0),()),
		"NasNXStratPlasalg" : ((10502, LCID, 4, 0),()),
		"NasNXStratRblcrit" : ((10286, LCID, 4, 0),()),
		"NasNXStratRconsm" : ((10259, LCID, 4, 0),()),
		"NasNXStratRctol" : ((10254, LCID, 4, 0),()),
		"NasNXStratRmnorm" : ((10253, LCID, 4, 0),()),
		"NasNXStratRnorm" : ((10252, LCID, 4, 0),()),
		"NasNXStratRtalg" : ((10374, LCID, 4, 0),()),
		"NasNXStratRtol" : ((10251, LCID, 4, 0),()),
		"NasNXStratSdofang" : ((10237, LCID, 4, 0),()),
		"NasNXStratSkipFactor" : ((10297, LCID, 4, 0),()),
		"NasNXStratSolver" : ((10229, LCID, 4, 0),()),
		"NasNXStratSpringk" : ((10283, LCID, 4, 0),()),
		"NasNXStratStol" : ((10258, LCID, 4, 0),()),
		"NasNXStratTimeIncrement" : ((10296, LCID, 4, 0),()),
		"NasNXStratTimeSteps" : ((10295, LCID, 4, 0),()),
		"NasNXStratTint" : ((10233, LCID, 4, 0),()),
		"NasNXStratTnslcf" : ((10375, LCID, 4, 0),()),
		"NasNXStratTstart" : ((10277, LCID, 4, 0),()),
		"NasNXStratUlform" : ((10294, LCID, 4, 0),()),
		"NasNXStratUpform" : ((10238, LCID, 4, 0),()),
		"NasNXStratXdtcal" : ((10288, LCID, 4, 0),()),
		"NasNXStratXdtfac" : ((10289, LCID, 4, 0),()),
		"NasNXStratXdtmin1" : ((10291, LCID, 4, 0),()),
		"NasNXStratXdtmin2" : ((10292, LCID, 4, 0),()),
		"NasNXStratXmscale" : ((10290, LCID, 4, 0),()),
		"NasNXStratXstep" : ((10287, LCID, 4, 0),()),
		"NasNXStratXtcurve" : ((10373, LCID, 4, 0),()),
		"NasNonlinAdapt" : ((10511, LCID, 4, 0),()),
		"NasNonlinBehaviorASSM" : ((10585, LCID, 4, 0),()),
		"NasNonlinBehaviorCPROJ" : ((10597, LCID, 4, 0),()),
		"NasNonlinBehaviorCreepExp" : ((10581, LCID, 4, 0),()),
		"NasNonlinBehaviorCreepImp" : ((10584, LCID, 4, 0),()),
		"NasNonlinBehaviorCreepOn" : ((10596, LCID, 4, 0),()),
		"NasNonlinBehaviorCreepType" : ((10583, LCID, 4, 0),()),
		"NasNonlinBehaviorDIRECT" : ((10590, LCID, 4, 0),()),
		"NasNonlinBehaviorEnable" : ((10582, LCID, 4, 0),()),
		"NasNonlinBehaviorIPRINT" : ((10592, LCID, 4, 0),()),
		"NasNonlinBehaviorLRGSTRN" : ((10587, LCID, 4, 0),()),
		"NasNonlinBehaviorOn" : ((10580, LCID, 4, 0),()),
		"NasNonlinBehaviorPROPBEH" : ((10589, LCID, 4, 0),()),
		"NasNonlinBehaviorPROPMAP" : ((10588, LCID, 4, 0),()),
		"NasNonlinBehaviorTHICKOP" : ((10591, LCID, 4, 0),()),
		"NasNonlinBehaviorTSHEAR" : ((10586, LCID, 4, 0),()),
		"NasNonlinBehaviorVALD1" : ((10593, LCID, 4, 0),()),
		"NasNonlinBehaviorVALD2" : ((10594, LCID, 4, 0),()),
		"NasNonlinBehaviorVCOORD" : ((10595, LCID, 4, 0),()),
		"NasNonlinDT" : ((10045, LCID, 4, 0),()),
		"NasNonlinKDAMP" : ((10456, LCID, 4, 0),()),
		"NasNonlinKUPDATE" : ((10457, LCID, 4, 0),()),
		"NasNonlinMaxIter" : ((10047, LCID, 4, 0),()),
		"NasNonlinNDT" : ((10044, LCID, 4, 0),()),
		"NasNonlinNO" : ((10046, LCID, 4, 0),()),
		"NasNonlinOn" : ((10043, LCID, 4, 0),()),
		"NasOmodes" : ((15085, LCID, 4, 0),()),
		"NasOmodesOn" : ((15084, LCID, 4, 0),()),
		"NasOptimAnalysisType" : ((10454, LCID, 4, 0),()),
		"NasOptimCycles" : ((10515, LCID, 4, 0),()),
		"NasOptimDresp" : ((10520, LCID, 4, 0),()),
		"NasOptimEcho" : ((10528, LCID, 4, 0),()),
		"NasOptimGoal" : ((10521, LCID, 4, 0),()),
		"NasOptimInterval" : ((10529, LCID, 4, 0),()),
		"NasOptimIntervalVal" : ((10522, LCID, 4, 0),()),
		"NasOptimIsTopology" : ((10517, LCID, 4, 0),()),
		"NasOptimMCDelay" : ((10531, LCID, 4, 0),()),
		"NasOptimMCDelayVal" : ((10530, LCID, 4, 0),()),
		"NasOptimMinDesobj" : ((10519, LCID, 4, 0),()),
		"NasOptimOn" : ((10516, LCID, 4, 0),()),
		"NasOptimTrackModes" : ((10455, LCID, 4, 0),()),
		"NasRandCorrLagInterval" : ((10505, LCID, 4, 0),()),
		"NasRandCorrLagMax" : ((10507, LCID, 4, 0),()),
		"NasRandCorrLagStart" : ((10506, LCID, 4, 0),()),
		"NasRandCorrOn" : ((10504, LCID, 4, 0),()),
		"NasRandXYAuto" : ((10509, LCID, 4, 0),()),
		"NasRandXYElemGroup" : ((10070, LCID, 4, 0),()),
		"NasRandXYNodeGroup" : ((10069, LCID, 4, 0),()),
		"NasRandXYOn" : ((10066, LCID, 4, 0),()),
		"NasRandXYPsdf" : ((10510, LCID, 4, 0),()),
		"NasRandXYSummary" : ((10068, LCID, 4, 0),()),
		"NasRandomOn" : ((10064, LCID, 4, 0),()),
		"NasRelEMotion" : ((15156, LCID, 4, 0),()),
		"NasRotorAsyncResponse" : ((10347, LCID, 4, 0),()),
		"NasRotorComplexModeOutput" : ((10356, LCID, 4, 0),()),
		"NasRotorDoCSV" : ((10350, LCID, 4, 0),()),
		"NasRotorDoGPF" : ((10351, LCID, 4, 0),()),
		"NasRotorEnabled" : ((10343, LCID, 4, 0),()),
		"NasRotorExcitationOrder" : ((10358, LCID, 4, 0),()),
		"NasRotorFixedRefSys" : ((10346, LCID, 4, 0),()),
		"NasRotorForceExcitation" : ((10349, LCID, 4, 0),()),
		"NasRotorIncludePath" : ((10344, LCID, 4, 0),()),
		"NasRotorInputUnits" : ((10352, LCID, 4, 0),()),
		"NasRotorModeSelection" : ((10361, LCID, 4, 0),()),
		"NasRotorOn" : ((10342, LCID, 4, 0),()),
		"NasRotorOutputUnits" : ((10353, LCID, 4, 0),()),
		"NasRotorPrintedOutput" : ((10354, LCID, 4, 0),()),
		"NasRotorSingleRotor" : ((10345, LCID, 4, 0),()),
		"NasRotorSpeedNumSteps" : ((10355, LCID, 4, 0),()),
		"NasRotorSpeedStart" : ((10359, LCID, 4, 0),()),
		"NasRotorSpeedStep" : ((10360, LCID, 4, 0),()),
		"NasRotorSteinerInertia" : ((10348, LCID, 4, 0),()),
		"NasRotorWhirlThreshold" : ((10357, LCID, 4, 0),()),
		"NasSELoad" : ((15153, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"SkipStandard" : ((15005, LCID, 4, 0),()),
		"Solver" : ((10000, LCID, 4, 0),()),
		"StartText" : ((15006, LCID, 4, 0),()),
		"SubcaseAnalysisType" : ((15181, LCID, 4, 0),()),
		"SubcaseNotSeqDep" : ((15425, LCID, 4, 0),()),
		"title" : ((10002, LCID, 4, 0),()),
		"vBCSet" : ((15086, LCID, 4, 0),()),
		"vFStDynFreqRange" : ((10226, LCID, 4, 0),()),
		"vMSCNasCnlConvergenceFlags" : ((15179, LCID, 4, 0),()),
		"vNasAeroFreqKeep" : ((10428, LCID, 4, 0),()),
		"vNasBulkAlpha1Val" : ((10494, LCID, 4, 0),()),
		"vNasBulkAlpha2Val" : ((10495, LCID, 4, 0),()),
		"vNasCnlConvergenceFlags" : ((15106, LCID, 4, 0),()),
		"vNasCnlConvergenceValue" : ((15107, LCID, 4, 0),()),
		"vNasDdamCoeffOn" : ((10340, LCID, 4, 0),()),
		"vNasDdamCoeffVal" : ((10341, LCID, 4, 0),()),
		"vNasDynKeepFreq" : ((10389, LCID, 4, 0),()),
		"vNasGCheckMsg" : ((10223, LCID, 4, 0),()),
		"vNasGCheckMsg2" : ((10461, LCID, 4, 0),()),
		"vNasGCheckTest" : ((10221, LCID, 4, 0),()),
		"vNasGCheckTest2" : ((10459, LCID, 4, 0),()),
		"vNasGCheckTol" : ((10222, LCID, 4, 0),()),
		"vNasGCheckTol2" : ((10460, LCID, 4, 0),()),
		"vNasGenSpecRequest" : ((10220, LCID, 4, 0),()),
		"vNasMCheckGrndDOFSet" : ((10225, LCID, 4, 0),()),
		"vNasMCheckWtDOFSet" : ((10224, LCID, 4, 0),()),
		"vNasModeFreqRange" : ((10216, LCID, 4, 0),()),
		"vNasModeImagFreqRange" : ((10320, LCID, 4, 0),()),
		"vNasModeXYRequest" : ((10217, LCID, 4, 0),()),
		"vNasMsnlCntConv_flags" : ((15184, LCID, 4, 0),()),
		"vNasMsnlCntConv_value" : ((15185, LCID, 4, 0),()),
		"vNasNonlinEps" : ((10215, LCID, 4, 0),()),
		"vNasNonlinEpsFlag" : ((10214, LCID, 4, 0),()),
		"vNasRandXYRequest" : ((10219, LCID, 4, 0),()),
		"vNasRandXYRequest2" : ((10508, LCID, 4, 0),()),
		"vNasRandomRequest" : ((10218, LCID, 4, 0),()),
		"vNasRotorRegionSelection" : ((10635, LCID, 4, 0),()),
		"vNasRotorSpeedMultiplier" : ((10636, LCID, 4, 0),()),
		"vNasRotorSpeedMultiplierFn" : ((10637, LCID, 4, 0),()),
		"vOutput" : ((15087, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAnalysisStep(DispatchBaseClass):
	CLSID = IID('{B49E120A-C070-4C6D-BB09-036D188F05A4}')
	coclass_clsid = IID('{B49E120C-C070-4C6D-BB09-036D188F05A4}')

	def ActiveContactEntities(self, bContact=defaultNamedNotOptArg, nConnectorSetID=defaultNamedNotOptArg, nRegionSetID=defaultNamedNotOptArg, nConPropSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25010, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (3, 1)),bContact
			, nConnectorSetID, nRegionSetID, nConPropSetID)

	# The method BCSet is actually a property, but must be used as a method to correctly pass the arguments
	def BCSet(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteAnalysisStep(self, nSetID=defaultNamedNotOptArg, nCaseID=defaultNamedNotOptArg, nStepID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25005, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nSetID
			, nCaseID, nStepID)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def InitAnalysisStep(self, nSetID=defaultNamedNotOptArg, nCaseID=defaultNamedNotOptArg, nStepID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25004, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nSetID
			, nCaseID, nStepID)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	# The method Output is actually a property, but must be used as a method to correctly pass the arguments
	def Output(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetBCSet is actually a property, but must be used as a method to correctly pass the arguments
	def SetBCSet(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetOutput is actually a property, but must be used as a method to correctly pass the arguments
	def SetOutput(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ContactOption": (15177, 2, (3, 0), (), "ContactOption", None),
		"ContactSetType": (15178, 2, (3, 0), (), "ContactSetType", None),
		"CornerOutput": (15010, 2, (3, 0), (), "CornerOutput", None),
		"Destination": (15008, 2, (3, 0), (), "Destination", None),
		"Echo": (15004, 2, (8, 0), (), "Echo", None),
		"EndText": (15007, 2, (3, 0), (), "EndText", None),
		"GlobalStepID": (15424, 2, (3, 0), (), "GlobalStepID", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Imaginary": (15009, 2, (3, 0), (), "Imaginary", None),
		"IntegrationOutput": (15011, 2, (3, 0), (), "IntegrationOutput", None),
		"InternalStepID": (15001, 2, (3, 0), (), "InternalStepID", None),
		"NasCurvatureStrain": (15180, 2, (11, 0), (), "NasCurvatureStrain", None),
		"NasInlStepOptADJUST": (15394, 2, (3, 0), (), "NasInlStepOptADJUST", None),
		"NasInlStepOptCREEP": (15366, 2, (11, 0), (), "NasInlStepOptCREEP", None),
		"NasInlStepOptCTRLDEF": (15362, 2, (3, 0), (), "NasInlStepOptCTRLDEF", None),
		"NasInlStepOptConvA": (15411, 2, (11, 0), (), "NasInlStepOptConvA", None),
		"NasInlStepOptConvN": (15410, 2, (11, 0), (), "NasInlStepOptConvN", None),
		"NasInlStepOptConvP": (15407, 2, (11, 0), (), "NasInlStepOptConvP", None),
		"NasInlStepOptConvU": (15406, 2, (11, 0), (), "NasInlStepOptConvU", None),
		"NasInlStepOptConvV": (15409, 2, (11, 0), (), "NasInlStepOptConvV", None),
		"NasInlStepOptConvW": (15408, 2, (11, 0), (), "NasInlStepOptConvW", None),
		"NasInlStepOptDAMP": (15378, 2, (5, 0), (), "NasInlStepOptDAMP", None),
		"NasInlStepOptDTINITF": (15370, 2, (5, 0), (), "NasInlStepOptDTINITF", None),
		"NasInlStepOptDTINITFA": (15399, 2, (5, 0), (), "NasInlStepOptDTINITFA", None),
		"NasInlStepOptDTMAXF": (15372, 2, (5, 0), (), "NasInlStepOptDTMAXF", None),
		"NasInlStepOptDTMINF": (15371, 2, (5, 0), (), "NasInlStepOptDTMINF", None),
		"NasInlStepOptEPSP": (15413, 2, (5, 0), (), "NasInlStepOptEPSP", None),
		"NasInlStepOptEPSU": (15412, 2, (5, 0), (), "NasInlStepOptEPSU", None),
		"NasInlStepOptEPSW": (15414, 2, (5, 0), (), "NasInlStepOptEPSW", None),
		"NasInlStepOptEnableCriteria": (15379, 2, (11, 0), (), "NasInlStepOptEnableCriteria", None),
		"NasInlStepOptFSTRESS": (15421, 2, (5, 0), (), "NasInlStepOptFSTRESS", None),
		"NasInlStepOptGroupIDs": (15385, 2, (12, 0), (), "NasInlStepOptGroupIDs", None),
		"NasInlStepOptID": (15360, 2, (3, 0), (), "NasInlStepOptID", None),
		"NasInlStepOptIDAMP": (15377, 2, (3, 0), (), "NasInlStepOptIDAMP", None),
		"NasInlStepOptINTOUT": (15375, 2, (3, 0), (), "NasInlStepOptINTOUT", None),
		"NasInlStepOptIPHYS": (15380, 2, (3, 0), (), "NasInlStepOptIPHYS", None),
		"NasInlStepOptIncrements": (15384, 2, (12, 0), (), "NasInlStepOptIncrements", None),
		"NasInlStepOptKMETHOD": (15415, 2, (3, 0), (), "NasInlStepOptKMETHOD", None),
		"NasInlStepOptKSTEP": (15416, 2, (3, 0), (), "NasInlStepOptKSTEP", None),
		"NasInlStepOptLIMTAR": (15381, 2, (3, 0), (), "NasInlStepOptLIMTAR", None),
		"NasInlStepOptLSTOL": (15420, 2, (5, 0), (), "NasInlStepOptLSTOL", None),
		"NasInlStepOptLoadStepping": (15367, 2, (3, 0), (), "NasInlStepOptLoadStepping", None),
		"NasInlStepOptMAXALR": (15401, 2, (5, 0), (), "NasInlStepOptMAXALR", None),
		"NasInlStepOptMAXBIS": (15365, 2, (3, 0), (), "NasInlStepOptMAXBIS", None),
		"NasInlStepOptMAXITER": (15363, 2, (3, 0), (), "NasInlStepOptMAXITER", None),
		"NasInlStepOptMAXLS": (15419, 2, (3, 0), (), "NasInlStepOptMAXLS", None),
		"NasInlStepOptMAXQN": (15418, 2, (3, 0), (), "NasInlStepOptMAXQN", None),
		"NasInlStepOptMECH": (15405, 2, (11, 0), (), "NasInlStepOptMECH", None),
		"NasInlStepOptMINALR": (15400, 2, (5, 0), (), "NasInlStepOptMINALR", None),
		"NasInlStepOptMINITER": (15364, 2, (3, 0), (), "NasInlStepOptMINITER", None),
		"NasInlStepOptMRCONV": (15417, 2, (3, 0), (), "NasInlStepOptMRCONV", None),
		"NasInlStepOptMSTEP": (15395, 2, (3, 0), (), "NasInlStepOptMSTEP", None),
		"NasInlStepOptMT1_i": (15390, 2, (12, 0), (), "NasInlStepOptMT1_i", None),
		"NasInlStepOptMT2_i": (15391, 2, (12, 0), (), "NasInlStepOptMT2_i", None),
		"NasInlStepOptMT3_i": (15392, 2, (12, 0), (), "NasInlStepOptMT3_i", None),
		"NasInlStepOptMT4_i": (15393, 2, (12, 0), (), "NasInlStepOptMT4_i", None),
		"NasInlStepOptNDESIR": (15373, 2, (3, 0), (), "NasInlStepOptNDESIR", None),
		"NasInlStepOptNDESIRA": (15403, 2, (3, 0), (), "NasInlStepOptNDESIRA", None),
		"NasInlStepOptNINC": (15368, 2, (3, 0), (), "NasInlStepOptNINC", None),
		"NasInlStepOptNO": (15369, 2, (3, 0), (), "NasInlStepOptNO", None),
		"NasInlStepOptNSMAX": (15376, 2, (3, 0), (), "NasInlStepOptNSMAX", None),
		"NasInlStepOptNSMAXA": (15404, 2, (3, 0), (), "NasInlStepOptNSMAXA", None),
		"NasInlStepOptOn": (15358, 2, (11, 0), (), "NasInlStepOptOn", None),
		"NasInlStepOptRB": (15396, 2, (5, 0), (), "NasInlStepOptRB", None),
		"NasInlStepOptRBIG": (15383, 2, (5, 0), (), "NasInlStepOptRBIG", None),
		"NasInlStepOptRSMALL": (15382, 2, (5, 0), (), "NasInlStepOptRSMALL", None),
		"NasInlStepOptSCALEA": (15402, 2, (5, 0), (), "NasInlStepOptSCALEA", None),
		"NasInlStepOptSFACT": (15374, 2, (5, 0), (), "NasInlStepOptSFACT", None),
		"NasInlStepOptSkipNLSTEP": (15359, 2, (11, 0), (), "NasInlStepOptSkipNLSTEP", None),
		"NasInlStepOptTOTTIM": (15361, 2, (5, 0), (), "NasInlStepOptTOTTIM", None),
		"NasInlStepOptTYPE": (15398, 2, (3, 0), (), "NasInlStepOptTYPE", None),
		"NasInlStepOptUTOL": (15397, 2, (5, 0), (), "NasInlStepOptUTOL", None),
		"NasInlStepOptYT1_i": (15386, 2, (12, 0), (), "NasInlStepOptYT1_i", None),
		"NasInlStepOptYT2_i": (15387, 2, (12, 0), (), "NasInlStepOptYT2_i", None),
		"NasInlStepOptYT3_i": (15388, 2, (12, 0), (), "NasInlStepOptYT3_i", None),
		"NasInlStepOptYT4_i": (15389, 2, (12, 0), (), "NasInlStepOptYT4_i", None),
		"NasModeDampOverall": (10404, 2, (5, 0), (), "NasModeDampOverall", None),
		"NasModeDesiredRoots": (10056, 2, (3, 0), (), "NasModeDesiredRoots", None),
		"NasModeEigrSet": (10051, 2, (3, 0), (), "NasModeEigrSet", None),
		"NasModeEstRoots": (10055, 2, (3, 0), (), "NasModeEstRoots", None),
		"NasModeMassForm": (10060, 2, (3, 0), (), "NasModeMassForm", None),
		"NasModeMethod": (10052, 2, (3, 0), (), "NasModeMethod", None),
		"NasModeNormDOF": (10059, 2, (3, 0), (), "NasModeNormDOF", None),
		"NasModeNormNode": (10058, 2, (3, 0), (), "NasModeNormNode", None),
		"NasModeNormOpt": (10057, 2, (3, 0), (), "NasModeNormOpt", None),
		"NasModeOn": (10050, 2, (11, 0), (), "NasModeOn", None),
		"NasModeSolutionType": (10053, 2, (11, 0), (), "NasModeSolutionType", None),
		"NasModesComplexConverge": (10321, 2, (5, 0), (), "NasModesComplexConverge", None),
		"NasModesComplexRegionWidth": (10322, 2, (5, 0), (), "NasModesComplexRegionWidth", None),
		"NasModesSkipEigr": (10319, 2, (11, 0), (), "NasModesSkipEigr", None),
		"NasOmodes": (15085, 2, (8, 0), (), "NasOmodes", None),
		"NasOmodesOn": (15084, 2, (11, 0), (), "NasOmodesOn", None),
		"NasStepAlternateTextLocation": (15342, 2, (11, 0), (), "NasStepAlternateTextLocation", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"SkipStandard": (15005, 2, (11, 0), (), "SkipStandard", None),
		"StartText": (15006, 2, (3, 0), (), "StartText", None),
		"StepAnalysisType": (15181, 2, (3, 0), (), "StepAnalysisType", None),
		"StepID": (15423, 2, (3, 0), (), "StepID", None),
		"StepLabel": (15176, 2, (8, 0), (), "StepLabel", None),
		"StepTitle": (15000, 2, (8, 0), (), "StepTitle", None),
		"UseGlobalStep": (15425, 2, (11, 0), (), "UseGlobalStep", None),
		"caseID": (15422, 2, (3, 0), (), "caseID", None),
		"vBCSet": (15086, 2, (12, 0), (), "vBCSet", None),
		"vNasModeFreqRange": (10216, 2, (12, 0), (), "vNasModeFreqRange", None),
		"vNasModeImagFreqRange": (10320, 2, (12, 0), (), "vNasModeImagFreqRange", None),
		"vOutput": (15087, 2, (12, 0), (), "vOutput", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ContactOption" : ((15177, LCID, 4, 0),()),
		"ContactSetType" : ((15178, LCID, 4, 0),()),
		"CornerOutput" : ((15010, LCID, 4, 0),()),
		"Destination" : ((15008, LCID, 4, 0),()),
		"Echo" : ((15004, LCID, 4, 0),()),
		"EndText" : ((15007, LCID, 4, 0),()),
		"GlobalStepID" : ((15424, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Imaginary" : ((15009, LCID, 4, 0),()),
		"IntegrationOutput" : ((15011, LCID, 4, 0),()),
		"InternalStepID" : ((15001, LCID, 4, 0),()),
		"NasCurvatureStrain" : ((15180, LCID, 4, 0),()),
		"NasInlStepOptADJUST" : ((15394, LCID, 4, 0),()),
		"NasInlStepOptCREEP" : ((15366, LCID, 4, 0),()),
		"NasInlStepOptCTRLDEF" : ((15362, LCID, 4, 0),()),
		"NasInlStepOptConvA" : ((15411, LCID, 4, 0),()),
		"NasInlStepOptConvN" : ((15410, LCID, 4, 0),()),
		"NasInlStepOptConvP" : ((15407, LCID, 4, 0),()),
		"NasInlStepOptConvU" : ((15406, LCID, 4, 0),()),
		"NasInlStepOptConvV" : ((15409, LCID, 4, 0),()),
		"NasInlStepOptConvW" : ((15408, LCID, 4, 0),()),
		"NasInlStepOptDAMP" : ((15378, LCID, 4, 0),()),
		"NasInlStepOptDTINITF" : ((15370, LCID, 4, 0),()),
		"NasInlStepOptDTINITFA" : ((15399, LCID, 4, 0),()),
		"NasInlStepOptDTMAXF" : ((15372, LCID, 4, 0),()),
		"NasInlStepOptDTMINF" : ((15371, LCID, 4, 0),()),
		"NasInlStepOptEPSP" : ((15413, LCID, 4, 0),()),
		"NasInlStepOptEPSU" : ((15412, LCID, 4, 0),()),
		"NasInlStepOptEPSW" : ((15414, LCID, 4, 0),()),
		"NasInlStepOptEnableCriteria" : ((15379, LCID, 4, 0),()),
		"NasInlStepOptFSTRESS" : ((15421, LCID, 4, 0),()),
		"NasInlStepOptGroupIDs" : ((15385, LCID, 4, 0),()),
		"NasInlStepOptID" : ((15360, LCID, 4, 0),()),
		"NasInlStepOptIDAMP" : ((15377, LCID, 4, 0),()),
		"NasInlStepOptINTOUT" : ((15375, LCID, 4, 0),()),
		"NasInlStepOptIPHYS" : ((15380, LCID, 4, 0),()),
		"NasInlStepOptIncrements" : ((15384, LCID, 4, 0),()),
		"NasInlStepOptKMETHOD" : ((15415, LCID, 4, 0),()),
		"NasInlStepOptKSTEP" : ((15416, LCID, 4, 0),()),
		"NasInlStepOptLIMTAR" : ((15381, LCID, 4, 0),()),
		"NasInlStepOptLSTOL" : ((15420, LCID, 4, 0),()),
		"NasInlStepOptLoadStepping" : ((15367, LCID, 4, 0),()),
		"NasInlStepOptMAXALR" : ((15401, LCID, 4, 0),()),
		"NasInlStepOptMAXBIS" : ((15365, LCID, 4, 0),()),
		"NasInlStepOptMAXITER" : ((15363, LCID, 4, 0),()),
		"NasInlStepOptMAXLS" : ((15419, LCID, 4, 0),()),
		"NasInlStepOptMAXQN" : ((15418, LCID, 4, 0),()),
		"NasInlStepOptMECH" : ((15405, LCID, 4, 0),()),
		"NasInlStepOptMINALR" : ((15400, LCID, 4, 0),()),
		"NasInlStepOptMINITER" : ((15364, LCID, 4, 0),()),
		"NasInlStepOptMRCONV" : ((15417, LCID, 4, 0),()),
		"NasInlStepOptMSTEP" : ((15395, LCID, 4, 0),()),
		"NasInlStepOptMT1_i" : ((15390, LCID, 4, 0),()),
		"NasInlStepOptMT2_i" : ((15391, LCID, 4, 0),()),
		"NasInlStepOptMT3_i" : ((15392, LCID, 4, 0),()),
		"NasInlStepOptMT4_i" : ((15393, LCID, 4, 0),()),
		"NasInlStepOptNDESIR" : ((15373, LCID, 4, 0),()),
		"NasInlStepOptNDESIRA" : ((15403, LCID, 4, 0),()),
		"NasInlStepOptNINC" : ((15368, LCID, 4, 0),()),
		"NasInlStepOptNO" : ((15369, LCID, 4, 0),()),
		"NasInlStepOptNSMAX" : ((15376, LCID, 4, 0),()),
		"NasInlStepOptNSMAXA" : ((15404, LCID, 4, 0),()),
		"NasInlStepOptOn" : ((15358, LCID, 4, 0),()),
		"NasInlStepOptRB" : ((15396, LCID, 4, 0),()),
		"NasInlStepOptRBIG" : ((15383, LCID, 4, 0),()),
		"NasInlStepOptRSMALL" : ((15382, LCID, 4, 0),()),
		"NasInlStepOptSCALEA" : ((15402, LCID, 4, 0),()),
		"NasInlStepOptSFACT" : ((15374, LCID, 4, 0),()),
		"NasInlStepOptSkipNLSTEP" : ((15359, LCID, 4, 0),()),
		"NasInlStepOptTOTTIM" : ((15361, LCID, 4, 0),()),
		"NasInlStepOptTYPE" : ((15398, LCID, 4, 0),()),
		"NasInlStepOptUTOL" : ((15397, LCID, 4, 0),()),
		"NasInlStepOptYT1_i" : ((15386, LCID, 4, 0),()),
		"NasInlStepOptYT2_i" : ((15387, LCID, 4, 0),()),
		"NasInlStepOptYT3_i" : ((15388, LCID, 4, 0),()),
		"NasInlStepOptYT4_i" : ((15389, LCID, 4, 0),()),
		"NasModeDampOverall" : ((10404, LCID, 4, 0),()),
		"NasModeDesiredRoots" : ((10056, LCID, 4, 0),()),
		"NasModeEigrSet" : ((10051, LCID, 4, 0),()),
		"NasModeEstRoots" : ((10055, LCID, 4, 0),()),
		"NasModeMassForm" : ((10060, LCID, 4, 0),()),
		"NasModeMethod" : ((10052, LCID, 4, 0),()),
		"NasModeNormDOF" : ((10059, LCID, 4, 0),()),
		"NasModeNormNode" : ((10058, LCID, 4, 0),()),
		"NasModeNormOpt" : ((10057, LCID, 4, 0),()),
		"NasModeOn" : ((10050, LCID, 4, 0),()),
		"NasModeSolutionType" : ((10053, LCID, 4, 0),()),
		"NasModesComplexConverge" : ((10321, LCID, 4, 0),()),
		"NasModesComplexRegionWidth" : ((10322, LCID, 4, 0),()),
		"NasModesSkipEigr" : ((10319, LCID, 4, 0),()),
		"NasOmodes" : ((15085, LCID, 4, 0),()),
		"NasOmodesOn" : ((15084, LCID, 4, 0),()),
		"NasStepAlternateTextLocation" : ((15342, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"SkipStandard" : ((15005, LCID, 4, 0),()),
		"StartText" : ((15006, LCID, 4, 0),()),
		"StepAnalysisType" : ((15181, LCID, 4, 0),()),
		"StepID" : ((15423, LCID, 4, 0),()),
		"StepLabel" : ((15176, LCID, 4, 0),()),
		"StepTitle" : ((15000, LCID, 4, 0),()),
		"UseGlobalStep" : ((15425, LCID, 4, 0),()),
		"caseID" : ((15422, LCID, 4, 0),()),
		"vBCSet" : ((15086, LCID, 4, 0),()),
		"vNasModeFreqRange" : ((10216, LCID, 4, 0),()),
		"vNasModeImagFreqRange" : ((10320, LCID, 4, 0),()),
		"vOutput" : ((15087, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAnalysisStudy(DispatchBaseClass):
	CLSID = IID('{589EAFB8-B3D0-42FB-B902-FE0A88B7EC80}')
	coclass_clsid = IID('{589EAFBA-B3D0-42FB-B902-FE0A88B7EC80}')

	def AddOutputSets(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def CountOutputSets(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nSetID=defaultNamedNotOptArg, bDeleteOutput=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bDeleteOutput)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def HasOutputSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (11, 0), ((3, 1),),nSetID
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def OutputSets(self, nOutputSetSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),nOutputSetSetID
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def RemoveAllOutputSets(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def RemoveOutputSets(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AnalysisProg": (10001, 2, (3, 0), (), "AnalysisProg", None),
		"AnalysisSet": (10005, 2, (3, 0), (), "AnalysisSet", None),
		"AnalysisType": (10002, 2, (3, 0), (), "AnalysisType", None),
		"FileTime": (10000, 2, (3, 0), (), "FileTime", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"notes": (10004, 2, (8, 0), (), "notes", None),
		"title": (10003, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AnalysisProg" : ((10001, LCID, 4, 0),()),
		"AnalysisSet" : ((10005, LCID, 4, 0),()),
		"AnalysisType" : ((10002, LCID, 4, 0),()),
		"FileTime" : ((10000, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"notes" : ((10004, LCID, 4, 0),()),
		"title" : ((10003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBCDefinition(DispatchBaseClass):
	CLSID = IID('{F1704416-2455-4C38-8C0C-AE23E062D421}')
	coclass_clsid = IID('{F1704418-2455-4C38-8C0C-AE23E062D421}')

	def CountBCs(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextBC(self, pDispatch=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16393, 2),), 'NextBC', None,pDispatch
			)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, enDataType=defaultNamedNotOptArg, enOnType=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),entID
			, enDataType, enOnType, sTitle)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def ResetNextBC(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"DataType": (10002, 2, (3, 0), (), "DataType", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"OnType": (10001, 2, (3, 0), (), "OnType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"DataType" : ((10002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"OnType" : ((10001, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBCEqn(DispatchBaseClass):
	CLSID = IID('{56434B14-F392-11D4-9453-001083FFF11C}')
	coclass_clsid = IID('{56434B16-F392-11D4-9453-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAll(self, nID=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, pnDefID=pythoncom.Missing, pnCount=pythoncom.Missing
			, pvNode=pythoncom.Missing, pvDof=pythoncom.Missing, pvCoeff=pythoncom.Missing, peColor=pythoncom.Missing, pnLayer=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16387, 2), (16387, 2)), 'GetAll', None,nID
			, nSetID, pnDefID, pnCount, pvNode, pvDof
			, pvCoeff, peColor, pnLayer)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextOnNode(self, nodeSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),nodeSET
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	# The method Node is actually a property, but must be used as a method to correctly pass the arguments
	def Node(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAll(self, nID=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, nDefID=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg
			, vnode=defaultNamedNotOptArg, vdof=defaultNamedNotOptArg, vCoeff=defaultNamedNotOptArg, eColor=defaultNamedNotOptArg, nlayer=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (3, 1), (3, 1)),nID
			, nSetID, nDefID, nCount, vnode, vdof
			, vCoeff, eColor, nlayer)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetNode is actually a property, but must be used as a method to correctly pass the arguments
	def SetNode(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setcoefficient is actually a property, but must be used as a method to correctly pass the arguments
	def Setcoefficient(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setdof is actually a property, but must be used as a method to correctly pass the arguments
	def Setdof(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method coefficient is actually a property, but must be used as a method to correctly pass the arguments
	def coefficient(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method dof is actually a property, but must be used as a method to correctly pass the arguments
	def dof(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"BCDefinitionID": (10009, 2, (3, 0), (), "BCDefinitionID", None),
		"Count": (10005, 2, (3, 0), (), "Count", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10004, 2, (3, 0), (), "color", None),
		"layer": (10003, 2, (3, 0), (), "layer", None),
		"vcoefficient": (10008, 2, (12, 0), (), "vcoefficient", None),
		"vdof": (10006, 2, (12, 0), (), "vdof", None),
		"vnode": (10007, 2, (12, 0), (), "vnode", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"BCDefinitionID" : ((10009, LCID, 4, 0),()),
		"Count" : ((10005, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10004, LCID, 4, 0),()),
		"layer" : ((10003, LCID, 4, 0),()),
		"vcoefficient" : ((10008, LCID, 4, 0),()),
		"vdof" : ((10006, LCID, 4, 0),()),
		"vnode" : ((10007, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(10005, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBCGeom(DispatchBaseClass):
	CLSID = IID('{D7297E16-F305-11D4-9452-001083FFF11C}')
	coclass_clsid = IID('{D7297E18-F305-11D4-9452-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetSearch(self, geomTYPE=defaultNamedNotOptArg, geomID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (3, 1)),geomTYPE
			, geomID)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextOnEntity(self, geomTYPE=defaultNamedNotOptArg, geomSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (3, 1)),geomTYPE
			, geomSET)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetArbitrary(self, geomTYPE=defaultNamedNotOptArg, geomID=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg, bDOF1=defaultNamedNotOptArg
			, bDOF2=defaultNamedNotOptArg, bDOF3=defaultNamedNotOptArg, bDOF4=defaultNamedNotOptArg, bDOF5=defaultNamedNotOptArg, bDOF6=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),geomTYPE
			, geomID, csysID, bDOF1, bDOF2, bDOF3
			, bDOF4, bDOF5, bDOF6)

	def SetCylinder(self, surfID=defaultNamedNotOptArg, radius=defaultNamedNotOptArg, rotation=defaultNamedNotOptArg, sliding=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1)),surfID
			, radius, rotation, sliding)

	def SetFixed(self, geomTYPE=defaultNamedNotOptArg, geomID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (3, 1)),geomTYPE
			, geomID)

	def SetNoRotation(self, geomTYPE=defaultNamedNotOptArg, geomID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (3, 1)),geomTYPE
			, geomID)

	def SetPinned(self, geomTYPE=defaultNamedNotOptArg, geomID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (3, 1)),geomTYPE
			, geomID)

	def SetSurfDirection(self, surfID=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, z=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),surfID
			, x, y, z)

	def SetSurfNormal(self, surfID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),surfID
			)

	def SetSurfSliding(self, surfID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),surfID
			)

	# The method Setdirection is actually a property, but must be used as a method to correctly pass the arguments
	def Setdirection(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setdof is actually a property, but must be used as a method to correctly pass the arguments
	def Setdof(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method direction is actually a property, but must be used as a method to correctly pass the arguments
	def direction(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method dof is actually a property, but must be used as a method to correctly pass the arguments
	def dof(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"BCDefinitionID": (10012, 2, (3, 0), (), "BCDefinitionID", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10002, 2, (3, 0), (), "color", None),
		"dofvec": (10009, 2, (12, 0), (), "dofvec", None),
		"expanded": (10003, 2, (11, 0), (), "expanded", None),
		"geomID": (10004, 2, (3, 0), (), "geomID", None),
		"geomTYPE": (10005, 2, (3, 0), (), "geomTYPE", None),
		"layer": (10001, 2, (3, 0), (), "layer", None),
		"outCSys": (10008, 2, (3, 0), (), "outCSys", None),
		"type": (10006, 2, (3, 0), (), "type", None),
		"vdirection": (10011, 2, (12, 0), (), "vdirection", None),
		"vdof": (10010, 2, (12, 0), (), "vdof", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"BCDefinitionID" : ((10012, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10002, LCID, 4, 0),()),
		"dofvec" : ((10009, LCID, 4, 0),()),
		"expanded" : ((10003, LCID, 4, 0),()),
		"geomID" : ((10004, LCID, 4, 0),()),
		"geomTYPE" : ((10005, LCID, 4, 0),()),
		"layer" : ((10001, LCID, 4, 0),()),
		"outCSys" : ((10008, LCID, 4, 0),()),
		"type" : ((10006, LCID, 4, 0),()),
		"vdirection" : ((10011, LCID, 4, 0),()),
		"vdof" : ((10010, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBCNode(DispatchBaseClass):
	CLSID = IID('{D0E25456-F2FB-11D4-9452-001083FFF11C}')
	coclass_clsid = IID('{D0E25458-F2FB-11D4-9452-001083FFF11C}')

	def Add(self, SetID=defaultNamedNotOptArg, bDOF1=defaultNamedNotOptArg, bDOF2=defaultNamedNotOptArg, bDOF3=defaultNamedNotOptArg
			, bDOF4=defaultNamedNotOptArg, bDOF5=defaultNamedNotOptArg, bDOF6=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),SetID
			, bDOF1, bDOF2, bDOF3, bDOF4, bDOF5
			, bDOF6)

	def AddArray(self, Count=defaultNamedNotOptArg, doDOF=defaultNamedNotOptArg, NodeID=defaultNamedNotOptArg, dof=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (11, 1), (12, 1), (12, 1)),Count
			, doDOF, NodeID, dof)

	def AddNonZero(self, SetID=defaultNamedNotOptArg, bDOF1=defaultNamedNotOptArg, dVal1=defaultNamedNotOptArg, bDOF2=defaultNamedNotOptArg
			, dVal2=defaultNamedNotOptArg, bDOF3=defaultNamedNotOptArg, dVal3=defaultNamedNotOptArg, bDOF4=defaultNamedNotOptArg, dVal4=defaultNamedNotOptArg
			, bDOF5=defaultNamedNotOptArg, dVal5=defaultNamedNotOptArg, bDOF6=defaultNamedNotOptArg, dVal6=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (11, 1), (5, 1), (11, 1), (5, 1), (11, 1), (5, 1), (11, 1), (5, 1), (11, 1), (5, 1)),SetID
			, bDOF1, dVal1, bDOF2, dVal2, bDOF3
			, dVal3, bDOF4, dVal4, bDOF5, dVal5
			, bDOF6, dVal6)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAllArray(self, Count=pythoncom.Missing, ExpandedGeomBC=pythoncom.Missing, NodeID=pythoncom.Missing, layer=pythoncom.Missing
			, color=pythoncom.Missing, BCDefinitionID=pythoncom.Missing, bNonZeroBC=pythoncom.Missing, dof=pythoncom.Missing, NonZeroValues=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,Count
			, ExpandedGeomBC, NodeID, layer, color, BCDefinitionID
			, bNonZeroBC, dof, NonZeroValues)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, Count=defaultNamedNotOptArg, ExpandedGeomBC=defaultNamedNotOptArg, NodeID=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, color=defaultNamedNotOptArg, BCDefinitionID=defaultNamedNotOptArg, bNonZeroBC=defaultNamedNotOptArg, dof=defaultNamedNotOptArg, NonZeroValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, ExpandedGeomBC, NodeID, layer, color, BCDefinitionID
			, bNonZeroBC, dof, NonZeroValues)

	def PutArray(self, Count=defaultNamedNotOptArg, doDOF=defaultNamedNotOptArg, NodeID=defaultNamedNotOptArg, dof=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (11, 1), (12, 1), (12, 1)),Count
			, doDOF, NodeID, dof)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setdof is actually a property, but must be used as a method to correctly pass the arguments
	def Setdof(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method Setvalue is actually a property, but must be used as a method to correctly pass the arguments
	def Setvalue(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method dof is actually a property, but must be used as a method to correctly pass the arguments
	def dof(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method value is actually a property, but must be used as a method to correctly pass the arguments
	def value(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"BCDefinitionID": (10006, 2, (3, 0), (), "BCDefinitionID", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"NonZeroConstraint": (10007, 2, (11, 0), (), "NonZeroConstraint", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10002, 2, (3, 0), (), "color", None),
		"dofvec": (10004, 2, (12, 0), (), "dofvec", None),
		"expanded": (10003, 2, (11, 0), (), "expanded", None),
		"layer": (10001, 2, (3, 0), (), "layer", None),
		"vdof": (10005, 2, (12, 0), (), "vdof", None),
		"vvalue": (10008, 2, (12, 0), (), "vvalue", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"BCDefinitionID" : ((10006, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"NonZeroConstraint" : ((10007, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10002, LCID, 4, 0),()),
		"dofvec" : ((10004, LCID, 4, 0),()),
		"expanded" : ((10003, LCID, 4, 0),()),
		"layer" : ((10001, LCID, 4, 0),()),
		"vdof" : ((10005, LCID, 4, 0),()),
		"vvalue" : ((10008, LCID, 4, 0),()),
	}
	# Default method for this class is 'value'
	def __call__(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBCSet(DispatchBaseClass):
	CLSID = IID('{5D2F5E14-F2F1-11D4-9452-001083FFF11C}')
	coclass_clsid = IID('{5D2F5E16-F2F1-11D4-9452-001083FFF11C}')

	def Compress(self):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Expand(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetCombination(self, nCombo=pythoncom.Missing, nSetID=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetCombination', None,nCombo
			, nSetID)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextBC(self, pDispatch=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16393, 2),), 'NextBC', None,pDispatch
			)

	def NextBCDef(self, pDispatch=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((16393, 2),), 'NextBCDef', None,pDispatch
			)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def NodesAsSet(self, bExpandedGeomBC=defaultNamedNotOptArg, bNodalBC=defaultNamedNotOptArg, bEquationBC=defaultNamedNotOptArg, nNodeSetID=defaultNamedNotOptArg
			, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (3, 1), (11, 1)),bExpandedGeomBC
			, bNodalBC, bEquationBC, nNodeSetID, bClear)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutCombination(self, nCombo=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (12, 1)),nCombo
			, nSetID)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def ResetNextBC(self, enDataType=defaultNamedNotOptArg, bOtherBCOnly=defaultNamedNotOptArg, bIncludeExpanded=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),enDataType
			, bOtherBCOnly, bIncludeExpanded)

	def ResetNextBCDef(self, bAllDataTypes=defaultNamedNotOptArg, enDataType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((11, 1), (3, 1)),bAllDataTypes
			, enDataType)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"IsCombination": (10001, 2, (11, 0), (), "IsCombination", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"IsCombination" : ((10001, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBeamCalculator(DispatchBaseClass):
	CLSID = IID('{3A62FE4C-D156-4F16-9C1B-F81C6BB4089A}')
	coclass_clsid = IID('{3A62FE4E-D156-4F16-9C1B-F81C6BB4089A}')

	def CalculateStress(self, nOutputSetID=defaultNamedNotOptArg, enStressComponent=defaultNamedNotOptArg, pnNumNodes=pythoncom.Missing, pdCoordinates=pythoncom.Missing
			, pdStresses=pythoncom.Missing, pdMaxStress=pythoncom.Missing, pnMaxStressIndex=pythoncom.Missing, pdMinStress=pythoncom.Missing, pnMinIndexStress=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'CalculateStress', None,nOutputSetID
			, enStressComponent, pnNumNodes, pdCoordinates, pdStresses, pdMaxStress
			, pnMaxStressIndex, pdMinStress, pnMinIndexStress)

	def CalculateStressFromForces(self, dEndAForces=defaultNamedNotOptArg, dEndBForces=defaultNamedNotOptArg, enStressComponent=defaultNamedNotOptArg, pnNumNodes=pythoncom.Missing
			, pdCoordinates=pythoncom.Missing, pdStresses=pythoncom.Missing, pdMaxStress=pythoncom.Missing, pnMaxStressInfo=pythoncom.Missing, pdMinStress=pythoncom.Missing
			, pnMinStressInfo=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((12, 1), (12, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'CalculateStressFromForces', None,dEndAForces
			, dEndBForces, enStressComponent, pnNumNodes, pdCoordinates, pdStresses
			, pdMaxStress, pnMaxStressInfo, pdMinStress, pnMinStressInfo)

	def FindMaxMinStress(self, nOutputSetID=defaultNamedNotOptArg, enStressComponent=defaultNamedNotOptArg, nMaxSetID=pythoncom.Missing, enMaxComponent=pythoncom.Missing
			, dMaxLocation=pythoncom.Missing, dMaxStress=pythoncom.Missing, nMinSetID=pythoncom.Missing, enMinComponent=pythoncom.Missing, dMinLocation=pythoncom.Missing
			, dMinStress=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2), (16389, 2), (16389, 2), (16387, 2), (16387, 2), (16389, 2), (16389, 2)), 'FindMaxMinStress', None,nOutputSetID
			, enStressComponent, nMaxSetID, enMaxComponent, dMaxLocation, dMaxStress
			, nMinSetID, enMinComponent, dMinLocation, dMinStress)

	def GetElementProperties(self, dArea=pythoncom.Missing, dIzz=pythoncom.Missing, dIyy=pythoncom.Missing, dIyz=pythoncom.Missing
			, dfJ=pythoncom.Missing, dShearAreaY=pythoncom.Missing, dShearAreaZ=pythoncom.Missing, dWarp=pythoncom.Missing, dNeutralAxisOffsetY=pythoncom.Missing
			, dNeutralAxisOffsetZ=pythoncom.Missing):
		return self._ApplyTypes_(20000, 1, (3, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetElementProperties', None,dArea
			, dIzz, dIyy, dIyz, dfJ, dShearAreaY
			, dShearAreaZ, dWarp, dNeutralAxisOffsetY, dNeutralAxisOffsetZ)

	def GetMeshInfo(self, nNumNode=pythoncom.Missing, dNodeYZ=pythoncom.Missing, nNumElem=pythoncom.Missing, nElemNodes=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((16387, 2), (16396, 2), (16387, 2), (16396, 2)), 'GetMeshInfo', None,nNumNode
			, dNodeYZ, nNumElem, nElemNodes)

	_prop_map_get_ = {
		"Element": (10000, 2, (3, 0), (), "Element", None),
		"IncludeAxialForce": (10003, 2, (11, 0), (), "IncludeAxialForce", None),
		"IncludeMomentY": (10006, 2, (11, 0), (), "IncludeMomentY", None),
		"IncludeMomentZ": (10007, 2, (11, 0), (), "IncludeMomentZ", None),
		"IncludeShearForceY": (10004, 2, (11, 0), (), "IncludeShearForceY", None),
		"IncludeShearForceZ": (10005, 2, (11, 0), (), "IncludeShearForceZ", None),
		"IncludeTorque": (10008, 2, (11, 0), (), "IncludeTorque", None),
		"MeshFactor": (10002, 2, (3, 0), (), "MeshFactor", None),
		"Position": (10001, 2, (5, 0), (), "Position", None),
	}
	_prop_map_put_ = {
		"Element" : ((10000, LCID, 4, 0),()),
		"IncludeAxialForce" : ((10003, LCID, 4, 0),()),
		"IncludeMomentY" : ((10006, LCID, 4, 0),()),
		"IncludeMomentZ" : ((10007, LCID, 4, 0),()),
		"IncludeShearForceY" : ((10004, LCID, 4, 0),()),
		"IncludeShearForceZ" : ((10005, LCID, 4, 0),()),
		"IncludeTorque" : ((10008, LCID, 4, 0),()),
		"MeshFactor" : ((10002, LCID, 4, 0),()),
		"Position" : ((10001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBearingSpeedDefinition(DispatchBaseClass):
	CLSID = IID('{F5B85DA3-FA4D-447A-A50A-27C71A35D8AC}')
	coclass_clsid = IID('{F5B85DA5-FA4D-447A-A50A-27C71A35D8AC}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"DIREC": (10007, 2, (11, 0), (), "DIREC", None),
		"HasElemList": (10010, 2, (11, 0), (), "HasElemList", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"RID1": (10005, 2, (3, 0), (), "RID1", None),
		"RID2": (10006, 2, (3, 0), (), "RID2", None),
		"SPEED": (10009, 2, (3, 0), (), "SPEED", None),
		"SPEEDOpt": (10008, 2, (11, 0), (), "SPEEDOpt", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"elemSetID": (10011, 2, (3, 0), (), "elemSetID", None),
		"title": (10003, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"DIREC" : ((10007, LCID, 4, 0),()),
		"HasElemList" : ((10010, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"RID1" : ((10005, LCID, 4, 0),()),
		"RID2" : ((10006, LCID, 4, 0),()),
		"SPEED" : ((10009, LCID, 4, 0),()),
		"SPEEDOpt" : ((10008, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"elemSetID" : ((10011, LCID, 4, 0),()),
		"title" : ((10003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBodyMesher(DispatchBaseClass):
	CLSID = IID('{F2509BC6-33D7-4DF8-BDE1-3CB362DB1ACD}')
	coclass_clsid = IID('{F2509BC8-33D7-4DF8-BDE1-3CB362DB1ACD}')

	def Associate(self, nAssociateTo=defaultNamedNotOptArg, nExtraCurveSetID=defaultNamedNotOptArg, nExtraSurfaceSetID=defaultNamedNotOptArg, bAssociateAngleOn=defaultNamedNotOptArg
			, dAssociateAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (5, 1)),nAssociateTo
			, nExtraCurveSetID, nExtraSurfaceSetID, bAssociateAngleOn, dAssociateAngle)

	def CalculateDefaultMeshSize(self, enDataType=defaultNamedNotOptArg, nSolidOrElemSet=defaultNamedNotOptArg, dSize=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((3, 1), (3, 1), (16389, 2)), 'CalculateDefaultMeshSize', None,enDataType
			, nSolidOrElemSet, dSize)

	def Dialog(self, bMeshingSolids=defaultNamedNotOptArg, nSolidOrElemSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((11, 1), (3, 1)),bMeshingSolids
			, nSolidOrElemSet)

	def MeshBodies(self, nSolidSet=defaultNamedNotOptArg, enElemShape=defaultNamedNotOptArg, nPropID=defaultNamedNotOptArg, nZeroAttrPropID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nSolidSet
			, enElemShape, nPropID, nZeroAttrPropID)

	def MeshOnMesh(self, nElemSet=defaultNamedNotOptArg, enElemShape=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1)),nElemSet
			, enElemShape)

	def SetSizeOnCurves(self, nCurveSet=defaultNamedNotOptArg, dSize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (5, 1)),nCurveSet
			, dSize)

	def SetSizeOnSurfaces(self, nSurfaceSet=defaultNamedNotOptArg, dSize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (5, 1)),nSurfaceSet
			, dSize)

	def Size(self, dTargetSize=defaultNamedNotOptArg, dMinSizeFactor=defaultNamedNotOptArg, dGrowthFactor=defaultNamedNotOptArg, nPointsAroundCircle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (3, 1)),dTargetSize
			, dMinSizeFactor, dGrowthFactor, nPointsAroundCircle)

	def UseSizing(self, bUseCurveSizing=defaultNamedNotOptArg, bUseSurfaceSizing=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((11, 1), (11, 1)),bUseCurveSizing
			, bUseSurfaceSizing)

	def clear(self, bClearAll=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((11, 1),),bClearAll
			)

	_prop_map_get_ = {
		"AllowMeshIntersections": (10059, 2, (11, 0), (), "AllowMeshIntersections", None),
		"AssociateAngle": (10011, 2, (5, 0), (), "AssociateAngle", None),
		"AssociateAngleOn": (10010, 2, (11, 0), (), "AssociateAngleOn", None),
		"AssociateTo": (10009, 2, (3, 0), (), "AssociateTo", None),
		"CompatibilityRefinement": (10029, 2, (11, 0), (), "CompatibilityRefinement", None),
		"CurvatureAlignment": (10014, 2, (11, 0), (), "CurvatureAlignment", None),
		"CurvatureRefinement": (10015, 2, (11, 0), (), "CurvatureRefinement", None),
		"CurvatureRefinementLimit": (10016, 2, (5, 0), (), "CurvatureRefinementLimit", None),
		"CurvatureRefinementMaxPoints": (10019, 2, (3, 0), (), "CurvatureRefinementMaxPoints", None),
		"EnhancedQualityMesh": (10028, 2, (11, 0), (), "EnhancedQualityMesh", None),
		"FacetAngleError": (10032, 2, (5, 0), (), "FacetAngleError", None),
		"FacetChordError": (10033, 2, (5, 0), (), "FacetChordError", None),
		"FacetCurveFactor": (10034, 2, (5, 0), (), "FacetCurveFactor", None),
		"FacetDistanceError": (10031, 2, (5, 0), (), "FacetDistanceError", None),
		"FacetMaxSize": (10030, 2, (5, 0), (), "FacetMaxSize", None),
		"FeatureEdgeBreakAngle": (10053, 2, (5, 0), (), "FeatureEdgeBreakAngle", None),
		"GrowthFactor": (10008, 2, (5, 0), (), "GrowthFactor", None),
		"GrowthFactorOn": (10007, 2, (11, 0), (), "GrowthFactorOn", None),
		"KeepMeshOnFreeEdges": (10054, 2, (11, 0), (), "KeepMeshOnFreeEdges", None),
		"MergeNodes": (10055, 2, (11, 0), (), "MergeNodes", None),
		"MeshType": (10000, 2, (3, 0), (), "MeshType", None),
		"MidsideAngleLimit": (10058, 2, (5, 0), (), "MidsideAngleLimit", None),
		"MidsideAngleLimitOn": (10057, 2, (11, 0), (), "MidsideAngleLimitOn", None),
		"MidsideNodes": (10001, 2, (11, 0), (), "MidsideNodes", None),
		"MidsideOntoGeometry": (10056, 2, (3, 0), (), "MidsideOntoGeometry", None),
		"MinQuality": (10027, 2, (5, 0), (), "MinQuality", None),
		"MinQualityOn": (10026, 2, (11, 0), (), "MinQualityOn", None),
		"MinSizeFactor": (10004, 2, (5, 0), (), "MinSizeFactor", None),
		"MinSizeFactorOn": (10003, 2, (11, 0), (), "MinSizeFactorOn", None),
		"PointsAroundCircle": (10006, 2, (3, 0), (), "PointsAroundCircle", None),
		"PointsAroundCircleOn": (10005, 2, (11, 0), (), "PointsAroundCircleOn", None),
		"ProximityDirection": (10025, 2, (3, 0), (), "ProximityDirection", None),
		"ProximityDistance": (10024, 2, (5, 0), (), "ProximityDistance", None),
		"ProximityDistanceOn": (10023, 2, (11, 0), (), "ProximityDistanceOn", None),
		"ProximityElemAcross": (10022, 2, (3, 0), (), "ProximityElemAcross", None),
		"ProximityElemAcrossOn": (10021, 2, (11, 0), (), "ProximityElemAcrossOn", None),
		"ProximityRefinement": (10020, 2, (11, 0), (), "ProximityRefinement", None),
		"RetainAssociativity": (10049, 2, (11, 0), (), "RetainAssociativity", None),
		"RetainColor": (10047, 2, (11, 0), (), "RetainColor", None),
		"RetainCornerThickness": (10044, 2, (11, 0), (), "RetainCornerThickness", None),
		"RetainElemType": (10043, 2, (11, 0), (), "RetainElemType", None),
		"RetainLayer": (10048, 2, (11, 0), (), "RetainLayer", None),
		"RetainNormalDirection": (10046, 2, (11, 0), (), "RetainNormalDirection", None),
		"RetainOffset": (10045, 2, (11, 0), (), "RetainOffset", None),
		"RetainProperty": (10042, 2, (11, 0), (), "RetainProperty", None),
		"TargetSize": (10002, 2, (5, 0), (), "TargetSize", None),
		"TetAllowVoids": (10037, 2, (11, 0), (), "TetAllowVoids", None),
		"TetGrowthRatio": (10041, 2, (5, 0), (), "TetGrowthRatio", None),
		"TetMultipleThruThickness": (10039, 2, (3, 0), (), "TetMultipleThruThickness", None),
		"TetMultipleThruThicknessOn": (10038, 2, (11, 0), (), "TetMultipleThruThicknessOn", None),
		"TetOptimizationLevel": (10040, 2, (3, 0), (), "TetOptimizationLevel", None),
		"TetSliverRemoval": (10036, 2, (11, 0), (), "TetSliverRemoval", None),
		"UseCurveSizing": (10012, 2, (11, 0), (), "UseCurveSizing", None),
		"UseFaceter": (10035, 2, (11, 0), (), "UseFaceter", None),
		"UseSurfaceSizing": (10013, 2, (11, 0), (), "UseSurfaceSizing", None),
	}
	_prop_map_put_ = {
		"AllowMeshIntersections" : ((10059, LCID, 4, 0),()),
		"AssociateAngle" : ((10011, LCID, 4, 0),()),
		"AssociateAngleOn" : ((10010, LCID, 4, 0),()),
		"AssociateTo" : ((10009, LCID, 4, 0),()),
		"CompatibilityRefinement" : ((10029, LCID, 4, 0),()),
		"CurvatureAlignment" : ((10014, LCID, 4, 0),()),
		"CurvatureRefinement" : ((10015, LCID, 4, 0),()),
		"CurvatureRefinementLimit" : ((10016, LCID, 4, 0),()),
		"CurvatureRefinementMaxPoints" : ((10019, LCID, 4, 0),()),
		"EnhancedQualityMesh" : ((10028, LCID, 4, 0),()),
		"FacetAngleError" : ((10032, LCID, 4, 0),()),
		"FacetChordError" : ((10033, LCID, 4, 0),()),
		"FacetCurveFactor" : ((10034, LCID, 4, 0),()),
		"FacetDistanceError" : ((10031, LCID, 4, 0),()),
		"FacetMaxSize" : ((10030, LCID, 4, 0),()),
		"FeatureEdgeBreakAngle" : ((10053, LCID, 4, 0),()),
		"GrowthFactor" : ((10008, LCID, 4, 0),()),
		"GrowthFactorOn" : ((10007, LCID, 4, 0),()),
		"KeepMeshOnFreeEdges" : ((10054, LCID, 4, 0),()),
		"MergeNodes" : ((10055, LCID, 4, 0),()),
		"MeshType" : ((10000, LCID, 4, 0),()),
		"MidsideAngleLimit" : ((10058, LCID, 4, 0),()),
		"MidsideAngleLimitOn" : ((10057, LCID, 4, 0),()),
		"MidsideNodes" : ((10001, LCID, 4, 0),()),
		"MidsideOntoGeometry" : ((10056, LCID, 4, 0),()),
		"MinQuality" : ((10027, LCID, 4, 0),()),
		"MinQualityOn" : ((10026, LCID, 4, 0),()),
		"MinSizeFactor" : ((10004, LCID, 4, 0),()),
		"MinSizeFactorOn" : ((10003, LCID, 4, 0),()),
		"PointsAroundCircle" : ((10006, LCID, 4, 0),()),
		"PointsAroundCircleOn" : ((10005, LCID, 4, 0),()),
		"ProximityDirection" : ((10025, LCID, 4, 0),()),
		"ProximityDistance" : ((10024, LCID, 4, 0),()),
		"ProximityDistanceOn" : ((10023, LCID, 4, 0),()),
		"ProximityElemAcross" : ((10022, LCID, 4, 0),()),
		"ProximityElemAcrossOn" : ((10021, LCID, 4, 0),()),
		"ProximityRefinement" : ((10020, LCID, 4, 0),()),
		"RetainAssociativity" : ((10049, LCID, 4, 0),()),
		"RetainColor" : ((10047, LCID, 4, 0),()),
		"RetainCornerThickness" : ((10044, LCID, 4, 0),()),
		"RetainElemType" : ((10043, LCID, 4, 0),()),
		"RetainLayer" : ((10048, LCID, 4, 0),()),
		"RetainNormalDirection" : ((10046, LCID, 4, 0),()),
		"RetainOffset" : ((10045, LCID, 4, 0),()),
		"RetainProperty" : ((10042, LCID, 4, 0),()),
		"TargetSize" : ((10002, LCID, 4, 0),()),
		"TetAllowVoids" : ((10037, LCID, 4, 0),()),
		"TetGrowthRatio" : ((10041, LCID, 4, 0),()),
		"TetMultipleThruThickness" : ((10039, LCID, 4, 0),()),
		"TetMultipleThruThicknessOn" : ((10038, LCID, 4, 0),()),
		"TetOptimizationLevel" : ((10040, LCID, 4, 0),()),
		"TetSliverRemoval" : ((10036, LCID, 4, 0),()),
		"UseCurveSizing" : ((10012, LCID, 4, 0),()),
		"UseFaceter" : ((10035, LCID, 4, 0),()),
		"UseSurfaceSizing" : ((10013, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICSys(DispatchBaseClass):
	CLSID = IID('{10CE53B8-F2E2-11D4-9452-001083FFF11C}')
	coclass_clsid = IID('{10CE53BA-F2E2-11D4-9452-001083FFF11C}')

	def Axis(self, nCSysType=defaultNamedNotOptArg, nAxisDir=defaultNamedNotOptArg, origin=defaultNamedNotOptArg, Axis=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nCSysType
			, nAxisDir, origin, Axis)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def TwoAxes(self, nCSysType=defaultNamedNotOptArg, nNormalAxisDir=defaultNamedNotOptArg, origin=defaultNamedNotOptArg, axis1=defaultNamedNotOptArg
			, axis2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),nCSysType
			, nNormalAxisDir, origin, axis1, axis2)

	def XYPoints(self, origin=defaultNamedNotOptArg, xaxis=defaultNamedNotOptArg, xyplane=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1)),origin
			, xaxis, xyplane)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10003, 2, (3, 0), (), "color", None),
		"defCSys": (10000, 2, (3, 0), (), "defCSys", None),
		"layer": (10002, 2, (3, 0), (), "layer", None),
		"matrix": (10013, 2, (12, 0), (), "matrix", None),
		"origin": (10011, 2, (12, 0), (), "origin", None),
		"rotation": (10012, 2, (12, 0), (), "rotation", None),
		"rotx": (10007, 2, (5, 0), (), "rotx", None),
		"roty": (10008, 2, (5, 0), (), "roty", None),
		"rotz": (10009, 2, (5, 0), (), "rotz", None),
		"title": (10010, 2, (8, 0), (), "title", None),
		"type": (10001, 2, (3, 0), (), "type", None),
		"x": (10004, 2, (5, 0), (), "x", None),
		"y": (10005, 2, (5, 0), (), "y", None),
		"z": (10006, 2, (5, 0), (), "z", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10003, LCID, 4, 0),()),
		"defCSys" : ((10000, LCID, 4, 0),()),
		"layer" : ((10002, LCID, 4, 0),()),
		"matrix" : ((10013, LCID, 4, 0),()),
		"origin" : ((10011, LCID, 4, 0),()),
		"rotation" : ((10012, LCID, 4, 0),()),
		"rotx" : ((10007, LCID, 4, 0),()),
		"roty" : ((10008, LCID, 4, 0),()),
		"rotz" : ((10009, LCID, 4, 0),()),
		"title" : ((10010, LCID, 4, 0),()),
		"type" : ((10001, LCID, 4, 0),()),
		"x" : ((10004, LCID, 4, 0),()),
		"y" : ((10005, LCID, 4, 0),()),
		"z" : ((10006, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChart(DispatchBaseClass):
	CLSID = IID('{7AADC5EF-400B-4984-9D12-314296952F1F}')
	coclass_clsid = IID('{7AADC5F1-400B-4984-9D12-314296952F1F}')

	def AddDataSeries(self, SetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),SetID
			)

	# The method AxisAutoscale is actually a property, but must be used as a method to correctly pass the arguments
	def AxisAutoscale(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisAutoscale2 is actually a property, but must be used as a method to correctly pass the arguments
	def AxisAutoscale2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18023, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisLabelDecimal is actually a property, but must be used as a method to correctly pass the arguments
	def AxisLabelDecimal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18018, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisLabelDecimal2 is actually a property, but must be used as a method to correctly pass the arguments
	def AxisLabelDecimal2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18028, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisLabelFormat is actually a property, but must be used as a method to correctly pass the arguments
	def AxisLabelFormat(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18019, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisLabelFormat2 is actually a property, but must be used as a method to correctly pass the arguments
	def AxisLabelFormat2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18027, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisMajorGridlineVisible is actually a property, but must be used as a method to correctly pass the arguments
	def AxisMajorGridlineVisible(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisMajorInterval is actually a property, but must be used as a method to correctly pass the arguments
	def AxisMajorInterval(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisMajorTickmarkVisible is actually a property, but must be used as a method to correctly pass the arguments
	def AxisMajorTickmarkVisible(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisMinorCount is actually a property, but must be used as a method to correctly pass the arguments
	def AxisMinorCount(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisMinorCountLog is actually a property, but must be used as a method to correctly pass the arguments
	def AxisMinorCountLog(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18021, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisMinorGridlineVisible is actually a property, but must be used as a method to correctly pass the arguments
	def AxisMinorGridlineVisible(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisMinorTickmarkVisible is actually a property, but must be used as a method to correctly pass the arguments
	def AxisMinorTickmarkVisible(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisRange is actually a property, but must be used as a method to correctly pass the arguments
	def AxisRange(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method AxisRange2 is actually a property, but must be used as a method to correctly pass the arguments
	def AxisRange2(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18024, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method AxisRangePad is actually a property, but must be used as a method to correctly pass the arguments
	def AxisRangePad(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18022, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisRangePad2 is actually a property, but must be used as a method to correctly pass the arguments
	def AxisRangePad2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18025, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisStyle is actually a property, but must be used as a method to correctly pass the arguments
	def AxisStyle(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisStyle2 is actually a property, but must be used as a method to correctly pass the arguments
	def AxisStyle2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18026, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisTitleBold is actually a property, but must be used as a method to correctly pass the arguments
	def AxisTitleBold(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18014, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisTitleColor is actually a property, but must be used as a method to correctly pass the arguments
	def AxisTitleColor(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18017, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisTitleFontSize is actually a property, but must be used as a method to correctly pass the arguments
	def AxisTitleFontSize(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisTitleItalic is actually a property, but must be used as a method to correctly pass the arguments
	def AxisTitleItalic(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18015, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisTitleJustification is actually a property, but must be used as a method to correctly pass the arguments
	def AxisTitleJustification(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisTitleUnderline is actually a property, but must be used as a method to correctly pass the arguments
	def AxisTitleUnderline(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18016, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisTitleVisible is actually a property, but must be used as a method to correctly pass the arguments
	def AxisTitleVisible(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisVisible is actually a property, but must be used as a method to correctly pass the arguments
	def AxisVisible(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method AxisZoom is actually a property, but must be used as a method to correctly pass the arguments
	def AxisZoom(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetDataSeries(self, numDS=pythoncom.Missing, dsID=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetDataSeries', None,numDS
			, dsID)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	# The method LegendLocation is actually a property, but must be used as a method to correctly pass the arguments
	def LegendLocation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18020, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def RemoveAllDataSeries(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def RemoveDataSeries(self, SetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),SetID
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetAxisAutoscale is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisAutoscale(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisAutoscale2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisAutoscale2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18023, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisLabelDecimal is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisLabelDecimal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18018, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisLabelDecimal2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisLabelDecimal2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18028, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisLabelFormat is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisLabelFormat(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18019, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisLabelFormat2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisLabelFormat2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18027, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisMajorGridlineVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisMajorGridlineVisible(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisMajorInterval is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisMajorInterval(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetAxisMajorTickmarkVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisMajorTickmarkVisible(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisMinorCount is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisMinorCount(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisMinorCountLog is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisMinorCountLog(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18021, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisMinorGridlineVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisMinorGridlineVisible(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisMinorTickmarkVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisMinorTickmarkVisible(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisRange is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisRange(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetAxisRange2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisRange2(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18024, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetAxisRangePad is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisRangePad(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18022, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisRangePad2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisRangePad2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18025, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisStyle is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisStyle(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisStyle2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisStyle2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18026, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisTitleBold is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisTitleBold(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18014, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisTitleColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisTitleColor(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18017, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisTitleFontSize is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisTitleFontSize(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetAxisTitleItalic is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisTitleItalic(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18015, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisTitleJustification is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisTitleJustification(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetAxisTitleUnderline is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisTitleUnderline(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18016, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisTitleVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisTitleVisible(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisVisible(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetAxisZoom is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisZoom(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetLegendLocation is actually a property, but must be used as a method to correctly pass the arguments
	def SetLegendLocation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18020, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def ShowPane(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AxisMajorColor": (10062, 2, (3, 0), (), "AxisMajorColor", None),
		"AxisMajorColorAutoDim": (10063, 2, (11, 0), (), "AxisMajorColorAutoDim", None),
		"AxisTitleX": (10002, 2, (8, 0), (), "AxisTitleX", None),
		"AxisTitleY": (10003, 2, (8, 0), (), "AxisTitleY", None),
		"AxisValueFontSize": (10056, 2, (5, 0), (), "AxisValueFontSize", None),
		"ComplexPlotLocation": (10068, 2, (3, 0), (), "ComplexPlotLocation", None),
		"DarkBackground": (10026, 2, (11, 0), (), "DarkBackground", None),
		"Font": (10052, 2, (8, 0), (), "Font", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"LabelFontSize": (10054, 2, (5, 0), (), "LabelFontSize", None),
		"LabelFromChart": (10019, 2, (11, 0), (), "LabelFromChart", None),
		"LabelVisible": (10020, 2, (11, 0), (), "LabelVisible", None),
		"LegendDirection": (10029, 2, (3, 0), (), "LegendDirection", None),
		"LegendFontSize": (10059, 2, (5, 0), (), "LegendFontSize", None),
		"LegendVisible": (10027, 2, (11, 0), (), "LegendVisible", None),
		"MarkerFromChart": (10015, 2, (11, 0), (), "MarkerFromChart", None),
		"MarkerSize": (10017, 2, (3, 0), (), "MarkerSize", None),
		"MarkerStyle": (10018, 2, (3, 0), (), "MarkerStyle", None),
		"MarkerVisible": (10016, 2, (11, 0), (), "MarkerVisible", None),
		"MasterScale": (10065, 2, (5, 0), (), "MasterScale", None),
		"OutputSet": (10011, 2, (3, 0), (), "OutputSet", None),
		"OutputSetAll": (10014, 2, (11, 0), (), "OutputSetAll", None),
		"OutputSetEnd": (10012, 2, (3, 0), (), "OutputSetEnd", None),
		"OutputSetInherit": (10010, 2, (11, 0), (), "OutputSetInherit", None),
		"Palette": (10025, 2, (3, 0), (), "Palette", None),
		"PaletteFromChart": (10024, 2, (11, 0), (), "PaletteFromChart", None),
		"ScaleInherit": (10064, 2, (11, 0), (), "ScaleInherit", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"ShowLabelMaxMin": (10023, 2, (11, 0), (), "ShowLabelMaxMin", None),
		"ShowLabelX": (10021, 2, (11, 0), (), "ShowLabelX", None),
		"ShowLabelY": (10022, 2, (11, 0), (), "ShowLabelY", None),
		"TitleFontBold": (10034, 2, (11, 0), (), "TitleFontBold", None),
		"TitleFontColor": (10037, 2, (3, 0), (), "TitleFontColor", None),
		"TitleFontItalic": (10035, 2, (11, 0), (), "TitleFontItalic", None),
		"TitleFontSize": (10033, 2, (5, 0), (), "TitleFontSize", None),
		"TitleFontUnderline": (10036, 2, (11, 0), (), "TitleFontUnderline", None),
		"TitleJustification": (10032, 2, (3, 0), (), "TitleJustification", None),
		"TitleLocation": (10031, 2, (3, 0), (), "TitleLocation", None),
		"TitleVisible": (10030, 2, (11, 0), (), "TitleVisible", None),
		"style": (10001, 2, (3, 0), (), "style", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"vAxisAutoscale": (10004, 2, (12, 0), (), "vAxisAutoscale", None),
		"vAxisAutoscale2": (10069, 2, (12, 0), (), "vAxisAutoscale2", None),
		"vAxisLabelDecimal": (10050, 2, (12, 0), (), "vAxisLabelDecimal", None),
		"vAxisLabelDecimal2": (10074, 2, (12, 0), (), "vAxisLabelDecimal2", None),
		"vAxisLabelFormat": (10051, 2, (12, 0), (), "vAxisLabelFormat", None),
		"vAxisLabelFormat2": (10073, 2, (12, 0), (), "vAxisLabelFormat2", None),
		"vAxisMajorGridlineVisible": (10040, 2, (12, 0), (), "vAxisMajorGridlineVisible", None),
		"vAxisMajorInterval": (10038, 2, (12, 0), (), "vAxisMajorInterval", None),
		"vAxisMajorTickmarkVisible": (10008, 2, (12, 0), (), "vAxisMajorTickmarkVisible", None),
		"vAxisMinorCount": (10039, 2, (12, 0), (), "vAxisMinorCount", None),
		"vAxisMinorCountLog": (10060, 2, (12, 0), (), "vAxisMinorCountLog", None),
		"vAxisMinorGridlineVisible": (10041, 2, (12, 0), (), "vAxisMinorGridlineVisible", None),
		"vAxisMinorTickmarkVisible": (10009, 2, (12, 0), (), "vAxisMinorTickmarkVisible", None),
		"vAxisRange": (10006, 2, (12, 0), (), "vAxisRange", None),
		"vAxisRange2": (10070, 2, (12, 0), (), "vAxisRange2", None),
		"vAxisRangePad": (10061, 2, (12, 0), (), "vAxisRangePad", None),
		"vAxisRangePad2": (10071, 2, (12, 0), (), "vAxisRangePad2", None),
		"vAxisStyle": (10005, 2, (12, 0), (), "vAxisStyle", None),
		"vAxisStyle2": (10072, 2, (12, 0), (), "vAxisStyle2", None),
		"vAxisTitleBold": (10046, 2, (12, 0), (), "vAxisTitleBold", None),
		"vAxisTitleFontColor": (10049, 2, (12, 0), (), "vAxisTitleFontColor", None),
		"vAxisTitleFontSize": (10045, 2, (12, 0), (), "vAxisTitleFontSize", None),
		"vAxisTitleItalic": (10047, 2, (12, 0), (), "vAxisTitleItalic", None),
		"vAxisTitleJustification": (10044, 2, (12, 0), (), "vAxisTitleJustification", None),
		"vAxisTitleUnderline": (10048, 2, (12, 0), (), "vAxisTitleUnderline", None),
		"vAxisTitleVisible": (10043, 2, (12, 0), (), "vAxisTitleVisible", None),
		"vAxisVisible": (10007, 2, (12, 0), (), "vAxisVisible", None),
		"vAxisZoom": (10042, 2, (12, 0), (), "vAxisZoom", None),
		"vLegendLocation": (10028, 2, (12, 0), (), "vLegendLocation", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AxisMajorColor" : ((10062, LCID, 4, 0),()),
		"AxisMajorColorAutoDim" : ((10063, LCID, 4, 0),()),
		"AxisTitleX" : ((10002, LCID, 4, 0),()),
		"AxisTitleY" : ((10003, LCID, 4, 0),()),
		"AxisValueFontSize" : ((10056, LCID, 4, 0),()),
		"ComplexPlotLocation" : ((10068, LCID, 4, 0),()),
		"DarkBackground" : ((10026, LCID, 4, 0),()),
		"Font" : ((10052, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"LabelFontSize" : ((10054, LCID, 4, 0),()),
		"LabelFromChart" : ((10019, LCID, 4, 0),()),
		"LabelVisible" : ((10020, LCID, 4, 0),()),
		"LegendDirection" : ((10029, LCID, 4, 0),()),
		"LegendFontSize" : ((10059, LCID, 4, 0),()),
		"LegendVisible" : ((10027, LCID, 4, 0),()),
		"MarkerFromChart" : ((10015, LCID, 4, 0),()),
		"MarkerSize" : ((10017, LCID, 4, 0),()),
		"MarkerStyle" : ((10018, LCID, 4, 0),()),
		"MarkerVisible" : ((10016, LCID, 4, 0),()),
		"MasterScale" : ((10065, LCID, 4, 0),()),
		"OutputSet" : ((10011, LCID, 4, 0),()),
		"OutputSetAll" : ((10014, LCID, 4, 0),()),
		"OutputSetEnd" : ((10012, LCID, 4, 0),()),
		"OutputSetInherit" : ((10010, LCID, 4, 0),()),
		"Palette" : ((10025, LCID, 4, 0),()),
		"PaletteFromChart" : ((10024, LCID, 4, 0),()),
		"ScaleInherit" : ((10064, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"ShowLabelMaxMin" : ((10023, LCID, 4, 0),()),
		"ShowLabelX" : ((10021, LCID, 4, 0),()),
		"ShowLabelY" : ((10022, LCID, 4, 0),()),
		"TitleFontBold" : ((10034, LCID, 4, 0),()),
		"TitleFontColor" : ((10037, LCID, 4, 0),()),
		"TitleFontItalic" : ((10035, LCID, 4, 0),()),
		"TitleFontSize" : ((10033, LCID, 4, 0),()),
		"TitleFontUnderline" : ((10036, LCID, 4, 0),()),
		"TitleJustification" : ((10032, LCID, 4, 0),()),
		"TitleLocation" : ((10031, LCID, 4, 0),()),
		"TitleVisible" : ((10030, LCID, 4, 0),()),
		"style" : ((10001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"vAxisAutoscale" : ((10004, LCID, 4, 0),()),
		"vAxisAutoscale2" : ((10069, LCID, 4, 0),()),
		"vAxisLabelDecimal" : ((10050, LCID, 4, 0),()),
		"vAxisLabelDecimal2" : ((10074, LCID, 4, 0),()),
		"vAxisLabelFormat" : ((10051, LCID, 4, 0),()),
		"vAxisLabelFormat2" : ((10073, LCID, 4, 0),()),
		"vAxisMajorGridlineVisible" : ((10040, LCID, 4, 0),()),
		"vAxisMajorInterval" : ((10038, LCID, 4, 0),()),
		"vAxisMajorTickmarkVisible" : ((10008, LCID, 4, 0),()),
		"vAxisMinorCount" : ((10039, LCID, 4, 0),()),
		"vAxisMinorCountLog" : ((10060, LCID, 4, 0),()),
		"vAxisMinorGridlineVisible" : ((10041, LCID, 4, 0),()),
		"vAxisMinorTickmarkVisible" : ((10009, LCID, 4, 0),()),
		"vAxisRange" : ((10006, LCID, 4, 0),()),
		"vAxisRange2" : ((10070, LCID, 4, 0),()),
		"vAxisRangePad" : ((10061, LCID, 4, 0),()),
		"vAxisRangePad2" : ((10071, LCID, 4, 0),()),
		"vAxisStyle" : ((10005, LCID, 4, 0),()),
		"vAxisStyle2" : ((10072, LCID, 4, 0),()),
		"vAxisTitleBold" : ((10046, LCID, 4, 0),()),
		"vAxisTitleFontColor" : ((10049, LCID, 4, 0),()),
		"vAxisTitleFontSize" : ((10045, LCID, 4, 0),()),
		"vAxisTitleItalic" : ((10047, LCID, 4, 0),()),
		"vAxisTitleJustification" : ((10044, LCID, 4, 0),()),
		"vAxisTitleUnderline" : ((10048, LCID, 4, 0),()),
		"vAxisTitleVisible" : ((10043, LCID, 4, 0),()),
		"vAxisVisible" : ((10007, LCID, 4, 0),()),
		"vAxisZoom" : ((10042, LCID, 4, 0),()),
		"vLegendLocation" : ((10028, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartSeries(DispatchBaseClass):
	CLSID = IID('{19988E81-F344-4944-82DE-AEBE26689F33}')
	coclass_clsid = IID('{19988E83-F344-4944-82DE-AEBE26689F33}')

	def CopyToClipboard(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetEntityType(self, chartID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),chartID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def GetXY(self, numPoints=pythoncom.Missing, xyValues=pythoncom.Missing, xRange=pythoncom.Missing, yRange=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetXY', None,numPoints
			, xyValues, xRange, yRange)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetTransformPlateVector is actually a property, but must be used as a method to correctly pass the arguments
	def SetTransformPlateVector(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetTransformPlateVector2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetTransformPlateVector2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method TransformPlateVector is actually a property, but must be used as a method to correctly pass the arguments
	def TransformPlateVector(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method TransformPlateVector2 is actually a property, but must be used as a method to correctly pass the arguments
	def TransformPlateVector2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"AbsoluteCombination": (10060, 2, (11, 0), (), "AbsoluteCombination", None),
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ColorInherit": (10011, 2, (11, 0), (), "ColorInherit", None),
		"CombinationType": (10059, 2, (3, 0), (), "CombinationType", None),
		"ComplexEnd": (10056, 2, (5, 0), (), "ComplexEnd", None),
		"ComplexMethod": (10053, 2, (3, 0), (), "ComplexMethod", None),
		"ComplexPhase": (10054, 2, (5, 0), (), "ComplexPhase", None),
		"ComplexStart": (10055, 2, (5, 0), (), "ComplexStart", None),
		"ConvertMethod": (10031, 2, (3, 0), (), "ConvertMethod", None),
		"ConvertMethod2": (10032, 2, (3, 0), (), "ConvertMethod2", None),
		"FunctionID": (10014, 2, (3, 0), (), "FunctionID", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Interval": (10013, 2, (3, 0), (), "Interval", None),
		"LabelInherit": (10017, 2, (11, 0), (), "LabelInherit", None),
		"LabelVisible": (10018, 2, (11, 0), (), "LabelVisible", None),
		"Location2": (10025, 2, (3, 0), (), "Location2", None),
		"MarkerInherit": (10007, 2, (11, 0), (), "MarkerInherit", None),
		"MarkerSize": (10010, 2, (3, 0), (), "MarkerSize", None),
		"MarkerStyle": (10009, 2, (3, 0), (), "MarkerStyle", None),
		"MarkerVisible": (10008, 2, (11, 0), (), "MarkerVisible", None),
		"OutputSet": (10002, 2, (3, 0), (), "OutputSet", None),
		"OutputSetAll": (10016, 2, (11, 0), (), "OutputSetAll", None),
		"OutputSetEnd": (10015, 2, (3, 0), (), "OutputSetEnd", None),
		"OutputVector2V2": (10062, 2, (3, 0), (), "OutputVector2V2", None),
		"OutputVectorV2": (10061, 2, (3, 0), (), "OutputVectorV2", None),
		"Position": (10004, 2, (3, 0), (), "Position", None),
		"PositionCoordSys": (10005, 2, (3, 0), (), "PositionCoordSys", None),
		"PositionIsRelative": (10027, 2, (11, 0), (), "PositionIsRelative", None),
		"Scale": (10022, 2, (5, 0), (), "Scale", None),
		"SeriesType": (10001, 2, (3, 0), (), "SeriesType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"ShowLabelMaxMin": (10021, 2, (11, 0), (), "ShowLabelMaxMin", None),
		"ShowLabelX": (10019, 2, (11, 0), (), "ShowLabelX", None),
		"ShowLabelY": (10020, 2, (11, 0), (), "ShowLabelY", None),
		"SortData": (10026, 2, (11, 0), (), "SortData", None),
		"StudyID": (10028, 2, (3, 0), (), "StudyID", None),
		"TransformNodalCSys": (10037, 2, (3, 0), (), "TransformNodalCSys", None),
		"TransformNodalCSys2": (10046, 2, (3, 0), (), "TransformNodalCSys2", None),
		"TransformNodalMode": (10036, 2, (3, 0), (), "TransformNodalMode", None),
		"TransformNodalMode2": (10045, 2, (3, 0), (), "TransformNodalMode2", None),
		"TransformPlateCSys": (10039, 2, (3, 0), (), "TransformPlateCSys", None),
		"TransformPlateCSys2": (10048, 2, (3, 0), (), "TransformPlateCSys2", None),
		"TransformPlateDOF": (10040, 2, (3, 0), (), "TransformPlateDOF", None),
		"TransformPlateDOF2": (10049, 2, (3, 0), (), "TransformPlateDOF2", None),
		"TransformPlateMode": (10038, 2, (3, 0), (), "TransformPlateMode", None),
		"TransformPlateMode2": (10047, 2, (3, 0), (), "TransformPlateMode2", None),
		"TransformPlateTolerance": (10057, 2, (5, 0), (), "TransformPlateTolerance", None),
		"TransformPlateTolerance2": (10058, 2, (5, 0), (), "TransformPlateTolerance2", None),
		"TransformSolidCSys": (10043, 2, (3, 0), (), "TransformSolidCSys", None),
		"TransformSolidCSys2": (10052, 2, (3, 0), (), "TransformSolidCSys2", None),
		"TransformSolidMode": (10042, 2, (3, 0), (), "TransformSolidMode", None),
		"TransformSolidMode2": (10051, 2, (3, 0), (), "TransformSolidMode2", None),
		"color": (10012, 2, (3, 0), (), "color", None),
		"group": (10023, 2, (3, 0), (), "group", None),
		"location": (10006, 2, (3, 0), (), "location", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"vTransformPlateVector": (10041, 2, (12, 0), (), "vTransformPlateVector", None),
		"vTransformPlateVector2": (10050, 2, (12, 0), (), "vTransformPlateVector2", None),
	}
	_prop_map_put_ = {
		"AbsoluteCombination" : ((10060, LCID, 4, 0),()),
		"Active" : ((17002, LCID, 4, 0),()),
		"ColorInherit" : ((10011, LCID, 4, 0),()),
		"CombinationType" : ((10059, LCID, 4, 0),()),
		"ComplexEnd" : ((10056, LCID, 4, 0),()),
		"ComplexMethod" : ((10053, LCID, 4, 0),()),
		"ComplexPhase" : ((10054, LCID, 4, 0),()),
		"ComplexStart" : ((10055, LCID, 4, 0),()),
		"ConvertMethod" : ((10031, LCID, 4, 0),()),
		"ConvertMethod2" : ((10032, LCID, 4, 0),()),
		"FunctionID" : ((10014, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Interval" : ((10013, LCID, 4, 0),()),
		"LabelInherit" : ((10017, LCID, 4, 0),()),
		"LabelVisible" : ((10018, LCID, 4, 0),()),
		"Location2" : ((10025, LCID, 4, 0),()),
		"MarkerInherit" : ((10007, LCID, 4, 0),()),
		"MarkerSize" : ((10010, LCID, 4, 0),()),
		"MarkerStyle" : ((10009, LCID, 4, 0),()),
		"MarkerVisible" : ((10008, LCID, 4, 0),()),
		"OutputSet" : ((10002, LCID, 4, 0),()),
		"OutputSetAll" : ((10016, LCID, 4, 0),()),
		"OutputSetEnd" : ((10015, LCID, 4, 0),()),
		"OutputVector2V2" : ((10062, LCID, 4, 0),()),
		"OutputVectorV2" : ((10061, LCID, 4, 0),()),
		"Position" : ((10004, LCID, 4, 0),()),
		"PositionCoordSys" : ((10005, LCID, 4, 0),()),
		"PositionIsRelative" : ((10027, LCID, 4, 0),()),
		"Scale" : ((10022, LCID, 4, 0),()),
		"SeriesType" : ((10001, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"ShowLabelMaxMin" : ((10021, LCID, 4, 0),()),
		"ShowLabelX" : ((10019, LCID, 4, 0),()),
		"ShowLabelY" : ((10020, LCID, 4, 0),()),
		"SortData" : ((10026, LCID, 4, 0),()),
		"StudyID" : ((10028, LCID, 4, 0),()),
		"TransformNodalCSys" : ((10037, LCID, 4, 0),()),
		"TransformNodalCSys2" : ((10046, LCID, 4, 0),()),
		"TransformNodalMode" : ((10036, LCID, 4, 0),()),
		"TransformNodalMode2" : ((10045, LCID, 4, 0),()),
		"TransformPlateCSys" : ((10039, LCID, 4, 0),()),
		"TransformPlateCSys2" : ((10048, LCID, 4, 0),()),
		"TransformPlateDOF" : ((10040, LCID, 4, 0),()),
		"TransformPlateDOF2" : ((10049, LCID, 4, 0),()),
		"TransformPlateMode" : ((10038, LCID, 4, 0),()),
		"TransformPlateMode2" : ((10047, LCID, 4, 0),()),
		"TransformPlateTolerance" : ((10057, LCID, 4, 0),()),
		"TransformPlateTolerance2" : ((10058, LCID, 4, 0),()),
		"TransformSolidCSys" : ((10043, LCID, 4, 0),()),
		"TransformSolidCSys2" : ((10052, LCID, 4, 0),()),
		"TransformSolidMode" : ((10042, LCID, 4, 0),()),
		"TransformSolidMode2" : ((10051, LCID, 4, 0),()),
		"color" : ((10012, LCID, 4, 0),()),
		"group" : ((10023, LCID, 4, 0),()),
		"location" : ((10006, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"vTransformPlateVector" : ((10041, LCID, 4, 0),()),
		"vTransformPlateVector2" : ((10050, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IComputedResultsVectors(DispatchBaseClass):
	CLSID = IID('{AAA42217-5244-45C6-A6B4-4AD46D318C4D}')
	coclass_clsid = IID('{AAA42219-5244-45C6-A6B4-4AD46D318C4D}')

	def DeleteUserDefined(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Dialog(self):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), (),)

	def EnableNowAll(self, bEnableStd=defaultNamedNotOptArg, bEnableUser=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((11, 1), (11, 1)),bEnableStd
			, bEnableUser)

	def EnableUserDefined(self, nID=defaultNamedNotOptArg, bSetAutoRun=defaultNamedNotOptArg, bEnabled=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),nID
			, bSetAutoRun, bEnabled)

	def FindUserDefined(self, sTitle=defaultNamedNotOptArg, pnID=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((8, 1), (16387, 2)), 'FindUserDefined', None,sTitle
			, pnID)

	def GetCountUserDefined(self, nCount=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16387, 2),), 'GetCountUserDefined', None,nCount
			)

	def GetUserDefinedInfo(self, nID=defaultNamedNotOptArg, pbEnabled=pythoncom.Missing, pbRunNowEnabled=pythoncom.Missing, pnType=pythoncom.Missing
			, pnRangeType=pythoncom.Missing, pnRangeStart=pythoncom.Missing, pnRangeEnd=pythoncom.Missing, sTitle=pythoncom.Missing, sFilename=pythoncom.Missing
			, pbSetInfo=pythoncom.Missing, pnCount=pythoncom.Missing, pdScale=pythoncom.Missing, pnVectorID=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((3, 1), (16395, 2), (16395, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16392, 2), (16392, 2), (16395, 2), (16387, 2), (16396, 2), (16396, 2)), 'GetUserDefinedInfo', None,nID
			, pbEnabled, pbRunNowEnabled, pnType, pnRangeType, pnRangeStart
			, pnRangeEnd, sTitle, sFilename, pbSetInfo, pnCount
			, pdScale, pnVectorID)

	def NewUserDefinedAPI(self, bEnabled=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg, sFilename=defaultNamedNotOptArg, pnNewID=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((11, 1), (8, 1), (8, 1), (16387, 2)), 'NewUserDefinedAPI', None,bEnabled
			, sTitle, sFilename, pnNewID)

	def NewUserDefinedCombine(self, bEnabled=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg, bLinearCombine=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg
			, dScale=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, pnNewID=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (3, 1), (12, 1), (12, 1), (16387, 2)), 'NewUserDefinedCombine', None,bEnabled
			, sTitle, bLinearCombine, nCount, dScale, nVectorID
			, pnNewID)

	def NewUserDefinedEnvelope(self, bEnabled=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg, nEnvType=defaultNamedNotOptArg, bSaveSetInfo=defaultNamedNotOptArg
			, nCount=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, pnNewID=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((11, 1), (8, 1), (3, 1), (11, 1), (3, 1), (12, 1), (16387, 2)), 'NewUserDefinedEnvelope', None,bEnabled
			, sTitle, nEnvType, bSaveSetInfo, nCount, nVectorID
			, pnNewID)

	def RunNow(self, nResultSetSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1),),nResultSetSet
			)

	def SetUserDefinedVectorIDRange(self, nID=defaultNamedNotOptArg, nRangeType=defaultNamedNotOptArg, nStartID=defaultNamedNotOptArg, nEndID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nID
			, nRangeType, nStartID, nEndID)

	def clear(self, bClearAll=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((11, 1),),bClearAll
			)

	_prop_map_get_ = {
		"BeamVonMises": (10002, 2, (11, 0), (), "BeamVonMises", None),
		"DesignFactorOfSafety": (10020, 2, (5, 0), (), "DesignFactorOfSafety", None),
		"EnvelopeBeamAll": (10015, 2, (11, 0), (), "EnvelopeBeamAll", None),
		"EnvelopePlateLamAll": (10017, 2, (11, 0), (), "EnvelopePlateLamAll", None),
		"EnvelopePlateLamPly": (10016, 2, (11, 0), (), "EnvelopePlateLamPly", None),
		"EnvelopeSolidAll": (10018, 2, (11, 0), (), "EnvelopeSolidAll", None),
		"LaminateHill": (10007, 2, (11, 0), (), "LaminateHill", None),
		"LaminateHoffmann": (10008, 2, (11, 0), (), "LaminateHoffmann", None),
		"LaminateMaxStrain": (10010, 2, (11, 0), (), "LaminateMaxStrain", None),
		"LaminateTsaiWu": (10009, 2, (11, 0), (), "LaminateTsaiWu", None),
		"NowBeamVonMises": (10052, 2, (11, 0), (), "NowBeamVonMises", None),
		"NowDesignFactorOfSafety": (10070, 2, (5, 0), (), "NowDesignFactorOfSafety", None),
		"NowEnvelopeBeamAll": (10065, 2, (11, 0), (), "NowEnvelopeBeamAll", None),
		"NowEnvelopePlateLamAll": (10067, 2, (11, 0), (), "NowEnvelopePlateLamAll", None),
		"NowEnvelopePlateLamPly": (10066, 2, (11, 0), (), "NowEnvelopePlateLamPly", None),
		"NowEnvelopeSolidAll": (10068, 2, (11, 0), (), "NowEnvelopeSolidAll", None),
		"NowLaminateHashin": (10062, 2, (11, 0), (), "NowLaminateHashin", None),
		"NowLaminateHill": (10057, 2, (11, 0), (), "NowLaminateHill", None),
		"NowLaminateHoffmann": (10058, 2, (11, 0), (), "NowLaminateHoffmann", None),
		"NowLaminateMaxStrain": (10060, 2, (11, 0), (), "NowLaminateMaxStrain", None),
		"NowLaminatePuck": (10063, 2, (11, 0), (), "NowLaminatePuck", None),
		"NowLaminateStrainInv": (10064, 2, (11, 0), (), "NowLaminateStrainInv", None),
		"NowLaminateTsaiHill": (10061, 2, (11, 0), (), "NowLaminateTsaiHill", None),
		"NowLaminateTsaiWu": (10059, 2, (11, 0), (), "NowLaminateTsaiWu", None),
		"NowPlateAveragedMid": (10051, 2, (11, 0), (), "NowPlateAveragedMid", None),
		"NowPlateSolidMaxNormal": (10056, 2, (11, 0), (), "NowPlateSolidMaxNormal", None),
		"NowPlateSolidMaxVonMises": (10053, 2, (11, 0), (), "NowPlateSolidMaxVonMises", None),
		"NowPlateSolidMohrCoulomb": (10055, 2, (11, 0), (), "NowPlateSolidMohrCoulomb", None),
		"NowPlateSolidPrincipals": (10050, 2, (11, 0), (), "NowPlateSolidPrincipals", None),
		"NowPlateSolidTresca": (10054, 2, (11, 0), (), "NowPlateSolidTresca", None),
		"NowPlateSolidUseCorners": (10069, 2, (11, 0), (), "NowPlateSolidUseCorners", None),
		"PlateAveragedMid": (10001, 2, (11, 0), (), "PlateAveragedMid", None),
		"PlateSolidMaxNormal": (10006, 2, (11, 0), (), "PlateSolidMaxNormal", None),
		"PlateSolidMaxVonMises": (10003, 2, (11, 0), (), "PlateSolidMaxVonMises", None),
		"PlateSolidMohrCoulomb": (10005, 2, (11, 0), (), "PlateSolidMohrCoulomb", None),
		"PlateSolidPrincipals": (10000, 2, (11, 0), (), "PlateSolidPrincipals", None),
		"PlateSolidTresca": (10004, 2, (11, 0), (), "PlateSolidTresca", None),
		"PlateSolidUseCorners": (10019, 2, (11, 0), (), "PlateSolidUseCorners", None),
	}
	_prop_map_put_ = {
		"BeamVonMises" : ((10002, LCID, 4, 0),()),
		"DesignFactorOfSafety" : ((10020, LCID, 4, 0),()),
		"EnvelopeBeamAll" : ((10015, LCID, 4, 0),()),
		"EnvelopePlateLamAll" : ((10017, LCID, 4, 0),()),
		"EnvelopePlateLamPly" : ((10016, LCID, 4, 0),()),
		"EnvelopeSolidAll" : ((10018, LCID, 4, 0),()),
		"LaminateHill" : ((10007, LCID, 4, 0),()),
		"LaminateHoffmann" : ((10008, LCID, 4, 0),()),
		"LaminateMaxStrain" : ((10010, LCID, 4, 0),()),
		"LaminateTsaiWu" : ((10009, LCID, 4, 0),()),
		"NowBeamVonMises" : ((10052, LCID, 4, 0),()),
		"NowDesignFactorOfSafety" : ((10070, LCID, 4, 0),()),
		"NowEnvelopeBeamAll" : ((10065, LCID, 4, 0),()),
		"NowEnvelopePlateLamAll" : ((10067, LCID, 4, 0),()),
		"NowEnvelopePlateLamPly" : ((10066, LCID, 4, 0),()),
		"NowEnvelopeSolidAll" : ((10068, LCID, 4, 0),()),
		"NowLaminateHashin" : ((10062, LCID, 4, 0),()),
		"NowLaminateHill" : ((10057, LCID, 4, 0),()),
		"NowLaminateHoffmann" : ((10058, LCID, 4, 0),()),
		"NowLaminateMaxStrain" : ((10060, LCID, 4, 0),()),
		"NowLaminatePuck" : ((10063, LCID, 4, 0),()),
		"NowLaminateStrainInv" : ((10064, LCID, 4, 0),()),
		"NowLaminateTsaiHill" : ((10061, LCID, 4, 0),()),
		"NowLaminateTsaiWu" : ((10059, LCID, 4, 0),()),
		"NowPlateAveragedMid" : ((10051, LCID, 4, 0),()),
		"NowPlateSolidMaxNormal" : ((10056, LCID, 4, 0),()),
		"NowPlateSolidMaxVonMises" : ((10053, LCID, 4, 0),()),
		"NowPlateSolidMohrCoulomb" : ((10055, LCID, 4, 0),()),
		"NowPlateSolidPrincipals" : ((10050, LCID, 4, 0),()),
		"NowPlateSolidTresca" : ((10054, LCID, 4, 0),()),
		"NowPlateSolidUseCorners" : ((10069, LCID, 4, 0),()),
		"PlateAveragedMid" : ((10001, LCID, 4, 0),()),
		"PlateSolidMaxNormal" : ((10006, LCID, 4, 0),()),
		"PlateSolidMaxVonMises" : ((10003, LCID, 4, 0),()),
		"PlateSolidMohrCoulomb" : ((10005, LCID, 4, 0),()),
		"PlateSolidPrincipals" : ((10000, LCID, 4, 0),()),
		"PlateSolidTresca" : ((10004, LCID, 4, 0),()),
		"PlateSolidUseCorners" : ((10019, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConnection(DispatchBaseClass):
	CLSID = IID('{1A8C9C57-6711-4498-BDD9-8BD54586842E}')
	coclass_clsid = IID('{1A8C9C55-6711-4498-BDD9-8BD54586842E}')

	def BoundingBox(self, box=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((16396, 2),), 'BoundingBox', None,box
			)

	def BoundingBoxInCSys(self, nCSysID=defaultNamedNotOptArg, box=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((3, 1), (16396, 2)), 'BoundingBoxInCSys', None,nCSysID
			, box)

	def CombinationsByType(self, bGlue=defaultNamedNotOptArg, bAll=defaultNamedNotOptArg, nCombinationSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (11, 1)),bGlue
			, bAll, nCombinationSetID, bClear)

	def ConnectionsByType(self, bGlue=defaultNamedNotOptArg, bAll=defaultNamedNotOptArg, nConnectorSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (11, 1)),bGlue
			, bAll, nConnectorSetID, bClear)

	# The method Contact is actually a property, but must be used as a method to correctly pass the arguments
	def Contact(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Enable(self, bEnable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((11, 1),),bEnable
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetCombinations(self, nCombinationSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (11, 0), ((3, 1),),nCombinationSetID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def IsEnabled(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def IsGlueConnector(self, nConnectorID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (11, 0), ((3, 1),),nConnectorID
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	# Result is of type IConnectionProp
	def Prop(self):
		ret = self._oleobj_.InvokeTypes(20006, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Prop', '{FA64FD83-5C92-425F-87B4-FC849D84898B}')
		return ret

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetContact is actually a property, but must be used as a method to correctly pass the arguments
	def SetContact(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"IsCombination": (10010, 2, (11, 0), (), "IsCombination", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10000, 2, (3, 0), (), "color", None),
		"layer": (10004, 2, (3, 0), (), "layer", None),
		"propID": (10001, 2, (3, 0), (), "propID", None),
		"title": (10009, 2, (8, 0), (), "title", None),
		"vcontact": (10019, 2, (12, 0), (), "vcontact", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"IsCombination" : ((10010, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10000, LCID, 4, 0),()),
		"layer" : ((10004, LCID, 4, 0),()),
		"propID" : ((10001, LCID, 4, 0),()),
		"title" : ((10009, LCID, 4, 0),()),
		"vcontact" : ((10019, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConnectionProp(DispatchBaseClass):
	CLSID = IID('{FA64FD83-5C92-425F-87B4-FC849D84898B}')
	coclass_clsid = IID('{FA64FD81-5C92-425F-87B4-FC849D84898B}')

	def ConnectionPropByType(self, bGlue=defaultNamedNotOptArg, bAll=defaultNamedNotOptArg, nConnectorSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (11, 1)),bGlue
			, bAll, nConnectorSetID, bClear)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetDefaults(self, dContactTolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((5, 1),),dContactTolerance
			)

	# The method Setflag is actually a property, but must be used as a method to correctly pass the arguments
	def Setflag(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetflagI is actually a property, but must be used as a method to correctly pass the arguments
	def SetflagI(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setplyval is actually a property, but must be used as a method to correctly pass the arguments
	def Setplyval(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setpval is actually a property, but must be used as a method to correctly pass the arguments
	def Setpval(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method flag is actually a property, but must be used as a method to correctly pass the arguments
	def flag(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method flagI is actually a property, but must be used as a method to correctly pass the arguments
	def flagI(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method plyval is actually a property, but must be used as a method to correctly pass the arguments
	def plyval(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method pval is actually a property, but must be used as a method to correctly pass the arguments
	def pval(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10001, 2, (3, 0), (), "color", None),
		"layer": (10000, 2, (3, 0), (), "layer", None),
		"plymat": (10010, 2, (12, 0), (), "plymat", None),
		"pmat": (10011, 2, (12, 0), (), "pmat", None),
		"title": (10009, 2, (8, 0), (), "title", None),
		"type": (10003, 2, (3, 0), (), "type", None),
		"vflag": (10014, 2, (12, 0), (), "vflag", None),
		"vflagI": (10015, 2, (12, 0), (), "vflagI", None),
		"vplyval": (10017, 2, (12, 0), (), "vplyval", None),
		"vpval": (10016, 2, (12, 0), (), "vpval", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10001, LCID, 4, 0),()),
		"layer" : ((10000, LCID, 4, 0),()),
		"plymat" : ((10010, LCID, 4, 0),()),
		"pmat" : ((10011, LCID, 4, 0),()),
		"title" : ((10009, LCID, 4, 0),()),
		"type" : ((10003, LCID, 4, 0),()),
		"vflag" : ((10014, LCID, 4, 0),()),
		"vflagI" : ((10015, LCID, 4, 0),()),
		"vplyval" : ((10017, LCID, 4, 0),()),
		"vpval" : ((10016, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IContact(DispatchBaseClass):
	CLSID = IID('{14057452-0382-11D5-9465-001083FFF11C}')
	coclass_clsid = IID('{14057456-0382-11D5-9465-001083FFF11C}')

	def AddContact(self, entityTYPE=defaultNamedNotOptArg, entityID=defaultNamedNotOptArg, faceID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, entityID, faceID)

	def BoundingBox(self, box=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((16396, 2),), 'BoundingBox', None,box
			)

	def BoundingBoxInCSys(self, nCSysID=defaultNamedNotOptArg, box=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((3, 1), (16396, 2)), 'BoundingBoxInCSys', None,nCSysID
			, box)

	def Compress(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def ElementsAsSet(self, bExpandGeom=defaultNamedNotOptArg, nElemSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((11, 1), (3, 1), (11, 1)),bExpandGeom
			, nElemSetID, bClear)

	def Enable(self, bEnable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((11, 1),),bEnable
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Expand(self):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), (),)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetAnalyticSurfaceType(self):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), (),)

	def GetContactList(self, listcount=pythoncom.Missing, listTYPE=pythoncom.Missing, entityID=pythoncom.Missing, faceID=pythoncom.Missing
			, expanded=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetContactList', None,listcount
			, listTYPE, entityID, faceID, expanded)

	# Result is of type ISortSet
	def GetEntities(self, entityTYPE=defaultNamedNotOptArg, bGetExpanded=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20013, LCID, 1, (9, 0), ((3, 1), (11, 1)),entityTYPE
			, bGetExpanded)
		if ret is not None:
			ret = Dispatch(ret, 'GetEntities', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISet
	def GetEntitySet(self, entityTYPE=defaultNamedNotOptArg, bGetExpanded=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20020, LCID, 1, (9, 0), ((3, 1), (11, 1)),entityTYPE
			, bGetExpanded)
		if ret is not None:
			ret = Dispatch(ret, 'GetEntitySet', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def GetFriction(self, body_friction=pythoncom.Missing):
		return self._ApplyTypes_(20022, 1, (3, 0), ((16389, 2),), 'GetFriction', None,body_friction
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetOffset(self, offset=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((16389, 2),), 'GetOffset', None,offset
			)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def IsEmpty(self):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), (),)

	def IsEnabled(self):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), (),)

	def IsRigidType(self):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def NodesAsSet(self, bExpandGeom=defaultNamedNotOptArg, nNodeSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((11, 1), (3, 1), (11, 1)),bExpandGeom
			, nNodeSetID, bClear)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutContactList(self, listcount=defaultNamedNotOptArg, listTYPE=defaultNamedNotOptArg, entityID=defaultNamedNotOptArg, faceID=defaultNamedNotOptArg
			, expanded=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),listcount
			, listTYPE, entityID, faceID, expanded)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def RemoveDuplicates(self):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), (),)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def Reverse(self):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetAnalyticSurfaceType(self, aba_rigSurfType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1),),aba_rigSurfType
			)

	def SetFriction(self, body_friction=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((5, 1),),body_friction
			)

	def SetOffset(self, offset=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((5, 1),),offset
			)

	def SetOutputType(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	def SetRigidType(self, isRigid=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((11, 1),),isRigid
			)

	# The method Setbox is actually a property, but must be used as a method to correctly pass the arguments
	def Setbox(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method box is actually a property, but must be used as a method to correctly pass the arguments
	def box(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	def clear(self):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AngVelFlag": (10040, 2, (11, 0), (), "AngVelFlag", None),
		"AngVelTable": (10041, 2, (3, 0), (), "AngVelTable", None),
		"AngVelValue": (10042, 2, (5, 0), (), "AngVelValue", None),
		"AppAngVelVal": (10049, 2, (5, 0), (), "AppAngVelVal", None),
		"AppRotAxisVal": (10050, 2, (12, 0), (), "AppRotAxisVal", None),
		"AppVelVal": (10051, 2, (12, 0), (), "AppVelVal", None),
		"BoltDir": (10023, 2, (3, 0), (), "BoltDir", None),
		"BoltType": (10024, 2, (3, 0), (), "BoltType", None),
		"ContactCheck": (10034, 2, (3, 0), (), "ContactCheck", None),
		"ControlNode": (10037, 2, (3, 0), (), "ControlNode", None),
		"Count": (10008, 2, (3, 0), (), "Count", None),
		"Disabled": (10028, 2, (11, 0), (), "Disabled", None),
		"DiscontinuityValue": (10036, 2, (5, 0), (), "DiscontinuityValue", None),
		"FluidCharLength": (10018, 2, (5, 0), (), "FluidCharLength", None),
		"FluidDensity": (10015, 2, (5, 0), (), "FluidDensity", None),
		"FluidExactIntegFact": (10019, 2, (5, 0), (), "FluidExactIntegFact", None),
		"FluidXZSymmetry": (10016, 2, (3, 0), (), "FluidXZSymmetry", None),
		"FluidYZSymmetry": (10017, 2, (3, 0), (), "FluidYZSymmetry", None),
		"FluidZFree": (10014, 2, (5, 0), (), "FluidZFree", None),
		"FluidZFreeOn": (10013, 2, (11, 0), (), "FluidZFreeOn", None),
		"FrictionTable": (10032, 2, (3, 0), (), "FrictionTable", None),
		"FrictionType": (10030, 2, (3, 0), (), "FrictionType", None),
		"FrictionValue": (10031, 2, (5, 0), (), "FrictionValue", None),
		"GrowthComp": (10052, 2, (12, 0), (), "GrowthComp", None),
		"GrowthTable": (10053, 2, (12, 0), (), "GrowthTable", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"MassNSM": (10026, 2, (5, 0), (), "MassNSM", None),
		"MassType": (10025, 2, (3, 0), (), "MassType", None),
		"MidNodeProjection": (10035, 2, (3, 0), (), "MidNodeProjection", None),
		"MotControlType": (10038, 2, (3, 0), (), "MotControlType", None),
		"MotionFlag": (10046, 2, (12, 0), (), "MotionFlag", None),
		"MotionTable": (10047, 2, (12, 0), (), "MotionTable", None),
		"MotionValue": (10048, 2, (12, 0), (), "MotionValue", None),
		"Output": (10004, 2, (3, 0), (), "Output", None),
		"RotAxisFlag": (10043, 2, (12, 0), (), "RotAxisFlag", None),
		"RotAxisTable": (10044, 2, (12, 0), (), "RotAxisTable", None),
		"RotAxisValue": (10045, 2, (12, 0), (), "RotAxisValue", None),
		"RotControlNode": (10039, 2, (3, 0), (), "RotControlNode", None),
		"RotorLoadSet": (10011, 2, (3, 0), (), "RotorLoadSet", None),
		"RotorMatlDamp": (10021, 2, (5, 0), (), "RotorMatlDamp", None),
		"RotorOverallDamp": (10020, 2, (5, 0), (), "RotorOverallDamp", None),
		"RotorSpeed": (10022, 2, (5, 0), (), "RotorSpeed", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"SmoothingControl": (10033, 2, (3, 0), (), "SmoothingControl", None),
		"SurfaceContactFlag": (10029, 2, (3, 0), (), "SurfaceContactFlag", None),
		"UseSolverAxes": (10027, 2, (11, 0), (), "UseSolverAxes", None),
		"color": (10001, 2, (3, 0), (), "color", None),
		"layer": (10002, 2, (3, 0), (), "layer", None),
		"offset": (10012, 2, (5, 0), (), "offset", None),
		"refCSys": (10010, 2, (3, 0), (), "refCSys", None),
		"refNode": (10003, 2, (3, 0), (), "refNode", None),
		"rigid": (10005, 2, (11, 0), (), "rigid", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"type": (10009, 2, (3, 0), (), "type", None),
		"vbox": (10007, 2, (12, 0), (), "vbox", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AngVelFlag" : ((10040, LCID, 4, 0),()),
		"AngVelTable" : ((10041, LCID, 4, 0),()),
		"AngVelValue" : ((10042, LCID, 4, 0),()),
		"AppAngVelVal" : ((10049, LCID, 4, 0),()),
		"AppRotAxisVal" : ((10050, LCID, 4, 0),()),
		"AppVelVal" : ((10051, LCID, 4, 0),()),
		"BoltDir" : ((10023, LCID, 4, 0),()),
		"BoltType" : ((10024, LCID, 4, 0),()),
		"ContactCheck" : ((10034, LCID, 4, 0),()),
		"ControlNode" : ((10037, LCID, 4, 0),()),
		"Count" : ((10008, LCID, 4, 0),()),
		"Disabled" : ((10028, LCID, 4, 0),()),
		"DiscontinuityValue" : ((10036, LCID, 4, 0),()),
		"FluidCharLength" : ((10018, LCID, 4, 0),()),
		"FluidDensity" : ((10015, LCID, 4, 0),()),
		"FluidExactIntegFact" : ((10019, LCID, 4, 0),()),
		"FluidXZSymmetry" : ((10016, LCID, 4, 0),()),
		"FluidYZSymmetry" : ((10017, LCID, 4, 0),()),
		"FluidZFree" : ((10014, LCID, 4, 0),()),
		"FluidZFreeOn" : ((10013, LCID, 4, 0),()),
		"FrictionTable" : ((10032, LCID, 4, 0),()),
		"FrictionType" : ((10030, LCID, 4, 0),()),
		"FrictionValue" : ((10031, LCID, 4, 0),()),
		"GrowthComp" : ((10052, LCID, 4, 0),()),
		"GrowthTable" : ((10053, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"MassNSM" : ((10026, LCID, 4, 0),()),
		"MassType" : ((10025, LCID, 4, 0),()),
		"MidNodeProjection" : ((10035, LCID, 4, 0),()),
		"MotControlType" : ((10038, LCID, 4, 0),()),
		"MotionFlag" : ((10046, LCID, 4, 0),()),
		"MotionTable" : ((10047, LCID, 4, 0),()),
		"MotionValue" : ((10048, LCID, 4, 0),()),
		"Output" : ((10004, LCID, 4, 0),()),
		"RotAxisFlag" : ((10043, LCID, 4, 0),()),
		"RotAxisTable" : ((10044, LCID, 4, 0),()),
		"RotAxisValue" : ((10045, LCID, 4, 0),()),
		"RotControlNode" : ((10039, LCID, 4, 0),()),
		"RotorLoadSet" : ((10011, LCID, 4, 0),()),
		"RotorMatlDamp" : ((10021, LCID, 4, 0),()),
		"RotorOverallDamp" : ((10020, LCID, 4, 0),()),
		"RotorSpeed" : ((10022, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"SmoothingControl" : ((10033, LCID, 4, 0),()),
		"SurfaceContactFlag" : ((10029, LCID, 4, 0),()),
		"UseSolverAxes" : ((10027, LCID, 4, 0),()),
		"color" : ((10001, LCID, 4, 0),()),
		"layer" : ((10002, LCID, 4, 0),()),
		"offset" : ((10012, LCID, 4, 0),()),
		"refCSys" : ((10010, LCID, 4, 0),()),
		"refNode" : ((10003, LCID, 4, 0),()),
		"rigid" : ((10005, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"type" : ((10009, LCID, 4, 0),()),
		"vbox" : ((10007, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(10008, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICopyTool(DispatchBaseClass):
	CLSID = IID('{72722F0A-7881-406C-9ADE-AB1BD014068F}')
	coclass_clsid = IID('{72722F0C-7881-406C-9ADE-AB1BD014068F}')

	def AllOtherEntities(self, bOn=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((11, 1),),bOn
			)

	def AlongVector(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vdirection=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),nDataType
			, nEntitySetID, vdirection)

	def BetweenCSys(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, nFromCSysID=defaultNamedNotOptArg, nToCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nDataType
			, nEntitySetID, nFromCSysID, nToCSysID)

	def BetweenPlanes(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vFromBase=defaultNamedNotOptArg, vFromNormal=defaultNamedNotOptArg
			, vFromX=defaultNamedNotOptArg, vToBase=defaultNamedNotOptArg, vToNormal=defaultNamedNotOptArg, vToX=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vFromBase, vFromNormal, vFromX, vToBase
			, vToNormal, vToX)

	def BetweenVectors(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vFromBase=defaultNamedNotOptArg, vFromDir=defaultNamedNotOptArg
			, vToBase=defaultNamedNotOptArg, vToDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vFromBase, vFromDir, vToBase, vToDir
			)

	def CreatePattern(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((3, 1), (3, 1)),nDataType
			, nEntitySetID)

	def InPlace(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((3, 1), (3, 1)),nDataType
			, nEntitySetID)

	def IncludeOtherEntities(self, bGeometry=defaultNamedNotOptArg, bMesh=defaultNamedNotOptArg, bLoads=defaultNamedNotOptArg, bConstraints=defaultNamedNotOptArg
			, bConnections=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),bGeometry
			, bMesh, bLoads, bConstraints, bConnections)

	def IncludeOtherEntities2(self, bCoordSys=defaultNamedNotOptArg, bGeometry=defaultNamedNotOptArg, bMesh=defaultNamedNotOptArg, bLoads=defaultNamedNotOptArg
			, bConstraints=defaultNamedNotOptArg, bConnections=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),bCoordSys
			, bGeometry, bMesh, bLoads, bConstraints, bConnections
			)

	def PointToPoint(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vFrom=defaultNamedNotOptArg, vTo=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vFrom, vTo)

	def Reflect(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vAcrossBase=defaultNamedNotOptArg, vAcrossDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vAcrossBase, vAcrossDir)

	def RotateAroundVector(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vAroundBase=defaultNamedNotOptArg, vAroundDir=defaultNamedNotOptArg
			, dAngle=defaultNamedNotOptArg, dDistanceAlong=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1), (5, 1)),nDataType
			, nEntitySetID, vAroundBase, vAroundDir, dAngle, dDistanceAlong
			)

	def RotatePointToPoint(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vAroundBase=defaultNamedNotOptArg, vAroundDir=defaultNamedNotOptArg
			, vFrom=defaultNamedNotOptArg, vTo=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vAroundBase, vAroundDir, vFrom, vTo
			)

	def SetCSysPattern(self, nPatternDirection=defaultNamedNotOptArg, bOn=defaultNamedNotOptArg, nNumberInPattern=defaultNamedNotOptArg, dSpacing=defaultNamedNotOptArg
			, nCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (5, 1), (3, 1)),nPatternDirection
			, bOn, nNumberInPattern, dSpacing, nCSysID)

	def SetNumbering(self, nMethod=defaultNamedNotOptArg, nToBy=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (3, 1)),nMethod
			, nToBy)

	def SetPropertyOption(self, nApproach=defaultNamedNotOptArg, nOverrideID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1)),nApproach
			, nOverrideID)

	def SetVectorPattern(self, nPatternDirection=defaultNamedNotOptArg, bOn=defaultNamedNotOptArg, nNumberInPattern=defaultNamedNotOptArg, dSpacing=defaultNamedNotOptArg
			, vdirection=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (5, 1), (12, 1)),nPatternDirection
			, bOn, nNumberInPattern, dSpacing, vdirection)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"AddToCopiedEntityGroups": (10008, 2, (11, 0), (), "AddToCopiedEntityGroups", None),
		"AlwaysCreateParentCSys": (10002, 2, (11, 0), (), "AlwaysCreateParentCSys", None),
		"CopyActiveColor": (10006, 2, (11, 0), (), "CopyActiveColor", None),
		"CopyInSameLocation": (10001, 2, (11, 0), (), "CopyInSameLocation", None),
		"CopyMeshSize": (10009, 2, (11, 0), (), "CopyMeshSize", None),
		"CopyToActiveCSys": (10007, 2, (11, 0), (), "CopyToActiveCSys", None),
		"CopyToActiveLayer": (10005, 2, (11, 0), (), "CopyToActiveLayer", None),
		"ReflectionTrapWidth": (10004, 2, (5, 0), (), "ReflectionTrapWidth", None),
		"Repetitions": (10000, 2, (3, 0), (), "Repetitions", None),
		"UsePattern": (10003, 2, (11, 0), (), "UsePattern", None),
	}
	_prop_map_put_ = {
		"AddToCopiedEntityGroups" : ((10008, LCID, 4, 0),()),
		"AlwaysCreateParentCSys" : ((10002, LCID, 4, 0),()),
		"CopyActiveColor" : ((10006, LCID, 4, 0),()),
		"CopyInSameLocation" : ((10001, LCID, 4, 0),()),
		"CopyMeshSize" : ((10009, LCID, 4, 0),()),
		"CopyToActiveCSys" : ((10007, LCID, 4, 0),()),
		"CopyToActiveLayer" : ((10005, LCID, 4, 0),()),
		"ReflectionTrapWidth" : ((10004, LCID, 4, 0),()),
		"Repetitions" : ((10000, LCID, 4, 0),()),
		"UsePattern" : ((10003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICurve(DispatchBaseClass):
	CLSID = IID('{1F9F16CE-09D6-11D5-946C-001083FFF11C}')
	coclass_clsid = IID('{1F9F16D0-09D6-11D5-946C-001083FFF11C}')

	def AddMeshLoc(self, s=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg, spacing=defaultNamedNotOptArg, biasMethod=defaultNamedNotOptArg
			, bias=defaultNamedNotOptArg, biasLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((5, 1), (3, 1), (3, 1), (3, 1), (5, 1), (3, 1)),s
			, numElem, spacing, biasMethod, bias, biasLoc
			)

	def AddMeshLocXYZ(self, xyz=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg, spacing=defaultNamedNotOptArg, biasMethod=defaultNamedNotOptArg
			, bias=defaultNamedNotOptArg, biasLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((12, 1), (3, 1), (3, 1), (3, 1), (5, 1), (3, 1)),xyz
			, numElem, spacing, biasMethod, bias, biasLoc
			)

	def ArcCircleInfo(self, center=pythoncom.Missing, normal=pythoncom.Missing, startloc=pythoncom.Missing, endloc=pythoncom.Missing
			, angle=pythoncom.Missing, radius=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16396, 2), (16396, 2), (16396, 2), (16396, 2), (16389, 2), (16389, 2)), 'ArcCircleInfo', None,center
			, normal, startloc, endloc, angle, radius
			)

	# The method BSplineKnot is actually a property, but must be used as a method to correctly pass the arguments
	def BSplineKnot(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method BSplinePoint is actually a property, but must be used as a method to correctly pass the arguments
	def BSplinePoint(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method BSplineWeight is actually a property, but must be used as a method to correctly pass the arguments
	def BSplineWeight(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def BoundingBox(self, box=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((16396, 2),), 'BoundingBox', None,box
			)

	def BoundingBoxInCSys(self, nCSysID=defaultNamedNotOptArg, box=pythoncom.Missing):
		return self._ApplyTypes_(20070, 1, (3, 0), ((3, 1), (16396, 2)), 'BoundingBoxInCSys', None,nCSysID
			, box)

	# The method CenterBias is actually a property, but must be used as a method to correctly pass the arguments
	def CenterBias(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def ClearMeshLoc(self):
		return self._oleobj_.InvokeTypes(20043, LCID, 1, (3, 0), (),)

	def ClosestPointToCurve(self, nCurveID=defaultNamedNotOptArg, pdX=pythoncom.Missing, pdY=pythoncom.Missing, pdZ=pythoncom.Missing
			, pdDistance=pythoncom.Missing, pdAngleOfTangents=pythoncom.Missing):
		return self._ApplyTypes_(20052, 1, (3, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'ClosestPointToCurve', None,nCurveID
			, pdX, pdY, pdZ, pdDistance, pdAngleOfTangents
			)

	def ClosestPointToSurface(self, nSurfaceID=defaultNamedNotOptArg, pdX=pythoncom.Missing, pdY=pythoncom.Missing, pdZ=pythoncom.Missing
			, pdDistance=pythoncom.Missing, pdAngleOfTangentToSurfNormal=pythoncom.Missing):
		return self._ApplyTypes_(20039, 1, (3, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'ClosestPointToSurface', None,nSurfaceID
			, pdX, pdY, pdZ, pdDistance, pdAngleOfTangentToSurfNormal
			)

	def CombineCurves(self, nNumCurves=defaultNamedNotOptArg, curveID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), ((3, 1), (12, 1)),nNumCurves
			, curveID)

	def CombinedCurvesAsSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def CommonPoint(self, nOtherCurveID=defaultNamedNotOptArg, nCommonPoint=pythoncom.Missing, bMultipleCommon=pythoncom.Missing):
		return self._ApplyTypes_(20047, 1, (3, 0), ((3, 1), (16387, 2), (16395, 2)), 'CommonPoint', None,nOtherCurveID
			, nCommonPoint, bMultipleCommon)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def CurvatureAcrossEdge(self, pdMinVal=pythoncom.Missing, pdMaxVal=pythoncom.Missing, pdAngleBetweenNormals=pythoncom.Missing):
		return self._ApplyTypes_(20038, 1, (3, 0), ((16389, 2), (16389, 2), (16389, 2)), 'CurvatureAcrossEdge', None,pdMinVal
			, pdMaxVal, pdAngleBetweenNormals)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Elements(self, numElems=pythoncom.Missing, elemID=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((16387, 2), (16396, 2)), 'Elements', None,numElems
			, elemID)

	def ElementsAsSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def ElementsWithFaces(self, numElems=pythoncom.Missing, elemID=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((16387, 2), (16396, 2)), 'ElementsWithFaces', None,numElems
			, elemID)

	def EndPoints(self, startPt=pythoncom.Missing, endPt=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((16387, 2), (16387, 2)), 'EndPoints', None,startPt
			, endPt)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Facets(self, numPoints=pythoncom.Missing, xyzPoint=pythoncom.Missing):
		return self._ApplyTypes_(20031, 1, (3, 0), ((16387, 2), (16396, 2)), 'Facets', None,numPoints
			, xyzPoint)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	# The method GeometricBias is actually a property, but must be used as a method to correctly pass the arguments
	def GeometricBias(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetAllArray(self, SetID=defaultNamedNotOptArg, numCurve=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, curvetype=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing, donotmesh=pythoncom.Missing, nInCompositeCurve=pythoncom.Missing
			, nInternalToBoundary=pythoncom.Missing, points=pythoncom.Missing):
		return self._ApplyTypes_(20076, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,SetID
			, numCurve, entID, Exist, curvetype, layer
			, color, donotmesh, nInCompositeCurve, nInternalToBoundary, points
			)

	def GetAllAttrArray(self, SetID=defaultNamedNotOptArg, numCurve=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, pid=pythoncom.Missing, orient_type=pythoncom.Missing, orient=pythoncom.Missing, offset_type=pythoncom.Missing, offset=pythoncom.Missing
			, release=pythoncom.Missing):
		return self._ApplyTypes_(20077, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllAttrArray', None,SetID
			, numCurve, entID, Exist, pid, orient_type
			, orient, offset_type, offset, release)

	def GetCombinedCurves(self, nNumCurves=pythoncom.Missing, curveID=pythoncom.Missing):
		return self._ApplyTypes_(20028, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetCombinedCurves', None,nNumCurves
			, curveID)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetMeshLoc(self, numLoc=pythoncom.Missing, MeshParam=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetMeshLoc', None,numLoc
			, MeshParam)

	def GetMeshLocXYZ(self, numLoc=pythoncom.Missing, meshXYZ=pythoncom.Missing):
		return self._ApplyTypes_(20020, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetMeshLocXYZ', None,numLoc
			, meshXYZ)

	def GetPrecision(self):
		return self._oleobj_.InvokeTypes(20067, LCID, 1, (5, 0), (),)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def HasMeshSize(self):
		return self._oleobj_.InvokeTypes(20044, LCID, 1, (3, 0), (),)

	def InitMeshAttributes(self, nPropID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20071, LCID, 1, (3, 0), ((3, 1),),nPropID
			)

	def IsArc(self):
		return self._oleobj_.InvokeTypes(20051, LCID, 1, (3, 0), (),)

	def IsCombinedCurve(self):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), (),)

	def IsFacet(self):
		return self._oleobj_.InvokeTypes(20075, LCID, 1, (3, 0), (),)

	def IsFreeEdge(self):
		return self._oleobj_.InvokeTypes(20073, LCID, 1, (3, 0), (),)

	def IsGeneral(self):
		return self._oleobj_.InvokeTypes(20063, LCID, 1, (3, 0), (),)

	def IsMergeable(self):
		return self._oleobj_.InvokeTypes(20069, LCID, 1, (3, 0), (),)

	def IsNonManifold(self):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), (),)

	def IsOnSolidRegion(self):
		return self._oleobj_.InvokeTypes(20074, LCID, 1, (3, 0), (),)

	def IsSmooth(self, dAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), ((5, 1),),dAngle
			)

	def IsSmoothEdge(self, dAngle=defaultNamedNotOptArg, nConvexityType=pythoncom.Missing):
		return self._ApplyTypes_(20021, 1, (3, 0), ((5, 1), (16387, 2)), 'IsSmoothEdge', None,dAngle
			, nConvexityType)

	def IsStraight(self):
		return self._oleobj_.InvokeTypes(20034, LCID, 1, (3, 0), (),)

	def IsSuppressed(self):
		return self._oleobj_.InvokeTypes(20042, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Length(self):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (5, 0), (),)

	# The method LengthSpacing is actually a property, but must be used as a method to correctly pass the arguments
	def LengthSpacing(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def ManifoldType(self, pnType=pythoncom.Missing):
		return self._ApplyTypes_(20072, 1, (3, 0), ((16387, 2),), 'ManifoldType', None,pnType
			)

	# The method MeshBias is actually a property, but must be used as a method to correctly pass the arguments
	def MeshBias(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def MeshCount(self, numElem=pythoncom.Missing, CustomSize=pythoncom.Missing):
		return self._ApplyTypes_(20046, 1, (3, 0), ((16387, 2), (16395, 2)), 'MeshCount', None,numElem
			, CustomSize)

	# The method MeshElem is actually a property, but must be used as a method to correctly pass the arguments
	def MeshElem(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method MeshMaxParam is actually a property, but must be used as a method to correctly pass the arguments
	def MeshMaxParam(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def MeshParam(self, numParam=pythoncom.Missing, MeshParam=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((16387, 2), (16396, 2)), 'MeshParam', None,numParam
			, MeshParam)

	# The method MeshPointID is actually a property, but must be used as a method to correctly pass the arguments
	def MeshPointID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Midpoint(self, Midpoint=pythoncom.Missing):
		return self._ApplyTypes_(20065, 1, (3, 0), ((16396, 2),), 'Midpoint', None,Midpoint
			)

	def MinRadius(self, pdMinRadius=pythoncom.Missing):
		return self._ApplyTypes_(20040, 1, (3, 0), ((16389, 2),), 'MinRadius', None,pdMinRadius
			)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def Nodes(self, getBoundary=defaultNamedNotOptArg, getInterior=defaultNamedNotOptArg, numNodes=pythoncom.Missing, NodeID=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((11, 1), (11, 1), (16387, 2), (16396, 2)), 'Nodes', None,getBoundary
			, getInterior, numNodes, NodeID)

	def NodesAsSet(self, getBoundary=defaultNamedNotOptArg, getInterior=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (11, 1)),getBoundary
			, getInterior, nSetID, bClear)

	def ParamAtLength(self, fromstart=defaultNamedNotOptArg, Length=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (5, 0), ((11, 1), (5, 1)),fromstart
			, Length)

	def ParamOnCombinedCurve(self, s=defaultNamedNotOptArg, curveID=pythoncom.Missing):
		return self._ApplyTypes_(20041, 1, (3, 0), ((5, 1), (16387, 2)), 'ParamOnCombinedCurve', None,s
			, curveID)

	def ParamToXYZ(self, s=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((5, 1), (16396, 2)), 'ParamToXYZ', None,s
			, xyz)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def PartialLength(self, s0=defaultNamedNotOptArg, s1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (5, 0), ((5, 1), (5, 1)),s0
			, s1)

	def PartialLengthNode(self, nNode0=defaultNamedNotOptArg, nNode1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (5, 0), ((3, 1), (3, 1)),nNode0
			, nNode1)

	def PartialLengthXYZ(self, xyz0=defaultNamedNotOptArg, xyz1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (5, 0), ((12, 1), (12, 1)),xyz0
			, xyz1)

	def PointsAsSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20048, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Project(self, fromxyz=defaultNamedNotOptArg, toxyz=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((12, 1), (16396, 2)), 'Project', None,fromxyz
			, toxyz)

	def ProjectAlongVector(self, vAlong=defaultNamedNotOptArg, vOrig=defaultNamedNotOptArg, vProj=pythoncom.Missing):
		return self._ApplyTypes_(20050, 1, (3, 0), ((12, 1), (12, 1), (16396, 2)), 'ProjectAlongVector', None,vAlong
			, vOrig, vProj)

	def ProjectToClosest(self, bExtendCurve=defaultNamedNotOptArg, vOrig=defaultNamedNotOptArg, vProj=pythoncom.Missing):
		return self._ApplyTypes_(20049, 1, (3, 0), ((11, 1), (12, 1), (16396, 2)), 'ProjectToClosest', None,bExtendCurve
			, vOrig, vProj)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, numCurve=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, bUpdateLayer=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, bUpdateColor=defaultNamedNotOptArg, color=defaultNamedNotOptArg, bUpdateDoNotMesh=defaultNamedNotOptArg, donotmesh=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20078, LCID, 1, (3, 0), ((3, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1)),numCurve
			, entID, bUpdateLayer, layer, bUpdateColor, color
			, bUpdateDoNotMesh, donotmesh)

	def PutAllAttrArray(self, numCurve=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, bUpdatePID=defaultNamedNotOptArg, pid=defaultNamedNotOptArg
			, bUpdateOrient=defaultNamedNotOptArg, orient_type=defaultNamedNotOptArg, orient=defaultNamedNotOptArg, bUpdateOffset=defaultNamedNotOptArg, offset_type=defaultNamedNotOptArg
			, offset=defaultNamedNotOptArg, bUpdateRelease=defaultNamedNotOptArg, release=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20079, LCID, 1, (3, 0), ((3, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (12, 1), (11, 1), (12, 1), (12, 1), (11, 1), (12, 1)),numCurve
			, entID, bUpdatePID, pid, bUpdateOrient, orient_type
			, orient, bUpdateOffset, offset_type, offset, bUpdateRelease
			, release)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def ResetPrecision(self):
		return self._oleobj_.InvokeTypes(20068, LCID, 1, (3, 0), (),)

	def Reverse(self):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetBSplineKnot is actually a property, but must be used as a method to correctly pass the arguments
	def SetBSplineKnot(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetBSplinePoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetBSplinePoint(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetBSplineWeight is actually a property, but must be used as a method to correctly pass the arguments
	def SetBSplineWeight(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetCenterBias is actually a property, but must be used as a method to correctly pass the arguments
	def SetCenterBias(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetGeometricBias is actually a property, but must be used as a method to correctly pass the arguments
	def SetGeometricBias(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetLengthSpacing is actually a property, but must be used as a method to correctly pass the arguments
	def SetLengthSpacing(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetMeshBias is actually a property, but must be used as a method to correctly pass the arguments
	def SetMeshBias(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetMeshElem is actually a property, but must be used as a method to correctly pass the arguments
	def SetMeshElem(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetMeshMaxParam is actually a property, but must be used as a method to correctly pass the arguments
	def SetMeshMaxParam(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetMeshPointID is actually a property, but must be used as a method to correctly pass the arguments
	def SetMeshPointID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def SetSimpleMeshLoc(self, numElem=defaultNamedNotOptArg, spacing=defaultNamedNotOptArg, biasMethod=defaultNamedNotOptArg, bias=defaultNamedNotOptArg
			, biasLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20045, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (3, 1)),numElem
			, spacing, biasMethod, bias, biasLoc)

	# The method SetStdPoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetStdPoint(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetattrOffset is actually a property, but must be used as a method to correctly pass the arguments
	def SetattrOffset(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetattrOrient is actually a property, but must be used as a method to correctly pass the arguments
	def SetattrOrient(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetattrRelease is actually a property, but must be used as a method to correctly pass the arguments
	def SetattrRelease(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 4, (24, 0), ((3, 1), (3, 1), (3, 1)),nRowIndex
			, nColIndex, arg2)

	def Solid(self, pnSolidID=pythoncom.Missing):
		return self._ApplyTypes_(20064, 1, (3, 0), ((16387, 2),), 'Solid', None,pnSolidID
			)

	# The method StdPoint is actually a property, but must be used as a method to correctly pass the arguments
	def StdPoint(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Surfaces(self, nCombinedMode=defaultNamedNotOptArg, numSurfaces=pythoncom.Missing, surfaceID=pythoncom.Missing):
		return self._ApplyTypes_(20022, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'Surfaces', None,nCombinedMode
			, numSurfaces, surfaceID)

	def SurfacesAsSet(self, nCombinedMode=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nCombinedMode
			, nSetID, bClear)

	def Tangent(self, outward=defaultNamedNotOptArg, fromxyz=defaultNamedNotOptArg, Tangent=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((11, 1), (12, 1), (16396, 2)), 'Tangent', None,outward
			, fromxyz, Tangent)

	def TangentAtEnds(self, outward=defaultNamedNotOptArg, pvEnd1Tan=pythoncom.Missing, pvEnd2Tan=pythoncom.Missing):
		return self._ApplyTypes_(20037, 1, (3, 0), ((11, 1), (16396, 2), (16396, 2)), 'TangentAtEnds', None,outward
			, pvEnd1Tan, pvEnd2Tan)

	def XYZToParam(self, xyz=defaultNamedNotOptArg, s=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((12, 1), (16389, 2)), 'XYZToParam', None,xyz
			, s)

	# The method attrOffset is actually a property, but must be used as a method to correctly pass the arguments
	def attrOffset(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method attrOrient is actually a property, but must be used as a method to correctly pass the arguments
	def attrOrient(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method attrRelease is actually a property, but must be used as a method to correctly pass the arguments
	def attrRelease(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 2, (3, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	def center(self, center=pythoncom.Missing):
		return self._ApplyTypes_(20066, 1, (3, 0), ((16396, 2),), 'center', None,center
			)

	def normal(self, xyz=defaultNamedNotOptArg, vNormal=pythoncom.Missing):
		return self._ApplyTypes_(20026, 1, (3, 0), ((12, 1), (16396, 2)), 'normal', None,xyz
			, vNormal)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Address": (10010, 2, (3, 0), (), "Address", None),
		"BSplineClosed": (10021, 2, (11, 0), (), "BSplineClosed", None),
		"BSplineNumPoints": (10014, 2, (3, 0), (), "BSplineNumPoints", None),
		"BSplineOrder": (10013, 2, (3, 0), (), "BSplineOrder", None),
		"BSplinePeriodic": (10023, 2, (11, 0), (), "BSplinePeriodic", None),
		"BSplinePlanar": (10020, 2, (11, 0), (), "BSplinePlanar", None),
		"BSplineRational": (10022, 2, (11, 0), (), "BSplineRational", None),
		"BSplineT0": (10018, 2, (5, 0), (), "BSplineT0", None),
		"BSplineT1": (10019, 2, (5, 0), (), "BSplineT1", None),
		"Engine": (10011, 2, (3, 0), (), "Engine", None),
		"HasCustomMesh": (10030, 2, (11, 0), (), "HasCustomMesh", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"InCombinedCurve": (10045, 2, (3, 0), (), "InCombinedCurve", None),
		"InternalToBoundary": (10044, 2, (3, 0), (), "InternalToBoundary", None),
		"ScaleFactor": (10046, 2, (5, 0), (), "ScaleFactor", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"Suppressed": (10012, 2, (11, 0), (), "Suppressed", None),
		"attrOffsetType": (10006, 2, (3, 0), (), "attrOffsetType", None),
		"attrOrientType": (10005, 2, (3, 0), (), "attrOrientType", None),
		"attrPID": (10002, 2, (3, 0), (), "attrPID", None),
		"attrTopology": (10047, 2, (3, 0), (), "attrTopology", None),
		"color": (10008, 2, (3, 0), (), "color", None),
		"layer": (10009, 2, (3, 0), (), "layer", None),
		"type": (10000, 2, (3, 0), (), "type", None),
		"vBSplineKnot": (10034, 2, (12, 0), (), "vBSplineKnot", None),
		"vBSplinePoint": (10033, 2, (12, 0), (), "vBSplinePoint", None),
		"vBSplineWeight": (10035, 2, (12, 0), (), "vBSplineWeight", None),
		"vCenterBias": (10040, 2, (12, 0), (), "vCenterBias", None),
		"vGeometricBias": (10041, 2, (12, 0), (), "vGeometricBias", None),
		"vLengthSpacing": (10039, 2, (12, 0), (), "vLengthSpacing", None),
		"vMeshBias": (10037, 2, (12, 0), (), "vMeshBias", None),
		"vMeshElem": (10036, 2, (12, 0), (), "vMeshElem", None),
		"vMeshMaxParam": (10038, 2, (12, 0), (), "vMeshMaxParam", None),
		"vMeshPointID": (10048, 2, (12, 0), (), "vMeshPointID", None),
		"vStdPoint": (10031, 2, (12, 0), (), "vStdPoint", None),
		"vattrOffset": (10042, 2, (12, 0), (), "vattrOffset", None),
		"vattrOrient": (10032, 2, (12, 0), (), "vattrOrient", None),
		"vattrRelease": (10043, 2, (12, 0), (), "vattrRelease", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Address" : ((10010, LCID, 4, 0),()),
		"BSplineClosed" : ((10021, LCID, 4, 0),()),
		"BSplineNumPoints" : ((10014, LCID, 4, 0),()),
		"BSplineOrder" : ((10013, LCID, 4, 0),()),
		"BSplinePeriodic" : ((10023, LCID, 4, 0),()),
		"BSplinePlanar" : ((10020, LCID, 4, 0),()),
		"BSplineRational" : ((10022, LCID, 4, 0),()),
		"BSplineT0" : ((10018, LCID, 4, 0),()),
		"BSplineT1" : ((10019, LCID, 4, 0),()),
		"Engine" : ((10011, LCID, 4, 0),()),
		"HasCustomMesh" : ((10030, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"InCombinedCurve" : ((10045, LCID, 4, 0),()),
		"InternalToBoundary" : ((10044, LCID, 4, 0),()),
		"ScaleFactor" : ((10046, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"Suppressed" : ((10012, LCID, 4, 0),()),
		"attrOffsetType" : ((10006, LCID, 4, 0),()),
		"attrOrientType" : ((10005, LCID, 4, 0),()),
		"attrPID" : ((10002, LCID, 4, 0),()),
		"attrTopology" : ((10047, LCID, 4, 0),()),
		"color" : ((10008, LCID, 4, 0),()),
		"layer" : ((10009, LCID, 4, 0),()),
		"type" : ((10000, LCID, 4, 0),()),
		"vBSplineKnot" : ((10034, LCID, 4, 0),()),
		"vBSplinePoint" : ((10033, LCID, 4, 0),()),
		"vBSplineWeight" : ((10035, LCID, 4, 0),()),
		"vCenterBias" : ((10040, LCID, 4, 0),()),
		"vGeometricBias" : ((10041, LCID, 4, 0),()),
		"vLengthSpacing" : ((10039, LCID, 4, 0),()),
		"vMeshBias" : ((10037, LCID, 4, 0),()),
		"vMeshElem" : ((10036, LCID, 4, 0),()),
		"vMeshMaxParam" : ((10038, LCID, 4, 0),()),
		"vMeshPointID" : ((10048, LCID, 4, 0),()),
		"vStdPoint" : ((10031, LCID, 4, 0),()),
		"vattrOffset" : ((10042, LCID, 4, 0),()),
		"vattrOrient" : ((10032, LCID, 4, 0),()),
		"vattrRelease" : ((10043, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDBase(DispatchBaseClass):
	CLSID = IID('{90561A64-EB1F-11D4-9447-001083FFF11C}')
	coclass_clsid = IID('{90561A66-EB1F-11D4-9447-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),ID
			)

	def Delete(self, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),ID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),ID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),ID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),ID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (19002, 2, (3, 0), (), "Active", None),
		"ID": (19000, 2, (3, 0), (), "ID", None),
		"SetID": (19001, 2, (3, 0), (), "SetID", None),
	}
	_prop_map_put_ = {
		"Active" : ((19002, LCID, 4, 0),()),
		"ID" : ((19000, LCID, 4, 0),()),
		"SetID" : ((19001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataSurf(DispatchBaseClass):
	CLSID = IID('{8F814530-166A-4092-BBD8-C37483772F1E}')
	coclass_clsid = IID('{8F814532-166A-4092-BBD8-C37483772F1E}')

	def AutoEvaluate(self):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Evaluate(self, geomID=defaultNamedNotOptArg, enOnType=defaultNamedNotOptArg, mapSetID=defaultNamedNotOptArg, isElemental=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),geomID
			, enOnType, mapSetID, isElemental)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetCellValue(self, nPage=defaultNamedNotOptArg, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nComponent=defaultNamedNotOptArg
			, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (16389, 2)), 'GetCellValue', None,nPage
			, nRow, nCol, nComponent, dValue)

	def GetColumnTitle(self, nPage=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, sTitle=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((3, 1), (3, 1), (16392, 2)), 'GetColumnTitle', None,nPage
			, nCol, sTitle)

	def GetColumnValue(self, nPage=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((3, 1), (3, 1), (16389, 2)), 'GetColumnValue', None,nPage
			, nCol, dValue)

	def GetData(self, geomID=defaultNamedNotOptArg, feaID=defaultNamedNotOptArg, Coord=defaultNamedNotOptArg, sVal=pythoncom.Missing
			, cgXYZ=pythoncom.Missing):
		return self._ApplyTypes_(20034, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16389, 2), (16396, 2)), 'GetData', None,geomID
			, feaID, Coord, sVal, cgXYZ)

	def GetDataArray(self, nCount=defaultNamedNotOptArg, vgeomID=defaultNamedNotOptArg, vfeaID=defaultNamedNotOptArg, Coord=defaultNamedNotOptArg
			, sVal=pythoncom.Missing, cgXYZ=pythoncom.Missing):
		return self._ApplyTypes_(20038, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (16396, 2), (16396, 2)), 'GetDataArray', None,nCount
			, vgeomID, vfeaID, Coord, sVal, cgXYZ
			)

	def GetDataSurf(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetDataSurfInfo(self, nPages=pythoncom.Missing, nComponent=pythoncom.Missing, sTitle=pythoncom.Missing):
		return self._ApplyTypes_(20029, 1, (3, 0), ((16387, 2), (16387, 2), (16392, 2)), 'GetDataSurfInfo', None,nPages
			, nComponent, sTitle)

	def GetDataSurfType(self):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), (),)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetPageInfo(self, nPage=defaultNamedNotOptArg, nRow=pythoncom.Missing, nCol=pythoncom.Missing):
		return self._ApplyTypes_(20030, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetPageInfo', None,nPage
			, nRow, nCol)

	def GetPageTitle(self, nPage=defaultNamedNotOptArg, sTitle=pythoncom.Missing):
		return self._ApplyTypes_(20020, 1, (3, 0), ((3, 1), (16392, 2)), 'GetPageTitle', None,nPage
			, sTitle)

	def GetPageValue(self, nPage=defaultNamedNotOptArg, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20021, 1, (3, 0), ((3, 1), (16389, 2)), 'GetPageValue', None,nPage
			, dValue)

	def GetRowTitle(self, nPage=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, sTitle=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((3, 1), (3, 1), (16392, 2)), 'GetRowTitle', None,nPage
			, nCol, sTitle)

	def GetRowValue(self, nPage=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((3, 1), (3, 1), (16389, 2)), 'GetRowValue', None,nPage
			, nCol, dValue)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutDataSurf(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def Resize(self, nPage=defaultNamedNotOptArg, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, bVector=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),nPage
			, nRow, nCol, bVector)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetCellBlank(self, nPage=defaultNamedNotOptArg, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nComponent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nPage
			, nRow, nCol, nComponent)

	def SetCellEquation(self, nPage=defaultNamedNotOptArg, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nComponent=defaultNamedNotOptArg
			, sEquation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (8, 1)),nPage
			, nRow, nCol, nComponent, sEquation)

	def SetCellValue(self, nPage=defaultNamedNotOptArg, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nComponent=defaultNamedNotOptArg
			, dValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (5, 1)),nPage
			, nRow, nCol, nComponent, dValue)

	def SetColumnTitle(self, nPage=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),nPage
			, nCol, sTitle)

	def SetColumnValue(self, nPage=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, rVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nPage
			, nCol, rVal)

	def SetPageTitle(self, nPage=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1), (8, 1)),nPage
			, sTitle)

	def SetPageValue(self, nPage=defaultNamedNotOptArg, rVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((3, 1), (5, 1)),nPage
			, rVal)

	def SetRowTitle(self, nPage=defaultNamedNotOptArg, nRow=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),nPage
			, nRow, sTitle)

	def SetRowValue(self, nPage=defaultNamedNotOptArg, nRow=defaultNamedNotOptArg, rVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nPage
			, nRow, rVal)

	def VarAlongCoord(self, projID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, val_xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),projID
			, xyz, val_xyz)

	def VarArbitrary3DCoord(self, projID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, val_xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),projID
			, xyz, val_xyz)

	def VarBetween2Pts(self, xyz=defaultNamedNotOptArg, val_xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((12, 1), (12, 1)),xyz
			, val_xyz)

	def VarBetween4Pts(self, xyz=defaultNamedNotOptArg, val_xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((12, 1), (12, 1)),xyz
			, val_xyz)

	def VarBetween8Pts(self, xyz=defaultNamedNotOptArg, val_xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((12, 1), (12, 1)),xyz
			, val_xyz)

	def VarEquation(self, Equation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((8, 1),),Equation
			)

	def VarMeshSurface(self, SetID=defaultNamedNotOptArg, enOnType=defaultNamedNotOptArg, sX=defaultNamedNotOptArg, sY=defaultNamedNotOptArg
			, sZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1), (8, 1), (8, 1)),SetID
			, enOnType, sX, sY, sZ)

	def VarOutputMapV2(self, ModelID=defaultNamedNotOptArg, groupID=defaultNamedNotOptArg, outSetID=defaultNamedNotOptArg, outVecID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), ((20, 1), (3, 1), (3, 1), (3, 1)),ModelID
			, groupID, outSetID, outVecID)

	def VarParametric2Pt(self, xyz=defaultNamedNotOptArg, val_xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((12, 1), (12, 1)),xyz
			, val_xyz)

	def VarParametric4Pt(self, xyz=defaultNamedNotOptArg, val_xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((12, 1), (12, 1)),xyz
			, val_xyz)

	def VarSpatialUVtable(self, uDiv=defaultNamedNotOptArg, vDiv=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (3, 1)),uDiv
			, vDiv)

	def VarSpatialXYZTable(self, xDiv=defaultNamedNotOptArg, yDiv=defaultNamedNotOptArg, zDiv=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),xDiv
			, yDiv, zDiv)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AlongCoordProjectID": (10003, 2, (3, 0), (), "AlongCoordProjectID", None),
		"CSys": (10006, 2, (3, 0), (), "CSys", None),
		"DataConversion": (10016, 2, (3, 0), (), "DataConversion", None),
		"DefOutMapValue1": (10007, 2, (5, 0), (), "DefOutMapValue1", None),
		"DefOutMapValue2": (10008, 2, (5, 0), (), "DefOutMapValue2", None),
		"DefOutMapValue3": (10009, 2, (5, 0), (), "DefOutMapValue3", None),
		"ExtendEdgeValues": (10015, 2, (11, 0), (), "ExtendEdgeValues", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"InterpMin": (10011, 2, (3, 0), (), "InterpMin", None),
		"InterpPercent": (10012, 2, (5, 0), (), "InterpPercent", None),
		"MapOffsetTolerance": (10014, 2, (5, 0), (), "MapOffsetTolerance", None),
		"OutMapOption": (10004, 2, (3, 0), (), "OutMapOption", None),
		"ParamCurveSurfID": (10010, 2, (3, 0), (), "ParamCurveSurfID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"TabularUdefOption": (10013, 2, (3, 0), (), "TabularUdefOption", None),
		"TabularUdefVal": (10005, 2, (5, 0), (), "TabularUdefVal", None),
		"UseCriteria": (10017, 2, (11, 0), (), "UseCriteria", None),
		"title": (10001, 2, (8, 0), (), "title", None),
		"vector": (10002, 2, (11, 0), (), "vector", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AlongCoordProjectID" : ((10003, LCID, 4, 0),()),
		"CSys" : ((10006, LCID, 4, 0),()),
		"DataConversion" : ((10016, LCID, 4, 0),()),
		"DefOutMapValue1" : ((10007, LCID, 4, 0),()),
		"DefOutMapValue2" : ((10008, LCID, 4, 0),()),
		"DefOutMapValue3" : ((10009, LCID, 4, 0),()),
		"ExtendEdgeValues" : ((10015, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"InterpMin" : ((10011, LCID, 4, 0),()),
		"InterpPercent" : ((10012, LCID, 4, 0),()),
		"MapOffsetTolerance" : ((10014, LCID, 4, 0),()),
		"OutMapOption" : ((10004, LCID, 4, 0),()),
		"ParamCurveSurfID" : ((10010, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"TabularUdefOption" : ((10013, LCID, 4, 0),()),
		"TabularUdefVal" : ((10005, LCID, 4, 0),()),
		"UseCriteria" : ((10017, LCID, 4, 0),()),
		"title" : ((10001, LCID, 4, 0),()),
		"vector" : ((10002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataTable(DispatchBaseClass):
	CLSID = IID('{473E5696-513B-4A26-BD0F-FDB36820E7B1}')
	coclass_clsid = IID('{473E5698-513B-4A26-BD0F-FDB36820E7B1}')

	def AddColumn(self, bClear=defaultNamedNotOptArg, bHidden=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, entitySetID=defaultNamedNotOptArg
			, colTitle=defaultNamedNotOptArg, ColType=defaultNamedNotOptArg, nRows=defaultNamedNotOptArg, ID=defaultNamedNotOptArg, value=defaultNamedNotOptArg
			, nNewColumnID=pythoncom.Missing):
		return self._ApplyTypes_(20032, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (3, 1), (8, 1), (3, 1), (3, 1), (12, 1), (12, 1), (16387, 2)), 'AddColumn', None,bClear
			, bHidden, entityTYPE, entitySetID, colTitle, ColType
			, nRows, ID, value, nNewColumnID)

	def AddDataColumn(self, bHidden=defaultNamedNotOptArg, colTitle=defaultNamedNotOptArg, ColType=defaultNamedNotOptArg, nRows=defaultNamedNotOptArg
			, Rows=defaultNamedNotOptArg, value=defaultNamedNotOptArg, nNewColumnID=pythoncom.Missing):
		return self._ApplyTypes_(20069, 1, (3, 0), ((11, 1), (8, 1), (3, 1), (3, 1), (12, 1), (12, 1), (16387, 2)), 'AddDataColumn', None,bHidden
			, colTitle, ColType, nRows, Rows, value
			, nNewColumnID)

	def AddElementChecks(self):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), (),)

	def AddEntityData(self, bClear=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, entitySetID=defaultNamedNotOptArg, entityIDSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20034, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (3, 1)),bClear
			, entityTYPE, entitySetID, entityIDSet)

	def AddGroup(self, nColumn=defaultNamedNotOptArg, bShowInGroupOnly=defaultNamedNotOptArg, bSortAscending=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),nColumn
			, bShowInGroupOnly, bSortAscending)

	def AddMassProperties(self):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), (),)

	def AddMeshAssociativity(self):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), (),)

	def AddNastranElementChecks(self):
		return self._oleobj_.InvokeTypes(20068, LCID, 1, (3, 0), (),)

	def AddOutputV2(self, nOutputSet=defaultNamedNotOptArg, nOutputVector=defaultNamedNotOptArg, nNewColumnID=pythoncom.Missing):
		return self._ApplyTypes_(20071, 1, (3, 0), ((3, 1), (3, 1), (16387, 2)), 'AddOutputV2', None,nOutputSet
			, nOutputVector, nNewColumnID)

	def AddSelection(self, numRows=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg, bSelect=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1), (12, 1), (11, 1)),numRows
			, Rows, bSelect)

	def AddSort(self, nColumn=defaultNamedNotOptArg, bSortAscending=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20050, LCID, 1, (3, 0), ((3, 1), (11, 1)),nColumn
			, bSortAscending)

	def ClearGroup(self):
		return self._oleobj_.InvokeTypes(20041, LCID, 1, (3, 0), (),)

	def ClearSelection(self):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), (),)

	def ClearSort(self):
		return self._oleobj_.InvokeTypes(20051, LCID, 1, (3, 0), (),)

	def Copy(self, bCopyAll=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20061, LCID, 1, (3, 0), ((11, 1),),bCopyAll
			)

	def DeleteRows(self, numRows=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20063, LCID, 1, (3, 0), ((3, 1), (12, 1)),numRows
			, Rows)

	def FindColumn(self, colTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((8, 1),),colTitle
			)

	def FindRow(self, ModelID=defaultNamedNotOptArg, SetID=defaultNamedNotOptArg, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),ModelID
			, SetID, ID)

	def GetColumnInfo(self, numColumns=pythoncom.Missing, ColType=pythoncom.Missing, colTitle=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2)), 'GetColumnInfo', None,numColumns
			, ColType, colTitle)

	def GetColumnInfo2(self, numColumns=pythoncom.Missing, ColType=pythoncom.Missing, colTitle=pythoncom.Missing):
		return self._ApplyTypes_(20070, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2)), 'GetColumnInfo2', None,numColumns
			, ColType, colTitle)

	def GetColumnText(self, nColumn=defaultNamedNotOptArg, numRowsOrAll=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg, numData=pythoncom.Missing
			, ColumnText=pythoncom.Missing):
		return self._ApplyTypes_(20031, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16387, 2), (16396, 2)), 'GetColumnText', None,nColumn
			, numRowsOrAll, Rows, numData, ColumnText)

	def GetColumnTitle(self, nColumn=defaultNamedNotOptArg, colTitle=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((3, 1), (16392, 2)), 'GetColumnTitle', None,nColumn
			, colTitle)

	def GetColumnValue(self, nColumn=defaultNamedNotOptArg, numRowsOrAll=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg, numData=pythoncom.Missing
			, ColumnData=pythoncom.Missing):
		return self._ApplyTypes_(20030, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16387, 2), (16396, 2)), 'GetColumnValue', None,nColumn
			, numRowsOrAll, Rows, numData, ColumnData)

	def GetColumnVisible(self, nColumn=defaultNamedNotOptArg, bVisible=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((3, 1), (16395, 2)), 'GetColumnVisible', None,nColumn
			, bVisible)

	def GetColumnWidth(self, nColumn=defaultNamedNotOptArg, nWidth=pythoncom.Missing):
		return self._ApplyTypes_(20014, 1, (3, 0), ((3, 1), (16387, 2)), 'GetColumnWidth', None,nColumn
			, nWidth)

	def GetGroup(self, numColumns=pythoncom.Missing, Columns=pythoncom.Missing):
		return self._ApplyTypes_(20042, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetGroup', None,numColumns
			, Columns)

	def GetRowInfo(self, numRows=pythoncom.Missing, ModelID=pythoncom.Missing, SetID=pythoncom.Missing, ID=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetRowInfo', None,numRows
			, ModelID, SetID, ID)

	def GetRowValues(self, numRowsOrAll=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg, numData=pythoncom.Missing, RowData=pythoncom.Missing):
		return self._ApplyTypes_(20028, 1, (3, 0), ((3, 1), (12, 1), (16387, 2), (16396, 2)), 'GetRowValues', None,numRowsOrAll
			, Rows, numData, RowData)

	def GetRowVisible(self, nRow=defaultNamedNotOptArg, bVisible=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16395, 2)), 'GetRowVisible', None,nRow
			, bVisible)

	def GetSelection(self, numRows=pythoncom.Missing, Rows=pythoncom.Missing):
		return self._ApplyTypes_(20022, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetSelection', None,numRows
			, Rows)

	def GetSort(self, numColumns=pythoncom.Missing, Columns=pythoncom.Missing):
		return self._ApplyTypes_(20052, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetSort', None,numColumns
			, Columns)

	def Lock(self, bLock=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20060, LCID, 1, (3, 0), ((11, 1),),bLock
			)

	def Print(self):
		return self._oleobj_.InvokeTypes(20065, LCID, 1, (3, 0), (),)

	def Save(self, bCopyAll=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, nFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20067, LCID, 1, (3, 0), ((11, 1), (8, 1), (3, 1)),bCopyAll
			, fName, nFormat)

	def SetBackgroundColor(self, nColumn=defaultNamedNotOptArg, numRows=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg, nRed=defaultNamedNotOptArg
			, nGreen=defaultNamedNotOptArg, nBlue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (3, 1), (3, 1)),nColumn
			, numRows, Rows, nRed, nGreen, nBlue
			)

	def SetColumnAlignment(self, nColumnOrAll=defaultNamedNotOptArg, nAlign=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((3, 1), (3, 1)),nColumnOrAll
			, nAlign)

	def SetColumnPosition(self, nColumn=defaultNamedNotOptArg, nNewIndex=defaultNamedNotOptArg, bAfter=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nColumn
			, nNewIndex, bAfter)

	def SetColumnTitle(self, nColumn=defaultNamedNotOptArg, colTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((3, 1), (8, 1)),nColumn
			, colTitle)

	def SetColumnVisible(self, nColumnOrAll=defaultNamedNotOptArg, bVisible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (11, 1)),nColumnOrAll
			, bVisible)

	def SetColumnWidth(self, nColumnOrAll=defaultNamedNotOptArg, nWidth=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (3, 1)),nColumnOrAll
			, nWidth)

	def SetRowVisible(self, nRowOrAll=defaultNamedNotOptArg, bVisible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1)),nRowOrAll
			, bVisible)

	def SetTextColor(self, nColumn=defaultNamedNotOptArg, numRows=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg, nRed=defaultNamedNotOptArg
			, nGreen=defaultNamedNotOptArg, nBlue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20038, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (3, 1), (3, 1)),nColumn
			, numRows, Rows, nRed, nGreen, nBlue
			)

	def Show(self, bShowAll=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20064, LCID, 1, (3, 0), ((11, 1),),bShowAll
			)

	def ShowGroup(self, bVisible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20043, LCID, 1, (3, 0), ((11, 1),),bVisible
			)

	def UpdateColumn(self, nColumn=defaultNamedNotOptArg, ColType=defaultNamedNotOptArg, nRows=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg
			, value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),nColumn
			, ColType, nRows, Rows, value)

	def UpdateColumnByID(self, nColumn=defaultNamedNotOptArg, entitySetID=defaultNamedNotOptArg, ColType=defaultNamedNotOptArg, nRows=defaultNamedNotOptArg
			, ID=defaultNamedNotOptArg, value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),nColumn
			, entitySetID, ColType, nRows, ID, value
			)

	def clear(self):
		return self._oleobj_.InvokeTypes(20062, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"Locked": (10006, 2, (11, 0), (), "Locked", None),
		"NumberOfColumns": (10001, 2, (3, 0), (), "NumberOfColumns", None),
		"NumberOfRows": (10000, 2, (3, 0), (), "NumberOfRows", None),
		"Visible": (10005, 2, (11, 0), (), "Visible", None),
		"VisibleColsOnly": (10004, 2, (11, 0), (), "VisibleColsOnly", None),
		"VisibleRowsOnly": (10003, 2, (11, 0), (), "VisibleRowsOnly", None),
		"type": (10002, 2, (3, 0), (), "type", None),
	}
	_prop_map_put_ = {
		"Locked" : ((10006, LCID, 4, 0),()),
		"NumberOfColumns" : ((10001, LCID, 4, 0),()),
		"NumberOfRows" : ((10000, LCID, 4, 0),()),
		"Visible" : ((10005, LCID, 4, 0),()),
		"VisibleColsOnly" : ((10004, LCID, 4, 0),()),
		"VisibleRowsOnly" : ((10003, LCID, 4, 0),()),
		"type" : ((10002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDesignEquation(DispatchBaseClass):
	CLSID = IID('{1CA3384D-4A57-4BB1-9C7F-BE32974ED31C}')
	coclass_clsid = IID('{1CA3384F-4A57-4BB1-9C7F-BE32974ED31C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiscreteValueSet(DispatchBaseClass):
	CLSID = IID('{C05A6063-9B64-4E95-BF20-EEAA0E741159}')
	coclass_clsid = IID('{C05A6065-9B64-4E95-BF20-EEAA0E741159}')

	def AddLevelFloat(self, dValue1=defaultNamedNotOptArg, dValue2=defaultNamedNotOptArg, iColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1)),dValue1
			, dValue2, iColor)

	def AddLevelInteger(self, iValue1=defaultNamedNotOptArg, iValue2=defaultNamedNotOptArg, iColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),iValue1
			, iValue2, iColor)

	def AutoCreateLevels(self, iVuID=defaultNamedNotOptArg, iGroupID=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg, eVMDC=defaultNamedNotOptArg
			, nLevels=defaultNamedNotOptArg, iRangeOption=defaultNamedNotOptArg, iLowestValue=defaultNamedNotOptArg, dLowestValue=defaultNamedNotOptArg, ePropType=defaultNamedNotOptArg
			, eMatlType=defaultNamedNotOptArg, iLocation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1), (3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (3, 1), (3, 1), (3, 1)),iVuID
			, iGroupID, sTitle, eVMDC, nLevels, iRangeOption
			, iLowestValue, dLowestValue, ePropType, eMatlType, iLocation
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def CreateRangeFloat(self, nRanges=defaultNamedNotOptArg, dMinimum=defaultNamedNotOptArg, dMaximum=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1)),nRanges
			, dMinimum, dMaximum)

	def CreateRangeInteger(self, nRanges=defaultNamedNotOptArg, iMinimum=defaultNamedNotOptArg, iMaximum=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRanges
			, iMinimum, iMaximum)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLevelFloat(self, iLevelID=defaultNamedNotOptArg, pdValue1=pythoncom.Missing, pdValue2=pythoncom.Missing, piColor=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((3, 1), (16389, 2), (16389, 2), (16387, 2)), 'GetLevelFloat', None,iLevelID
			, pdValue1, pdValue2, piColor)

	def GetLevelInteger(self, iLevelID=defaultNamedNotOptArg, piValue1=pythoncom.Missing, piValue2=pythoncom.Missing, piColor=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2), (16387, 2)), 'GetLevelInteger', None,iLevelID
			, piValue1, piValue2, piColor)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetNumberLevels(self, pnLevels=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16387, 2),), 'GetNumberLevels', None,pnLevels
			)

	def GetTitle(self, sTitle=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((16392, 2),), 'GetTitle', None,sTitle
			)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetLevelFloat(self, iLevelID=defaultNamedNotOptArg, dValue1=defaultNamedNotOptArg, dValue2=defaultNamedNotOptArg, iColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (3, 1)),iLevelID
			, dValue1, dValue2, iColor)

	def SetLevelInteger(self, iLevelID=defaultNamedNotOptArg, iValue1=defaultNamedNotOptArg, iValue2=defaultNamedNotOptArg, iColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),iLevelID
			, iValue1, iValue2, iColor)

	def SetTitle(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def Sort(self):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"IntegerType": (10000, 2, (11, 0), (), "IntegerType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"rangeType": (10001, 2, (11, 0), (), "rangeType", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"IntegerType" : ((10000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"rangeType" : ((10001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawErase(DispatchBaseClass):
	CLSID = IID('{0BECB769-5F94-4718-942B-9A2A866A59D1}')
	coclass_clsid = IID('{0BECB76B-5F94-4718-942B-9A2A866A59D1}')

	def ClearAll(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	def EraseSet(self, entityTYPE=defaultNamedNotOptArg, nSetD=defaultNamedNotOptArg, bAddToSelection=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg
			, bRedraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),entityTYPE
			, nSetD, bAddToSelection, bClear, bRedraw)

	# Result is of type ISet
	def GetErased(self, entityTYPE=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20009, LCID, 1, (9, 0), ((3, 1),),entityTYPE
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetErased', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def Grow(self):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), (),)

	def HasErased(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def HasErasedType(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	def LoadGroup(self, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),groupID
			)

	def SaveGroup(self, groupID=defaultNamedNotOptArg, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (8, 1)),groupID
			, title)

	def Shrink(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def clear(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	_prop_map_get_ = {
		"AutoSelectMesh": (10002, 2, (11, 0), (), "AutoSelectMesh", None),
		"DrawModeSelectFromAll": (10006, 2, (11, 0), (), "DrawModeSelectFromAll", None),
		"Enable": (10000, 2, (11, 0), (), "Enable", None),
		"EraseGeometry": (10004, 2, (11, 0), (), "EraseGeometry", None),
		"EraseMesh": (10005, 2, (11, 0), (), "EraseMesh", None),
		"EraseMode": (10001, 2, (11, 0), (), "EraseMode", None),
		"ExclusiveDrawMode": (10003, 2, (11, 0), (), "ExclusiveDrawMode", None),
	}
	_prop_map_put_ = {
		"AutoSelectMesh" : ((10002, LCID, 4, 0),()),
		"DrawModeSelectFromAll" : ((10006, LCID, 4, 0),()),
		"Enable" : ((10000, LCID, 4, 0),()),
		"EraseGeometry" : ((10004, LCID, 4, 0),()),
		"EraseMesh" : ((10005, LCID, 4, 0),()),
		"EraseMode" : ((10001, LCID, 4, 0),()),
		"ExclusiveDrawMode" : ((10003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IElem(DispatchBaseClass):
	CLSID = IID('{1E6C26FE-F16A-11D4-9450-001083FFF11C}')
	coclass_clsid = IID('{1E6C2700-F16A-11D4-9450-001083FFF11C}')

	def Area(self, dAreaA=pythoncom.Missing, dAreaB=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((16389, 2), (16389, 2)), 'Area', None,dAreaA
			, dAreaB)

	def ClearNodeList(self, listINDEX=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1),),listINDEX
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def ElementHasThickness(self):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), (),)

	def ElementalCSys(self, bCreateCSys=defaultNamedNotOptArg, nCSysType=defaultNamedNotOptArg, bUsePlateMatlDirection=defaultNamedNotOptArg, nCSysID=pythoncom.Missing
			, vOrigin=pythoncom.Missing, vRotation=pythoncom.Missing):
		return self._ApplyTypes_(20041, 1, (3, 0), ((11, 1), (3, 1), (11, 1), (16387, 2), (16396, 2), (16396, 2)), 'ElementalCSys', None,bCreateCSys
			, nCSysType, bUsePlateMatlDirection, nCSysID, vOrigin, vRotation
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetAllArray(self, SetID=defaultNamedNotOptArg, numElem=pythoncom.Missing, entID=pythoncom.Missing, propID=pythoncom.Missing
			, elemTYPE=pythoncom.Missing, topology=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing, formulation=pythoncom.Missing
			, orient=pythoncom.Missing, offset=pythoncom.Missing, release=pythoncom.Missing, orientSET=pythoncom.Missing, orientID=pythoncom.Missing
			, Nodes=pythoncom.Missing, connectTYPE=pythoncom.Missing, connectSEG=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,SetID
			, numElem, entID, propID, elemTYPE, topology
			, layer, color, formulation, orient, offset
			, release, orientSET, orientID, Nodes, connectTYPE
			, connectSEG)

	def GetAllArray2(self, SetID=defaultNamedNotOptArg, numElem=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, propID=pythoncom.Missing, elemTYPE=pythoncom.Missing, topology=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing
			, formulation=pythoncom.Missing, orient=pythoncom.Missing, offset=pythoncom.Missing, release=pythoncom.Missing, orientSET=pythoncom.Missing
			, orientID=pythoncom.Missing, Nodes=pythoncom.Missing, connectTYPE=pythoncom.Missing, connectSEG=pythoncom.Missing):
		return self._ApplyTypes_(20022, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray2', None,SetID
			, numElem, entID, Exist, propID, elemTYPE
			, topology, layer, color, formulation, orient
			, offset, release, orientSET, orientID, Nodes
			, connectTYPE, connectSEG)

	def GetAllArray3(self, SetID=defaultNamedNotOptArg, numElem=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, propID=pythoncom.Missing, elemTYPE=pythoncom.Missing, topology=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing
			, formulation=pythoncom.Missing, orient=pythoncom.Missing, offset=pythoncom.Missing, release=pythoncom.Missing, orientSET=pythoncom.Missing
			, orientID=pythoncom.Missing, Nodes=pythoncom.Missing, connectTYPE=pythoncom.Missing, connectSEG=pythoncom.Missing, MaterialOrientType=pythoncom.Missing
			, MaterialCSys=pythoncom.Missing, warpingID=pythoncom.Missing, SpringLocation=pythoncom.Missing):
		return self._ApplyTypes_(20027, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray3', None,SetID
			, numElem, entID, Exist, propID, elemTYPE
			, topology, layer, color, formulation, orient
			, offset, release, orientSET, orientID, Nodes
			, connectTYPE, connectSEG, MaterialOrientType, MaterialCSys, warpingID
			, SpringLocation)

	def GetAnsysFormulationArray(self, SetID=defaultNamedNotOptArg, numElem=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, formulation=pythoncom.Missing):
		return self._ApplyTypes_(20031, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAnsysFormulationArray', None,SetID
			, numElem, entID, Exist, formulation)

	def GetAnsysKeyoptArray(self, SetID=defaultNamedNotOptArg, numElem=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, keyopt=pythoncom.Missing):
		return self._ApplyTypes_(20035, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAnsysKeyoptArray', None,SetID
			, numElem, entID, Exist, keyopt)

	def GetCentroid(self, cgXYZ=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((16396, 2),), 'GetCentroid', None,cgXYZ
			)

	def GetCentroidArray(self, SetID=defaultNamedNotOptArg, numElem=pythoncom.Missing, entID=pythoncom.Missing, vCG=pythoncom.Missing):
		return self._ApplyTypes_(20038, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetCentroidArray', None,SetID
			, numElem, entID, vCG)

	def GetEdgeNodes(self, nEdge=defaultNamedNotOptArg, n1=pythoncom.Missing, n2=pythoncom.Missing, nmid=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2), (16387, 2)), 'GetEdgeNodes', None,nEdge
			, n1, n2, nmid)

	def GetFaceArea(self, nFace=defaultNamedNotOptArg, dArea=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((3, 1), (16389, 2)), 'GetFaceArea', None,nFace
			, dArea)

	def GetFaceCentroid(self, nFace=defaultNamedNotOptArg, cgXYZ=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((3, 1), (16396, 2)), 'GetFaceCentroid', None,nFace
			, cgXYZ)

	def GetFaceNodes(self, nFace=defaultNamedNotOptArg, Nodes=pythoncom.Missing):
		return self._ApplyTypes_(20014, 1, (3, 0), ((3, 1), (16396, 2)), 'GetFaceNodes', None,nFace
			, Nodes)

	def GetFaceNodes2(self, bCornerPressureOrder=defaultNamedNotOptArg, nFace=defaultNamedNotOptArg, Nodes=pythoncom.Missing):
		return self._ApplyTypes_(20028, 1, (3, 0), ((11, 1), (3, 1), (16396, 2)), 'GetFaceNodes2', None,bCornerPressureOrder
			, nFace, Nodes)

	def GetFaceNormal(self, nFace=defaultNamedNotOptArg, normalXYZ=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((3, 1), (16396, 2)), 'GetFaceNormal', None,nFace
			, normalXYZ)

	def GetGeomPropArray(self, SetID=defaultNamedNotOptArg, numElem=pythoncom.Missing, entID=pythoncom.Missing, propID=pythoncom.Missing
			, matlID=pythoncom.Missing, elemTYPE=pythoncom.Missing, topology=pythoncom.Missing, vCG=pythoncom.Missing, Length=pythoncom.Missing
			, Area=pythoncom.Missing, volume=pythoncom.Missing):
		return self._ApplyTypes_(20029, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetGeomPropArray', None,SetID
			, numElem, entID, propID, matlID, elemTYPE
			, topology, vCG, Length, Area, volume
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetMatlOrientVec(self, vMatOrientVec=pythoncom.Missing):
		return self._ApplyTypes_(20037, 1, (3, 0), ((16396, 2),), 'GetMatlOrientVec', None,vMatOrientVec
			)

	def GetMinMaxEdgeLength(self, dMinLen=pythoncom.Missing, dMaxLen=pythoncom.Missing):
		return self._ApplyTypes_(20020, 1, (3, 0), ((16389, 2), (16389, 2)), 'GetMinMaxEdgeLength', None,dMinLen
			, dMaxLen)

	def GetMultiFaceInfoArray(self, nNumFaces=defaultNamedNotOptArg, nElemIDs=defaultNamedNotOptArg, nFaceIDs=defaultNamedNotOptArg, faceOK=pythoncom.Missing
			, cgXYZ=pythoncom.Missing, normalXYZ=pythoncom.Missing, dArea=pythoncom.Missing):
		return self._ApplyTypes_(20040, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetMultiFaceInfoArray', None,nNumFaces
			, nElemIDs, nFaceIDs, faceOK, cgXYZ, normalXYZ
			, dArea)

	def GetNodeList(self, listINDEX=defaultNamedNotOptArg, nodecount=pythoncom.Missing, Node=pythoncom.Missing, face=pythoncom.Missing
			, weight=pythoncom.Missing, dof=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetNodeList', None,listINDEX
			, nodecount, Node, face, weight, dof
			)

	def GetSingleFaceInfoArray(self, SetID=defaultNamedNotOptArg, nFace=defaultNamedNotOptArg, numElem=pythoncom.Missing, entID=pythoncom.Missing
			, cgXYZ=pythoncom.Missing, normalXYZ=pythoncom.Missing, dArea=pythoncom.Missing):
		return self._ApplyTypes_(20039, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetSingleFaceInfoArray', None,SetID
			, nFace, numElem, entID, cgXYZ, normalXYZ
			, dArea)

	def GetSpringOffset(self, enOffset=pythoncom.Missing, dVec1=pythoncom.Missing, dVec2=pythoncom.Missing, dVec3=pythoncom.Missing):
		return self._ApplyTypes_(20025, 1, (3, 0), ((16387, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetSpringOffset', None,enOffset
			, dVec1, dVec2, dVec3)

	def GetSpringOrient(self, enOrient=pythoncom.Missing, nOrient=pythoncom.Missing, dVec1=pythoncom.Missing, dVec2=pythoncom.Missing
			, dVec3=pythoncom.Missing):
		return self._ApplyTypes_(20023, 1, (3, 0), ((16387, 2), (16387, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetSpringOrient', None,enOrient
			, nOrient, dVec1, dVec2, dVec3)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def HasMatl(self):
		return self._oleobj_.InvokeTypes(20034, LCID, 1, (3, 0), (),)

	def HasProp(self):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), (),)

	def Inertia(self, dI1A=pythoncom.Missing, dI2A=pythoncom.Missing, dI12A=pythoncom.Missing, dJA=pythoncom.Missing
			, dI1B=pythoncom.Missing, dI2B=pythoncom.Missing, dI12B=pythoncom.Missing, dJB=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'Inertia', None,dI1A
			, dI2A, dI12A, dJA, dI1B, dI2B
			, dI12B, dJB)

	def IsParabolic(self):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Length(self, dLength=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((16389, 2),), 'Length', None,dLength
			)

	# Result is of type IMatl
	def Matl(self):
		ret = self._oleobj_.InvokeTypes(20007, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Matl', '{0AD6E2E8-EE3E-11D4-944C-001083FFF11C}')
		return ret

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	# The method Node is actually a property, but must be used as a method to correctly pass the arguments
	def Node(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	# Result is of type IProp
	def Prop(self):
		ret = self._oleobj_.InvokeTypes(20006, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Prop', '{7110873A-F096-11D4-944F-001083FFF11C}')
		return ret

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, numElem=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, elemTYPE=defaultNamedNotOptArg
			, topology=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg, formulation=defaultNamedNotOptArg, orient=defaultNamedNotOptArg
			, offset=defaultNamedNotOptArg, release=defaultNamedNotOptArg, orientSET=defaultNamedNotOptArg, orientID=defaultNamedNotOptArg, Nodes=defaultNamedNotOptArg
			, connectTYPE=defaultNamedNotOptArg, connectSEG=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),numElem
			, entID, propID, elemTYPE, topology, layer
			, color, formulation, orient, offset, release
			, orientSET, orientID, Nodes, connectTYPE, connectSEG
			)

	def PutAnsysFormulationArray(self, numElem=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, formulation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),numElem
			, entID, formulation)

	def PutAnsysKeyoptArray(self, numElem=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, keyopt=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),numElem
			, entID, keyopt)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutNodeList(self, listINDEX=defaultNamedNotOptArg, nodecount=defaultNamedNotOptArg, Node=defaultNamedNotOptArg, face=defaultNamedNotOptArg
			, weight=defaultNamedNotOptArg, dof=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),listINDEX
			, nodecount, Node, face, weight, dof
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetNode is actually a property, but must be used as a method to correctly pass the arguments
	def SetNode(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def SetPlateThickness(self, dAtC1=defaultNamedNotOptArg, dAtC2=defaultNamedNotOptArg, dAtC3=defaultNamedNotOptArg, dAtC4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),dAtC1
			, dAtC2, dAtC3, dAtC4)

	def SetSpringOffset(self, enOffset=defaultNamedNotOptArg, dVec1=defaultNamedNotOptArg, dVec2=defaultNamedNotOptArg, dVec3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),enOffset
			, dVec1, dVec2, dVec3)

	def SetSpringOrient(self, enOrient=defaultNamedNotOptArg, nOrient=defaultNamedNotOptArg, dVec1=defaultNamedNotOptArg, dVec2=defaultNamedNotOptArg
			, dVec3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (5, 1)),enOrient
			, nOrient, dVec1, dVec2, dVec3)

	# The method SetWarping is actually a property, but must be used as a method to correctly pass the arguments
	def SetWarping(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetconnectSEG is actually a property, but must be used as a method to correctly pass the arguments
	def SetconnectSEG(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetconnectTYPE is actually a property, but must be used as a method to correctly pass the arguments
	def SetconnectTYPE(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setformulation is actually a property, but must be used as a method to correctly pass the arguments
	def Setformulation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setoffset is actually a property, but must be used as a method to correctly pass the arguments
	def Setoffset(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method Setorient is actually a property, but must be used as a method to correctly pass the arguments
	def Setorient(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setrelease is actually a property, but must be used as a method to correctly pass the arguments
	def Setrelease(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (3, 1), (11, 1)),nRowIndex
			, nColIndex, arg2)

	# The method Warping is actually a property, but must be used as a method to correctly pass the arguments
	def Warping(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method connectSEG is actually a property, but must be used as a method to correctly pass the arguments
	def connectSEG(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method connectTYPE is actually a property, but must be used as a method to correctly pass the arguments
	def connectTYPE(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method formulation is actually a property, but must be used as a method to correctly pass the arguments
	def formulation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method offset is actually a property, but must be used as a method to correctly pass the arguments
	def offset(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method orient is actually a property, but must be used as a method to correctly pass the arguments
	def orient(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method release is actually a property, but must be used as a method to correctly pass the arguments
	def release(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (11, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	def thickness(self, dAvg=pythoncom.Missing, dAtC1=pythoncom.Missing, dAtC2=pythoncom.Missing, dAtC3=pythoncom.Missing
			, dAtC4=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'thickness', None,dAvg
			, dAtC1, dAtC2, dAtC3, dAtC4)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"MaterialAngle": (10016, 2, (5, 0), (), "MaterialAngle", None),
		"MaterialAngleFlag": (10006, 2, (11, 0), (), "MaterialAngleFlag", None),
		"MaterialCSys": (10029, 2, (3, 0), (), "MaterialCSys", None),
		"MaterialOrientType": (10028, 2, (3, 0), (), "MaterialOrientType", None),
		"Nodes": (10017, 2, (12, 0), (), "Nodes", None),
		"PlateOffset": (10015, 2, (5, 0), (), "PlateOffset", None),
		"RigidInterpolate": (10014, 2, (11, 0), (), "RigidInterpolate", None),
		"RigidInterpolationFactor": (10027, 2, (5, 0), (), "RigidInterpolationFactor", None),
		"RigidThermalExpansion": (10026, 2, (5, 0), (), "RigidThermalExpansion", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"SpringCID": (10035, 2, (3, 0), (), "SpringCID", None),
		"SpringLocation": (10031, 2, (5, 0), (), "SpringLocation", None),
		"SpringNoOrient": (10034, 2, (11, 0), (), "SpringNoOrient", None),
		"SpringUseCID": (10033, 2, (11, 0), (), "SpringUseCID", None),
		"SpringUseLocation": (10030, 2, (11, 0), (), "SpringUseLocation", None),
		"SpringUsePropCID": (10036, 2, (11, 0), (), "SpringUsePropCID", None),
		"SpringUsePropLocation": (10032, 2, (11, 0), (), "SpringUsePropLocation", None),
		"color": (10000, 2, (3, 0), (), "color", None),
		"geomID": (10007, 2, (3, 0), (), "geomID", None),
		"layer": (10004, 2, (3, 0), (), "layer", None),
		"orientID": (10005, 2, (3, 0), (), "orientID", None),
		"propID": (10001, 2, (3, 0), (), "propID", None),
		"topology": (10003, 2, (3, 0), (), "topology", None),
		"type": (10002, 2, (3, 0), (), "type", None),
		"vconnectSEG": (10025, 2, (12, 0), (), "vconnectSEG", None),
		"vconnectTYPE": (10024, 2, (12, 0), (), "vconnectTYPE", None),
		"vformulation": (10018, 2, (12, 0), (), "vformulation", None),
		"vkeyopt": (10038, 2, (12, 0), (), "vkeyopt", None),
		"vnode": (10020, 2, (12, 0), (), "vnode", None),
		"voffset": (10022, 2, (12, 0), (), "voffset", None),
		"vorient": (10021, 2, (12, 0), (), "vorient", None),
		"vrelease": (10023, 2, (12, 0), (), "vrelease", None),
		"vwarping": (10037, 2, (12, 0), (), "vwarping", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"MaterialAngle" : ((10016, LCID, 4, 0),()),
		"MaterialAngleFlag" : ((10006, LCID, 4, 0),()),
		"MaterialCSys" : ((10029, LCID, 4, 0),()),
		"MaterialOrientType" : ((10028, LCID, 4, 0),()),
		"Nodes" : ((10017, LCID, 4, 0),()),
		"PlateOffset" : ((10015, LCID, 4, 0),()),
		"RigidInterpolate" : ((10014, LCID, 4, 0),()),
		"RigidInterpolationFactor" : ((10027, LCID, 4, 0),()),
		"RigidThermalExpansion" : ((10026, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"SpringCID" : ((10035, LCID, 4, 0),()),
		"SpringLocation" : ((10031, LCID, 4, 0),()),
		"SpringNoOrient" : ((10034, LCID, 4, 0),()),
		"SpringUseCID" : ((10033, LCID, 4, 0),()),
		"SpringUseLocation" : ((10030, LCID, 4, 0),()),
		"SpringUsePropCID" : ((10036, LCID, 4, 0),()),
		"SpringUsePropLocation" : ((10032, LCID, 4, 0),()),
		"color" : ((10000, LCID, 4, 0),()),
		"geomID" : ((10007, LCID, 4, 0),()),
		"layer" : ((10004, LCID, 4, 0),()),
		"orientID" : ((10005, LCID, 4, 0),()),
		"propID" : ((10001, LCID, 4, 0),()),
		"topology" : ((10003, LCID, 4, 0),()),
		"type" : ((10002, LCID, 4, 0),()),
		"vconnectSEG" : ((10025, LCID, 4, 0),()),
		"vconnectTYPE" : ((10024, LCID, 4, 0),()),
		"vformulation" : ((10018, LCID, 4, 0),()),
		"vkeyopt" : ((10038, LCID, 4, 0),()),
		"vnode" : ((10020, LCID, 4, 0),()),
		"voffset" : ((10022, LCID, 4, 0),()),
		"vorient" : ((10021, LCID, 4, 0),()),
		"vrelease" : ((10023, LCID, 4, 0),()),
		"vwarping" : ((10037, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IElemAddRemove(DispatchBaseClass):
	CLSID = IID('{65FADBB7-C7F0-4587-92DD-309E47A66F37}')
	coclass_clsid = IID('{65FADBB9-C7F0-4587-92DD-309E47A66F37}')

	def ClearComponentSet(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetCombinationSet(self, pCombinationSet=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((16393, 2),), 'GetCombinationSet', None,pCombinationSet
			)

	def GetCombinations(self, listcount=pythoncom.Missing, ELAREntityIDs=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetCombinations', None,listcount
			, ELAREntityIDs)

	def GetComponentSet(self, pSelectedComponentSet=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16393, 2),), 'GetComponentSet', None,pSelectedComponentSet
			)

	def GetELAR2Entry(self, nElementID=defaultNamedNotOptArg, type=pythoncom.Missing, HasAC=pythoncom.Missing, AC=pythoncom.Missing
			, ADOpt=pythoncom.Missing, AD=pythoncom.Missing, HasRC=pythoncom.Missing, RC=pythoncom.Missing, RDOpt=pythoncom.Missing
			, RD=pythoncom.Missing, IsSTNFREE=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((3, 1), (16387, 2), (16395, 2), (16388, 2), (16387, 2), (16388, 2), (16395, 2), (16388, 2), (16387, 2), (16388, 2), (16395, 2)), 'GetELAR2Entry', None,nElementID
			, type, HasAC, AC, ADOpt, AD
			, HasRC, RC, RDOpt, RD, IsSTNFREE
			)

	def GetELAR2List(self, listcount=pythoncom.Missing, nElementID=pythoncom.Missing, type=pythoncom.Missing, HasAC=pythoncom.Missing
			, AC=pythoncom.Missing, ADOpt=pythoncom.Missing, AD=pythoncom.Missing, HasRC=pythoncom.Missing, RC=pythoncom.Missing
			, RDOpt=pythoncom.Missing, RD=pythoncom.Missing, IsSTNFREE=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetELAR2List', None,listcount
			, nElementID, type, HasAC, AC, ADOpt
			, AD, HasRC, RC, RDOpt, RD
			, IsSTNFREE)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutCombination(self, nELARCombinationID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1),),nELARCombinationID
			)

	def PutCombinations(self, listcount=defaultNamedNotOptArg, ELAR2EntityIDs=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (12, 1)),listcount
			, ELAR2EntityIDs)

	def PutComponentSet(self, pSelectedComponentSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((16393, 1),),pSelectedComponentSet
			)

	def PutELAR2Entry(self, nElementID=defaultNamedNotOptArg, type=defaultNamedNotOptArg, HasAC=defaultNamedNotOptArg, AC=defaultNamedNotOptArg
			, ADOpt=defaultNamedNotOptArg, AD=defaultNamedNotOptArg, HasRC=defaultNamedNotOptArg, RC=defaultNamedNotOptArg, RDOpt=defaultNamedNotOptArg
			, RD=defaultNamedNotOptArg, IsSTNFREE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (4, 1), (3, 1), (4, 1), (11, 1), (4, 1), (3, 1), (4, 1), (11, 1)),nElementID
			, type, HasAC, AC, ADOpt, AD
			, HasRC, RC, RDOpt, RD, IsSTNFREE
			)

	def PutELAR2List(self, listcount=defaultNamedNotOptArg, nElementID=defaultNamedNotOptArg, type=defaultNamedNotOptArg, HasAC=defaultNamedNotOptArg
			, AC=defaultNamedNotOptArg, ADOpt=defaultNamedNotOptArg, AD=defaultNamedNotOptArg, HasRC=defaultNamedNotOptArg, RC=defaultNamedNotOptArg
			, RDOpt=defaultNamedNotOptArg, RD=defaultNamedNotOptArg, IsSTNFREE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),listcount
			, nElementID, type, HasAC, AC, ADOpt
			, AD, HasRC, RC, RDOpt, RD
			, IsSTNFREE)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AltType": (10004, 2, (3, 0), (), "AltType", None),
		"HasElemList": (10016, 2, (11, 0), (), "HasElemList", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"NasAC": (10008, 2, (5, 0), (), "NasAC", None),
		"NasAD": (10010, 2, (5, 0), (), "NasAD", None),
		"NasADOpt": (10009, 2, (3, 0), (), "NasADOpt", None),
		"NasGRPID": (10006, 2, (3, 0), (), "NasGRPID", None),
		"NasHasAC": (10007, 2, (11, 0), (), "NasHasAC", None),
		"NasHasRC": (10011, 2, (11, 0), (), "NasHasRC", None),
		"NasRC": (10012, 2, (5, 0), (), "NasRC", None),
		"NasRD": (10014, 2, (5, 0), (), "NasRD", None),
		"NasRDOpt": (10013, 2, (3, 0), (), "NasRDOpt", None),
		"NasSTNFREE": (10015, 2, (11, 0), (), "NasSTNFREE", None),
		"NasTYPE": (10005, 2, (3, 0), (), "NasTYPE", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"elemSetID": (10017, 2, (3, 0), (), "elemSetID", None),
		"title": (10003, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AltType" : ((10004, LCID, 4, 0),()),
		"HasElemList" : ((10016, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"NasAC" : ((10008, LCID, 4, 0),()),
		"NasAD" : ((10010, LCID, 4, 0),()),
		"NasADOpt" : ((10009, LCID, 4, 0),()),
		"NasGRPID" : ((10006, LCID, 4, 0),()),
		"NasHasAC" : ((10007, LCID, 4, 0),()),
		"NasHasRC" : ((10011, LCID, 4, 0),()),
		"NasRC" : ((10012, LCID, 4, 0),()),
		"NasRD" : ((10014, LCID, 4, 0),()),
		"NasRDOpt" : ((10013, LCID, 4, 0),()),
		"NasSTNFREE" : ((10015, LCID, 4, 0),()),
		"NasTYPE" : ((10005, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"elemSetID" : ((10017, LCID, 4, 0),()),
		"title" : ((10003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IElementQuality(DispatchBaseClass):
	CLSID = IID('{DED875D4-7D90-445B-89C7-17D709DB45F9}')
	coclass_clsid = IID('{DED875D6-7D90-445B-89C7-17D709DB45F9}')

	# Result is of type ISortSet
	def AlternateTaper(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20006, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'AlternateTaper', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def AspectRatio(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20002, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'AspectRatio', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISet
	def CheckNastranQuality(self, nElemSet=defaultNamedNotOptArg, bList=defaultNamedNotOptArg, bGroup=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20077, LCID, 1, (9, 0), ((3, 1), (11, 1), (11, 1)),nElemSet
			, bList, bGroup)
		if ret is not None:
			ret = Dispatch(ret, 'CheckNastranQuality', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	# Result is of type ISet
	def CheckQuality(self, nElemSet=defaultNamedNotOptArg, bList=defaultNamedNotOptArg, bGroup=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20030, LCID, 1, (9, 0), ((3, 1), (11, 1), (11, 1)),nElemSet
			, bList, bGroup)
		if ret is not None:
			ret = Dispatch(ret, 'CheckQuality', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	# Result is of type ISortSet
	def Combined(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20020, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'Combined', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def ExplicitTimeStep(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20022, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'ExplicitTimeStep', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	def GetAlternateTaper(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((3, 1), (16389, 2)), 'GetAlternateTaper', None,nElemID
			, pdValue)

	def GetAspectRatio(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((3, 1), (16389, 2)), 'GetAspectRatio', None,nElemID
			, pdValue)

	def GetCombined(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((3, 1), (16389, 2)), 'GetCombined', None,nElemID
			, pdValue)

	def GetExplicitTimeStep(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20021, 1, (3, 0), ((3, 1), (16389, 2)), 'GetExplicitTimeStep', None,nElemID
			, pdValue)

	def GetInternalAngle(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((3, 1), (16389, 2)), 'GetInternalAngle', None,nElemID
			, pdValue)

	def GetJacobian(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((3, 1), (16389, 2)), 'GetJacobian', None,nElemID
			, pdValue)

	def GetModelDefaults(self):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), (),)

	def GetNastranHexAR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20053, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranHexAR', None,nElemID
			, pdValue)

	def GetNastranHexDetJ(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20057, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranHexDetJ', None,nElemID
			, pdValue)

	def GetNastranHexEPIA(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20086, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranHexEPIA', None,nElemID
			, pdValue)

	def GetNastranHexEPLR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20055, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranHexEPLR', None,nElemID
			, pdValue)

	def GetNastranHexWarp(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20059, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranHexWarp', None,nElemID
			, pdValue)

	def GetNastranPenAR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20061, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPenAR', None,nElemID
			, pdValue)

	def GetNastranPenDetJ(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20065, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPenDetJ', None,nElemID
			, pdValue)

	def GetNastranPenEPIA(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20088, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPenEPIA', None,nElemID
			, pdValue)

	def GetNastranPenEPLR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20063, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPenEPLR', None,nElemID
			, pdValue)

	def GetNastranPenWarp(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20067, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPenWarp', None,nElemID
			, pdValue)

	def GetNastranPyrAR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20069, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPyrAR', None,nElemID
			, pdValue)

	def GetNastranPyrDetJ(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20075, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPyrDetJ', None,nElemID
			, pdValue)

	def GetNastranPyrEPIA(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20090, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPyrEPIA', None,nElemID
			, pdValue)

	def GetNastranPyrEPLR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20071, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPyrEPLR', None,nElemID
			, pdValue)

	def GetNastranPyrWarp(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20073, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranPyrWarp', None,nElemID
			, pdValue)

	def GetNastranQuadAR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20078, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranQuadAR', None,nElemID
			, pdValue)

	def GetNastranQuadIAMax(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20041, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranQuadIAMax', None,nElemID
			, pdValue)

	def GetNastranQuadIAMin(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20039, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranQuadIAMin', None,nElemID
			, pdValue)

	def GetNastranQuadSkew(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20033, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranQuadSkew', None,nElemID
			, pdValue)

	def GetNastranQuadTaper(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20035, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranQuadTaper', None,nElemID
			, pdValue)

	def GetNastranQuadWarp(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20037, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranQuadWarp', None,nElemID
			, pdValue)

	def GetNastranTetraAR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20047, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranTetraAR', None,nElemID
			, pdValue)

	def GetNastranTetraDetJ(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20051, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranTetraDetJ', None,nElemID
			, pdValue)

	def GetNastranTetraEPIA(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20084, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranTetraEPIA', None,nElemID
			, pdValue)

	def GetNastranTetraEPLR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20049, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranTetraEPLR', None,nElemID
			, pdValue)

	def GetNastranTriaAR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20080, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranTriaAR', None,nElemID
			, pdValue)

	def GetNastranTriaEPLR(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20082, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranTriaEPLR', None,nElemID
			, pdValue)

	def GetNastranTriaIAMax(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20045, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranTriaIAMax', None,nElemID
			, pdValue)

	def GetNastranTriaSkew(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20043, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranTriaSkew', None,nElemID
			, pdValue)

	def GetNastranWarping(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((3, 1), (16389, 2)), 'GetNastranWarping', None,nElemID
			, pdValue)

	def GetSkew(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((3, 1), (16389, 2)), 'GetSkew', None,nElemID
			, pdValue)

	def GetTaper(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((3, 1), (16389, 2)), 'GetTaper', None,nElemID
			, pdValue)

	def GetTetCollapse(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((3, 1), (16389, 2)), 'GetTetCollapse', None,nElemID
			, pdValue)

	def GetWarping(self, nElemID=defaultNamedNotOptArg, pdValue=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((3, 1), (16389, 2)), 'GetWarping', None,nElemID
			, pdValue)

	# Result is of type ISortSet
	def InternalAngle(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20008, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'InternalAngle', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def Jacobian(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20018, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'Jacobian', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranHexAR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20054, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranHexAR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranHexDetJ(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20058, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranHexDetJ', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranHexEPIA(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20087, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranHexEPIA', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranHexEPLR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20056, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranHexEPLR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranHexWarp(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20060, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranHexWarp', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPenAR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20062, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPenAR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPenDetJ(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20066, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPenDetJ', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPenEPIA(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20089, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPenEPIA', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPenEPLR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20064, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPenEPLR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPenWarp(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20068, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPenWarp', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPyrAR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20070, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPyrAR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPyrDetJ(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20076, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPyrDetJ', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPyrEPIA(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20091, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPyrEPIA', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPyrEPLR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20072, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPyrEPLR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranPyrWarp(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20074, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranPyrWarp', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranQuadAR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20079, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranQuadAR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranQuadIAMax(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20042, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranQuadIAMax', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranQuadIAMin(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20040, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranQuadIAMin', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranQuadSkew(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20034, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranQuadSkew', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranQuadTaper(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20036, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranQuadTaper', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranQuadWarp(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20038, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranQuadWarp', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranTetraAR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20048, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranTetraAR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranTetraDetJ(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20052, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranTetraDetJ', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranTetraEPIA(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20085, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranTetraEPIA', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranTetraEPLR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20050, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranTetraEPLR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranTriaAR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20081, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranTriaAR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranTriaEPLR(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20083, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranTriaEPLR', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranTriaIAMax(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20046, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranTriaIAMax', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranTriaSkew(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20044, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranTriaSkew', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def NastranWarping(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20014, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'NastranWarping', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	def SetModelDefaults(self):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), (),)

	# Result is of type ISortSet
	def Skew(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20010, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'Skew', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def Taper(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20004, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'Taper', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def TetCollapse(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20016, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'TetCollapse', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	# Result is of type ISortSet
	def Warping(self, nElemSet=defaultNamedNotOptArg, dLimitVal=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20012, LCID, 1, (9, 0), ((3, 1), (5, 1)),nElemSet
			, dLimitVal)
		if ret is not None:
			ret = Dispatch(ret, 'Warping', '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
		return ret

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"AlternateTaperLimit": (10022, 2, (5, 0), (), "AlternateTaperLimit", None),
		"AlternateTaperOn": (10002, 2, (11, 0), (), "AlternateTaperOn", None),
		"AspectRatioLimit": (10020, 2, (5, 0), (), "AspectRatioLimit", None),
		"AspectRatioOn": (10000, 2, (11, 0), (), "AspectRatioOn", None),
		"CombinedLimit": (10029, 2, (5, 0), (), "CombinedLimit", None),
		"CombinedOn": (10009, 2, (11, 0), (), "CombinedOn", None),
		"ExplicitTimeStepLimit": (10030, 2, (5, 0), (), "ExplicitTimeStepLimit", None),
		"ExplicitTimeStepOn": (10010, 2, (11, 0), (), "ExplicitTimeStepOn", None),
		"InternalAngleLimit": (10023, 2, (5, 0), (), "InternalAngleLimit", None),
		"InternalAngleOn": (10003, 2, (11, 0), (), "InternalAngleOn", None),
		"JacobianLimit": (10028, 2, (5, 0), (), "JacobianLimit", None),
		"JacobianOn": (10008, 2, (11, 0), (), "JacobianOn", None),
		"NastranHexARLimit": (10052, 2, (5, 0), (), "NastranHexARLimit", None),
		"NastranHexAROn": (10051, 2, (11, 0), (), "NastranHexAROn", None),
		"NastranHexDetJLimit": (10056, 2, (5, 0), (), "NastranHexDetJLimit", None),
		"NastranHexDetJOn": (10055, 2, (11, 0), (), "NastranHexDetJOn", None),
		"NastranHexEPIALimit": (10084, 2, (5, 0), (), "NastranHexEPIALimit", None),
		"NastranHexEPIAOn": (10083, 2, (11, 0), (), "NastranHexEPIAOn", None),
		"NastranHexEPLRLimit": (10054, 2, (5, 0), (), "NastranHexEPLRLimit", None),
		"NastranHexEPLROn": (10053, 2, (11, 0), (), "NastranHexEPLROn", None),
		"NastranHexWarpLimit": (10058, 2, (5, 0), (), "NastranHexWarpLimit", None),
		"NastranHexWarpOn": (10057, 2, (11, 0), (), "NastranHexWarpOn", None),
		"NastranPenARLimit": (10060, 2, (5, 0), (), "NastranPenARLimit", None),
		"NastranPenAROn": (10059, 2, (11, 0), (), "NastranPenAROn", None),
		"NastranPenDetJLimit": (10064, 2, (5, 0), (), "NastranPenDetJLimit", None),
		"NastranPenDetJOn": (10063, 2, (11, 0), (), "NastranPenDetJOn", None),
		"NastranPenEPIALimit": (10086, 2, (5, 0), (), "NastranPenEPIALimit", None),
		"NastranPenEPIAOn": (10085, 2, (11, 0), (), "NastranPenEPIAOn", None),
		"NastranPenEPLRLimit": (10062, 2, (5, 0), (), "NastranPenEPLRLimit", None),
		"NastranPenEPLROn": (10061, 2, (11, 0), (), "NastranPenEPLROn", None),
		"NastranPenWarpLimit": (10066, 2, (5, 0), (), "NastranPenWarpLimit", None),
		"NastranPenWarpOn": (10065, 2, (11, 0), (), "NastranPenWarpOn", None),
		"NastranPyrARLimit": (10068, 2, (5, 0), (), "NastranPyrARLimit", None),
		"NastranPyrAROn": (10067, 2, (11, 0), (), "NastranPyrAROn", None),
		"NastranPyrDetJLimit": (10072, 2, (5, 0), (), "NastranPyrDetJLimit", None),
		"NastranPyrDetJOn": (10071, 2, (11, 0), (), "NastranPyrDetJOn", None),
		"NastranPyrEPIALimit": (10088, 2, (5, 0), (), "NastranPyrEPIALimit", None),
		"NastranPyrEPIAOn": (10087, 2, (11, 0), (), "NastranPyrEPIAOn", None),
		"NastranPyrEPLRLimit": (10070, 2, (5, 0), (), "NastranPyrEPLRLimit", None),
		"NastranPyrEPLROn": (10069, 2, (11, 0), (), "NastranPyrEPLROn", None),
		"NastranPyrWarpLimit": (10074, 2, (5, 0), (), "NastranPyrWarpLimit", None),
		"NastranPyrWarpOn": (10073, 2, (11, 0), (), "NastranPyrWarpOn", None),
		"NastranQuadARLimit": (10076, 2, (5, 0), (), "NastranQuadARLimit", None),
		"NastranQuadAROn": (10075, 2, (11, 0), (), "NastranQuadAROn", None),
		"NastranQuadIAMaxLimit": (10040, 2, (5, 0), (), "NastranQuadIAMaxLimit", None),
		"NastranQuadIAMaxOn": (10039, 2, (11, 0), (), "NastranQuadIAMaxOn", None),
		"NastranQuadIAMinLimit": (10038, 2, (5, 0), (), "NastranQuadIAMinLimit", None),
		"NastranQuadIAMinOn": (10037, 2, (11, 0), (), "NastranQuadIAMinOn", None),
		"NastranQuadSkewLimit": (10032, 2, (5, 0), (), "NastranQuadSkewLimit", None),
		"NastranQuadSkewOn": (10031, 2, (11, 0), (), "NastranQuadSkewOn", None),
		"NastranQuadTaperLimit": (10034, 2, (5, 0), (), "NastranQuadTaperLimit", None),
		"NastranQuadTaperOn": (10033, 2, (11, 0), (), "NastranQuadTaperOn", None),
		"NastranQuadWarpLimit": (10036, 2, (5, 0), (), "NastranQuadWarpLimit", None),
		"NastranQuadWarpOn": (10035, 2, (11, 0), (), "NastranQuadWarpOn", None),
		"NastranTetraARLimit": (10046, 2, (5, 0), (), "NastranTetraARLimit", None),
		"NastranTetraAROn": (10045, 2, (11, 0), (), "NastranTetraAROn", None),
		"NastranTetraDetJLimit": (10050, 2, (5, 0), (), "NastranTetraDetJLimit", None),
		"NastranTetraDetJOn": (10049, 2, (11, 0), (), "NastranTetraDetJOn", None),
		"NastranTetraEPIALimit": (10082, 2, (5, 0), (), "NastranTetraEPIALimit", None),
		"NastranTetraEPIAOn": (10081, 2, (11, 0), (), "NastranTetraEPIAOn", None),
		"NastranTetraEPLRLimit": (10048, 2, (5, 0), (), "NastranTetraEPLRLimit", None),
		"NastranTetraEPLROn": (10047, 2, (11, 0), (), "NastranTetraEPLROn", None),
		"NastranTriaARLimit": (10078, 2, (5, 0), (), "NastranTriaARLimit", None),
		"NastranTriaAROn": (10077, 2, (11, 0), (), "NastranTriaAROn", None),
		"NastranTriaEPLRLimit": (10080, 2, (5, 0), (), "NastranTriaEPLRLimit", None),
		"NastranTriaEPLROn": (10079, 2, (11, 0), (), "NastranTriaEPLROn", None),
		"NastranTriaIAMaxLimit": (10044, 2, (5, 0), (), "NastranTriaIAMaxLimit", None),
		"NastranTriaIAMaxOn": (10043, 2, (11, 0), (), "NastranTriaIAMaxOn", None),
		"NastranTriaSkewLimit": (10042, 2, (5, 0), (), "NastranTriaSkewLimit", None),
		"NastranTriaSkewOn": (10041, 2, (11, 0), (), "NastranTriaSkewOn", None),
		"NastranWarpingLimit": (10026, 2, (5, 0), (), "NastranWarpingLimit", None),
		"NastranWarpingOn": (10006, 2, (11, 0), (), "NastranWarpingOn", None),
		"SkewLimit": (10024, 2, (5, 0), (), "SkewLimit", None),
		"SkewOn": (10004, 2, (11, 0), (), "SkewOn", None),
		"TaperLimit": (10021, 2, (5, 0), (), "TaperLimit", None),
		"TaperOn": (10001, 2, (11, 0), (), "TaperOn", None),
		"TetCollapseLimit": (10027, 2, (5, 0), (), "TetCollapseLimit", None),
		"TetCollapseOn": (10007, 2, (11, 0), (), "TetCollapseOn", None),
		"WarpingLimit": (10025, 2, (5, 0), (), "WarpingLimit", None),
		"WarpingOn": (10005, 2, (11, 0), (), "WarpingOn", None),
	}
	_prop_map_put_ = {
		"AlternateTaperLimit" : ((10022, LCID, 4, 0),()),
		"AlternateTaperOn" : ((10002, LCID, 4, 0),()),
		"AspectRatioLimit" : ((10020, LCID, 4, 0),()),
		"AspectRatioOn" : ((10000, LCID, 4, 0),()),
		"CombinedLimit" : ((10029, LCID, 4, 0),()),
		"CombinedOn" : ((10009, LCID, 4, 0),()),
		"ExplicitTimeStepLimit" : ((10030, LCID, 4, 0),()),
		"ExplicitTimeStepOn" : ((10010, LCID, 4, 0),()),
		"InternalAngleLimit" : ((10023, LCID, 4, 0),()),
		"InternalAngleOn" : ((10003, LCID, 4, 0),()),
		"JacobianLimit" : ((10028, LCID, 4, 0),()),
		"JacobianOn" : ((10008, LCID, 4, 0),()),
		"NastranHexARLimit" : ((10052, LCID, 4, 0),()),
		"NastranHexAROn" : ((10051, LCID, 4, 0),()),
		"NastranHexDetJLimit" : ((10056, LCID, 4, 0),()),
		"NastranHexDetJOn" : ((10055, LCID, 4, 0),()),
		"NastranHexEPIALimit" : ((10084, LCID, 4, 0),()),
		"NastranHexEPIAOn" : ((10083, LCID, 4, 0),()),
		"NastranHexEPLRLimit" : ((10054, LCID, 4, 0),()),
		"NastranHexEPLROn" : ((10053, LCID, 4, 0),()),
		"NastranHexWarpLimit" : ((10058, LCID, 4, 0),()),
		"NastranHexWarpOn" : ((10057, LCID, 4, 0),()),
		"NastranPenARLimit" : ((10060, LCID, 4, 0),()),
		"NastranPenAROn" : ((10059, LCID, 4, 0),()),
		"NastranPenDetJLimit" : ((10064, LCID, 4, 0),()),
		"NastranPenDetJOn" : ((10063, LCID, 4, 0),()),
		"NastranPenEPIALimit" : ((10086, LCID, 4, 0),()),
		"NastranPenEPIAOn" : ((10085, LCID, 4, 0),()),
		"NastranPenEPLRLimit" : ((10062, LCID, 4, 0),()),
		"NastranPenEPLROn" : ((10061, LCID, 4, 0),()),
		"NastranPenWarpLimit" : ((10066, LCID, 4, 0),()),
		"NastranPenWarpOn" : ((10065, LCID, 4, 0),()),
		"NastranPyrARLimit" : ((10068, LCID, 4, 0),()),
		"NastranPyrAROn" : ((10067, LCID, 4, 0),()),
		"NastranPyrDetJLimit" : ((10072, LCID, 4, 0),()),
		"NastranPyrDetJOn" : ((10071, LCID, 4, 0),()),
		"NastranPyrEPIALimit" : ((10088, LCID, 4, 0),()),
		"NastranPyrEPIAOn" : ((10087, LCID, 4, 0),()),
		"NastranPyrEPLRLimit" : ((10070, LCID, 4, 0),()),
		"NastranPyrEPLROn" : ((10069, LCID, 4, 0),()),
		"NastranPyrWarpLimit" : ((10074, LCID, 4, 0),()),
		"NastranPyrWarpOn" : ((10073, LCID, 4, 0),()),
		"NastranQuadARLimit" : ((10076, LCID, 4, 0),()),
		"NastranQuadAROn" : ((10075, LCID, 4, 0),()),
		"NastranQuadIAMaxLimit" : ((10040, LCID, 4, 0),()),
		"NastranQuadIAMaxOn" : ((10039, LCID, 4, 0),()),
		"NastranQuadIAMinLimit" : ((10038, LCID, 4, 0),()),
		"NastranQuadIAMinOn" : ((10037, LCID, 4, 0),()),
		"NastranQuadSkewLimit" : ((10032, LCID, 4, 0),()),
		"NastranQuadSkewOn" : ((10031, LCID, 4, 0),()),
		"NastranQuadTaperLimit" : ((10034, LCID, 4, 0),()),
		"NastranQuadTaperOn" : ((10033, LCID, 4, 0),()),
		"NastranQuadWarpLimit" : ((10036, LCID, 4, 0),()),
		"NastranQuadWarpOn" : ((10035, LCID, 4, 0),()),
		"NastranTetraARLimit" : ((10046, LCID, 4, 0),()),
		"NastranTetraAROn" : ((10045, LCID, 4, 0),()),
		"NastranTetraDetJLimit" : ((10050, LCID, 4, 0),()),
		"NastranTetraDetJOn" : ((10049, LCID, 4, 0),()),
		"NastranTetraEPIALimit" : ((10082, LCID, 4, 0),()),
		"NastranTetraEPIAOn" : ((10081, LCID, 4, 0),()),
		"NastranTetraEPLRLimit" : ((10048, LCID, 4, 0),()),
		"NastranTetraEPLROn" : ((10047, LCID, 4, 0),()),
		"NastranTriaARLimit" : ((10078, LCID, 4, 0),()),
		"NastranTriaAROn" : ((10077, LCID, 4, 0),()),
		"NastranTriaEPLRLimit" : ((10080, LCID, 4, 0),()),
		"NastranTriaEPLROn" : ((10079, LCID, 4, 0),()),
		"NastranTriaIAMaxLimit" : ((10044, LCID, 4, 0),()),
		"NastranTriaIAMaxOn" : ((10043, LCID, 4, 0),()),
		"NastranTriaSkewLimit" : ((10042, LCID, 4, 0),()),
		"NastranTriaSkewOn" : ((10041, LCID, 4, 0),()),
		"NastranWarpingLimit" : ((10026, LCID, 4, 0),()),
		"NastranWarpingOn" : ((10006, LCID, 4, 0),()),
		"SkewLimit" : ((10024, LCID, 4, 0),()),
		"SkewOn" : ((10004, LCID, 4, 0),()),
		"TaperLimit" : ((10021, LCID, 4, 0),()),
		"TaperOn" : ((10001, LCID, 4, 0),()),
		"TetCollapseLimit" : ((10027, LCID, 4, 0),()),
		"TetCollapseOn" : ((10007, LCID, 4, 0),()),
		"WarpingLimit" : ((10025, LCID, 4, 0),()),
		"WarpingOn" : ((10005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFibersim(DispatchBaseClass):
	CLSID = IID('{F8E3363E-CC4A-447D-BFFD-B70D8D6B51FB}')
	coclass_clsid = IID('{F8E33640-CC4A-447D-BFFD-B70D8D6B51FB}')

	def ConnectToDB(self, filname=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((8, 1),),filname
			)

	def CreatePlyPoints(self, nPlyID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1),),nPlyID
			)

	def FindMatchingLayupElems(self, nLayupID=defaultNamedNotOptArg, elSetID=defaultNamedNotOptArg, matchSetID=defaultNamedNotOptArg, dAngleMatchTol=defaultNamedNotOptArg
			, dThickPctMatchTol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1)),nLayupID
			, elSetID, matchSetID, dAngleMatchTol, dThickPctMatchTol)

	def GetFibersimPlyInfo(self, plyID=defaultNamedNotOptArg, sTitle=pythoncom.Missing, nLayerID=pythoncom.Missing, nGlobalPlyID=pythoncom.Missing
			, nmatID=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((3, 1), (16392, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetFibersimPlyInfo', None,plyID
			, sTitle, nLayerID, nGlobalPlyID, nmatID)

	def GetLayupAtElem(self, elID=defaultNamedNotOptArg, layupID=pythoncom.Missing, vRefVec=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'GetLayupAtElem', None,elID
			, layupID, vRefVec)

	def GetLayupAtLoc(self, xyz=defaultNamedNotOptArg, layupID=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((12, 1), (16387, 2)), 'GetLayupAtLoc', None,xyz
			, layupID)

	def GlobalPlyDirectionPreview(self, gPlyID=defaultNamedNotOptArg, nDisplayTime=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (3, 1)),gPlyID
			, nDisplayTime)

	def PlyDirectionPreview(self, nPlyID=defaultNamedNotOptArg, nDisplayTime=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (3, 1)),nPlyID
			, nDisplayTime)

	def PlyPreview(self, nPlyID=defaultNamedNotOptArg, nDisplayTime=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1)),nPlyID
			, nDisplayTime)

	def PlyRefDirectionPreview(self, nPlyID=defaultNamedNotOptArg, nDisplayTime=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1)),nPlyID
			, nDisplayTime)

	def ProcessElements(self, elSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1),),elSetID
			)

	def SetAngleSnap(self, dAngle=defaultNamedNotOptArg, dTol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((5, 1), (5, 1)),dAngle
			, dTol)

	def SetLaminateOffsets(self, elSetID=defaultNamedNotOptArg, bReset=defaultNamedNotOptArg, bTop=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),elSetID
			, bReset, bTop)

	_prop_map_get_ = {
		"bAngleSnap": (10003, 2, (11, 0), (), "bAngleSnap", None),
		"bCentroid": (10007, 2, (11, 0), (), "bCentroid", None),
		"bUniqueLayerID": (10005, 2, (11, 0), (), "bUniqueLayerID", None),
		"dAngleDiv": (10001, 2, (5, 0), (), "dAngleDiv", None),
		"dAngleTol": (10002, 2, (5, 0), (), "dAngleTol", None),
		"dSearchFactor": (10006, 2, (5, 0), (), "dSearchFactor", None),
		"nMatCount": (10004, 2, (3, 0), (), "nMatCount", None),
		"nPlyCount": (10000, 2, (3, 0), (), "nPlyCount", None),
	}
	_prop_map_put_ = {
		"bAngleSnap" : ((10003, LCID, 4, 0),()),
		"bCentroid" : ((10007, LCID, 4, 0),()),
		"bUniqueLayerID" : ((10005, LCID, 4, 0),()),
		"dAngleDiv" : ((10001, LCID, 4, 0),()),
		"dAngleTol" : ((10002, LCID, 4, 0),()),
		"dSearchFactor" : ((10006, LCID, 4, 0),()),
		"nMatCount" : ((10004, LCID, 4, 0),()),
		"nPlyCount" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFlexibleSlider(DispatchBaseClass):
	CLSID = IID('{AA0C28B4-A618-4ADD-B1AB-0C794A44CA27}')
	coclass_clsid = IID('{AA0C28B6-A618-4ADD-B1AB-0C794A44CA27}')

	def ClearComponentSet(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetComponentSet(self, entityTYPE=defaultNamedNotOptArg, pSelectedComponentSet=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16393, 2)), 'GetComponentSet', None,entityTYPE
			, pSelectedComponentSet)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutComponentSet(self, entityTYPE=defaultNamedNotOptArg, pSelectedComponentSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (16393, 1)),entityTYPE
			, pSelectedComponentSet)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"HasElemList": (10019, 2, (11, 0), (), "HasElemList", None),
		"HasNodeList": (10018, 2, (11, 0), (), "HasNodeList", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"NasBGRPID": (10006, 2, (3, 0), (), "NasBGRPID", None),
		"NasCF": (10015, 2, (5, 0), (), "NasCF", None),
		"NasDGID": (10011, 2, (3, 0), (), "NasDGID", None),
		"NasDTID": (10013, 2, (3, 0), (), "NasDTID", None),
		"NasDTYPE": (10010, 2, (3, 0), (), "NasDTYPE", None),
		"NasDVAL": (10012, 2, (5, 0), (), "NasDVAL", None),
		"NasFOP": (10014, 2, (3, 0), (), "NasFOP", None),
		"NasHasNLIM": (10022, 2, (11, 0), (), "NasHasNLIM", None),
		"NasKCF": (10017, 2, (5, 0), (), "NasKCF", None),
		"NasNGRPID": (10005, 2, (3, 0), (), "NasNGRPID", None),
		"NasNLIM": (10009, 2, (3, 0), (), "NasNLIM", None),
		"NasPROJ": (10008, 2, (11, 0), (), "NasPROJ", None),
		"NasSGID": (10007, 2, (3, 0), (), "NasSGID", None),
		"NasTOL": (10016, 2, (5, 0), (), "NasTOL", None),
		"NasTYPE": (10004, 2, (3, 0), (), "NasTYPE", None),
		"NodeSetID": (10020, 2, (3, 0), (), "NodeSetID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10001, 2, (3, 0), (), "color", None),
		"elemSetID": (10021, 2, (3, 0), (), "elemSetID", None),
		"layer": (10002, 2, (3, 0), (), "layer", None),
		"title": (10003, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"HasElemList" : ((10019, LCID, 4, 0),()),
		"HasNodeList" : ((10018, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"NasBGRPID" : ((10006, LCID, 4, 0),()),
		"NasCF" : ((10015, LCID, 4, 0),()),
		"NasDGID" : ((10011, LCID, 4, 0),()),
		"NasDTID" : ((10013, LCID, 4, 0),()),
		"NasDTYPE" : ((10010, LCID, 4, 0),()),
		"NasDVAL" : ((10012, LCID, 4, 0),()),
		"NasFOP" : ((10014, LCID, 4, 0),()),
		"NasHasNLIM" : ((10022, LCID, 4, 0),()),
		"NasKCF" : ((10017, LCID, 4, 0),()),
		"NasNGRPID" : ((10005, LCID, 4, 0),()),
		"NasNLIM" : ((10009, LCID, 4, 0),()),
		"NasPROJ" : ((10008, LCID, 4, 0),()),
		"NasSGID" : ((10007, LCID, 4, 0),()),
		"NasTOL" : ((10016, LCID, 4, 0),()),
		"NasTYPE" : ((10004, LCID, 4, 0),()),
		"NodeSetID" : ((10020, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10001, LCID, 4, 0),()),
		"elemSetID" : ((10021, LCID, 4, 0),()),
		"layer" : ((10002, LCID, 4, 0),()),
		"title" : ((10003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFreebody(DispatchBaseClass):
	CLSID = IID('{F39A93F2-DFD9-42D5-B663-8F09A959DAFE}')
	coclass_clsid = IID('{F39A93F4-DFD9-42D5-B663-8F09A959DAFE}')

	def CalculateNodalCenter(self, bUpdate=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((11, 1), (16396, 2)), 'CalculateNodalCenter', None,bUpdate
			, xyz)

	def CalculateSummation(self, outSetID=defaultNamedNotOptArg, calculations=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((3, 1), (16396, 2)), 'CalculateSummation', None,outSetID
			, calculations)

	def CalculateSummation2(self, nSetID=defaultNamedNotOptArg, bUseFBCSys=defaultNamedNotOptArg, nNumSets=pythoncom.Missing, outsetIDs=pythoncom.Missing
			, calculations=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((3, 1), (11, 1), (16387, 2), (16396, 2), (16396, 2)), 'CalculateSummation2', None,nSetID
			, bUseFBCSys, nNumSets, outsetIDs, calculations)

	def ClearElements(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def ClearNodes(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetElements(self, numElem=pythoncom.Missing, elemID=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetElements', None,numElem
			, elemID)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetNodalSums(self, nSetID=defaultNamedNotOptArg, nNumNodes=pythoncom.Missing, nNodeIDs=pythoncom.Missing, dVals=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetNodalSums', None,nSetID
			, nNumNodes, nNodeIDs, dVals)

	def GetNodes(self, numNode=pythoncom.Missing, NodeID=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetNodes', None,numNode
			, NodeID)

	def GetSectionCutSums(self, nOutSetSetID=defaultNamedNotOptArg, nCuts=defaultNamedNotOptArg, pnNumCuts=pythoncom.Missing, pCutLocs=pythoncom.Missing
			, pSumLocs=pythoncom.Missing, pSums=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetSectionCutSums', None,nOutSetSetID
			, nCuts, pnNumCuts, pCutLocs, pSumLocs, pSums
			)

	def GetSumAtNode(self, nNodeID=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, dVals=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((3, 1), (3, 1), (16396, 2)), 'GetSumAtNode', None,nNodeID
			, nSetID, dVals)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	# The method NodalVecColor is actually a property, but must be used as a method to correctly pass the arguments
	def NodalVecColor(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method NodalVectorMode is actually a property, but must be used as a method to correctly pass the arguments
	def NodalVectorMode(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	# The method SectionPlaneBase is actually a property, but must be used as a method to correctly pass the arguments
	def SectionPlaneBase(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method SectionPlaneNormal is actually a property, but must be used as a method to correctly pass the arguments
	def SectionPlaneNormal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method SectionVectorBase is actually a property, but must be used as a method to correctly pass the arguments
	def SectionVectorBase(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method SectionVectorTip is actually a property, but must be used as a method to correctly pass the arguments
	def SectionVectorTip(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetElements(self, bClear=defaultNamedNotOptArg, SetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((11, 1), (3, 1)),bClear
			, SetID)

	def SetLocationFromCoord(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, z=defaultNamedNotOptArg, pLoc=pythoncom.Missing):
		return self._ApplyTypes_(20014, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (16389, 2)), 'SetLocationFromCoord', None,x
			, y, z, pLoc)

	# The method SetNodalVecColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetNodalVecColor(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetNodalVectorMode is actually a property, but must be used as a method to correctly pass the arguments
	def SetNodalVectorMode(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def SetNodes(self, bClear=defaultNamedNotOptArg, SetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((11, 1), (3, 1)),bClear
			, SetID)

	# The method SetSectionPlaneBase is actually a property, but must be used as a method to correctly pass the arguments
	def SetSectionPlaneBase(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSectionPlaneNormal is actually a property, but must be used as a method to correctly pass the arguments
	def SetSectionPlaneNormal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSectionVectorBase is actually a property, but must be used as a method to correctly pass the arguments
	def SetSectionVectorBase(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSectionVectorTip is actually a property, but must be used as a method to correctly pass the arguments
	def SetSectionVectorTip(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetShowNodalVec is actually a property, but must be used as a method to correctly pass the arguments
	def SetShowNodalVec(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetShowTotalVec is actually a property, but must be used as a method to correctly pass the arguments
	def SetShowTotalVec(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetSumComponents is actually a property, but must be used as a method to correctly pass the arguments
	def SetSumComponents(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetSumContributions is actually a property, but must be used as a method to correctly pass the arguments
	def SetSumContributions(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetTotalVecColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetTotalVecColor(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetTotalVectorMode is actually a property, but must be used as a method to correctly pass the arguments
	def SetTotalVectorMode(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def Show(self):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), (),)

	# The method ShowNodalVec is actually a property, but must be used as a method to correctly pass the arguments
	def ShowNodalVec(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method ShowTotalVec is actually a property, but must be used as a method to correctly pass the arguments
	def ShowTotalVec(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method SumComponents is actually a property, but must be used as a method to correctly pass the arguments
	def SumComponents(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method SumContributions is actually a property, but must be used as a method to correctly pass the arguments
	def SumContributions(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method TotalVecColor is actually a property, but must be used as a method to correctly pass the arguments
	def TotalVecColor(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method TotalVectorMode is actually a property, but must be used as a method to correctly pass the arguments
	def TotalVectorMode(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AlternateApplied": (10017, 2, (11, 0), (), "AlternateApplied", None),
		"AlternateMPC": (10019, 2, (11, 0), (), "AlternateMPC", None),
		"AlternateSPC": (10018, 2, (11, 0), (), "AlternateSPC", None),
		"CSys": (10013, 2, (3, 0), (), "CSys", None),
		"DisplayMode": (10015, 2, (3, 0), (), "DisplayMode", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"NodeMarkerColor": (10010, 2, (3, 0), (), "NodeMarkerColor", None),
		"ReverseTotalValues": (10033, 2, (11, 0), (), "ReverseTotalValues", None),
		"SectionCurve": (10024, 2, (3, 0), (), "SectionCurve", None),
		"SectionGroup": (10032, 2, (3, 0), (), "SectionGroup", None),
		"SectionIncludeClippedElem": (10028, 2, (11, 0), (), "SectionIncludeClippedElem", None),
		"SectionLimitToGroup": (10031, 2, (11, 0), (), "SectionLimitToGroup", None),
		"SectionLocation": (10040, 2, (5, 0), (), "SectionLocation", None),
		"SectionMode": (10035, 2, (3, 0), (), "SectionMode", None),
		"SectionRadius": (10036, 2, (5, 0), (), "SectionRadius", None),
		"SectionReverse": (10037, 2, (11, 0), (), "SectionReverse", None),
		"SectionRotateSums": (10027, 2, (11, 0), (), "SectionRotateSums", None),
		"SectionSumLocation": (10030, 2, (3, 0), (), "SectionSumLocation", None),
		"SectionTolerance": (10029, 2, (5, 0), (), "SectionTolerance", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"UseNodalOuputCS": (10020, 2, (11, 0), (), "UseNodalOuputCS", None),
		"group": (10014, 2, (3, 0), (), "group", None),
		"layer": (10016, 2, (3, 0), (), "layer", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"vNodalVecColor": (10009, 2, (12, 0), (), "vNodalVecColor", None),
		"vNodalVectorMode": (10012, 2, (12, 0), (), "vNodalVectorMode", None),
		"vSectionPlaneBase": (10021, 2, (12, 0), (), "vSectionPlaneBase", None),
		"vSectionPlaneNormal": (10022, 2, (12, 0), (), "vSectionPlaneNormal", None),
		"vSectionVectorBase": (10025, 2, (12, 0), (), "vSectionVectorBase", None),
		"vSectionVectorTip": (10026, 2, (12, 0), (), "vSectionVectorTip", None),
		"vShowNodalVec": (10008, 2, (12, 0), (), "vShowNodalVec", None),
		"vShowTotalVec": (10006, 2, (12, 0), (), "vShowTotalVec", None),
		"vSumComponents": (10004, 2, (12, 0), (), "vSumComponents", None),
		"vSumContributions": (10005, 2, (12, 0), (), "vSumContributions", None),
		"vTotalVecColor": (10007, 2, (12, 0), (), "vTotalVecColor", None),
		"vTotalVectorMode": (10011, 2, (12, 0), (), "vTotalVectorMode", None),
		"x": (10001, 2, (5, 0), (), "x", None),
		"y": (10002, 2, (5, 0), (), "y", None),
		"z": (10003, 2, (5, 0), (), "z", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AlternateApplied" : ((10017, LCID, 4, 0),()),
		"AlternateMPC" : ((10019, LCID, 4, 0),()),
		"AlternateSPC" : ((10018, LCID, 4, 0),()),
		"CSys" : ((10013, LCID, 4, 0),()),
		"DisplayMode" : ((10015, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"NodeMarkerColor" : ((10010, LCID, 4, 0),()),
		"ReverseTotalValues" : ((10033, LCID, 4, 0),()),
		"SectionCurve" : ((10024, LCID, 4, 0),()),
		"SectionGroup" : ((10032, LCID, 4, 0),()),
		"SectionIncludeClippedElem" : ((10028, LCID, 4, 0),()),
		"SectionLimitToGroup" : ((10031, LCID, 4, 0),()),
		"SectionLocation" : ((10040, LCID, 4, 0),()),
		"SectionMode" : ((10035, LCID, 4, 0),()),
		"SectionRadius" : ((10036, LCID, 4, 0),()),
		"SectionReverse" : ((10037, LCID, 4, 0),()),
		"SectionRotateSums" : ((10027, LCID, 4, 0),()),
		"SectionSumLocation" : ((10030, LCID, 4, 0),()),
		"SectionTolerance" : ((10029, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"UseNodalOuputCS" : ((10020, LCID, 4, 0),()),
		"group" : ((10014, LCID, 4, 0),()),
		"layer" : ((10016, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"vNodalVecColor" : ((10009, LCID, 4, 0),()),
		"vNodalVectorMode" : ((10012, LCID, 4, 0),()),
		"vSectionPlaneBase" : ((10021, LCID, 4, 0),()),
		"vSectionPlaneNormal" : ((10022, LCID, 4, 0),()),
		"vSectionVectorBase" : ((10025, LCID, 4, 0),()),
		"vSectionVectorTip" : ((10026, LCID, 4, 0),()),
		"vShowNodalVec" : ((10008, LCID, 4, 0),()),
		"vShowTotalVec" : ((10006, LCID, 4, 0),()),
		"vSumComponents" : ((10004, LCID, 4, 0),()),
		"vSumContributions" : ((10005, LCID, 4, 0),()),
		"vTotalVecColor" : ((10007, LCID, 4, 0),()),
		"vTotalVectorMode" : ((10011, LCID, 4, 0),()),
		"x" : ((10001, LCID, 4, 0),()),
		"y" : ((10002, LCID, 4, 0),()),
		"z" : ((10003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFreq(DispatchBaseClass):
	CLSID = IID('{BC4680A4-7B1C-449B-B7F7-AAF21EC0ABD3}')
	coclass_clsid = IID('{BC4680A6-7B1C-449B-B7F7-AAF21EC0ABD3}')

	def AddCaseFreq(self, NF=defaultNamedNotOptArg, Fi=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg
			, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (11, 1), (3, 1)),NF
			, Fi, asetID, on, acaseID)

	def AddCaseFreq1(self, F1=defaultNamedNotOptArg, DF=defaultNamedNotOptArg, NDF=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1), (3, 1)),F1
			, DF, NDF, asetID, on, acaseID
			)

	def AddCaseFreq2(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NF=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, NF, asetID, on, acaseID
			)

	def AddCaseFreq3(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NEF=defaultNamedNotOptArg, LOG=defaultNamedNotOptArg
			, CLUSTER=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (11, 1), (5, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, NEF, LOG, CLUSTER, asetID
			, on, acaseID)

	def AddCaseFreq4(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFM=defaultNamedNotOptArg, FPSD=defaultNamedNotOptArg
			, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (5, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, NFM, FPSD, asetID, on
			, acaseID)

	def AddCaseFreq5(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFR=defaultNamedNotOptArg, FRi=defaultNamedNotOptArg
			, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (12, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, NFR, FRi, asetID, on
			, acaseID)

	def AddCaseFreq5ByFuncID(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, funcID=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, funcID, asetID, on, acaseID
			)

	def AddCaseFreqByFuncID(self, funcID=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (3, 1)),funcID
			, asetID, on, acaseID)

	def AddFreq(self, NF=defaultNamedNotOptArg, Fi=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (11, 1)),NF
			, Fi, asetID, on)

	def AddFreq1(self, F1=defaultNamedNotOptArg, DF=defaultNamedNotOptArg, NDF=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1)),F1
			, DF, NDF, asetID, on)

	def AddFreq2(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NF=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1)),F1
			, F2, NF, asetID, on)

	def AddFreq3(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NEF=defaultNamedNotOptArg, LOG=defaultNamedNotOptArg
			, CLUSTER=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (11, 1), (5, 1), (3, 1), (11, 1)),F1
			, F2, NEF, LOG, CLUSTER, asetID
			, on)

	def AddFreq4(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFM=defaultNamedNotOptArg, FPSD=defaultNamedNotOptArg
			, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (5, 1), (3, 1), (11, 1)),F1
			, F2, NFM, FPSD, asetID, on
			)

	def AddFreq5(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFR=defaultNamedNotOptArg, FRi=defaultNamedNotOptArg
			, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (12, 1), (3, 1), (11, 1)),F1
			, F2, NFR, FRi, asetID, on
			)

	def AddFreq5ByFuncID(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, funcID=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1)),F1
			, F2, funcID, asetID, on)

	def AddFreqByFuncID(self, funcID=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),funcID
			, asetID, on)

	def AllOff(self, asetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20101, LCID, 1, (3, 0), ((3, 1),),asetID
			)

	def AllOffCase(self, asetID=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20201, LCID, 1, (3, 0), ((3, 1), (3, 1)),asetID
			, acaseID)

	def AllOn(self, asetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20100, LCID, 1, (3, 0), ((3, 1),),asetID
			)

	def AllOnCase(self, asetID=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20200, LCID, 1, (3, 0), ((3, 1), (3, 1)),asetID
			, acaseID)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetFREQ1Data(self, F1=pythoncom.Missing, DF=pythoncom.Missing, NDF=pythoncom.Missing):
		return self._ApplyTypes_(20050, 1, (3, 0), ((16389, 2), (16389, 2), (16387, 2)), 'GetFREQ1Data', None,F1
			, DF, NDF)

	def GetFREQ2Data(self, F1=pythoncom.Missing, F2=pythoncom.Missing, NF=pythoncom.Missing):
		return self._ApplyTypes_(20051, 1, (3, 0), ((16389, 2), (16389, 2), (16387, 2)), 'GetFREQ2Data', None,F1
			, F2, NF)

	def GetFREQ3Data(self, F1=pythoncom.Missing, F2=pythoncom.Missing, NEF=pythoncom.Missing, LOG=pythoncom.Missing
			, CLUSTER=pythoncom.Missing):
		return self._ApplyTypes_(20052, 1, (3, 0), ((16389, 2), (16389, 2), (16387, 2), (16395, 2), (16389, 2)), 'GetFREQ3Data', None,F1
			, F2, NEF, LOG, CLUSTER)

	def GetFREQ4Data(self, F1=pythoncom.Missing, F2=pythoncom.Missing, NFM=pythoncom.Missing, FPSD=pythoncom.Missing):
		return self._ApplyTypes_(20053, 1, (3, 0), ((16389, 2), (16389, 2), (16387, 2), (16389, 2)), 'GetFREQ4Data', None,F1
			, F2, NFM, FPSD)

	def GetFREQ5Data(self, F1=pythoncom.Missing, F2=pythoncom.Missing, NFR=pythoncom.Missing, FRi=pythoncom.Missing
			, funcID=pythoncom.Missing):
		return self._ApplyTypes_(20054, 1, (3, 0), ((16389, 2), (16389, 2), (16387, 2), (16396, 2), (16387, 2)), 'GetFREQ5Data', None,F1
			, F2, NFR, FRi, funcID)

	def GetFREQData(self, NF=pythoncom.Missing, Fi=pythoncom.Missing, funcID=pythoncom.Missing):
		return self._ApplyTypes_(20049, 1, (3, 0), ((16387, 2), (16396, 2), (16387, 2)), 'GetFREQData', None,NF
			, Fi, funcID)

	def GetFREQType(self, FREQ_Type=pythoncom.Missing):
		return self._ApplyTypes_(20048, 1, (3, 0), ((16387, 2),), 'GetFREQType', None,FREQ_Type
			)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20041, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetFREQ1Data(self, F1=defaultNamedNotOptArg, DF=defaultNamedNotOptArg, NDF=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20043, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1)),F1
			, DF, NDF)

	def SetFREQ2Data(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NF=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20044, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1)),F1
			, F2, NF)

	def SetFREQ3Data(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NEF=defaultNamedNotOptArg, LOG=defaultNamedNotOptArg
			, CLUSTER=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20045, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (11, 1), (5, 1)),F1
			, F2, NEF, LOG, CLUSTER)

	def SetFREQ4Data(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFM=defaultNamedNotOptArg, FPSD=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20046, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (5, 1)),F1
			, F2, NFM, FPSD)

	def SetFREQ5Data(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFR=defaultNamedNotOptArg, FRi=defaultNamedNotOptArg
			, funcID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20047, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (12, 1), (3, 1)),F1
			, F2, NFR, FRi, funcID)

	def SetFREQData(self, NF=defaultNamedNotOptArg, Fi=defaultNamedNotOptArg, funcID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20042, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1)),NF
			, Fi, funcID)

	def TurnOff(self, asetID=defaultNamedNotOptArg, freqID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20103, LCID, 1, (3, 0), ((3, 1), (3, 1)),asetID
			, freqID)

	def TurnOffCase(self, asetID=defaultNamedNotOptArg, freqID=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20203, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),asetID
			, freqID, acaseID)

	def TurnOn(self, asetID=defaultNamedNotOptArg, freqID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20102, LCID, 1, (3, 0), ((3, 1), (3, 1)),asetID
			, freqID)

	def TurnOnCase(self, asetID=defaultNamedNotOptArg, freqID=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20202, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),asetID
			, freqID, acaseID)

	def UpdCaseFreq(self, NF=defaultNamedNotOptArg, Fi=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg
			, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (11, 1), (3, 1)),NF
			, Fi, asetID, on, acaseID)

	def UpdCaseFreq1(self, F1=defaultNamedNotOptArg, DF=defaultNamedNotOptArg, NDF=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1), (3, 1)),F1
			, DF, NDF, asetID, on, acaseID
			)

	def UpdCaseFreq2(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NF=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, NF, asetID, on, acaseID
			)

	def UpdCaseFreq3(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NEF=defaultNamedNotOptArg, LOG=defaultNamedNotOptArg
			, CLUSTER=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (11, 1), (5, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, NEF, LOG, CLUSTER, asetID
			, on, acaseID)

	def UpdCaseFreq4(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFM=defaultNamedNotOptArg, FPSD=defaultNamedNotOptArg
			, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (5, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, NFM, FPSD, asetID, on
			, acaseID)

	def UpdCaseFreq5(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFR=defaultNamedNotOptArg, FRi=defaultNamedNotOptArg
			, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (12, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, NFR, FRi, asetID, on
			, acaseID)

	def UpdCaseFreq5ByFuncID(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, funcID=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1), (3, 1)),F1
			, F2, funcID, asetID, on, acaseID
			)

	def UpdCaseFreqByFuncID(self, funcID=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg, acaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (3, 1)),funcID
			, asetID, on, acaseID)

	def UpdFreq(self, NF=defaultNamedNotOptArg, Fi=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (11, 1)),NF
			, Fi, asetID, on)

	def UpdFreq1(self, F1=defaultNamedNotOptArg, DF=defaultNamedNotOptArg, NDF=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1)),F1
			, DF, NDF, asetID, on)

	def UpdFreq2(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NF=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1)),F1
			, F2, NF, asetID, on)

	def UpdFreq3(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NEF=defaultNamedNotOptArg, LOG=defaultNamedNotOptArg
			, CLUSTER=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (11, 1), (5, 1), (3, 1), (11, 1)),F1
			, F2, NEF, LOG, CLUSTER, asetID
			, on)

	def UpdFreq4(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFM=defaultNamedNotOptArg, FPSD=defaultNamedNotOptArg
			, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (5, 1), (3, 1), (11, 1)),F1
			, F2, NFM, FPSD, asetID, on
			)

	def UpdFreq5(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, NFR=defaultNamedNotOptArg, FRi=defaultNamedNotOptArg
			, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (12, 1), (3, 1), (11, 1)),F1
			, F2, NFR, FRi, asetID, on
			)

	def UpdFreq5ByFuncID(self, F1=defaultNamedNotOptArg, F2=defaultNamedNotOptArg, funcID=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg
			, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (11, 1)),F1
			, F2, funcID, asetID, on)

	def UpdFreqByFuncID(self, funcID=defaultNamedNotOptArg, asetID=defaultNamedNotOptArg, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),funcID
			, asetID, on)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"CLUSTER": (10004, 2, (5, 0), (), "CLUSTER", None),
		"DF": (10002, 2, (5, 0), (), "DF", None),
		"F1": (10000, 2, (5, 0), (), "F1", None),
		"F2": (10001, 2, (5, 0), (), "F2", None),
		"FSPD": (10003, 2, (5, 0), (), "FSPD", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"LOG": (10006, 2, (17, 0), (), "LOG", None),
		"NDF": (10009, 2, (3, 0), (), "NDF", None),
		"NEF": (10008, 2, (3, 0), (), "NEF", None),
		"NF": (10005, 2, (3, 0), (), "NF", None),
		"NFM": (10010, 2, (3, 0), (), "NFM", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"type": (10007, 2, (3, 0), (), "type", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"CLUSTER" : ((10004, LCID, 4, 0),()),
		"DF" : ((10002, LCID, 4, 0),()),
		"F1" : ((10000, LCID, 4, 0),()),
		"F2" : ((10001, LCID, 4, 0),()),
		"FSPD" : ((10003, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"LOG" : ((10006, LCID, 4, 0),()),
		"NDF" : ((10009, LCID, 4, 0),()),
		"NEF" : ((10008, LCID, 4, 0),()),
		"NF" : ((10005, LCID, 4, 0),()),
		"NFM" : ((10010, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"type" : ((10007, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFunction(DispatchBaseClass):
	CLSID = IID('{14481C56-0767-11D5-9467-001083FFF11C}')
	coclass_clsid = IID('{14481C58-0767-11D5-9467-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetFunctionList(self, listcount=pythoncom.Missing, x=pythoncom.Missing, y=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2)), 'GetFunctionList', None,listcount
			, x, y)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def GetValue(self, nMethod=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((3, 1), (5, 1), (16389, 2)), 'GetValue', None,nMethod
			, x, y)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutFunctionList(self, listcount=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),listcount
			, x, y)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"type": (10001, 2, (3, 0), (), "type", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"type" : ((10001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGFXArrow(DispatchBaseClass):
	CLSID = IID('{1694667A-A6BD-4EA1-B1F0-6485588CDAEB}')
	coclass_clsid = IID('{1694667C-A6BD-4EA1-B1F0-6485588CDAEB}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteAll(self, bAllSets=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((11, 1), (3, 1)),bAllSets
			, nSetID)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, z=defaultNamedNotOptArg
			, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dZ=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, lengthmode=defaultNamedNotOptArg
			, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg, style=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1)),entID
			, x, y, z, dX, dY
			, dZ, Length, lengthmode, layer, color
			, style)

	def PutAllArray(self, numArrow=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, dxyz=defaultNamedNotOptArg
			, Length=defaultNamedNotOptArg, lengthmode=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg, style=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),numArrow
			, entID, xyz, dxyz, Length, lengthmode
			, layer, color, style)

	def PutCoordArray(self, numArrow=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, dxyz=defaultNamedNotOptArg, Length=defaultNamedNotOptArg
			, lengthmode=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg, style=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (3, 1), (3, 1), (3, 1), (3, 1)),numArrow
			, xyz, dxyz, Length, lengthmode, layer
			, color, style)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setdxyz is actually a property, but must be used as a method to correctly pass the arguments
	def Setdxyz(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setxyz is actually a property, but must be used as a method to correctly pass the arguments
	def Setxyz(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method dxyz is actually a property, but must be used as a method to correctly pass the arguments
	def dxyz(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method xyz is actually a property, but must be used as a method to correctly pass the arguments
	def xyz(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Length": (10006, 2, (5, 0), (), "Length", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10009, 2, (3, 0), (), "color", None),
		"dX": (10003, 2, (5, 0), (), "dX", None),
		"dY": (10004, 2, (5, 0), (), "dY", None),
		"dZ": (10005, 2, (5, 0), (), "dZ", None),
		"layer": (10008, 2, (3, 0), (), "layer", None),
		"lengthmode": (10007, 2, (3, 0), (), "lengthmode", None),
		"location": (10013, 2, (5, 0), (), "location", None),
		"style": (10010, 2, (3, 0), (), "style", None),
		"vXYZ": (10011, 2, (12, 0), (), "vXYZ", None),
		"vdxyz": (10012, 2, (12, 0), (), "vdxyz", None),
		"x": (10000, 2, (5, 0), (), "x", None),
		"y": (10001, 2, (5, 0), (), "y", None),
		"z": (10002, 2, (5, 0), (), "z", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Length" : ((10006, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10009, LCID, 4, 0),()),
		"dX" : ((10003, LCID, 4, 0),()),
		"dY" : ((10004, LCID, 4, 0),()),
		"dZ" : ((10005, LCID, 4, 0),()),
		"layer" : ((10008, LCID, 4, 0),()),
		"lengthmode" : ((10007, LCID, 4, 0),()),
		"location" : ((10013, LCID, 4, 0),()),
		"style" : ((10010, LCID, 4, 0),()),
		"vXYZ" : ((10011, LCID, 4, 0),()),
		"vdxyz" : ((10012, LCID, 4, 0),()),
		"x" : ((10000, LCID, 4, 0),()),
		"y" : ((10001, LCID, 4, 0),()),
		"z" : ((10002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGFXLine(DispatchBaseClass):
	CLSID = IID('{72FA0DCD-21F2-4E55-9EDC-5D4F64ED7EC6}')
	coclass_clsid = IID('{72FA0DCF-21F2-4E55-9EDC-5D4F64ED7EC6}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteAll(self, bAllSets=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((11, 1), (3, 1)),bAllSets
			, nSetID)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, x1=defaultNamedNotOptArg, y1=defaultNamedNotOptArg, z1=defaultNamedNotOptArg
			, x2=defaultNamedNotOptArg, y2=defaultNamedNotOptArg, z2=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1)),entID
			, x1, y1, z1, x2, y2
			, z2, layer, color)

	def PutAllArray(self, numLine=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, color=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),numLine
			, entID, xyz, layer, color)

	def PutCoordArray(self, numLine=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (3, 1)),numLine
			, xyz, layer, color)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setxyz is actually a property, but must be used as a method to correctly pass the arguments
	def Setxyz(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method xyz is actually a property, but must be used as a method to correctly pass the arguments
	def xyz(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10007, 2, (3, 0), (), "color", None),
		"layer": (10006, 2, (3, 0), (), "layer", None),
		"vXYZ": (10008, 2, (12, 0), (), "vXYZ", None),
		"x1": (10000, 2, (5, 0), (), "x1", None),
		"x2": (10003, 2, (5, 0), (), "x2", None),
		"y1": (10001, 2, (5, 0), (), "y1", None),
		"y2": (10004, 2, (5, 0), (), "y2", None),
		"z1": (10002, 2, (5, 0), (), "z1", None),
		"z2": (10005, 2, (5, 0), (), "z2", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10007, LCID, 4, 0),()),
		"layer" : ((10006, LCID, 4, 0),()),
		"vXYZ" : ((10008, LCID, 4, 0),()),
		"x1" : ((10000, LCID, 4, 0),()),
		"x2" : ((10003, LCID, 4, 0),()),
		"y1" : ((10001, LCID, 4, 0),()),
		"y2" : ((10004, LCID, 4, 0),()),
		"z1" : ((10002, LCID, 4, 0),()),
		"z2" : ((10005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGFXPoint(DispatchBaseClass):
	CLSID = IID('{90C90B34-D880-497A-9CD6-AAC2CADB7B7C}')
	coclass_clsid = IID('{90C90B36-D880-497A-9CD6-AAC2CADB7B7C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteAll(self, bAllSets=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((11, 1), (3, 1)),bAllSets
			, nSetID)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, z=defaultNamedNotOptArg
			, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg, symbol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1)),entID
			, x, y, z, layer, color
			, symbol)

	def PutAllArray(self, numPoint=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, color=defaultNamedNotOptArg, symbol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),numPoint
			, entID, xyz, layer, color, symbol
			)

	def PutCoordArray(self, numPoint=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg
			, symbol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (3, 1), (3, 1)),numPoint
			, xyz, layer, color, symbol)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setxyz is actually a property, but must be used as a method to correctly pass the arguments
	def Setxyz(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method xyz is actually a property, but must be used as a method to correctly pass the arguments
	def xyz(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10004, 2, (3, 0), (), "color", None),
		"layer": (10003, 2, (3, 0), (), "layer", None),
		"symbol": (10006, 2, (3, 0), (), "symbol", None),
		"vXYZ": (10007, 2, (12, 0), (), "vXYZ", None),
		"x": (10000, 2, (5, 0), (), "x", None),
		"y": (10001, 2, (5, 0), (), "y", None),
		"z": (10002, 2, (5, 0), (), "z", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10004, LCID, 4, 0),()),
		"layer" : ((10003, LCID, 4, 0),()),
		"symbol" : ((10006, LCID, 4, 0),()),
		"vXYZ" : ((10007, LCID, 4, 0),()),
		"x" : ((10000, LCID, 4, 0),()),
		"y" : ((10001, LCID, 4, 0),()),
		"z" : ((10002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGFXQuad4(DispatchBaseClass):
	CLSID = IID('{5070769B-079C-46E2-BB16-57D7260F9C2B}')
	coclass_clsid = IID('{5070769D-079C-46E2-BB16-57D7260F9C2B}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteAll(self, bAllSets=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((11, 1), (3, 1)),bAllSets
			, nSetID)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, edgeflags=defaultNamedNotOptArg, normal=defaultNamedNotOptArg
			, autonormal=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fillcolor=defaultNamedNotOptArg, edgecolor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (12, 1), (11, 1), (3, 1), (3, 1), (3, 1)),entID
			, xyz, edgeflags, normal, autonormal, layer
			, fillcolor, edgecolor)

	def PutAllArray(self, numQuad=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, edgeflags=defaultNamedNotOptArg
			, normal=defaultNamedNotOptArg, autonormal=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fillcolor=defaultNamedNotOptArg, edgecolor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),numQuad
			, entID, xyz, edgeflags, normal, autonormal
			, layer, fillcolor, edgecolor)

	def PutCoordArray(self, numQuad=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fillcolor=defaultNamedNotOptArg
			, edgecolor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (3, 1), (3, 1)),numQuad
			, xyz, layer, fillcolor, edgecolor)

	def PutCoordNormalArray(self, numQuad=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, edgeflags=defaultNamedNotOptArg, normal=defaultNamedNotOptArg
			, autonormal=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fillcolor=defaultNamedNotOptArg, edgecolor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (11, 1), (3, 1), (3, 1), (3, 1)),numQuad
			, xyz, edgeflags, normal, autonormal, layer
			, fillcolor, edgecolor)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setnormal is actually a property, but must be used as a method to correctly pass the arguments
	def Setnormal(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method Setxyz is actually a property, but must be used as a method to correctly pass the arguments
	def Setxyz(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method normal is actually a property, but must be used as a method to correctly pass the arguments
	def normal(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method xyz is actually a property, but must be used as a method to correctly pass the arguments
	def xyz(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"autonormal": (10006, 2, (11, 0), (), "autonormal", None),
		"edgecolor": (10004, 2, (3, 0), (), "edgecolor", None),
		"edgeflags": (10005, 2, (3, 0), (), "edgeflags", None),
		"fillcolor": (10003, 2, (3, 0), (), "fillcolor", None),
		"layer": (10002, 2, (3, 0), (), "layer", None),
		"vNormal": (10001, 2, (12, 0), (), "vNormal", None),
		"vXYZ": (10000, 2, (12, 0), (), "vXYZ", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"autonormal" : ((10006, LCID, 4, 0),()),
		"edgecolor" : ((10004, LCID, 4, 0),()),
		"edgeflags" : ((10005, LCID, 4, 0),()),
		"fillcolor" : ((10003, LCID, 4, 0),()),
		"layer" : ((10002, LCID, 4, 0),()),
		"vNormal" : ((10001, LCID, 4, 0),()),
		"vXYZ" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGFXTria3(DispatchBaseClass):
	CLSID = IID('{CAC6D4F9-4D32-42C5-910C-D73FBB9AEB62}')
	coclass_clsid = IID('{CAC6D4FB-4D32-42C5-910C-D73FBB9AEB62}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteAll(self, bAllSets=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((11, 1), (3, 1)),bAllSets
			, nSetID)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, edgeflags=defaultNamedNotOptArg, normal=defaultNamedNotOptArg
			, autonormal=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fillcolor=defaultNamedNotOptArg, edgecolor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (12, 1), (11, 1), (3, 1), (3, 1), (3, 1)),entID
			, xyz, edgeflags, normal, autonormal, layer
			, fillcolor, edgecolor)

	def PutAllArray(self, numTria=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, edgeflags=defaultNamedNotOptArg
			, normal=defaultNamedNotOptArg, autonormal=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fillcolor=defaultNamedNotOptArg, edgecolor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),numTria
			, entID, xyz, edgeflags, normal, autonormal
			, layer, fillcolor, edgecolor)

	def PutCoordArray(self, numTria=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fillcolor=defaultNamedNotOptArg
			, edgecolor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (3, 1), (3, 1)),numTria
			, xyz, layer, fillcolor, edgecolor)

	def PutCoordNormalArray(self, numTria=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, edgeflags=defaultNamedNotOptArg, normal=defaultNamedNotOptArg
			, autonormal=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fillcolor=defaultNamedNotOptArg, edgecolor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (11, 1), (3, 1), (3, 1), (3, 1)),numTria
			, xyz, edgeflags, normal, autonormal, layer
			, fillcolor, edgecolor)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setnormal is actually a property, but must be used as a method to correctly pass the arguments
	def Setnormal(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method Setxyz is actually a property, but must be used as a method to correctly pass the arguments
	def Setxyz(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method normal is actually a property, but must be used as a method to correctly pass the arguments
	def normal(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method xyz is actually a property, but must be used as a method to correctly pass the arguments
	def xyz(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"autonormal": (10006, 2, (11, 0), (), "autonormal", None),
		"edgecolor": (10004, 2, (3, 0), (), "edgecolor", None),
		"edgeflags": (10005, 2, (3, 0), (), "edgeflags", None),
		"fillcolor": (10003, 2, (3, 0), (), "fillcolor", None),
		"layer": (10002, 2, (3, 0), (), "layer", None),
		"vNormal": (10001, 2, (12, 0), (), "vNormal", None),
		"vXYZ": (10000, 2, (12, 0), (), "vXYZ", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"autonormal" : ((10006, LCID, 4, 0),()),
		"edgecolor" : ((10004, LCID, 4, 0),()),
		"edgeflags" : ((10005, LCID, 4, 0),()),
		"fillcolor" : ((10003, LCID, 4, 0),()),
		"layer" : ((10002, LCID, 4, 0),()),
		"vNormal" : ((10001, LCID, 4, 0),()),
		"vXYZ" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGeometryInterface(DispatchBaseClass):
	CLSID = IID('{8E76D485-C2EE-4C57-A491-756662689141}')
	coclass_clsid = IID('{8E76D487-C2EE-4C57-A491-756662689141}')

	def Export(self, nGeometryFormat=defaultNamedNotOptArg, sFilename=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (8, 1), (3, 1)),nGeometryFormat
			, sFilename, entitySET)

	def Import(self, nGeometryFormat=defaultNamedNotOptArg, sFilename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (8, 1)),nGeometryFormat
			, sFilename)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"ACISAltImportCheck": (10057, 2, (11, 0), (), "ACISAltImportCheck", None),
		"ACISAltImportClean": (10055, 2, (11, 0), (), "ACISAltImportClean", None),
		"ACISAltImportDeleteInvalid": (10059, 2, (11, 0), (), "ACISAltImportDeleteInvalid", None),
		"ACISAltImportFullCheck": (10058, 2, (11, 0), (), "ACISAltImportFullCheck", None),
		"ACISAltImportHeal": (10056, 2, (11, 0), (), "ACISAltImportHeal", None),
		"ACISAltImportKeepFaces": (10060, 2, (11, 0), (), "ACISAltImportKeepFaces", None),
		"ACISAltImportScaleFactor": (10054, 2, (5, 0), (), "ACISAltImportScaleFactor", None),
		"CATIAAltImport3DTrimCurves": (10063, 2, (11, 0), (), "CATIAAltImport3DTrimCurves", None),
		"CATIAAltImportAnalytic": (10061, 2, (11, 0), (), "CATIAAltImportAnalytic", None),
		"CATIAAltImportCheck": (10070, 2, (11, 0), (), "CATIAAltImportCheck", None),
		"CATIAAltImportHeal": (10069, 2, (11, 0), (), "CATIAAltImportHeal", None),
		"CATIAAltImportNoPick": (10066, 2, (11, 0), (), "CATIAAltImportNoPick", None),
		"CATIAAltImportNoShow": (10065, 2, (11, 0), (), "CATIAAltImportNoShow", None),
		"CATIAAltImportPoints": (10064, 2, (11, 0), (), "CATIAAltImportPoints", None),
		"CATIAAltImportStitch": (10068, 2, (11, 0), (), "CATIAAltImportStitch", None),
		"CATIAAltImportTopology": (10062, 2, (11, 0), (), "CATIAAltImportTopology", None),
		"CATIAAltImportWorkplanes": (10067, 2, (11, 0), (), "CATIAAltImportWorkplanes", None),
		"CatV5ImportAssySearchPath": (10022, 2, (8, 0), (), "CatV5ImportAssySearchPath", None),
		"CatV5ImportExtTitles": (10021, 2, (11, 0), (), "CatV5ImportExtTitles", None),
		"CatV5ImportInactiveLayers": (10020, 2, (11, 0), (), "CatV5ImportInactiveLayers", None),
		"CatV5ImportNoShow": (10019, 2, (11, 0), (), "CatV5ImportNoShow", None),
		"DXFImport3DFace": (10024, 2, (11, 0), (), "DXFImport3DFace", None),
		"DXFImportBlocks": (10025, 2, (11, 0), (), "DXFImportBlocks", None),
		"DXFImportFirstLayerID": (10032, 2, (3, 0), (), "DXFImportFirstLayerID", None),
		"DXFImportLayer": (10031, 2, (11, 0), (), "DXFImportLayer", None),
		"DXFImportMergeDistance": (10030, 2, (5, 0), (), "DXFImportMergeDistance", None),
		"DXFImportMergePoints": (10029, 2, (11, 0), (), "DXFImportMergePoints", None),
		"DXFImportPolyMesh": (10026, 2, (11, 0), (), "DXFImportPolyMesh", None),
		"DXFImportText": (10023, 2, (11, 0), (), "DXFImportText", None),
		"DXFImportTraceBoundary": (10027, 2, (11, 0), (), "DXFImportTraceBoundary", None),
		"DXFImportTraceCenterline": (10028, 2, (11, 0), (), "DXFImportTraceCenterline", None),
		"ExportForceManifold": (10092, 2, (11, 0), (), "ExportForceManifold", None),
		"ExportIGESBoundedSurfaces": (10098, 2, (11, 0), (), "ExportIGESBoundedSurfaces", None),
		"ExportIGESCurvesAsSplines": (10096, 2, (11, 0), (), "ExportIGESCurvesAsSplines", None),
		"ExportIGESCustomization": (10093, 2, (3, 0), (), "ExportIGESCustomization", None),
		"ExportIGESGeometryFormat": (10095, 2, (3, 0), (), "ExportIGESGeometryFormat", None),
		"ExportIGESNonSolidCurves": (10100, 2, (11, 0), (), "ExportIGESNonSolidCurves", None),
		"ExportIGESNonSolidPoints": (10099, 2, (11, 0), (), "ExportIGESNonSolidPoints", None),
		"ExportIGESSurfacesAsSplines": (10097, 2, (11, 0), (), "ExportIGESSurfacesAsSplines", None),
		"ExportIGESTrimCurveOption": (10094, 2, (3, 0), (), "ExportIGESTrimCurveOption", None),
		"ExportNonSolidCurves": (10091, 2, (11, 0), (), "ExportNonSolidCurves", None),
		"ExportNonSolidPoints": (10090, 2, (11, 0), (), "ExportNonSolidPoints", None),
		"ExportVRMLBackground": (10105, 2, (11, 0), (), "ExportVRMLBackground", None),
		"ExportVRMLBackgroundColor": (10107, 2, (3, 0), (), "ExportVRMLBackgroundColor", None),
		"ExportVRMLColor": (10106, 2, (3, 0), (), "ExportVRMLColor", None),
		"ExportVRMLContour": (10103, 2, (11, 0), (), "ExportVRMLContour", None),
		"ExportVRMLDeformed": (10102, 2, (11, 0), (), "ExportVRMLDeformed", None),
		"ExportVRMLSingleColor": (10104, 2, (11, 0), (), "ExportVRMLSingleColor", None),
		"ExportVRMLSolids": (10101, 2, (11, 0), (), "ExportVRMLSolids", None),
		"ExportVersion": (10089, 2, (5, 0), (), "ExportVersion", None),
		"IGESAltImportCurves": (10072, 2, (11, 0), (), "IGESAltImportCurves", None),
		"IGESAltImportCustomizationType": (10076, 2, (3, 0), (), "IGESAltImportCustomizationType", None),
		"IGESAltImportPoints": (10071, 2, (11, 0), (), "IGESAltImportPoints", None),
		"IGESAltImportSolids": (10075, 2, (11, 0), (), "IGESAltImportSolids", None),
		"IGESAltImportTrimCurveOption": (10077, 2, (3, 0), (), "IGESAltImportTrimCurveOption", None),
		"IGESAltImportTrimmedSurfaces": (10074, 2, (11, 0), (), "IGESAltImportTrimmedSurfaces", None),
		"IGESAltImportUntrimmedSurfaces": (10073, 2, (11, 0), (), "IGESAltImportUntrimmedSurfaces", None),
		"IGESAltOldImportColorLayer": (10078, 2, (11, 0), (), "IGESAltOldImportColorLayer", None),
		"IGESAltOldImportGeometryOnly": (10079, 2, (11, 0), (), "IGESAltOldImportGeometryOnly", None),
		"IGESAltOldImportMergeDistance": (10083, 2, (5, 0), (), "IGESAltOldImportMergeDistance", None),
		"IGESAltOldImportMergePoints": (10082, 2, (11, 0), (), "IGESAltOldImportMergePoints", None),
		"IGESAltOldImportSurfaces": (10080, 2, (11, 0), (), "IGESAltOldImportSurfaces", None),
		"IGESAltOldImportTrimCurveOption": (10081, 2, (3, 0), (), "IGESAltOldImportTrimCurveOption", None),
		"ImportBlanked": (10088, 2, (11, 0), (), "ImportBlanked", None),
		"ImportBodies": (10008, 2, (11, 0), (), "ImportBodies", None),
		"ImportBodyTypes": (10087, 2, (3, 0), (), "ImportBodyTypes", None),
		"ImportColor": (10003, 2, (3, 0), (), "ImportColor", None),
		"ImportColorMode": (10004, 2, (3, 0), (), "ImportColorMode", None),
		"ImportCurves": (10011, 2, (11, 0), (), "ImportCurves", None),
		"ImportFacetted": (10009, 2, (11, 0), (), "ImportFacetted", None),
		"ImportGeometryScale": (10000, 2, (5, 0), (), "ImportGeometryScale", None),
		"ImportIncrementColor": (10005, 2, (11, 0), (), "ImportIncrementColor", None),
		"ImportIncrementLayer": (10006, 2, (11, 0), (), "ImportIncrementLayer", None),
		"ImportLayer": (10002, 2, (3, 0), (), "ImportLayer", None),
		"ImportOptimize": (10013, 2, (11, 0), (), "ImportOptimize", None),
		"ImportOptimizeCatV5": (10016, 2, (11, 0), (), "ImportOptimizeCatV5", None),
		"ImportOptimizeXT": (10018, 2, (11, 0), (), "ImportOptimizeXT", None),
		"ImportPoints": (10012, 2, (11, 0), (), "ImportPoints", None),
		"ImportPointsCatV5": (10015, 2, (11, 0), (), "ImportPointsCatV5", None),
		"ImportShowDialog": (10086, 2, (11, 0), (), "ImportShowDialog", None),
		"ImportSimplify": (10014, 2, (11, 0), (), "ImportSimplify", None),
		"ImportSimplifyCatV5": (10017, 2, (11, 0), (), "ImportSimplifyCatV5", None),
		"ImportSurfaces": (10010, 2, (11, 0), (), "ImportSurfaces", None),
		"ImportTitlePrefix": (10001, 2, (8, 0), (), "ImportTitlePrefix", None),
		"ImportUpdateExistingGeometry": (10007, 2, (11, 0), (), "ImportUpdateExistingGeometry", None),
		"ImportUseAlternateInterface": (10084, 2, (11, 0), (), "ImportUseAlternateInterface", None),
		"ImportUseSimpleAlternateIGESInterface": (10085, 2, (11, 0), (), "ImportUseSimpleAlternateIGESInterface", None),
		"STEPAltAdvImport2DCurves": (10045, 2, (11, 0), (), "STEPAltAdvImport2DCurves", None),
		"STEPAltAdvImportCheckInput": (10052, 2, (11, 0), (), "STEPAltAdvImportCheckInput", None),
		"STEPAltAdvImportCheckOutput": (10053, 2, (11, 0), (), "STEPAltAdvImportCheckOutput", None),
		"STEPAltAdvImportCurveBoundSurface": (10043, 2, (11, 0), (), "STEPAltAdvImportCurveBoundSurface", None),
		"STEPAltAdvImportExplodeAndStitch": (10047, 2, (11, 0), (), "STEPAltAdvImportExplodeAndStitch", None),
		"STEPAltAdvImportFaceted": (10039, 2, (11, 0), (), "STEPAltAdvImportFaceted", None),
		"STEPAltAdvImportFixOrient": (10050, 2, (11, 0), (), "STEPAltAdvImportFixOrient", None),
		"STEPAltAdvImportProE": (10051, 2, (11, 0), (), "STEPAltAdvImportProE", None),
		"STEPAltAdvImportRectangleSurfaces": (10044, 2, (11, 0), (), "STEPAltAdvImportRectangleSurfaces", None),
		"STEPAltAdvImportSimplify": (10048, 2, (11, 0), (), "STEPAltAdvImportSimplify", None),
		"STEPAltAdvImportSmooth": (10046, 2, (11, 0), (), "STEPAltAdvImportSmooth", None),
		"STEPAltAdvImportSolids": (10038, 2, (11, 0), (), "STEPAltAdvImportSolids", None),
		"STEPAltAdvImportStitch": (10049, 2, (11, 0), (), "STEPAltAdvImportStitch", None),
		"STEPAltAdvImportSurfaces": (10040, 2, (11, 0), (), "STEPAltAdvImportSurfaces", None),
		"STEPAltAdvImportWireframeC2": (10042, 2, (11, 0), (), "STEPAltAdvImportWireframeC2", None),
		"STEPAltAdvImportWireframeC3": (10041, 2, (11, 0), (), "STEPAltAdvImportWireframeC3", None),
		"STLImportCloseGaps": (10035, 2, (11, 0), (), "STLImportCloseGaps", None),
		"STLImportMergeNodes": (10034, 2, (11, 0), (), "STLImportMergeNodes", None),
		"STLImportPatranFile": (10036, 2, (11, 0), (), "STLImportPatranFile", None),
		"STLImportShortEdgeLength": (10037, 2, (5, 0), (), "STLImportShortEdgeLength", None),
		"STLImportSkipShortEdge": (10033, 2, (11, 0), (), "STLImportSkipShortEdge", None),
	}
	_prop_map_put_ = {
		"ACISAltImportCheck" : ((10057, LCID, 4, 0),()),
		"ACISAltImportClean" : ((10055, LCID, 4, 0),()),
		"ACISAltImportDeleteInvalid" : ((10059, LCID, 4, 0),()),
		"ACISAltImportFullCheck" : ((10058, LCID, 4, 0),()),
		"ACISAltImportHeal" : ((10056, LCID, 4, 0),()),
		"ACISAltImportKeepFaces" : ((10060, LCID, 4, 0),()),
		"ACISAltImportScaleFactor" : ((10054, LCID, 4, 0),()),
		"CATIAAltImport3DTrimCurves" : ((10063, LCID, 4, 0),()),
		"CATIAAltImportAnalytic" : ((10061, LCID, 4, 0),()),
		"CATIAAltImportCheck" : ((10070, LCID, 4, 0),()),
		"CATIAAltImportHeal" : ((10069, LCID, 4, 0),()),
		"CATIAAltImportNoPick" : ((10066, LCID, 4, 0),()),
		"CATIAAltImportNoShow" : ((10065, LCID, 4, 0),()),
		"CATIAAltImportPoints" : ((10064, LCID, 4, 0),()),
		"CATIAAltImportStitch" : ((10068, LCID, 4, 0),()),
		"CATIAAltImportTopology" : ((10062, LCID, 4, 0),()),
		"CATIAAltImportWorkplanes" : ((10067, LCID, 4, 0),()),
		"CatV5ImportAssySearchPath" : ((10022, LCID, 4, 0),()),
		"CatV5ImportExtTitles" : ((10021, LCID, 4, 0),()),
		"CatV5ImportInactiveLayers" : ((10020, LCID, 4, 0),()),
		"CatV5ImportNoShow" : ((10019, LCID, 4, 0),()),
		"DXFImport3DFace" : ((10024, LCID, 4, 0),()),
		"DXFImportBlocks" : ((10025, LCID, 4, 0),()),
		"DXFImportFirstLayerID" : ((10032, LCID, 4, 0),()),
		"DXFImportLayer" : ((10031, LCID, 4, 0),()),
		"DXFImportMergeDistance" : ((10030, LCID, 4, 0),()),
		"DXFImportMergePoints" : ((10029, LCID, 4, 0),()),
		"DXFImportPolyMesh" : ((10026, LCID, 4, 0),()),
		"DXFImportText" : ((10023, LCID, 4, 0),()),
		"DXFImportTraceBoundary" : ((10027, LCID, 4, 0),()),
		"DXFImportTraceCenterline" : ((10028, LCID, 4, 0),()),
		"ExportForceManifold" : ((10092, LCID, 4, 0),()),
		"ExportIGESBoundedSurfaces" : ((10098, LCID, 4, 0),()),
		"ExportIGESCurvesAsSplines" : ((10096, LCID, 4, 0),()),
		"ExportIGESCustomization" : ((10093, LCID, 4, 0),()),
		"ExportIGESGeometryFormat" : ((10095, LCID, 4, 0),()),
		"ExportIGESNonSolidCurves" : ((10100, LCID, 4, 0),()),
		"ExportIGESNonSolidPoints" : ((10099, LCID, 4, 0),()),
		"ExportIGESSurfacesAsSplines" : ((10097, LCID, 4, 0),()),
		"ExportIGESTrimCurveOption" : ((10094, LCID, 4, 0),()),
		"ExportNonSolidCurves" : ((10091, LCID, 4, 0),()),
		"ExportNonSolidPoints" : ((10090, LCID, 4, 0),()),
		"ExportVRMLBackground" : ((10105, LCID, 4, 0),()),
		"ExportVRMLBackgroundColor" : ((10107, LCID, 4, 0),()),
		"ExportVRMLColor" : ((10106, LCID, 4, 0),()),
		"ExportVRMLContour" : ((10103, LCID, 4, 0),()),
		"ExportVRMLDeformed" : ((10102, LCID, 4, 0),()),
		"ExportVRMLSingleColor" : ((10104, LCID, 4, 0),()),
		"ExportVRMLSolids" : ((10101, LCID, 4, 0),()),
		"ExportVersion" : ((10089, LCID, 4, 0),()),
		"IGESAltImportCurves" : ((10072, LCID, 4, 0),()),
		"IGESAltImportCustomizationType" : ((10076, LCID, 4, 0),()),
		"IGESAltImportPoints" : ((10071, LCID, 4, 0),()),
		"IGESAltImportSolids" : ((10075, LCID, 4, 0),()),
		"IGESAltImportTrimCurveOption" : ((10077, LCID, 4, 0),()),
		"IGESAltImportTrimmedSurfaces" : ((10074, LCID, 4, 0),()),
		"IGESAltImportUntrimmedSurfaces" : ((10073, LCID, 4, 0),()),
		"IGESAltOldImportColorLayer" : ((10078, LCID, 4, 0),()),
		"IGESAltOldImportGeometryOnly" : ((10079, LCID, 4, 0),()),
		"IGESAltOldImportMergeDistance" : ((10083, LCID, 4, 0),()),
		"IGESAltOldImportMergePoints" : ((10082, LCID, 4, 0),()),
		"IGESAltOldImportSurfaces" : ((10080, LCID, 4, 0),()),
		"IGESAltOldImportTrimCurveOption" : ((10081, LCID, 4, 0),()),
		"ImportBlanked" : ((10088, LCID, 4, 0),()),
		"ImportBodies" : ((10008, LCID, 4, 0),()),
		"ImportBodyTypes" : ((10087, LCID, 4, 0),()),
		"ImportColor" : ((10003, LCID, 4, 0),()),
		"ImportColorMode" : ((10004, LCID, 4, 0),()),
		"ImportCurves" : ((10011, LCID, 4, 0),()),
		"ImportFacetted" : ((10009, LCID, 4, 0),()),
		"ImportGeometryScale" : ((10000, LCID, 4, 0),()),
		"ImportIncrementColor" : ((10005, LCID, 4, 0),()),
		"ImportIncrementLayer" : ((10006, LCID, 4, 0),()),
		"ImportLayer" : ((10002, LCID, 4, 0),()),
		"ImportOptimize" : ((10013, LCID, 4, 0),()),
		"ImportOptimizeCatV5" : ((10016, LCID, 4, 0),()),
		"ImportOptimizeXT" : ((10018, LCID, 4, 0),()),
		"ImportPoints" : ((10012, LCID, 4, 0),()),
		"ImportPointsCatV5" : ((10015, LCID, 4, 0),()),
		"ImportShowDialog" : ((10086, LCID, 4, 0),()),
		"ImportSimplify" : ((10014, LCID, 4, 0),()),
		"ImportSimplifyCatV5" : ((10017, LCID, 4, 0),()),
		"ImportSurfaces" : ((10010, LCID, 4, 0),()),
		"ImportTitlePrefix" : ((10001, LCID, 4, 0),()),
		"ImportUpdateExistingGeometry" : ((10007, LCID, 4, 0),()),
		"ImportUseAlternateInterface" : ((10084, LCID, 4, 0),()),
		"ImportUseSimpleAlternateIGESInterface" : ((10085, LCID, 4, 0),()),
		"STEPAltAdvImport2DCurves" : ((10045, LCID, 4, 0),()),
		"STEPAltAdvImportCheckInput" : ((10052, LCID, 4, 0),()),
		"STEPAltAdvImportCheckOutput" : ((10053, LCID, 4, 0),()),
		"STEPAltAdvImportCurveBoundSurface" : ((10043, LCID, 4, 0),()),
		"STEPAltAdvImportExplodeAndStitch" : ((10047, LCID, 4, 0),()),
		"STEPAltAdvImportFaceted" : ((10039, LCID, 4, 0),()),
		"STEPAltAdvImportFixOrient" : ((10050, LCID, 4, 0),()),
		"STEPAltAdvImportProE" : ((10051, LCID, 4, 0),()),
		"STEPAltAdvImportRectangleSurfaces" : ((10044, LCID, 4, 0),()),
		"STEPAltAdvImportSimplify" : ((10048, LCID, 4, 0),()),
		"STEPAltAdvImportSmooth" : ((10046, LCID, 4, 0),()),
		"STEPAltAdvImportSolids" : ((10038, LCID, 4, 0),()),
		"STEPAltAdvImportStitch" : ((10049, LCID, 4, 0),()),
		"STEPAltAdvImportSurfaces" : ((10040, LCID, 4, 0),()),
		"STEPAltAdvImportWireframeC2" : ((10042, LCID, 4, 0),()),
		"STEPAltAdvImportWireframeC3" : ((10041, LCID, 4, 0),()),
		"STLImportCloseGaps" : ((10035, LCID, 4, 0),()),
		"STLImportMergeNodes" : ((10034, LCID, 4, 0),()),
		"STLImportPatranFile" : ((10036, LCID, 4, 0),()),
		"STLImportShortEdgeLength" : ((10037, LCID, 4, 0),()),
		"STLImportSkipShortEdge" : ((10033, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGlobalPly(DispatchBaseClass):
	CLSID = IID('{A09ECE66-9245-409B-9321-A2476AE7D4E7}')
	coclass_clsid = IID('{A09ECE68-9245-409B-9321-A2476AE7D4E7}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25005, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"failuretheory": (10003, 2, (3, 0), (), "failuretheory", None),
		"matlID": (10002, 2, (3, 0), (), "matlID", None),
		"thickness": (10001, 2, (5, 0), (), "thickness", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"validate": (10004, 2, (11, 0), (), "validate", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"failuretheory" : ((10003, LCID, 4, 0),()),
		"matlID" : ((10002, LCID, 4, 0),()),
		"thickness" : ((10001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"validate" : ((10004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGlobalStep(DispatchBaseClass):
	CLSID = IID('{4DEBC494-8BC4-4B09-A866-FF3A324BA3B7}')
	coclass_clsid = IID('{4DEBC496-8BC4-4B09-A866-FF3A324BA3B7}')

	def ActiveContactEntities(self, bContact=defaultNamedNotOptArg, nConnectorSetID=defaultNamedNotOptArg, nRegionSetID=defaultNamedNotOptArg, nConPropSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25010, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (3, 1)),bContact
			, nConnectorSetID, nRegionSetID, nConPropSetID)

	# The method BCSet is actually a property, but must be used as a method to correctly pass the arguments
	def BCSet(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteGlobalStep(self, nSetID=defaultNamedNotOptArg, nCaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25005, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nCaseID)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def InitGlobalStep(self, nSetID=defaultNamedNotOptArg, nCaseID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25004, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nCaseID)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	# The method Output is actually a property, but must be used as a method to correctly pass the arguments
	def Output(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetBCSet is actually a property, but must be used as a method to correctly pass the arguments
	def SetBCSet(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetOutput is actually a property, but must be used as a method to correctly pass the arguments
	def SetOutput(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ContactOption": (15177, 2, (3, 0), (), "ContactOption", None),
		"ContactSetType": (15178, 2, (3, 0), (), "ContactSetType", None),
		"CornerOutput": (15010, 2, (3, 0), (), "CornerOutput", None),
		"Destination": (15008, 2, (3, 0), (), "Destination", None),
		"Echo": (15004, 2, (8, 0), (), "Echo", None),
		"EndText": (15007, 2, (3, 0), (), "EndText", None),
		"GlobalStepAnalysisType": (15181, 2, (3, 0), (), "GlobalStepAnalysisType", None),
		"GlobalStepID": (15001, 2, (3, 0), (), "GlobalStepID", None),
		"GlobalStepLabel": (15176, 2, (8, 0), (), "GlobalStepLabel", None),
		"GlobalStepTitle": (15000, 2, (8, 0), (), "GlobalStepTitle", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Imaginary": (15009, 2, (3, 0), (), "Imaginary", None),
		"IntegrationOutput": (15011, 2, (3, 0), (), "IntegrationOutput", None),
		"NasCurvatureStrain": (15180, 2, (11, 0), (), "NasCurvatureStrain", None),
		"NasGlobalAlternateTextLocation": (15342, 2, (11, 0), (), "NasGlobalAlternateTextLocation", None),
		"NasInlStepOptADJUST": (15394, 2, (3, 0), (), "NasInlStepOptADJUST", None),
		"NasInlStepOptCREEP": (15366, 2, (11, 0), (), "NasInlStepOptCREEP", None),
		"NasInlStepOptCTRLDEF": (15362, 2, (3, 0), (), "NasInlStepOptCTRLDEF", None),
		"NasInlStepOptConvA": (15411, 2, (11, 0), (), "NasInlStepOptConvA", None),
		"NasInlStepOptConvN": (15410, 2, (11, 0), (), "NasInlStepOptConvN", None),
		"NasInlStepOptConvP": (15407, 2, (11, 0), (), "NasInlStepOptConvP", None),
		"NasInlStepOptConvU": (15406, 2, (11, 0), (), "NasInlStepOptConvU", None),
		"NasInlStepOptConvV": (15409, 2, (11, 0), (), "NasInlStepOptConvV", None),
		"NasInlStepOptConvW": (15408, 2, (11, 0), (), "NasInlStepOptConvW", None),
		"NasInlStepOptDAMP": (15378, 2, (5, 0), (), "NasInlStepOptDAMP", None),
		"NasInlStepOptDTINITF": (15370, 2, (5, 0), (), "NasInlStepOptDTINITF", None),
		"NasInlStepOptDTINITFA": (15399, 2, (5, 0), (), "NasInlStepOptDTINITFA", None),
		"NasInlStepOptDTMAXF": (15372, 2, (5, 0), (), "NasInlStepOptDTMAXF", None),
		"NasInlStepOptDTMINF": (15371, 2, (5, 0), (), "NasInlStepOptDTMINF", None),
		"NasInlStepOptEPSP": (15413, 2, (5, 0), (), "NasInlStepOptEPSP", None),
		"NasInlStepOptEPSU": (15412, 2, (5, 0), (), "NasInlStepOptEPSU", None),
		"NasInlStepOptEPSW": (15414, 2, (5, 0), (), "NasInlStepOptEPSW", None),
		"NasInlStepOptEnableCriteria": (15379, 2, (11, 0), (), "NasInlStepOptEnableCriteria", None),
		"NasInlStepOptFSTRESS": (15421, 2, (5, 0), (), "NasInlStepOptFSTRESS", None),
		"NasInlStepOptGroupIDs": (15385, 2, (12, 0), (), "NasInlStepOptGroupIDs", None),
		"NasInlStepOptID": (15360, 2, (3, 0), (), "NasInlStepOptID", None),
		"NasInlStepOptIDAMP": (15377, 2, (3, 0), (), "NasInlStepOptIDAMP", None),
		"NasInlStepOptINTOUT": (15375, 2, (3, 0), (), "NasInlStepOptINTOUT", None),
		"NasInlStepOptIPHYS": (15380, 2, (3, 0), (), "NasInlStepOptIPHYS", None),
		"NasInlStepOptIncrements": (15384, 2, (12, 0), (), "NasInlStepOptIncrements", None),
		"NasInlStepOptKMETHOD": (15415, 2, (3, 0), (), "NasInlStepOptKMETHOD", None),
		"NasInlStepOptKSTEP": (15416, 2, (3, 0), (), "NasInlStepOptKSTEP", None),
		"NasInlStepOptLIMTAR": (15381, 2, (3, 0), (), "NasInlStepOptLIMTAR", None),
		"NasInlStepOptLSTOL": (15420, 2, (5, 0), (), "NasInlStepOptLSTOL", None),
		"NasInlStepOptLoadStepping": (15367, 2, (3, 0), (), "NasInlStepOptLoadStepping", None),
		"NasInlStepOptMAXALR": (15401, 2, (5, 0), (), "NasInlStepOptMAXALR", None),
		"NasInlStepOptMAXBIS": (15365, 2, (3, 0), (), "NasInlStepOptMAXBIS", None),
		"NasInlStepOptMAXITER": (15363, 2, (3, 0), (), "NasInlStepOptMAXITER", None),
		"NasInlStepOptMAXLS": (15419, 2, (3, 0), (), "NasInlStepOptMAXLS", None),
		"NasInlStepOptMAXQN": (15418, 2, (3, 0), (), "NasInlStepOptMAXQN", None),
		"NasInlStepOptMECH": (15405, 2, (11, 0), (), "NasInlStepOptMECH", None),
		"NasInlStepOptMINALR": (15400, 2, (5, 0), (), "NasInlStepOptMINALR", None),
		"NasInlStepOptMINITER": (15364, 2, (3, 0), (), "NasInlStepOptMINITER", None),
		"NasInlStepOptMRCONV": (15417, 2, (3, 0), (), "NasInlStepOptMRCONV", None),
		"NasInlStepOptMSTEP": (15395, 2, (3, 0), (), "NasInlStepOptMSTEP", None),
		"NasInlStepOptMT1_i": (15390, 2, (12, 0), (), "NasInlStepOptMT1_i", None),
		"NasInlStepOptMT2_i": (15391, 2, (12, 0), (), "NasInlStepOptMT2_i", None),
		"NasInlStepOptMT3_i": (15392, 2, (12, 0), (), "NasInlStepOptMT3_i", None),
		"NasInlStepOptMT4_i": (15393, 2, (12, 0), (), "NasInlStepOptMT4_i", None),
		"NasInlStepOptNDESIR": (15373, 2, (3, 0), (), "NasInlStepOptNDESIR", None),
		"NasInlStepOptNDESIRA": (15403, 2, (3, 0), (), "NasInlStepOptNDESIRA", None),
		"NasInlStepOptNINC": (15368, 2, (3, 0), (), "NasInlStepOptNINC", None),
		"NasInlStepOptNO": (15369, 2, (3, 0), (), "NasInlStepOptNO", None),
		"NasInlStepOptNSMAX": (15376, 2, (3, 0), (), "NasInlStepOptNSMAX", None),
		"NasInlStepOptNSMAXA": (15404, 2, (3, 0), (), "NasInlStepOptNSMAXA", None),
		"NasInlStepOptOn": (15358, 2, (11, 0), (), "NasInlStepOptOn", None),
		"NasInlStepOptRB": (15396, 2, (5, 0), (), "NasInlStepOptRB", None),
		"NasInlStepOptRBIG": (15383, 2, (5, 0), (), "NasInlStepOptRBIG", None),
		"NasInlStepOptRSMALL": (15382, 2, (5, 0), (), "NasInlStepOptRSMALL", None),
		"NasInlStepOptSCALEA": (15402, 2, (5, 0), (), "NasInlStepOptSCALEA", None),
		"NasInlStepOptSFACT": (15374, 2, (5, 0), (), "NasInlStepOptSFACT", None),
		"NasInlStepOptSkipNLSTEP": (15359, 2, (11, 0), (), "NasInlStepOptSkipNLSTEP", None),
		"NasInlStepOptTOTTIM": (15361, 2, (5, 0), (), "NasInlStepOptTOTTIM", None),
		"NasInlStepOptTYPE": (15398, 2, (3, 0), (), "NasInlStepOptTYPE", None),
		"NasInlStepOptUTOL": (15397, 2, (5, 0), (), "NasInlStepOptUTOL", None),
		"NasInlStepOptYT1_i": (15386, 2, (12, 0), (), "NasInlStepOptYT1_i", None),
		"NasInlStepOptYT2_i": (15387, 2, (12, 0), (), "NasInlStepOptYT2_i", None),
		"NasInlStepOptYT3_i": (15388, 2, (12, 0), (), "NasInlStepOptYT3_i", None),
		"NasInlStepOptYT4_i": (15389, 2, (12, 0), (), "NasInlStepOptYT4_i", None),
		"NasModeDampOverall": (10404, 2, (5, 0), (), "NasModeDampOverall", None),
		"NasModeDesiredRoots": (10056, 2, (3, 0), (), "NasModeDesiredRoots", None),
		"NasModeEigrSet": (10051, 2, (3, 0), (), "NasModeEigrSet", None),
		"NasModeEstRoots": (10055, 2, (3, 0), (), "NasModeEstRoots", None),
		"NasModeMassForm": (10060, 2, (3, 0), (), "NasModeMassForm", None),
		"NasModeMethod": (10052, 2, (3, 0), (), "NasModeMethod", None),
		"NasModeNormDOF": (10059, 2, (3, 0), (), "NasModeNormDOF", None),
		"NasModeNormNode": (10058, 2, (3, 0), (), "NasModeNormNode", None),
		"NasModeNormOpt": (10057, 2, (3, 0), (), "NasModeNormOpt", None),
		"NasModeOn": (10050, 2, (11, 0), (), "NasModeOn", None),
		"NasModeSolutionType": (10053, 2, (11, 0), (), "NasModeSolutionType", None),
		"NasModesComplexConverge": (10321, 2, (5, 0), (), "NasModesComplexConverge", None),
		"NasModesComplexRegionWidth": (10322, 2, (5, 0), (), "NasModesComplexRegionWidth", None),
		"NasModesSkipEigr": (10319, 2, (11, 0), (), "NasModesSkipEigr", None),
		"NasOmodes": (15085, 2, (8, 0), (), "NasOmodes", None),
		"NasOmodesOn": (15084, 2, (11, 0), (), "NasOmodesOn", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"SkipStandard": (15005, 2, (11, 0), (), "SkipStandard", None),
		"StartText": (15006, 2, (3, 0), (), "StartText", None),
		"vBCSet": (15086, 2, (12, 0), (), "vBCSet", None),
		"vNasModeFreqRange": (10216, 2, (12, 0), (), "vNasModeFreqRange", None),
		"vNasModeImagFreqRange": (10320, 2, (12, 0), (), "vNasModeImagFreqRange", None),
		"vOutput": (15087, 2, (12, 0), (), "vOutput", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ContactOption" : ((15177, LCID, 4, 0),()),
		"ContactSetType" : ((15178, LCID, 4, 0),()),
		"CornerOutput" : ((15010, LCID, 4, 0),()),
		"Destination" : ((15008, LCID, 4, 0),()),
		"Echo" : ((15004, LCID, 4, 0),()),
		"EndText" : ((15007, LCID, 4, 0),()),
		"GlobalStepAnalysisType" : ((15181, LCID, 4, 0),()),
		"GlobalStepID" : ((15001, LCID, 4, 0),()),
		"GlobalStepLabel" : ((15176, LCID, 4, 0),()),
		"GlobalStepTitle" : ((15000, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Imaginary" : ((15009, LCID, 4, 0),()),
		"IntegrationOutput" : ((15011, LCID, 4, 0),()),
		"NasCurvatureStrain" : ((15180, LCID, 4, 0),()),
		"NasGlobalAlternateTextLocation" : ((15342, LCID, 4, 0),()),
		"NasInlStepOptADJUST" : ((15394, LCID, 4, 0),()),
		"NasInlStepOptCREEP" : ((15366, LCID, 4, 0),()),
		"NasInlStepOptCTRLDEF" : ((15362, LCID, 4, 0),()),
		"NasInlStepOptConvA" : ((15411, LCID, 4, 0),()),
		"NasInlStepOptConvN" : ((15410, LCID, 4, 0),()),
		"NasInlStepOptConvP" : ((15407, LCID, 4, 0),()),
		"NasInlStepOptConvU" : ((15406, LCID, 4, 0),()),
		"NasInlStepOptConvV" : ((15409, LCID, 4, 0),()),
		"NasInlStepOptConvW" : ((15408, LCID, 4, 0),()),
		"NasInlStepOptDAMP" : ((15378, LCID, 4, 0),()),
		"NasInlStepOptDTINITF" : ((15370, LCID, 4, 0),()),
		"NasInlStepOptDTINITFA" : ((15399, LCID, 4, 0),()),
		"NasInlStepOptDTMAXF" : ((15372, LCID, 4, 0),()),
		"NasInlStepOptDTMINF" : ((15371, LCID, 4, 0),()),
		"NasInlStepOptEPSP" : ((15413, LCID, 4, 0),()),
		"NasInlStepOptEPSU" : ((15412, LCID, 4, 0),()),
		"NasInlStepOptEPSW" : ((15414, LCID, 4, 0),()),
		"NasInlStepOptEnableCriteria" : ((15379, LCID, 4, 0),()),
		"NasInlStepOptFSTRESS" : ((15421, LCID, 4, 0),()),
		"NasInlStepOptGroupIDs" : ((15385, LCID, 4, 0),()),
		"NasInlStepOptID" : ((15360, LCID, 4, 0),()),
		"NasInlStepOptIDAMP" : ((15377, LCID, 4, 0),()),
		"NasInlStepOptINTOUT" : ((15375, LCID, 4, 0),()),
		"NasInlStepOptIPHYS" : ((15380, LCID, 4, 0),()),
		"NasInlStepOptIncrements" : ((15384, LCID, 4, 0),()),
		"NasInlStepOptKMETHOD" : ((15415, LCID, 4, 0),()),
		"NasInlStepOptKSTEP" : ((15416, LCID, 4, 0),()),
		"NasInlStepOptLIMTAR" : ((15381, LCID, 4, 0),()),
		"NasInlStepOptLSTOL" : ((15420, LCID, 4, 0),()),
		"NasInlStepOptLoadStepping" : ((15367, LCID, 4, 0),()),
		"NasInlStepOptMAXALR" : ((15401, LCID, 4, 0),()),
		"NasInlStepOptMAXBIS" : ((15365, LCID, 4, 0),()),
		"NasInlStepOptMAXITER" : ((15363, LCID, 4, 0),()),
		"NasInlStepOptMAXLS" : ((15419, LCID, 4, 0),()),
		"NasInlStepOptMAXQN" : ((15418, LCID, 4, 0),()),
		"NasInlStepOptMECH" : ((15405, LCID, 4, 0),()),
		"NasInlStepOptMINALR" : ((15400, LCID, 4, 0),()),
		"NasInlStepOptMINITER" : ((15364, LCID, 4, 0),()),
		"NasInlStepOptMRCONV" : ((15417, LCID, 4, 0),()),
		"NasInlStepOptMSTEP" : ((15395, LCID, 4, 0),()),
		"NasInlStepOptMT1_i" : ((15390, LCID, 4, 0),()),
		"NasInlStepOptMT2_i" : ((15391, LCID, 4, 0),()),
		"NasInlStepOptMT3_i" : ((15392, LCID, 4, 0),()),
		"NasInlStepOptMT4_i" : ((15393, LCID, 4, 0),()),
		"NasInlStepOptNDESIR" : ((15373, LCID, 4, 0),()),
		"NasInlStepOptNDESIRA" : ((15403, LCID, 4, 0),()),
		"NasInlStepOptNINC" : ((15368, LCID, 4, 0),()),
		"NasInlStepOptNO" : ((15369, LCID, 4, 0),()),
		"NasInlStepOptNSMAX" : ((15376, LCID, 4, 0),()),
		"NasInlStepOptNSMAXA" : ((15404, LCID, 4, 0),()),
		"NasInlStepOptOn" : ((15358, LCID, 4, 0),()),
		"NasInlStepOptRB" : ((15396, LCID, 4, 0),()),
		"NasInlStepOptRBIG" : ((15383, LCID, 4, 0),()),
		"NasInlStepOptRSMALL" : ((15382, LCID, 4, 0),()),
		"NasInlStepOptSCALEA" : ((15402, LCID, 4, 0),()),
		"NasInlStepOptSFACT" : ((15374, LCID, 4, 0),()),
		"NasInlStepOptSkipNLSTEP" : ((15359, LCID, 4, 0),()),
		"NasInlStepOptTOTTIM" : ((15361, LCID, 4, 0),()),
		"NasInlStepOptTYPE" : ((15398, LCID, 4, 0),()),
		"NasInlStepOptUTOL" : ((15397, LCID, 4, 0),()),
		"NasInlStepOptYT1_i" : ((15386, LCID, 4, 0),()),
		"NasInlStepOptYT2_i" : ((15387, LCID, 4, 0),()),
		"NasInlStepOptYT3_i" : ((15388, LCID, 4, 0),()),
		"NasInlStepOptYT4_i" : ((15389, LCID, 4, 0),()),
		"NasModeDampOverall" : ((10404, LCID, 4, 0),()),
		"NasModeDesiredRoots" : ((10056, LCID, 4, 0),()),
		"NasModeEigrSet" : ((10051, LCID, 4, 0),()),
		"NasModeEstRoots" : ((10055, LCID, 4, 0),()),
		"NasModeMassForm" : ((10060, LCID, 4, 0),()),
		"NasModeMethod" : ((10052, LCID, 4, 0),()),
		"NasModeNormDOF" : ((10059, LCID, 4, 0),()),
		"NasModeNormNode" : ((10058, LCID, 4, 0),()),
		"NasModeNormOpt" : ((10057, LCID, 4, 0),()),
		"NasModeOn" : ((10050, LCID, 4, 0),()),
		"NasModeSolutionType" : ((10053, LCID, 4, 0),()),
		"NasModesComplexConverge" : ((10321, LCID, 4, 0),()),
		"NasModesComplexRegionWidth" : ((10322, LCID, 4, 0),()),
		"NasModesSkipEigr" : ((10319, LCID, 4, 0),()),
		"NasOmodes" : ((15085, LCID, 4, 0),()),
		"NasOmodesOn" : ((15084, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"SkipStandard" : ((15005, LCID, 4, 0),()),
		"StartText" : ((15006, LCID, 4, 0),()),
		"vBCSet" : ((15086, LCID, 4, 0),()),
		"vNasModeFreqRange" : ((10216, LCID, 4, 0),()),
		"vNasModeImagFreqRange" : ((10320, LCID, 4, 0),()),
		"vOutput" : ((15087, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGroup(DispatchBaseClass):
	CLSID = IID('{FA671D08-F7A8-11D4-9457-001083FFF11C}')
	coclass_clsid = IID('{FA671D0A-F7A8-11D4-9457-001083FFF11C}')

	def Add(self, entityTYPE=defaultNamedNotOptArg, nEntityID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, nEntityID)

	def Add2(self, entityTYPE=defaultNamedNotOptArg, nEntityID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, nEntityID)

	def AddOpt2(self, entityTYPE=defaultNamedNotOptArg, nEntityID=defaultNamedNotOptArg, addOpt=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, nEntityID, addOpt)

	def AddRelated(self):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), (),)

	def CountList(self, listTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1),),listTYPE
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetList(self, listTYPE=defaultNamedNotOptArg, SetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((3, 1), (3, 1)),listTYPE
			, SetID)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def HasList(self, listTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((3, 1),),listTYPE
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	# Result is of type ISet
	def List(self, listTYPE=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20007, LCID, 1, (9, 0), ((3, 1),),listTYPE
			)
		if ret is not None:
			ret = Dispatch(ret, 'List', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	# The method PlaneClipBase is actually a property, but must be used as a method to correctly pass the arguments
	def PlaneClipBase(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method PlaneClipDir is actually a property, but must be used as a method to correctly pass the arguments
	def PlaneClipDir(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method PlaneClipNeg is actually a property, but must be used as a method to correctly pass the arguments
	def PlaneClipNeg(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method PlaneClipOn is actually a property, but must be used as a method to correctly pass the arguments
	def PlaneClipOn(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	# Result is of type ISet
	def Range(self, rangeType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20014, LCID, 1, (9, 0), ((3, 1),),rangeType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Range', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def RangeAdd(self, rangeType=defaultNamedNotOptArg, startID=defaultNamedNotOptArg, stopID=defaultNamedNotOptArg, increment=defaultNamedNotOptArg
			, inClude=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),rangeType
			, startID, stopID, increment, inClude)

	def RangeDelete(self, rangeType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),rangeType
			)

	def RangeDeleteAll(self, rangeType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1),),rangeType
			)

	def RangeGetAll(self, rangeType=defaultNamedNotOptArg, rangeCount=pythoncom.Missing, startID=pythoncom.Missing, stopID=pythoncom.Missing
			, increment=pythoncom.Missing, inClude=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'RangeGetAll', None,rangeType
			, rangeCount, startID, stopID, increment, inClude
			)

	def RangeNext(self, rangeType=defaultNamedNotOptArg, startID=pythoncom.Missing, stopID=pythoncom.Missing, increment=pythoncom.Missing
			, inClude=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'RangeNext', None,rangeType
			, startID, stopID, increment, inClude)

	def RangeReset(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	# Result is of type ISet
	def ReferencedGroups(self):
		ret = self._oleobj_.InvokeTypes(20017, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'ReferencedGroups', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectAllOnLayer(self, startLayer=defaultNamedNotOptArg, endLayer=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (3, 1)),startLayer
			, endLayer)

	def SelectContact(self, contactSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1),),contactSET
			)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectMesh(self, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1),),elemSET
			)

	def SelectModel(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def SetAdd(self, entityTYPE=defaultNamedNotOptArg, SetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, SetID)

	def SetAdd2(self, entityTYPE=defaultNamedNotOptArg, SetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, SetID)

	def SetAddOpt(self, entityTYPE=defaultNamedNotOptArg, SetID=defaultNamedNotOptArg, addOpt=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, SetID, addOpt)

	def SetAddOpt2(self, entityTYPE=defaultNamedNotOptArg, SetID=defaultNamedNotOptArg, addOpt=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, SetID, addOpt)

	# The method SetPlaneClipBase is actually a property, but must be used as a method to correctly pass the arguments
	def SetPlaneClipBase(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetPlaneClipDir is actually a property, but must be used as a method to correctly pass the arguments
	def SetPlaneClipDir(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetPlaneClipNeg is actually a property, but must be used as a method to correctly pass the arguments
	def SetPlaneClipNeg(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetPlaneClipOn is actually a property, but must be used as a method to correctly pass the arguments
	def SetPlaneClipOn(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	def SetReferencedGroups(self, SetID=defaultNamedNotOptArg, clear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), ((3, 1), (11, 1)),SetID
			, clear)

	def addOpt(self, entityTYPE=defaultNamedNotOptArg, nEntityID=defaultNamedNotOptArg, addOpt=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, nEntityID, addOpt)

	def clear(self):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Condense": (10016, 2, (11, 0), (), "Condense", None),
		"CoordClipCSys": (10007, 2, (3, 0), (), "CoordClipCSys", None),
		"CoordClipDir": (10008, 2, (3, 0), (), "CoordClipDir", None),
		"CoordClipMax": (10006, 2, (5, 0), (), "CoordClipMax", None),
		"CoordClipMin": (10005, 2, (5, 0), (), "CoordClipMin", None),
		"CoordClipMode": (10004, 2, (3, 0), (), "CoordClipMode", None),
		"CoordClipOn": (10003, 2, (3, 0), (), "CoordClipOn", None),
		"EvalAlways": (10017, 2, (11, 0), (), "EvalAlways", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"LayerMax": (10002, 2, (3, 0), (), "LayerMax", None),
		"LayerMin": (10001, 2, (3, 0), (), "LayerMin", None),
		"LayerMode": (10000, 2, (3, 0), (), "LayerMode", None),
		"NeedEval": (10015, 2, (11, 0), (), "NeedEval", None),
		"PlaneClipInside": (10010, 2, (11, 0), (), "PlaneClipInside", None),
		"PlaneClipMode": (10009, 2, (3, 0), (), "PlaneClipMode", None),
		"ReduceToExisting": (10024, 2, (11, 0), (), "ReduceToExisting", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"renumber": (10019, 2, (11, 0), (), "renumber", None),
		"title": (10018, 2, (8, 0), (), "title", None),
		"vPlaneClipBase": (10022, 2, (12, 0), (), "vPlaneClipBase", None),
		"vPlaneClipDir": (10023, 2, (12, 0), (), "vPlaneClipDir", None),
		"vPlaneClipNeg": (10020, 2, (12, 0), (), "vPlaneClipNeg", None),
		"vPlaneClipOn": (10021, 2, (12, 0), (), "vPlaneClipOn", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Condense" : ((10016, LCID, 4, 0),()),
		"CoordClipCSys" : ((10007, LCID, 4, 0),()),
		"CoordClipDir" : ((10008, LCID, 4, 0),()),
		"CoordClipMax" : ((10006, LCID, 4, 0),()),
		"CoordClipMin" : ((10005, LCID, 4, 0),()),
		"CoordClipMode" : ((10004, LCID, 4, 0),()),
		"CoordClipOn" : ((10003, LCID, 4, 0),()),
		"EvalAlways" : ((10017, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"LayerMax" : ((10002, LCID, 4, 0),()),
		"LayerMin" : ((10001, LCID, 4, 0),()),
		"LayerMode" : ((10000, LCID, 4, 0),()),
		"NeedEval" : ((10015, LCID, 4, 0),()),
		"PlaneClipInside" : ((10010, LCID, 4, 0),()),
		"PlaneClipMode" : ((10009, LCID, 4, 0),()),
		"ReduceToExisting" : ((10024, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"renumber" : ((10019, LCID, 4, 0),()),
		"title" : ((10018, LCID, 4, 0),()),
		"vPlaneClipBase" : ((10022, LCID, 4, 0),()),
		"vPlaneClipDir" : ((10023, LCID, 4, 0),()),
		"vPlaneClipNeg" : ((10020, LCID, 4, 0),()),
		"vPlaneClipOn" : ((10021, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInterpolate(DispatchBaseClass):
	CLSID = IID('{60266D03-AF68-4B10-906C-4BDAFADE3746}')
	coclass_clsid = IID('{60266D05-AF68-4B10-906C-4BDAFADE3746}')

	def AddElements(self, nElemSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),nElemSetID
			)

	def AddNodalV2(self, nSetID=defaultNamedNotOptArg, nX=defaultNamedNotOptArg, nY=defaultNamedNotOptArg, nZ=defaultNamedNotOptArg
			, nRX=defaultNamedNotOptArg, nRY=defaultNamedNotOptArg, nRZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nSetID
			, nX, nY, nZ, nRX, nRY
			, nRZ)

	def AddScalarV2(self, nSetID=defaultNamedNotOptArg, nVecID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nVecID)

	def AddTensor2DV2(self, nSetID=defaultNamedNotOptArg, nVecX=defaultNamedNotOptArg, nVecY=defaultNamedNotOptArg, nVecXY=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20038, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nSetID
			, nVecX, nVecY, nVecXY)

	def AddTensorV2(self, nSetID=defaultNamedNotOptArg, nVecX=defaultNamedNotOptArg, nVecY=defaultNamedNotOptArg, nVecZ=defaultNamedNotOptArg
			, nVecXY=defaultNamedNotOptArg, nVecYZ=defaultNamedNotOptArg, nVecZX=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nSetID
			, nVecX, nVecY, nVecZ, nVecXY, nVecYZ
			, nVecZX)

	def AddVectorV2(self, nSetID=defaultNamedNotOptArg, nVecX=defaultNamedNotOptArg, nVecY=defaultNamedNotOptArg, nVecZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nSetID
			, nVecX, nVecY, nVecZ)

	# The method AmbientTensor is actually a property, but must be used as a method to correctly pass the arguments
	def AmbientTensor(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method AmbientVector is actually a property, but must be used as a method to correctly pass the arguments
	def AmbientVector(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def ClearResults(self):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), (),)

	def FindElement(self, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((12, 1), (16387, 2)), 'FindElement', None,vCoord
			, nElemID)

	def FindInvariant(self, vCoord=defaultNamedNotOptArg, nInvariantType=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20014, 1, (3, 0), ((12, 1), (3, 1), (16387, 2), (16389, 2)), 'FindInvariant', None,vCoord
			, nInvariantType, nElemID, dValue)

	def FindNodal(self, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dX=pythoncom.Missing, dY=pythoncom.Missing
			, dZ=pythoncom.Missing, dRX=pythoncom.Missing, dRY=pythoncom.Missing, dRZ=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((12, 1), (16387, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'FindNodal', None,vCoord
			, nElemID, dX, dY, dZ, dRX
			, dRY, dRZ)

	def FindScalar(self, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((12, 1), (16387, 2), (16389, 2)), 'FindScalar', None,vCoord
			, nElemID, dValue)

	def FindTensor(self, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dX=pythoncom.Missing, dY=pythoncom.Missing
			, dZ=pythoncom.Missing, dXY=pythoncom.Missing, dYZ=pythoncom.Missing, dZX=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((12, 1), (16387, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'FindTensor', None,vCoord
			, nElemID, dX, dY, dZ, dXY
			, dYZ, dZX)

	def FindTensor2D(self, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dX=pythoncom.Missing, dY=pythoncom.Missing
			, dXY=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((12, 1), (16387, 2), (16389, 2), (16389, 2), (16389, 2)), 'FindTensor2D', None,vCoord
			, nElemID, dX, dY, dXY)

	def FindVector(self, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dX=pythoncom.Missing, dY=pythoncom.Missing
			, dZ=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((12, 1), (16387, 2), (16389, 2), (16389, 2), (16389, 2)), 'FindVector', None,vCoord
			, nElemID, dX, dY, dZ)

	def FindVector2(self, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dX=pythoncom.Missing, dY=pythoncom.Missing
			, dZ=pythoncom.Missing):
		return self._ApplyTypes_(20034, 1, (3, 0), ((12, 1), (16387, 2), (16389, 2), (16389, 2), (16389, 2)), 'FindVector2', None,vCoord
			, nElemID, dX, dY, dZ)

	def FindVectorTotal(self, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dTotal=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((12, 1), (16387, 2), (16389, 2)), 'FindVectorTotal', None,vCoord
			, nElemID, dTotal)

	def MultiElement(self, nNumCoord=defaultNamedNotOptArg, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((3, 1), (12, 1), (16396, 2)), 'MultiElement', None,nNumCoord
			, vCoord, nElemID)

	def MultiInvariant(self, nNumCoord=defaultNamedNotOptArg, vCoord=defaultNamedNotOptArg, nInvariantType=defaultNamedNotOptArg, nElemID=pythoncom.Missing
			, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20022, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (16396, 2), (16396, 2)), 'MultiInvariant', None,nNumCoord
			, vCoord, nInvariantType, nElemID, dValue)

	def MultiNodal(self, nNumCoord=defaultNamedNotOptArg, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dX=pythoncom.Missing
			, dY=pythoncom.Missing, dZ=pythoncom.Missing, dRX=pythoncom.Missing, dRY=pythoncom.Missing, dRZ=pythoncom.Missing):
		return self._ApplyTypes_(20023, 1, (3, 0), ((3, 1), (12, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'MultiNodal', None,nNumCoord
			, vCoord, nElemID, dX, dY, dZ
			, dRX, dRY, dRZ)

	def MultiScalar(self, nNumCoord=defaultNamedNotOptArg, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((3, 1), (12, 1), (16396, 2), (16396, 2)), 'MultiScalar', None,nNumCoord
			, vCoord, nElemID, dValue)

	def MultiTensor(self, nNumCoord=defaultNamedNotOptArg, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dX=pythoncom.Missing
			, dY=pythoncom.Missing, dZ=pythoncom.Missing, dXY=pythoncom.Missing, dYZ=pythoncom.Missing, dZX=pythoncom.Missing):
		return self._ApplyTypes_(20021, 1, (3, 0), ((3, 1), (12, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'MultiTensor', None,nNumCoord
			, vCoord, nElemID, dX, dY, dZ
			, dXY, dYZ, dZX)

	def MultiTensor2D(self, nNumCoord=defaultNamedNotOptArg, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dX=pythoncom.Missing
			, dY=pythoncom.Missing, dXY=pythoncom.Missing):
		return self._ApplyTypes_(20020, 1, (3, 0), ((3, 1), (12, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'MultiTensor2D', None,nNumCoord
			, vCoord, nElemID, dX, dY, dXY
			)

	def MultiVector(self, nNumCoord=defaultNamedNotOptArg, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dX=pythoncom.Missing
			, dY=pythoncom.Missing, dZ=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((3, 1), (12, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'MultiVector', None,nNumCoord
			, vCoord, nElemID, dX, dY, dZ
			)

	def MultiVectorTotal(self, nNumCoord=defaultNamedNotOptArg, vCoord=defaultNamedNotOptArg, nElemID=pythoncom.Missing, dTotal=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((3, 1), (12, 1), (16396, 2), (16396, 2)), 'MultiVectorTotal', None,nNumCoord
			, vCoord, nElemID, dTotal)

	# The method SetAmbientTensor is actually a property, but must be used as a method to correctly pass the arguments
	def SetAmbientTensor(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetAmbientVector is actually a property, but must be used as a method to correctly pass the arguments
	def SetAmbientVector(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	def SetComplexOptions(self, bExpandComplex=defaultNamedNotOptArg, dComplexPhase=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), ((11, 1), (5, 1)),bExpandComplex
			, dComplexPhase)

	def SetGlobalPly(self, nGlobalPly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), ((3, 1),),nGlobalPly
			)

	def SetNodalTransform(self, nTransformMode=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1), (3, 1)),nTransformMode
			, nCSysID)

	def SetOutputMode(self, nConvertMode=defaultNamedNotOptArg, bAverageCorners=defaultNamedNotOptArg, bBreakProp=defaultNamedNotOptArg, bBreakMatl=defaultNamedNotOptArg
			, bBreakLayer=defaultNamedNotOptArg, bBreakColor=defaultNamedNotOptArg, bBreakGeom=defaultNamedNotOptArg, dBreakAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (5, 1)),nConvertMode
			, bAverageCorners, bBreakProp, bBreakMatl, bBreakLayer, bBreakColor
			, bBreakGeom, dBreakAngle)

	def SetOutputMode2(self, nConvertMode=defaultNamedNotOptArg, bAverageCorners=defaultNamedNotOptArg, bBreakLinearParabolic=defaultNamedNotOptArg, bBreakProp=defaultNamedNotOptArg
			, bBreakMatl=defaultNamedNotOptArg, bBreakLayer=defaultNamedNotOptArg, bBreakColor=defaultNamedNotOptArg, bBreakGeom=defaultNamedNotOptArg, dBreakAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20041, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (5, 1)),nConvertMode
			, bAverageCorners, bBreakLinearParabolic, bBreakProp, bBreakMatl, bBreakLayer
			, bBreakColor, bBreakGeom, dBreakAngle)

	def SetOutputOrientQuad4(self, nStress=defaultNamedNotOptArg, nStrain=defaultNamedNotOptArg, nForce=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nStress
			, nStrain, nForce)

	def SetOutputOrientQuad8(self, nStress=defaultNamedNotOptArg, nStrain=defaultNamedNotOptArg, nForce=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nStress
			, nStrain, nForce)

	def SetOutputOrientSolid(self, nIsotropic=defaultNamedNotOptArg, nAnisotropic=defaultNamedNotOptArg, nHyperelastic=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nIsotropic
			, nAnisotropic, nHyperelastic)

	def SetOutputOrientTri3(self, nStress=defaultNamedNotOptArg, nStrain=defaultNamedNotOptArg, nForce=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nStress
			, nStrain, nForce)

	def SetOutputOrientTri6(self, nStress=defaultNamedNotOptArg, nStrain=defaultNamedNotOptArg, nForce=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nStress
			, nStrain, nForce)

	def SetPlateTransform(self, nTransformMode=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg, nDOF=defaultNamedNotOptArg, vAlongVector=defaultNamedNotOptArg
			, dToleranceAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (5, 1)),nTransformMode
			, nCSysID, nDOF, vAlongVector, dToleranceAngle)

	def SetSolidTransform(self, nTransformMode=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1), (3, 1)),nTransformMode
			, nCSysID)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"AmbientScalar": (10004, 2, (5, 0), (), "AmbientScalar", None),
		"CentroidAveraging": (10000, 2, (11, 0), (), "CentroidAveraging", None),
		"DistanceTolerance": (10003, 2, (5, 0), (), "DistanceTolerance", None),
		"EngineeringShearStrain": (10002, 2, (11, 0), (), "EngineeringShearStrain", None),
		"UseSolidFreeFacesOnly": (10001, 2, (11, 0), (), "UseSolidFreeFacesOnly", None),
		"vAmbientTensor": (10006, 2, (12, 0), (), "vAmbientTensor", None),
		"vAmbientVector": (10005, 2, (12, 0), (), "vAmbientVector", None),
	}
	_prop_map_put_ = {
		"AmbientScalar" : ((10004, LCID, 4, 0),()),
		"CentroidAveraging" : ((10000, LCID, 4, 0),()),
		"DistanceTolerance" : ((10003, LCID, 4, 0),()),
		"EngineeringShearStrain" : ((10002, LCID, 4, 0),()),
		"UseSolidFreeFacesOnly" : ((10001, LCID, 4, 0),()),
		"vAmbientTensor" : ((10006, LCID, 4, 0),()),
		"vAmbientVector" : ((10005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IJoint(DispatchBaseClass):
	CLSID = IID('{51AE9787-73AE-4D75-85E7-328734699211}')
	coclass_clsid = IID('{51AE9789-73AE-4D75-85E7-328734699211}')

	def ClearMotionSet(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def ClearReferenceSet(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetMotionSet(self, pMotionSet=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((16393, 2),), 'GetMotionSet', None,pMotionSet
			)

	def GetReferenceSet(self, pReferenceSet=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16393, 2),), 'GetReferenceSet', None,pReferenceSet
			)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	# The method JointLoc1 is actually a property, but must be used as a method to correctly pass the arguments
	def JointLoc1(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method JointLoc2 is actually a property, but must be used as a method to correctly pass the arguments
	def JointLoc2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method JointProp is actually a property, but must be used as a method to correctly pass the arguments
	def JointProp(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutMotionSet(self, pMotionSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((16393, 1),),pMotionSet
			)

	def PutReferenceSet(self, pReferenceSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((16393, 1),),pReferenceSet
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetJointLoc1 is actually a property, but must be used as a method to correctly pass the arguments
	def SetJointLoc1(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetJointLoc2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetJointLoc2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetJointProp is actually a property, but must be used as a method to correctly pass the arguments
	def SetJointProp(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setflag is actually a property, but must be used as a method to correctly pass the arguments
	def Setflag(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (16, 1)),nVectorIndex
			, arg1)

	# The method flag is actually a property, but must be used as a method to correctly pass the arguments
	def flag(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (16, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"B1R": (10034, 2, (5, 0), (), "B1R", None),
		"B1RTID": (10041, 2, (3, 0), (), "B1RTID", None),
		"B1T": (10033, 2, (5, 0), (), "B1T", None),
		"B1TTID": (10039, 2, (3, 0), (), "B1TTID", None),
		"CF": (10013, 2, (5, 0), (), "CF", None),
		"CID1": (10009, 2, (3, 0), (), "CID1", None),
		"CID2": (10010, 2, (3, 0), (), "CID2", None),
		"CurveExpansionOpt": (10058, 2, (3, 0), (), "CurveExpansionOpt", None),
		"ElemExpansionOpt": (10060, 2, (3, 0), (), "ElemExpansionOpt", None),
		"FR0": (10014, 2, (5, 0), (), "FR0", None),
		"G1": (10006, 2, (3, 0), (), "G1", None),
		"G2": (10007, 2, (3, 0), (), "G2", None),
		"G3": (10008, 2, (3, 0), (), "G3", None),
		"HasCID1": (10025, 2, (11, 0), (), "HasCID1", None),
		"HasCID2": (10026, 2, (11, 0), (), "HasCID2", None),
		"HasDAM1ROT": (10030, 2, (11, 0), (), "HasDAM1ROT", None),
		"HasDAM1TRA": (10029, 2, (11, 0), (), "HasDAM1TRA", None),
		"HasG3": (10043, 2, (11, 0), (), "HasG3", None),
		"HasSPR1ROT": (10028, 2, (11, 0), (), "HasSPR1ROT", None),
		"HasSPR1TRA": (10027, 2, (11, 0), (), "HasSPR1TRA", None),
		"HasTarget1List": (10052, 2, (11, 0), (), "HasTarget1List", None),
		"HasTarget2List": (10053, 2, (11, 0), (), "HasTarget2List", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"JointBehavior": (10005, 2, (3, 0), (), "JointBehavior", None),
		"JointLoc1_x": (10046, 2, (5, 0), (), "JointLoc1_x", None),
		"JointLoc1_y": (10047, 2, (5, 0), (), "JointLoc1_y", None),
		"JointLoc1_z": (10048, 2, (5, 0), (), "JointLoc1_z", None),
		"JointLoc2_x": (10049, 2, (5, 0), (), "JointLoc2_x", None),
		"JointLoc2_y": (10050, 2, (5, 0), (), "JointLoc2_y", None),
		"JointLoc2_z": (10051, 2, (5, 0), (), "JointLoc2_z", None),
		"K1R": (10032, 2, (5, 0), (), "K1R", None),
		"K1RTID": (10037, 2, (3, 0), (), "K1RTID", None),
		"K1T": (10031, 2, (5, 0), (), "K1T", None),
		"K1TTID": (10035, 2, (3, 0), (), "K1TTID", None),
		"KCF": (10016, 2, (5, 0), (), "KCF", None),
		"KR": (10012, 2, (5, 0), (), "KR", None),
		"KT": (10011, 2, (5, 0), (), "KT", None),
		"LIBL": (10021, 2, (5, 0), (), "LIBL", None),
		"LR": (10017, 2, (5, 0), (), "LR", None),
		"LX": (10018, 2, (5, 0), (), "LX", None),
		"LY": (10019, 2, (5, 0), (), "LY", None),
		"LZ": (10020, 2, (5, 0), (), "LZ", None),
		"NasExpansionOpt": (10061, 2, (3, 0), (), "NasExpansionOpt", None),
		"OPT": (10023, 2, (3, 0), (), "OPT", None),
		"PITCH": (10022, 2, (5, 0), (), "PITCH", None),
		"RegularizationOpt": (10062, 2, (11, 0), (), "RegularizationOpt", None),
		"SB1RTID": (10042, 2, (3, 0), (), "SB1RTID", None),
		"SB1TTID": (10040, 2, (3, 0), (), "SB1TTID", None),
		"SK1RTID": (10038, 2, (3, 0), (), "SK1RTID", None),
		"SK1TTID": (10036, 2, (3, 0), (), "SK1TTID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"SurfExpansionOpt": (10059, 2, (3, 0), (), "SurfExpansionOpt", None),
		"Target1SetID": (10054, 2, (3, 0), (), "Target1SetID", None),
		"Target1Type": (10056, 2, (3, 0), (), "Target1Type", None),
		"Target2SetID": (10055, 2, (3, 0), (), "Target2SetID", None),
		"Target2Type": (10057, 2, (3, 0), (), "Target2Type", None),
		"color": (10001, 2, (3, 0), (), "color", None),
		"layer": (10002, 2, (3, 0), (), "layer", None),
		"pid": (10024, 2, (3, 0), (), "pid", None),
		"title": (10003, 2, (8, 0), (), "title", None),
		"tol": (10015, 2, (5, 0), (), "tol", None),
		"type": (10004, 2, (3, 0), (), "type", None),
		"vJointLoc1": (10044, 2, (12, 0), (), "vJointLoc1", None),
		"vJointLoc2": (10045, 2, (12, 0), (), "vJointLoc2", None),
		"vJointProp": (10064, 2, (12, 0), (), "vJointProp", None),
		"vflag": (10065, 2, (12, 0), (), "vflag", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"B1R" : ((10034, LCID, 4, 0),()),
		"B1RTID" : ((10041, LCID, 4, 0),()),
		"B1T" : ((10033, LCID, 4, 0),()),
		"B1TTID" : ((10039, LCID, 4, 0),()),
		"CF" : ((10013, LCID, 4, 0),()),
		"CID1" : ((10009, LCID, 4, 0),()),
		"CID2" : ((10010, LCID, 4, 0),()),
		"CurveExpansionOpt" : ((10058, LCID, 4, 0),()),
		"ElemExpansionOpt" : ((10060, LCID, 4, 0),()),
		"FR0" : ((10014, LCID, 4, 0),()),
		"G1" : ((10006, LCID, 4, 0),()),
		"G2" : ((10007, LCID, 4, 0),()),
		"G3" : ((10008, LCID, 4, 0),()),
		"HasCID1" : ((10025, LCID, 4, 0),()),
		"HasCID2" : ((10026, LCID, 4, 0),()),
		"HasDAM1ROT" : ((10030, LCID, 4, 0),()),
		"HasDAM1TRA" : ((10029, LCID, 4, 0),()),
		"HasG3" : ((10043, LCID, 4, 0),()),
		"HasSPR1ROT" : ((10028, LCID, 4, 0),()),
		"HasSPR1TRA" : ((10027, LCID, 4, 0),()),
		"HasTarget1List" : ((10052, LCID, 4, 0),()),
		"HasTarget2List" : ((10053, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"JointBehavior" : ((10005, LCID, 4, 0),()),
		"JointLoc1_x" : ((10046, LCID, 4, 0),()),
		"JointLoc1_y" : ((10047, LCID, 4, 0),()),
		"JointLoc1_z" : ((10048, LCID, 4, 0),()),
		"JointLoc2_x" : ((10049, LCID, 4, 0),()),
		"JointLoc2_y" : ((10050, LCID, 4, 0),()),
		"JointLoc2_z" : ((10051, LCID, 4, 0),()),
		"K1R" : ((10032, LCID, 4, 0),()),
		"K1RTID" : ((10037, LCID, 4, 0),()),
		"K1T" : ((10031, LCID, 4, 0),()),
		"K1TTID" : ((10035, LCID, 4, 0),()),
		"KCF" : ((10016, LCID, 4, 0),()),
		"KR" : ((10012, LCID, 4, 0),()),
		"KT" : ((10011, LCID, 4, 0),()),
		"LIBL" : ((10021, LCID, 4, 0),()),
		"LR" : ((10017, LCID, 4, 0),()),
		"LX" : ((10018, LCID, 4, 0),()),
		"LY" : ((10019, LCID, 4, 0),()),
		"LZ" : ((10020, LCID, 4, 0),()),
		"NasExpansionOpt" : ((10061, LCID, 4, 0),()),
		"OPT" : ((10023, LCID, 4, 0),()),
		"PITCH" : ((10022, LCID, 4, 0),()),
		"RegularizationOpt" : ((10062, LCID, 4, 0),()),
		"SB1RTID" : ((10042, LCID, 4, 0),()),
		"SB1TTID" : ((10040, LCID, 4, 0),()),
		"SK1RTID" : ((10038, LCID, 4, 0),()),
		"SK1TTID" : ((10036, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"SurfExpansionOpt" : ((10059, LCID, 4, 0),()),
		"Target1SetID" : ((10054, LCID, 4, 0),()),
		"Target1Type" : ((10056, LCID, 4, 0),()),
		"Target2SetID" : ((10055, LCID, 4, 0),()),
		"Target2Type" : ((10057, LCID, 4, 0),()),
		"color" : ((10001, LCID, 4, 0),()),
		"layer" : ((10002, LCID, 4, 0),()),
		"pid" : ((10024, LCID, 4, 0),()),
		"title" : ((10003, LCID, 4, 0),()),
		"tol" : ((10015, LCID, 4, 0),()),
		"type" : ((10004, LCID, 4, 0),()),
		"vJointLoc1" : ((10044, LCID, 4, 0),()),
		"vJointLoc2" : ((10045, LCID, 4, 0),()),
		"vJointProp" : ((10064, LCID, 4, 0),()),
		"vflag" : ((10065, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILayer(DispatchBaseClass):
	CLSID = IID('{E0974272-0376-11D5-9465-001083FFF11C}')
	coclass_clsid = IID('{E0974274-0376-11D5-9465-001083FFF11C}')

	def ClearLayerInfo(self):
		return self._oleobj_.InvokeTypes(20104, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def FindAllReferencedLayers(self, nLayerSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20108, LCID, 1, (3, 0), ((3, 1),),nLayerSetID
			)

	def FindEmptyLayers(self, nLayerSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20109, LCID, 1, (3, 0), ((3, 1),),nLayerSetID
			)

	def FindLayerInfo(self, nLayerID=defaultNamedNotOptArg, nDataType=defaultNamedNotOptArg, nInSetID=defaultNamedNotOptArg, nOnType=defaultNamedNotOptArg
			, nEntitySetID=defaultNamedNotOptArg, bClearEntitySet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20105, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1)),nLayerID
			, nDataType, nInSetID, nOnType, nEntitySetID, bClearEntitySet
			)

	def FindMissingLayers(self, nLayerSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20110, LCID, 1, (3, 0), ((3, 1),),nLayerSetID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def InitAllLayerInfo(self, bContents=defaultNamedNotOptArg, bGroupReference=defaultNamedNotOptArg, bViewReference=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20100, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1)),bContents
			, bGroupReference, bViewReference)

	def InitLayerContentsInfo(self, nLayerSetID=defaultNamedNotOptArg, nNumEntityTypes=defaultNamedNotOptArg, EntityTypes=defaultNamedNotOptArg, nSetSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20101, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1)),nLayerSetID
			, nNumEntityTypes, EntityTypes, nSetSetID)

	def InitLayerGroupReferenceInfo(self, nLayerSetID=defaultNamedNotOptArg, nGroupSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20102, LCID, 1, (3, 0), ((3, 1), (3, 1)),nLayerSetID
			, nGroupSetID)

	def InitLayerViewReferenceInfo(self, nLayerSetID=defaultNamedNotOptArg, nViewSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20103, LCID, 1, (3, 0), ((3, 1), (3, 1)),nLayerSetID
			, nViewSetID)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextLayerInfo(self, nDesiredLayerID=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, nDataType=pythoncom.Missing, nInSetID=pythoncom.Missing
			, nOnType=pythoncom.Missing):
		return self._ApplyTypes_(20107, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2), (16387, 2)), 'NextLayerInfo', None,nDesiredLayerID
			, nEntitySetID, nDataType, nInSetID, nOnType)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def ResetNextLayerInfo(self):
		return self._oleobj_.InvokeTypes(20106, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10001, 2, (3, 0), (), "color", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILayup(DispatchBaseClass):
	CLSID = IID('{EDB333C3-3711-47A5-A628-33B4B8768F88}')
	coclass_clsid = IID('{EDB333C5-3711-47A5-A628-33B4B8768F88}')

	# The method AInvMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def AInvMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method AMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def AMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	def AddLayupPly(self, nLayupID=defaultNamedNotOptArg, nSym=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25028, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nLayupID
			, nSym, dAngle)

	def AddMatchedPlys(self, nNumPly=defaultNamedNotOptArg, nPlyID=defaultNamedNotOptArg, nSym=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25029, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1)),nNumPly
			, nPlyID, nSym)

	def AddPly(self, nMatlID=defaultNamedNotOptArg, dThickness=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg, nGlobalPly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (3, 1)),nMatlID
			, dThickness, dAngle, nGlobalPly)

	def AddPly2(self, nMatlID=defaultNamedNotOptArg, dThickness=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg, nGlobalPly=defaultNamedNotOptArg
			, nFailureTheory=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25021, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (3, 1), (3, 1)),nMatlID
			, dThickness, dAngle, nGlobalPly, nFailureTheory)

	def AddPlyMaterialPly(self, nPlyMaterialID=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg, nGlobalPly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25027, LCID, 1, (3, 0), ((3, 1), (5, 1), (3, 1)),nPlyMaterialID
			, dAngle, nGlobalPly)

	def AddPlyMaterialPly2(self, nPlyMaterialID=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg, nGlobalPly=defaultNamedNotOptArg, nFailureTheory=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25035, LCID, 1, (3, 0), ((3, 1), (5, 1), (3, 1), (3, 1)),nPlyMaterialID
			, dAngle, nGlobalPly, nFailureTheory)

	# The method BInvMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def BInvMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method BMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def BMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method BendingProp is actually a property, but must be used as a method to correctly pass the arguments
	def BendingProp(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method BendingPropExcMemBend is actually a property, but must be used as a method to correctly pass the arguments
	def BendingPropExcMemBend(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Compute2(self, nOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1),),nOption
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	# The method DInvMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def DInvMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method DMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def DMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def DeletePly(self, nPlyID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),nPlyID
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25004, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetAllPly(self, nNumPly=pythoncom.Missing, nMatlID=pythoncom.Missing, dThickness=pythoncom.Missing, dAngle=pythoncom.Missing
			, nGlobalPly=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllPly', None,nNumPly
			, nMatlID, dThickness, dAngle, nGlobalPly)

	def GetAllPly2(self, nNumPly=pythoncom.Missing, nMatlID=pythoncom.Missing, dThickness=pythoncom.Missing, dAngle=pythoncom.Missing
			, nGlobalPly=pythoncom.Missing, nFailureTheory=pythoncom.Missing):
		return self._ApplyTypes_(25026, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllPly2', None,nNumPly
			, nMatlID, dThickness, dAngle, nGlobalPly, nFailureTheory
			)

	def GetAllPlyDefinition(self, nNumPly=pythoncom.Missing, nPlyID=pythoncom.Missing, bOnOff=pythoncom.Missing, nPlyType=pythoncom.Missing
			, nRefID=pythoncom.Missing, nGlobalPlyID=pythoncom.Missing, nMatlID=pythoncom.Missing, dThickness=pythoncom.Missing, dAngle=pythoncom.Missing
			, nFailureTheory=pythoncom.Missing):
		return self._ApplyTypes_(25031, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllPlyDefinition', None,nNumPly
			, nPlyID, bOnOff, nPlyType, nRefID, nGlobalPlyID
			, nMatlID, dThickness, dAngle, nFailureTheory)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetPly(self, nPlyID=defaultNamedNotOptArg, nMatlID=pythoncom.Missing, dThickness=pythoncom.Missing, dAngle=pythoncom.Missing
			, nGlobalPly=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((3, 1), (16387, 2), (16389, 2), (16389, 2), (16387, 2)), 'GetPly', None,nPlyID
			, nMatlID, dThickness, dAngle, nGlobalPly)

	def GetPly2(self, nPlyID=defaultNamedNotOptArg, nMatlID=pythoncom.Missing, dThickness=pythoncom.Missing, dAngle=pythoncom.Missing
			, nGlobalPly=pythoncom.Missing, nFailureTheory=pythoncom.Missing):
		return self._ApplyTypes_(25024, 1, (3, 0), ((3, 1), (16387, 2), (16389, 2), (16389, 2), (16387, 2), (16387, 2)), 'GetPly2', None,nPlyID
			, nMatlID, dThickness, dAngle, nGlobalPly, nFailureTheory
			)

	def GetPlyInfo(self, nPlyID=defaultNamedNotOptArg, bGetParentPlyInfo=defaultNamedNotOptArg, nPlyType=pythoncom.Missing, nRefID=pythoncom.Missing):
		return self._ApplyTypes_(25030, 1, (3, 0), ((3, 1), (11, 1), (16387, 2), (16387, 2)), 'GetPlyInfo', None,nPlyID
			, bGetParentPlyInfo, nPlyType, nRefID)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def GlobalPlysUsed(self, nGPSetID=defaultNamedNotOptArg, bUseOnPlysOnly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25033, LCID, 1, (3, 0), ((3, 1), (11, 1)),nGPSetID
			, bUseOnPlysOnly)

	def HasFullGlobalPly(self):
		return self._oleobj_.InvokeTypes(25020, LCID, 1, (3, 0), (),)

	def HasGlobalPly(self, nGlobalPlyID=defaultNamedNotOptArg, bIndex=defaultNamedNotOptArg, nPlyNum=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((3, 1), (11, 1), (16387, 2)), 'HasGlobalPly', None,nGlobalPlyID
			, bIndex, nPlyNum)

	def HasMaterial(self, nMatlID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1),),nMatlID
			)

	# The method InPlaneProp is actually a property, but must be used as a method to correctly pass the arguments
	def InPlaneProp(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method InPlanePropExcMemBend is actually a property, but must be used as a method to correctly pass the arguments
	def InPlanePropExcMemBend(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def InsertPly(self, nPlyID=defaultNamedNotOptArg, nMatlID=defaultNamedNotOptArg, dThickness=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg
			, nGlobalPly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1)),nPlyID
			, nMatlID, dThickness, dAngle, nGlobalPly)

	def InsertPly2(self, nPlyID=defaultNamedNotOptArg, nMatlID=defaultNamedNotOptArg, dThickness=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg
			, nGlobalPly=defaultNamedNotOptArg, nFailureTheory=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25022, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1), (3, 1)),nPlyID
			, nMatlID, dThickness, dAngle, nGlobalPly, nFailureTheory
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def MaterialsUsed(self, nMatlSetID=defaultNamedNotOptArg, bUseOnPlysOnly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25032, LCID, 1, (3, 0), ((3, 1), (11, 1)),nMatlSetID
			, bUseOnPlysOnly)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	# The method OnOff is actually a property, but must be used as a method to correctly pass the arguments
	def OnOff(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 2, (17, 0), ((3, 1),),nVectorIndex
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def PlyMaterialsUsed(self, nPMSetID=defaultNamedNotOptArg, bUseOnPlysOnly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25034, LCID, 1, (3, 0), ((3, 1), (11, 1)),nPMSetID
			, bUseOnPlysOnly)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25005, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetAInvMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def SetAInvMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetAMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def SetAMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	def SetAllPly(self, nNumPly=defaultNamedNotOptArg, nMatlID=defaultNamedNotOptArg, dThickness=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg
			, nGlobalPly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nNumPly
			, nMatlID, dThickness, dAngle, nGlobalPly)

	def SetAllPly2(self, nNumPly=defaultNamedNotOptArg, nMatlID=defaultNamedNotOptArg, dThickness=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg
			, nGlobalPly=defaultNamedNotOptArg, nFailureTheory=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25025, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nNumPly
			, nMatlID, dThickness, dAngle, nGlobalPly, nFailureTheory
			)

	# The method SetBInvMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def SetBInvMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetBMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def SetBMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetBendingProp is actually a property, but must be used as a method to correctly pass the arguments
	def SetBendingProp(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetBendingPropExcMemBend is actually a property, but must be used as a method to correctly pass the arguments
	def SetBendingPropExcMemBend(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetDInvMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def SetDInvMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetDMatrix is actually a property, but must be used as a method to correctly pass the arguments
	def SetDMatrix(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetInPlaneProp is actually a property, but must be used as a method to correctly pass the arguments
	def SetInPlaneProp(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInPlanePropExcMemBend is actually a property, but must be used as a method to correctly pass the arguments
	def SetInPlanePropExcMemBend(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(19002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetOnOff is actually a property, but must be used as a method to correctly pass the arguments
	def SetOnOff(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 4, (24, 0), ((3, 1), (17, 1)),nVectorIndex
			, arg1)

	def SetPly(self, nPlyID=defaultNamedNotOptArg, nMatlID=defaultNamedNotOptArg, dThickness=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg
			, nGlobalPly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1)),nPlyID
			, nMatlID, dThickness, dAngle, nGlobalPly)

	def SetPly2(self, nPlyID=defaultNamedNotOptArg, nMatlID=defaultNamedNotOptArg, dThickness=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg
			, nGlobalPly=defaultNamedNotOptArg, nFailureTheory=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25023, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1), (3, 1)),nPlyID
			, nMatlID, dThickness, dAngle, nGlobalPly, nFailureTheory
			)

	# The method Setangle is actually a property, but must be used as a method to correctly pass the arguments
	def Setangle(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setfailuretheory is actually a property, but must be used as a method to correctly pass the arguments
	def Setfailuretheory(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setglobalply is actually a property, but must be used as a method to correctly pass the arguments
	def Setglobalply(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetmatlID is actually a property, but must be used as a method to correctly pass the arguments
	def SetmatlID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setthickness is actually a property, but must be used as a method to correctly pass the arguments
	def Setthickness(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	def TotalThickness(self, dThickness=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((16389, 2),), 'TotalThickness', None,dThickness
			)

	# The method angle is actually a property, but must be used as a method to correctly pass the arguments
	def angle(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def clear(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def compute(self, dynamic=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((11, 1),),dynamic
			)

	# The method failuretheory is actually a property, but must be used as a method to correctly pass the arguments
	def failuretheory(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method globalply is actually a property, but must be used as a method to correctly pass the arguments
	def globalply(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method matlID is actually a property, but must be used as a method to correctly pass the arguments
	def matlID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method thickness is actually a property, but must be used as a method to correctly pass the arguments
	def thickness(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"IncludeOffPlys": (10019, 2, (11, 0), (), "IncludeOffPlys", None),
		"LayupThickness": (10006, 2, (5, 0), (), "LayupThickness", None),
		"NumberOfPlys": (10001, 2, (3, 0), (), "NumberOfPlys", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"vAInvMatrix": (10012, 2, (12, 0), (), "vAInvMatrix", None),
		"vAMatrix": (10009, 2, (12, 0), (), "vAMatrix", None),
		"vBInvMatrix": (10013, 2, (12, 0), (), "vBInvMatrix", None),
		"vBMatrix": (10010, 2, (12, 0), (), "vBMatrix", None),
		"vBendingProp": (10008, 2, (12, 0), (), "vBendingProp", None),
		"vBendingPropExcMemBend": (10016, 2, (12, 0), (), "vBendingPropExcMemBend", None),
		"vDInvMatrix": (10014, 2, (12, 0), (), "vDInvMatrix", None),
		"vDMatrix": (10011, 2, (12, 0), (), "vDMatrix", None),
		"vInPlaneProp": (10007, 2, (12, 0), (), "vInPlaneProp", None),
		"vInPlanePropExcMemBend": (10015, 2, (12, 0), (), "vInPlanePropExcMemBend", None),
		"vOnOff": (10018, 2, (12, 0), (), "vOnOff", None),
		"vangle": (10003, 2, (12, 0), (), "vangle", None),
		"vfailuretheory": (10017, 2, (12, 0), (), "vfailuretheory", None),
		"vglobalply": (10005, 2, (12, 0), (), "vglobalply", None),
		"vmatlID": (10004, 2, (12, 0), (), "vmatlID", None),
		"vthickness": (10002, 2, (12, 0), (), "vthickness", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"IncludeOffPlys" : ((10019, LCID, 4, 0),()),
		"LayupThickness" : ((10006, LCID, 4, 0),()),
		"NumberOfPlys" : ((10001, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"vAInvMatrix" : ((10012, LCID, 4, 0),()),
		"vAMatrix" : ((10009, LCID, 4, 0),()),
		"vBInvMatrix" : ((10013, LCID, 4, 0),()),
		"vBMatrix" : ((10010, LCID, 4, 0),()),
		"vBendingProp" : ((10008, LCID, 4, 0),()),
		"vBendingPropExcMemBend" : ((10016, LCID, 4, 0),()),
		"vDInvMatrix" : ((10014, LCID, 4, 0),()),
		"vDMatrix" : ((10011, LCID, 4, 0),()),
		"vInPlaneProp" : ((10007, LCID, 4, 0),()),
		"vInPlanePropExcMemBend" : ((10015, LCID, 4, 0),()),
		"vOnOff" : ((10018, LCID, 4, 0),()),
		"vangle" : ((10003, LCID, 4, 0),()),
		"vfailuretheory" : ((10017, LCID, 4, 0),()),
		"vglobalply" : ((10005, LCID, 4, 0),()),
		"vmatlID" : ((10004, LCID, 4, 0),()),
		"vthickness" : ((10002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoadBolt(DispatchBaseClass):
	CLSID = IID('{0DC9D655-721A-4AE7-B468-0C4B0FDC97AA}')
	coclass_clsid = IID('{0DC9D657-721A-4AE7-B468-0C4B0FDC97AA}')

	def AddArray(self, Count=defaultNamedNotOptArg, RegionID=defaultNamedNotOptArg, Values=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),Count
			, RegionID, Values)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAllArray(self, Count=pythoncom.Missing, BoltRegionID=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing
			, LoadDefinitionID=pythoncom.Missing, BoltType=pythoncom.Missing, BoltPreload=pythoncom.Missing, BoltLength=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,Count
			, BoltRegionID, layer, color, LoadDefinitionID, BoltType
			, BoltPreload, BoltLength)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, Count=defaultNamedNotOptArg, BoltRegionID=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg
			, LoadDefinitionID=defaultNamedNotOptArg, BoltType=defaultNamedNotOptArg, BoltPreload=defaultNamedNotOptArg, BoltLength=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, BoltRegionID, layer, color, LoadDefinitionID, BoltType
			, BoltPreload, BoltLength)

	def PutArray(self, Count=defaultNamedNotOptArg, RegionID=defaultNamedNotOptArg, Values=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),Count
			, RegionID, Values)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"LoadDefinitionID": (10003, 2, (3, 0), (), "LoadDefinitionID", None),
		"PreloadType": (10004, 2, (3, 0), (), "PreloadType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10002, 2, (3, 0), (), "color", None),
		"layer": (10001, 2, (3, 0), (), "layer", None),
		"preload": (10000, 2, (5, 0), (), "preload", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"LoadDefinitionID" : ((10003, LCID, 4, 0),()),
		"PreloadType" : ((10004, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10002, LCID, 4, 0),()),
		"layer" : ((10001, LCID, 4, 0),()),
		"preload" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoadDefinition(DispatchBaseClass):
	CLSID = IID('{A9BF3A1F-E8F6-4D5C-BC48-A191C61C57D2}')
	coclass_clsid = IID('{A9BF3A21-E8F6-4D5C-BC48-A191C61C57D2}')

	def CountLoads(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def IsTotalLoad(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextLoad(self, pDispatch=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16393, 2),), 'NextLoad', None,pDispatch
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, enDataType=defaultNamedNotOptArg, enLoadType=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),entID
			, enDataType, enLoadType, sTitle)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def ResetNextLoad(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetTotalLoad(self, bTotalLoad=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((11, 1),),bTotalLoad
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"DataType": (10002, 2, (3, 0), (), "DataType", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"loadType": (10001, 2, (3, 0), (), "loadType", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"DataType" : ((10002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"loadType" : ((10001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoadETemp(DispatchBaseClass):
	CLSID = IID('{1FAF0E14-F6C9-11D4-9456-001083FFF11C}')
	coclass_clsid = IID('{1FAF0E16-F6C9-11D4-9456-001083FFF11C}')

	def AddArray(self, Count=defaultNamedNotOptArg, doValues=defaultNamedNotOptArg, doFunctions=defaultNamedNotOptArg, elemID=defaultNamedNotOptArg
			, Values=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (12, 1), (12, 1), (12, 1)),Count
			, doValues, doFunctions, elemID, Values, FunctionID
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAllArray(self, Count=pythoncom.Missing, ExpandedGeomLoad=pythoncom.Missing, elemID=pythoncom.Missing, layer=pythoncom.Missing
			, color=pythoncom.Missing, LoadDefinitionID=pythoncom.Missing, Temperature=pythoncom.Missing, TempGradient=pythoncom.Missing, FunctionID=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,Count
			, ExpandedGeomLoad, elemID, layer, color, LoadDefinitionID
			, Temperature, TempGradient, FunctionID)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, Count=defaultNamedNotOptArg, ExpandedGeomLoad=defaultNamedNotOptArg, elemID=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, color=defaultNamedNotOptArg, LoadDefinitionID=defaultNamedNotOptArg, Temperature=defaultNamedNotOptArg, TempGradient=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, ExpandedGeomLoad, elemID, layer, color, LoadDefinitionID
			, Temperature, TempGradient, FunctionID)

	def PutArray(self, Count=defaultNamedNotOptArg, doValues=defaultNamedNotOptArg, doFunctions=defaultNamedNotOptArg, elemID=defaultNamedNotOptArg
			, Values=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (12, 1), (12, 1), (12, 1)),Count
			, doValues, doFunctions, elemID, Values, FunctionID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Function": (10002, 2, (3, 0), (), "Function", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"LoadDefinitionID": (10006, 2, (3, 0), (), "LoadDefinitionID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10004, 2, (3, 0), (), "color", None),
		"expanded": (10005, 2, (11, 0), (), "expanded", None),
		"gradient": (10007, 2, (5, 0), (), "gradient", None),
		"layer": (10003, 2, (3, 0), (), "layer", None),
		"phase": (10001, 2, (5, 0), (), "phase", None),
		"temp": (10000, 2, (5, 0), (), "temp", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Function" : ((10002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"LoadDefinitionID" : ((10006, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10004, LCID, 4, 0),()),
		"expanded" : ((10005, LCID, 4, 0),()),
		"gradient" : ((10007, LCID, 4, 0),()),
		"layer" : ((10003, LCID, 4, 0),()),
		"phase" : ((10001, LCID, 4, 0),()),
		"temp" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoadGeom(DispatchBaseClass):
	CLSID = IID('{78456266-F7A9-11D4-9457-001083FFF11C}')
	coclass_clsid = IID('{78456268-F7A9-11D4-9457-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	# The method DataSurface is actually a property, but must be used as a method to correctly pass the arguments
	def DataSurface(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	# The method Function is actually a property, but must be used as a method to correctly pass the arguments
	def Function(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetSearch(self, loadType=defaultNamedNotOptArg, geomID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (3, 1)),loadType
			, geomID)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextOnEntity(self, geomTYPE=defaultNamedNotOptArg, geomSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (3, 1)),geomTYPE
			, geomSET)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetDataSurface is actually a property, but must be used as a method to correctly pass the arguments
	def SetDataSurface(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetFunction is actually a property, but must be used as a method to correctly pass the arguments
	def SetFunction(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetaddlID is actually a property, but must be used as a method to correctly pass the arguments
	def SetaddlID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setaddl_ptID is actually a property, but must be used as a method to correctly pass the arguments
	def Setaddl_ptID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setdirbase is actually a property, but must be used as a method to correctly pass the arguments
	def Setdirbase(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setdirection is actually a property, but must be used as a method to correctly pass the arguments
	def Setdirection(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setdof is actually a property, but must be used as a method to correctly pass the arguments
	def Setdof(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setflag is actually a property, but must be used as a method to correctly pass the arguments
	def Setflag(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method Setfluxdir is actually a property, but must be used as a method to correctly pass the arguments
	def Setfluxdir(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setload is actually a property, but must be used as a method to correctly pass the arguments
	def Setload(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setvarlocate is actually a property, but must be used as a method to correctly pass the arguments
	def Setvarlocate(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColIndex, arg2)

	# The method Setvarvalue is actually a property, but must be used as a method to correctly pass the arguments
	def Setvarvalue(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method addlID is actually a property, but must be used as a method to correctly pass the arguments
	def addlID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method addl_ptID is actually a property, but must be used as a method to correctly pass the arguments
	def addl_ptID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method dirbase is actually a property, but must be used as a method to correctly pass the arguments
	def dirbase(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method direction is actually a property, but must be used as a method to correctly pass the arguments
	def direction(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method dof is actually a property, but must be used as a method to correctly pass the arguments
	def dof(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method flag is actually a property, but must be used as a method to correctly pass the arguments
	def flag(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method fluxdir is actually a property, but must be used as a method to correctly pass the arguments
	def fluxdir(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method load is actually a property, but must be used as a method to correctly pass the arguments
	def load(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method varlocate is actually a property, but must be used as a method to correctly pass the arguments
	def varlocate(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 2, (5, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method varvalue is actually a property, but must be used as a method to correctly pass the arguments
	def varvalue(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Absorptivity": (10040, 2, (5, 0), (), "Absorptivity", None),
		"AbsorptivityVsTemp": (10041, 2, (3, 0), (), "AbsorptivityVsTemp", None),
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"CSys": (10013, 2, (3, 0), (), "CSys", None),
		"CanBeShaded": (10059, 2, (11, 0), (), "CanBeShaded", None),
		"CanShade": (10058, 2, (11, 0), (), "CanShade", None),
		"CavityNumber": (10060, 2, (3, 0), (), "CavityNumber", None),
		"ConvectionCoeff": (10046, 2, (5, 0), (), "ConvectionCoeff", None),
		"CornerPressure": (10036, 2, (11, 0), (), "CornerPressure", None),
		"Emissivity": (10053, 2, (5, 0), (), "Emissivity", None),
		"EmissivityFunc": (10054, 2, (3, 0), (), "EmissivityFunc", None),
		"EnclosureRadiation": (10057, 2, (11, 0), (), "EnclosureRadiation", None),
		"FCDisableAdvection": (10048, 2, (11, 0), (), "FCDisableAdvection", None),
		"FCDisableConvection": (10049, 2, (11, 0), (), "FCDisableConvection", None),
		"FaceNumber": (10023, 2, (3, 0), (), "FaceNumber", None),
		"FlowAreaFactor": (10052, 2, (5, 0), (), "FlowAreaFactor", None),
		"FlowDiameter": (10051, 2, (5, 0), (), "FlowDiameter", None),
		"FlowRate": (10050, 2, (5, 0), (), "FlowRate", None),
		"FluidValue": (10043, 2, (5, 0), (), "FluidValue", None),
		"ForcedConvection": (10047, 2, (11, 0), (), "ForcedConvection", None),
		"HeatFlux": (10039, 2, (5, 0), (), "HeatFlux", None),
		"HeatGen": (10038, 2, (5, 0), (), "HeatGen", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"LoadDefinitionID": (10020, 2, (3, 0), (), "LoadDefinitionID", None),
		"LoadFunction": (10032, 2, (3, 0), (), "LoadFunction", None),
		"LoadValue": (10035, 2, (5, 0), (), "LoadValue", None),
		"PeriodicDirection": (10045, 2, (11, 0), (), "PeriodicDirection", None),
		"PeriodicMaster": (10044, 2, (11, 0), (), "PeriodicMaster", None),
		"PhaseVsFreq": (10034, 2, (3, 0), (), "PhaseVsFreq", None),
		"Pressure": (10037, 2, (5, 0), (), "Pressure", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"TempVsTime": (10033, 2, (3, 0), (), "TempVsTime", None),
		"VectorFlux": (10042, 2, (11, 0), (), "VectorFlux", None),
		"ViewFactor": (10055, 2, (5, 0), (), "ViewFactor", None),
		"ViewFactorVsTime": (10056, 2, (3, 0), (), "ViewFactorVsTime", None),
		"XOn": (10024, 2, (11, 0), (), "XOn", None),
		"YOn": (10025, 2, (11, 0), (), "YOn", None),
		"ZOn": (10026, 2, (11, 0), (), "ZOn", None),
		"color": (10021, 2, (3, 0), (), "color", None),
		"dirID": (10003, 2, (3, 0), (), "dirID", None),
		"dirmode": (10000, 2, (3, 0), (), "dirmode", None),
		"expanded": (10022, 2, (11, 0), (), "expanded", None),
		"geomID": (10011, 2, (3, 0), (), "geomID", None),
		"geomTYPE": (10072, 2, (3, 0), (), "geomTYPE", None),
		"layer": (10018, 2, (3, 0), (), "layer", None),
		"midside": (10010, 2, (11, 0), (), "midside", None),
		"phase": (10031, 2, (5, 0), (), "phase", None),
		"subtype": (10017, 2, (3, 0), (), "subtype", None),
		"temp": (10030, 2, (5, 0), (), "temp", None),
		"type": (10016, 2, (3, 0), (), "type", None),
		"vDataSurface": (10073, 2, (12, 0), (), "vDataSurface", None),
		"vaddlID": (10065, 2, (12, 0), (), "vaddlID", None),
		"vaddl_ptID": (10074, 2, (12, 0), (), "vaddl_ptID", None),
		"vareqn": (10006, 2, (8, 0), (), "vareqn", None),
		"varfunction": (10007, 2, (3, 0), (), "varfunction", None),
		"variation": (10004, 2, (3, 0), (), "variation", None),
		"varname": (10005, 2, (8, 0), (), "varname", None),
		"vdirbase": (10062, 2, (12, 0), (), "vdirbase", None),
		"vdirection": (10063, 2, (12, 0), (), "vdirection", None),
		"vdof": (10066, 2, (12, 0), (), "vdof", None),
		"vflag": (10067, 2, (12, 0), (), "vflag", None),
		"vfluxdir": (10069, 2, (12, 0), (), "vfluxdir", None),
		"vfunction": (10070, 2, (12, 0), (), "vfunction", None),
		"vload": (10068, 2, (12, 0), (), "vload", None),
		"vvarlocate": (10071, 2, (12, 0), (), "vvarlocate", None),
		"vvarvalue": (10064, 2, (12, 0), (), "vvarvalue", None),
		"x": (10027, 2, (5, 0), (), "x", None),
		"y": (10028, 2, (5, 0), (), "y", None),
		"z": (10029, 2, (5, 0), (), "z", None),
	}
	_prop_map_put_ = {
		"Absorptivity" : ((10040, LCID, 4, 0),()),
		"AbsorptivityVsTemp" : ((10041, LCID, 4, 0),()),
		"Active" : ((17002, LCID, 4, 0),()),
		"CSys" : ((10013, LCID, 4, 0),()),
		"CanBeShaded" : ((10059, LCID, 4, 0),()),
		"CanShade" : ((10058, LCID, 4, 0),()),
		"CavityNumber" : ((10060, LCID, 4, 0),()),
		"ConvectionCoeff" : ((10046, LCID, 4, 0),()),
		"CornerPressure" : ((10036, LCID, 4, 0),()),
		"Emissivity" : ((10053, LCID, 4, 0),()),
		"EmissivityFunc" : ((10054, LCID, 4, 0),()),
		"EnclosureRadiation" : ((10057, LCID, 4, 0),()),
		"FCDisableAdvection" : ((10048, LCID, 4, 0),()),
		"FCDisableConvection" : ((10049, LCID, 4, 0),()),
		"FaceNumber" : ((10023, LCID, 4, 0),()),
		"FlowAreaFactor" : ((10052, LCID, 4, 0),()),
		"FlowDiameter" : ((10051, LCID, 4, 0),()),
		"FlowRate" : ((10050, LCID, 4, 0),()),
		"FluidValue" : ((10043, LCID, 4, 0),()),
		"ForcedConvection" : ((10047, LCID, 4, 0),()),
		"HeatFlux" : ((10039, LCID, 4, 0),()),
		"HeatGen" : ((10038, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"LoadDefinitionID" : ((10020, LCID, 4, 0),()),
		"LoadFunction" : ((10032, LCID, 4, 0),()),
		"LoadValue" : ((10035, LCID, 4, 0),()),
		"PeriodicDirection" : ((10045, LCID, 4, 0),()),
		"PeriodicMaster" : ((10044, LCID, 4, 0),()),
		"PhaseVsFreq" : ((10034, LCID, 4, 0),()),
		"Pressure" : ((10037, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"TempVsTime" : ((10033, LCID, 4, 0),()),
		"VectorFlux" : ((10042, LCID, 4, 0),()),
		"ViewFactor" : ((10055, LCID, 4, 0),()),
		"ViewFactorVsTime" : ((10056, LCID, 4, 0),()),
		"XOn" : ((10024, LCID, 4, 0),()),
		"YOn" : ((10025, LCID, 4, 0),()),
		"ZOn" : ((10026, LCID, 4, 0),()),
		"color" : ((10021, LCID, 4, 0),()),
		"dirID" : ((10003, LCID, 4, 0),()),
		"dirmode" : ((10000, LCID, 4, 0),()),
		"expanded" : ((10022, LCID, 4, 0),()),
		"geomID" : ((10011, LCID, 4, 0),()),
		"geomTYPE" : ((10072, LCID, 4, 0),()),
		"layer" : ((10018, LCID, 4, 0),()),
		"midside" : ((10010, LCID, 4, 0),()),
		"phase" : ((10031, LCID, 4, 0),()),
		"subtype" : ((10017, LCID, 4, 0),()),
		"temp" : ((10030, LCID, 4, 0),()),
		"type" : ((10016, LCID, 4, 0),()),
		"vDataSurface" : ((10073, LCID, 4, 0),()),
		"vaddlID" : ((10065, LCID, 4, 0),()),
		"vaddl_ptID" : ((10074, LCID, 4, 0),()),
		"vareqn" : ((10006, LCID, 4, 0),()),
		"varfunction" : ((10007, LCID, 4, 0),()),
		"variation" : ((10004, LCID, 4, 0),()),
		"varname" : ((10005, LCID, 4, 0),()),
		"vdirbase" : ((10062, LCID, 4, 0),()),
		"vdirection" : ((10063, LCID, 4, 0),()),
		"vdof" : ((10066, LCID, 4, 0),()),
		"vflag" : ((10067, LCID, 4, 0),()),
		"vfluxdir" : ((10069, LCID, 4, 0),()),
		"vfunction" : ((10070, LCID, 4, 0),()),
		"vload" : ((10068, LCID, 4, 0),()),
		"vvarlocate" : ((10071, LCID, 4, 0),()),
		"vvarvalue" : ((10064, LCID, 4, 0),()),
		"x" : ((10027, LCID, 4, 0),()),
		"y" : ((10028, LCID, 4, 0),()),
		"z" : ((10029, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoadMesh(DispatchBaseClass):
	CLSID = IID('{FFDF9E7C-F6DD-11D4-9456-001083FFF11C}')
	coclass_clsid = IID('{FFDF9E7E-F6DD-11D4-9456-001083FFF11C}')

	def Add(self, SetID=defaultNamedNotOptArg, loadType=defaultNamedNotOptArg, nCSys=defaultNamedNotOptArg, dof=defaultNamedNotOptArg
			, Values=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),SetID
			, loadType, nCSys, dof, Values, FunctionID
			)

	def AddArray(self, Count=defaultNamedNotOptArg, doDOF=defaultNamedNotOptArg, doValues=defaultNamedNotOptArg, doFunctions=defaultNamedNotOptArg
			, NodeElemID=defaultNamedNotOptArg, dof=defaultNamedNotOptArg, Values=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, doDOF, doValues, doFunctions, NodeElemID, dof
			, Values, FunctionID)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	# The method Function is actually a property, but must be used as a method to correctly pass the arguments
	def Function(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAllArray(self, Count=pythoncom.Missing, ExpandedGeomLoad=pythoncom.Missing, loadType=pythoncom.Missing, loadSubType=pythoncom.Missing
			, NodeElemID=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing, LoadDefinitionID=pythoncom.Missing, nCSysID=pythoncom.Missing
			, DOFFace=pythoncom.Missing, Values=pythoncom.Missing, FunctionID=pythoncom.Missing, NodeElemAddlID=pythoncom.Missing, flag=pythoncom.Missing
			, direction=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,Count
			, ExpandedGeomLoad, loadType, loadSubType, NodeElemID, layer
			, color, LoadDefinitionID, nCSysID, DOFFace, Values
			, FunctionID, NodeElemAddlID, flag, direction)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetSearch(self, loadType=defaultNamedNotOptArg, meshID=defaultNamedNotOptArg, faceID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),loadType
			, meshID, faceID)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextOnEntity(self, entityTYPE=defaultNamedNotOptArg, meshSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, meshSET)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	# The method PressureDirection is actually a property, but must be used as a method to correctly pass the arguments
	def PressureDirection(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, bDeleteAllExistingLoads=defaultNamedNotOptArg, Count=defaultNamedNotOptArg, ExpandedGeomLoad=defaultNamedNotOptArg, loadType=defaultNamedNotOptArg
			, loadSubType=defaultNamedNotOptArg, NodeElemID=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg, LoadDefinitionID=defaultNamedNotOptArg
			, nCSysID=defaultNamedNotOptArg, DOFFace=defaultNamedNotOptArg, Values=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg, NodeElemAddlID=defaultNamedNotOptArg
			, flag=defaultNamedNotOptArg, direction=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((11, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),bDeleteAllExistingLoads
			, Count, ExpandedGeomLoad, loadType, loadSubType, NodeElemID
			, layer, color, LoadDefinitionID, nCSysID, DOFFace
			, Values, FunctionID, NodeElemAddlID, flag, direction
			)

	def PutArray(self, Count=defaultNamedNotOptArg, doDOF=defaultNamedNotOptArg, doValues=defaultNamedNotOptArg, doFunctions=defaultNamedNotOptArg
			, NodeElemID=defaultNamedNotOptArg, dof=defaultNamedNotOptArg, Values=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, doDOF, doValues, doFunctions, NodeElemID, dof
			, Values, FunctionID)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetFunction is actually a property, but must be used as a method to correctly pass the arguments
	def SetFunction(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetPressureDirection is actually a property, but must be used as a method to correctly pass the arguments
	def SetPressureDirection(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetaddlID is actually a property, but must be used as a method to correctly pass the arguments
	def SetaddlID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setdof is actually a property, but must be used as a method to correctly pass the arguments
	def Setdof(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setflag is actually a property, but must be used as a method to correctly pass the arguments
	def Setflag(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method Setfluxdir is actually a property, but must be used as a method to correctly pass the arguments
	def Setfluxdir(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setload is actually a property, but must be used as a method to correctly pass the arguments
	def Setload(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method addlID is actually a property, but must be used as a method to correctly pass the arguments
	def addlID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method dof is actually a property, but must be used as a method to correctly pass the arguments
	def dof(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method flag is actually a property, but must be used as a method to correctly pass the arguments
	def flag(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method fluxdir is actually a property, but must be used as a method to correctly pass the arguments
	def fluxdir(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method load is actually a property, but must be used as a method to correctly pass the arguments
	def load(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Absorptivity": (10029, 2, (5, 0), (), "Absorptivity", None),
		"AbsorptivityVsTemp": (10030, 2, (3, 0), (), "AbsorptivityVsTemp", None),
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"CSys": (10002, 2, (3, 0), (), "CSys", None),
		"CanBeShaded": (10048, 2, (11, 0), (), "CanBeShaded", None),
		"CanShade": (10047, 2, (11, 0), (), "CanShade", None),
		"CavityNumber": (10049, 2, (3, 0), (), "CavityNumber", None),
		"ConvectionCoeff": (10035, 2, (5, 0), (), "ConvectionCoeff", None),
		"CornerPressure": (10025, 2, (11, 0), (), "CornerPressure", None),
		"Emissivity": (10042, 2, (5, 0), (), "Emissivity", None),
		"EmissivityFunc": (10043, 2, (3, 0), (), "EmissivityFunc", None),
		"EnclosureRadiation": (10046, 2, (11, 0), (), "EnclosureRadiation", None),
		"FCDisableAdvection": (10037, 2, (11, 0), (), "FCDisableAdvection", None),
		"FCDisableConvection": (10038, 2, (11, 0), (), "FCDisableConvection", None),
		"FaceNumber": (10012, 2, (3, 0), (), "FaceNumber", None),
		"FlowAreaFactor": (10041, 2, (5, 0), (), "FlowAreaFactor", None),
		"FlowDiameter": (10040, 2, (5, 0), (), "FlowDiameter", None),
		"FlowRate": (10039, 2, (5, 0), (), "FlowRate", None),
		"FluidValue": (10032, 2, (5, 0), (), "FluidValue", None),
		"ForcedConvection": (10036, 2, (11, 0), (), "ForcedConvection", None),
		"HeatFlux": (10028, 2, (5, 0), (), "HeatFlux", None),
		"HeatGen": (10027, 2, (5, 0), (), "HeatGen", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"LoadDefinitionID": (10009, 2, (3, 0), (), "LoadDefinitionID", None),
		"LoadFunction": (10021, 2, (3, 0), (), "LoadFunction", None),
		"LoadValue": (10024, 2, (5, 0), (), "LoadValue", None),
		"PeriodicDirection": (10034, 2, (11, 0), (), "PeriodicDirection", None),
		"PeriodicMaster": (10033, 2, (11, 0), (), "PeriodicMaster", None),
		"PhaseVsFreq": (10023, 2, (3, 0), (), "PhaseVsFreq", None),
		"Pressure": (10026, 2, (5, 0), (), "Pressure", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"TempVsTime": (10022, 2, (3, 0), (), "TempVsTime", None),
		"VectorFlux": (10031, 2, (11, 0), (), "VectorFlux", None),
		"VectorPressure": (10057, 2, (11, 0), (), "VectorPressure", None),
		"ViewFactor": (10044, 2, (5, 0), (), "ViewFactor", None),
		"ViewFactorVsTime": (10045, 2, (3, 0), (), "ViewFactorVsTime", None),
		"XOn": (10013, 2, (11, 0), (), "XOn", None),
		"YOn": (10014, 2, (11, 0), (), "YOn", None),
		"ZOn": (10015, 2, (11, 0), (), "ZOn", None),
		"color": (10010, 2, (3, 0), (), "color", None),
		"expanded": (10011, 2, (11, 0), (), "expanded", None),
		"layer": (10007, 2, (3, 0), (), "layer", None),
		"meshID": (10000, 2, (3, 0), (), "meshID", None),
		"phase": (10020, 2, (5, 0), (), "phase", None),
		"subtype": (10006, 2, (3, 0), (), "subtype", None),
		"temp": (10019, 2, (5, 0), (), "temp", None),
		"type": (10005, 2, (3, 0), (), "type", None),
		"vPressureDirection": (10058, 2, (12, 0), (), "vPressureDirection", None),
		"vaddlID": (10051, 2, (12, 0), (), "vaddlID", None),
		"vdof": (10052, 2, (12, 0), (), "vdof", None),
		"vflag": (10053, 2, (12, 0), (), "vflag", None),
		"vfluxdir": (10055, 2, (12, 0), (), "vfluxdir", None),
		"vfunction": (10056, 2, (12, 0), (), "vfunction", None),
		"vload": (10054, 2, (12, 0), (), "vload", None),
		"x": (10016, 2, (5, 0), (), "x", None),
		"y": (10017, 2, (5, 0), (), "y", None),
		"z": (10018, 2, (5, 0), (), "z", None),
	}
	_prop_map_put_ = {
		"Absorptivity" : ((10029, LCID, 4, 0),()),
		"AbsorptivityVsTemp" : ((10030, LCID, 4, 0),()),
		"Active" : ((17002, LCID, 4, 0),()),
		"CSys" : ((10002, LCID, 4, 0),()),
		"CanBeShaded" : ((10048, LCID, 4, 0),()),
		"CanShade" : ((10047, LCID, 4, 0),()),
		"CavityNumber" : ((10049, LCID, 4, 0),()),
		"ConvectionCoeff" : ((10035, LCID, 4, 0),()),
		"CornerPressure" : ((10025, LCID, 4, 0),()),
		"Emissivity" : ((10042, LCID, 4, 0),()),
		"EmissivityFunc" : ((10043, LCID, 4, 0),()),
		"EnclosureRadiation" : ((10046, LCID, 4, 0),()),
		"FCDisableAdvection" : ((10037, LCID, 4, 0),()),
		"FCDisableConvection" : ((10038, LCID, 4, 0),()),
		"FaceNumber" : ((10012, LCID, 4, 0),()),
		"FlowAreaFactor" : ((10041, LCID, 4, 0),()),
		"FlowDiameter" : ((10040, LCID, 4, 0),()),
		"FlowRate" : ((10039, LCID, 4, 0),()),
		"FluidValue" : ((10032, LCID, 4, 0),()),
		"ForcedConvection" : ((10036, LCID, 4, 0),()),
		"HeatFlux" : ((10028, LCID, 4, 0),()),
		"HeatGen" : ((10027, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"LoadDefinitionID" : ((10009, LCID, 4, 0),()),
		"LoadFunction" : ((10021, LCID, 4, 0),()),
		"LoadValue" : ((10024, LCID, 4, 0),()),
		"PeriodicDirection" : ((10034, LCID, 4, 0),()),
		"PeriodicMaster" : ((10033, LCID, 4, 0),()),
		"PhaseVsFreq" : ((10023, LCID, 4, 0),()),
		"Pressure" : ((10026, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"TempVsTime" : ((10022, LCID, 4, 0),()),
		"VectorFlux" : ((10031, LCID, 4, 0),()),
		"VectorPressure" : ((10057, LCID, 4, 0),()),
		"ViewFactor" : ((10044, LCID, 4, 0),()),
		"ViewFactorVsTime" : ((10045, LCID, 4, 0),()),
		"XOn" : ((10013, LCID, 4, 0),()),
		"YOn" : ((10014, LCID, 4, 0),()),
		"ZOn" : ((10015, LCID, 4, 0),()),
		"color" : ((10010, LCID, 4, 0),()),
		"expanded" : ((10011, LCID, 4, 0),()),
		"layer" : ((10007, LCID, 4, 0),()),
		"meshID" : ((10000, LCID, 4, 0),()),
		"phase" : ((10020, LCID, 4, 0),()),
		"subtype" : ((10006, LCID, 4, 0),()),
		"temp" : ((10019, LCID, 4, 0),()),
		"type" : ((10005, LCID, 4, 0),()),
		"vPressureDirection" : ((10058, LCID, 4, 0),()),
		"vaddlID" : ((10051, LCID, 4, 0),()),
		"vdof" : ((10052, LCID, 4, 0),()),
		"vflag" : ((10053, LCID, 4, 0),()),
		"vfluxdir" : ((10055, LCID, 4, 0),()),
		"vfunction" : ((10056, LCID, 4, 0),()),
		"vload" : ((10054, LCID, 4, 0),()),
		"x" : ((10016, LCID, 4, 0),()),
		"y" : ((10017, LCID, 4, 0),()),
		"z" : ((10018, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoadNTemp(DispatchBaseClass):
	CLSID = IID('{33A4C0D4-F6C5-11D4-9456-001083FFF11C}')
	coclass_clsid = IID('{33A4C0D6-F6C5-11D4-9456-001083FFF11C}')

	def AddArray(self, Count=defaultNamedNotOptArg, doValues=defaultNamedNotOptArg, doFunctions=defaultNamedNotOptArg, NodeID=defaultNamedNotOptArg
			, Values=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (12, 1), (12, 1), (12, 1)),Count
			, doValues, doFunctions, NodeID, Values, FunctionID
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAllArray(self, Count=pythoncom.Missing, ExpandedGeomLoad=pythoncom.Missing, NodeID=pythoncom.Missing, layer=pythoncom.Missing
			, color=pythoncom.Missing, LoadDefinitionID=pythoncom.Missing, Temperature=pythoncom.Missing, FunctionID=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,Count
			, ExpandedGeomLoad, NodeID, layer, color, LoadDefinitionID
			, Temperature, FunctionID)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, Count=defaultNamedNotOptArg, ExpandedGeomLoad=defaultNamedNotOptArg, NodeID=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, color=defaultNamedNotOptArg, LoadDefinitionID=defaultNamedNotOptArg, Temperature=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, ExpandedGeomLoad, NodeID, layer, color, LoadDefinitionID
			, Temperature, FunctionID)

	def PutArray(self, Count=defaultNamedNotOptArg, doValues=defaultNamedNotOptArg, doFunctions=defaultNamedNotOptArg, NodeID=defaultNamedNotOptArg
			, Values=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (12, 1), (12, 1), (12, 1)),Count
			, doValues, doFunctions, NodeID, Values, FunctionID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Function": (10002, 2, (3, 0), (), "Function", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"LoadDefinitionID": (10006, 2, (3, 0), (), "LoadDefinitionID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10004, 2, (3, 0), (), "color", None),
		"expanded": (10005, 2, (11, 0), (), "expanded", None),
		"layer": (10003, 2, (3, 0), (), "layer", None),
		"phase": (10001, 2, (5, 0), (), "phase", None),
		"temp": (10000, 2, (5, 0), (), "temp", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Function" : ((10002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"LoadDefinitionID" : ((10006, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10004, LCID, 4, 0),()),
		"expanded" : ((10005, LCID, 4, 0),()),
		"layer" : ((10003, LCID, 4, 0),()),
		"phase" : ((10001, LCID, 4, 0),()),
		"temp" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoadSet(DispatchBaseClass):
	CLSID = IID('{39A8F662-F3CF-11D4-9453-001083FFF11C}')
	coclass_clsid = IID('{39A8F664-F3CF-11D4-9453-001083FFF11C}')

	# The method BodyAccel is actually a property, but must be used as a method to correctly pass the arguments
	def BodyAccel(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method BodyAccelFunction is actually a property, but must be used as a method to correctly pass the arguments
	def BodyAccelFunction(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method BodyOrigin is actually a property, but must be used as a method to correctly pass the arguments
	def BodyOrigin(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method BodyVaryingAccel is actually a property, but must be used as a method to correctly pass the arguments
	def BodyVaryingAccel(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method BodyVelocity is actually a property, but must be used as a method to correctly pass the arguments
	def BodyVelocity(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method BodyVelocityFunction is actually a property, but must be used as a method to correctly pass the arguments
	def BodyVelocityFunction(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Compress(self):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def ElementsAsSet(self, bExpandedGeomLoads=defaultNamedNotOptArg, bNodeElemLoads=defaultNamedNotOptArg, bTemperatures=defaultNamedNotOptArg, nElemSetID=defaultNamedNotOptArg
			, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (3, 1), (11, 1)),bExpandedGeomLoads
			, bNodeElemLoads, bTemperatures, nElemSetID, bClear)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Expand(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetCombination(self, dOverallScale=pythoncom.Missing, nCombo=pythoncom.Missing, dScale=pythoncom.Missing, nSetID=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((16389, 2), (16387, 2), (16396, 2), (16396, 2)), 'GetCombination', None,dOverallScale
			, nCombo, dScale, nSetID)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	# The method NLConvergenceFlag is actually a property, but must be used as a method to correctly pass the arguments
	def NLConvergenceFlag(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method NLConvergenceVal is actually a property, but must be used as a method to correctly pass the arguments
	def NLConvergenceVal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextLoad(self, pDispatch=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16393, 2),), 'NextLoad', None,pDispatch
			)

	def NextLoadDef(self, pDispatch=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((16393, 2),), 'NextLoadDef', None,pDispatch
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def NodesAsSet(self, bExpandedGeomLoads=defaultNamedNotOptArg, bNodeElemLoads=defaultNamedNotOptArg, bTemperatures=defaultNamedNotOptArg, nNodeSetID=defaultNamedNotOptArg
			, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (3, 1), (11, 1)),bExpandedGeomLoads
			, bNodeElemLoads, bTemperatures, nNodeSetID, bClear)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutCombination(self, dOverallScale=defaultNamedNotOptArg, nCombo=defaultNamedNotOptArg, dScale=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((5, 1), (3, 1), (12, 1), (12, 1)),dOverallScale
			, nCombo, dScale, nSetID)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def ResetNextLoad(self, enDataType=defaultNamedNotOptArg, bAllLoadTypes=defaultNamedNotOptArg, enLoadType=defaultNamedNotOptArg, bOtherLoadsOnly=defaultNamedNotOptArg
			, bIncludeExpanded=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (11, 1), (11, 1)),enDataType
			, bAllLoadTypes, enLoadType, bOtherLoadsOnly, bIncludeExpanded)

	def ResetNextLoadDef(self, bAllDataTypes=defaultNamedNotOptArg, enDataType=defaultNamedNotOptArg, bAllLoadTypes=defaultNamedNotOptArg, enLoadType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((11, 1), (3, 1), (11, 1), (3, 1)),bAllDataTypes
			, enDataType, bAllLoadTypes, enLoadType)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetBodyAccel is actually a property, but must be used as a method to correctly pass the arguments
	def SetBodyAccel(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetBodyAccelFunction is actually a property, but must be used as a method to correctly pass the arguments
	def SetBodyAccelFunction(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetBodyOrigin is actually a property, but must be used as a method to correctly pass the arguments
	def SetBodyOrigin(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetBodyVaryingAccel is actually a property, but must be used as a method to correctly pass the arguments
	def SetBodyVaryingAccel(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetBodyVelocity is actually a property, but must be used as a method to correctly pass the arguments
	def SetBodyVelocity(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetBodyVelocityFunction is actually a property, but must be used as a method to correctly pass the arguments
	def SetBodyVelocityFunction(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetNLConvergenceFlag is actually a property, but must be used as a method to correctly pass the arguments
	def SetNLConvergenceFlag(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetNLConvergenceVal is actually a property, but must be used as a method to correctly pass the arguments
	def SetNLConvergenceVal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"BodyAccelOn": (10005, 2, (11, 0), (), "BodyAccelOn", None),
		"BodyDefTemp": (10001, 2, (5, 0), (), "BodyDefTemp", None),
		"BodyDefTempOn": (10003, 2, (11, 0), (), "BodyDefTempOn", None),
		"BodyForceOppositeRotationalAccel": (10118, 2, (11, 0), (), "BodyForceOppositeRotationalAccel", None),
		"BodyGustAppliedNode": (10116, 2, (3, 0), (), "BodyGustAppliedNode", None),
		"BodyGustFunction": (10117, 2, (3, 0), (), "BodyGustFunction", None),
		"BodyGustOn": (10111, 2, (11, 0), (), "BodyGustOn", None),
		"BodyGustVelocity": (10115, 2, (5, 0), (), "BodyGustVelocity", None),
		"BodyGustVelocityOpt": (10114, 2, (3, 0), (), "BodyGustVelocityOpt", None),
		"BodyGustWG": (10112, 2, (5, 0), (), "BodyGustWG", None),
		"BodyGustX0": (10113, 2, (5, 0), (), "BodyGustX0", None),
		"BodyLoadCSys": (10103, 2, (3, 0), (), "BodyLoadCSys", None),
		"BodyRefTemp": (10002, 2, (5, 0), (), "BodyRefTemp", None),
		"BodyRefTempOn": (10004, 2, (11, 0), (), "BodyRefTempOn", None),
		"BodyVaryingAccelAxis": (10105, 2, (3, 0), (), "BodyVaryingAccelAxis", None),
		"BodyVaryingAccelFunction": (10106, 2, (3, 0), (), "BodyVaryingAccelFunction", None),
		"BodyVaryingAccelOn": (10104, 2, (11, 0), (), "BodyVaryingAccelOn", None),
		"BodyVelocityOn": (10006, 2, (11, 0), (), "BodyVelocityOn", None),
		"CombinedScaleFactor": (10102, 2, (5, 0), (), "CombinedScaleFactor", None),
		"DYNAddlFreqLogInterp": (10092, 2, (11, 0), (), "DYNAddlFreqLogInterp", None),
		"DYNAddlFreqMax": (10091, 2, (5, 0), (), "DYNAddlFreqMax", None),
		"DYNAddlFreqMin": (10090, 2, (5, 0), (), "DYNAddlFreqMin", None),
		"DYNAddlFreqNumFreq": (10089, 2, (3, 0), (), "DYNAddlFreqNumFreq", None),
		"DYNAddlFreqSpread": (10093, 2, (5, 0), (), "DYNAddlFreqSpread", None),
		"DYNAddlFreqType": (10088, 2, (3, 0), (), "DYNAddlFreqType", None),
		"DYNDampingTable": (10079, 2, (3, 0), (), "DYNDampingTable", None),
		"DYNDataRecovery": (10066, 2, (3, 0), (), "DYNDataRecovery", None),
		"DYNElemFreqDamp": (10061, 2, (5, 0), (), "DYNElemFreqDamp", None),
		"DYNFrequencyTable": (10078, 2, (3, 0), (), "DYNFrequencyTable", None),
		"DYNMassFormulation": (10065, 2, (3, 0), (), "DYNMassFormulation", None),
		"DYNModalMethod": (10064, 2, (3, 0), (), "DYNModalMethod", None),
		"DYNOn": (10062, 2, (3, 0), (), "DYNOn", None),
		"DYNPSDInterp": (10069, 2, (3, 0), (), "DYNPSDInterp", None),
		"DYNPSDType": (10068, 2, (3, 0), (), "DYNPSDType", None),
		"DYNRandomPSD": (10080, 2, (3, 0), (), "DYNRandomPSD", None),
		"DYNResponseMaxFreq": (10083, 2, (5, 0), (), "DYNResponseMaxFreq", None),
		"DYNResponseMinFreq": (10082, 2, (5, 0), (), "DYNResponseMinFreq", None),
		"DYNResponseModes": (10081, 2, (3, 0), (), "DYNResponseModes", None),
		"DYNSolFreqLogInterp": (10074, 2, (11, 0), (), "DYNSolFreqLogInterp", None),
		"DYNSolFreqMax": (10073, 2, (5, 0), (), "DYNSolFreqMax", None),
		"DYNSolFreqMin": (10072, 2, (5, 0), (), "DYNSolFreqMin", None),
		"DYNSolFreqNumFreq": (10071, 2, (3, 0), (), "DYNSolFreqNumFreq", None),
		"DYNSolFreqSpread": (10070, 2, (5, 0), (), "DYNSolFreqSpread", None),
		"DYNSolFreqType": (10067, 2, (3, 0), (), "DYNSolFreqType", None),
		"DYNStructDamp": (10059, 2, (5, 0), (), "DYNStructDamp", None),
		"DYNSystemFreqDamp": (10060, 2, (5, 0), (), "DYNSystemFreqDamp", None),
		"DYNTransOutputInterval": (10077, 2, (3, 0), (), "DYNTransOutputInterval", None),
		"DYNTransTimePerStep": (10076, 2, (5, 0), (), "DYNTransTimePerStep", None),
		"DYNTransTimeSteps": (10075, 2, (3, 0), (), "DYNTransTimeSteps", None),
		"DYNType": (10063, 2, (3, 0), (), "DYNType", None),
		"FCAlternateForm": (10024, 2, (11, 0), (), "FCAlternateForm", None),
		"FCConstantCoeff": (10020, 2, (5, 0), (), "FCConstantCoeff", None),
		"FCExcludeConvective": (10025, 2, (11, 0), (), "FCExcludeConvective", None),
		"FCFluidConductivity": (10012, 2, (5, 0), (), "FCFluidConductivity", None),
		"FCFluidConductivityFunc": (10016, 2, (3, 0), (), "FCFluidConductivityFunc", None),
		"FCFluidDensity": (10015, 2, (5, 0), (), "FCFluidDensity", None),
		"FCFluidDensityFunc": (10019, 2, (3, 0), (), "FCFluidDensityFunc", None),
		"FCFluidHeatCapacity": (10013, 2, (5, 0), (), "FCFluidHeatCapacity", None),
		"FCFluidHeatCapacityFunc": (10017, 2, (3, 0), (), "FCFluidHeatCapacityFunc", None),
		"FCFluidViscosity": (10014, 2, (5, 0), (), "FCFluidViscosity", None),
		"FCFluidViscosityFunc": (10018, 2, (3, 0), (), "FCFluidViscosityFunc", None),
		"FCPrandtlIn": (10022, 2, (5, 0), (), "FCPrandtlIn", None),
		"FCPrandtlOut": (10023, 2, (5, 0), (), "FCPrandtlOut", None),
		"FCReynoldsExp": (10021, 2, (5, 0), (), "FCReynoldsExp", None),
		"FreeConvAlternateForm": (10011, 2, (11, 0), (), "FreeConvAlternateForm", None),
		"FreeConvExponent": (10010, 2, (5, 0), (), "FreeConvExponent", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"IsCombination": (10101, 2, (11, 0), (), "IsCombination", None),
		"IsSequence": (10110, 2, (11, 0), (), "IsSequence", None),
		"NLArcConstraintType": (10044, 2, (3, 0), (), "NLArcConstraintType", None),
		"NLArcDesiredIter": (10045, 2, (3, 0), (), "NLArcDesiredIter", None),
		"NLArcLengthMethod": (10036, 2, (3, 0), (), "NLArcLengthMethod", None),
		"NLArcMaxAdjust": (10043, 2, (5, 0), (), "NLArcMaxAdjust", None),
		"NLArcMaxIncrement": (10046, 2, (3, 0), (), "NLArcMaxIncrement", None),
		"NLArcMinAdjust": (10042, 2, (5, 0), (), "NLArcMinAdjust", None),
		"NLArcScaleConstLoad": (10041, 2, (5, 0), (), "NLArcScaleConstLoad", None),
		"NLIncrements": (10027, 2, (3, 0), (), "NLIncrements", None),
		"NLIntermediateOutput": (10034, 2, (3, 0), (), "NLIntermediateOutput", None),
		"NLLineSearchTolerance": (10050, 2, (5, 0), (), "NLLineSearchTolerance", None),
		"NLMaxAdjusted": (10054, 2, (5, 0), (), "NLMaxAdjusted", None),
		"NLMaxBisection": (10051, 2, (3, 0), (), "NLMaxBisection", None),
		"NLMaxDivergeCond": (10047, 2, (3, 0), (), "NLMaxDivergeCond", None),
		"NLMaxIterPerStep": (10029, 2, (3, 0), (), "NLMaxIterPerStep", None),
		"NLMaxLineSearch": (10049, 2, (3, 0), (), "NLMaxLineSearch", None),
		"NLMaxRotation": (10052, 2, (5, 0), (), "NLMaxRotation", None),
		"NLNewtRaphBisection": (10040, 2, (11, 0), (), "NLNewtRaphBisection", None),
		"NLNewtRaphLineSearch": (10038, 2, (11, 0), (), "NLNewtRaphLineSearch", None),
		"NLNewtRaphQuasiNewton": (10039, 2, (11, 0), (), "NLNewtRaphQuasiNewton", None),
		"NLOn": (10026, 2, (3, 0), (), "NLOn", None),
		"NLOutputInterval": (10035, 2, (3, 0), (), "NLOutputInterval", None),
		"NLQuasiNewtonVec": (10048, 2, (3, 0), (), "NLQuasiNewtonVec", None),
		"NLSolutionOverride": (10037, 2, (3, 0), (), "NLSolutionOverride", None),
		"NLStiffnessIter": (10033, 2, (3, 0), (), "NLStiffnessIter", None),
		"NLStiffnessMethod": (10032, 2, (3, 0), (), "NLStiffnessMethod", None),
		"NLStressFraction": (10053, 2, (5, 0), (), "NLStressFraction", None),
		"NLTimeIncrement": (10028, 2, (5, 0), (), "NLTimeIncrement", None),
		"NLTransBoundsMaintain": (10057, 2, (5, 0), (), "NLTransBoundsMaintain", None),
		"NLTransDominantSteps": (10056, 2, (3, 0), (), "NLTransDominantSteps", None),
		"NLTransStabilityTol": (10058, 2, (5, 0), (), "NLTransStabilityTol", None),
		"NLTransStepSkipFactor": (10055, 2, (3, 0), (), "NLTransStepSkipFactor", None),
		"RadViewFactorZTOL": (10108, 2, (5, 0), (), "RadViewFactorZTOL", None),
		"RadiationAmbientElem": (10008, 2, (3, 0), (), "RadiationAmbientElem", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"StefanBoltzmann": (10007, 2, (5, 0), (), "StefanBoltzmann", None),
		"TempOffset": (10009, 2, (5, 0), (), "TempOffset", None),
		"bRadViewFactorZTOL": (10109, 2, (11, 0), (), "bRadViewFactorZTOL", None),
		"layer": (10000, 2, (3, 0), (), "layer", None),
		"title": (10084, 2, (8, 0), (), "title", None),
		"vBodyAccel": (10096, 2, (12, 0), (), "vBodyAccel", None),
		"vBodyAccelFunction": (10099, 2, (12, 0), (), "vBodyAccelFunction", None),
		"vBodyOrigin": (10098, 2, (12, 0), (), "vBodyOrigin", None),
		"vBodyVaryingAccel": (10107, 2, (12, 0), (), "vBodyVaryingAccel", None),
		"vBodyVelocity": (10097, 2, (12, 0), (), "vBodyVelocity", None),
		"vBodyVelocityFunction": (10100, 2, (12, 0), (), "vBodyVelocityFunction", None),
		"vNLConvergenceFlag": (10094, 2, (12, 0), (), "vNLConvergenceFlag", None),
		"vNLConvergenceVal": (10095, 2, (12, 0), (), "vNLConvergenceVal", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"BodyAccelOn" : ((10005, LCID, 4, 0),()),
		"BodyDefTemp" : ((10001, LCID, 4, 0),()),
		"BodyDefTempOn" : ((10003, LCID, 4, 0),()),
		"BodyForceOppositeRotationalAccel" : ((10118, LCID, 4, 0),()),
		"BodyGustAppliedNode" : ((10116, LCID, 4, 0),()),
		"BodyGustFunction" : ((10117, LCID, 4, 0),()),
		"BodyGustOn" : ((10111, LCID, 4, 0),()),
		"BodyGustVelocity" : ((10115, LCID, 4, 0),()),
		"BodyGustVelocityOpt" : ((10114, LCID, 4, 0),()),
		"BodyGustWG" : ((10112, LCID, 4, 0),()),
		"BodyGustX0" : ((10113, LCID, 4, 0),()),
		"BodyLoadCSys" : ((10103, LCID, 4, 0),()),
		"BodyRefTemp" : ((10002, LCID, 4, 0),()),
		"BodyRefTempOn" : ((10004, LCID, 4, 0),()),
		"BodyVaryingAccelAxis" : ((10105, LCID, 4, 0),()),
		"BodyVaryingAccelFunction" : ((10106, LCID, 4, 0),()),
		"BodyVaryingAccelOn" : ((10104, LCID, 4, 0),()),
		"BodyVelocityOn" : ((10006, LCID, 4, 0),()),
		"CombinedScaleFactor" : ((10102, LCID, 4, 0),()),
		"DYNAddlFreqLogInterp" : ((10092, LCID, 4, 0),()),
		"DYNAddlFreqMax" : ((10091, LCID, 4, 0),()),
		"DYNAddlFreqMin" : ((10090, LCID, 4, 0),()),
		"DYNAddlFreqNumFreq" : ((10089, LCID, 4, 0),()),
		"DYNAddlFreqSpread" : ((10093, LCID, 4, 0),()),
		"DYNAddlFreqType" : ((10088, LCID, 4, 0),()),
		"DYNDampingTable" : ((10079, LCID, 4, 0),()),
		"DYNDataRecovery" : ((10066, LCID, 4, 0),()),
		"DYNElemFreqDamp" : ((10061, LCID, 4, 0),()),
		"DYNFrequencyTable" : ((10078, LCID, 4, 0),()),
		"DYNMassFormulation" : ((10065, LCID, 4, 0),()),
		"DYNModalMethod" : ((10064, LCID, 4, 0),()),
		"DYNOn" : ((10062, LCID, 4, 0),()),
		"DYNPSDInterp" : ((10069, LCID, 4, 0),()),
		"DYNPSDType" : ((10068, LCID, 4, 0),()),
		"DYNRandomPSD" : ((10080, LCID, 4, 0),()),
		"DYNResponseMaxFreq" : ((10083, LCID, 4, 0),()),
		"DYNResponseMinFreq" : ((10082, LCID, 4, 0),()),
		"DYNResponseModes" : ((10081, LCID, 4, 0),()),
		"DYNSolFreqLogInterp" : ((10074, LCID, 4, 0),()),
		"DYNSolFreqMax" : ((10073, LCID, 4, 0),()),
		"DYNSolFreqMin" : ((10072, LCID, 4, 0),()),
		"DYNSolFreqNumFreq" : ((10071, LCID, 4, 0),()),
		"DYNSolFreqSpread" : ((10070, LCID, 4, 0),()),
		"DYNSolFreqType" : ((10067, LCID, 4, 0),()),
		"DYNStructDamp" : ((10059, LCID, 4, 0),()),
		"DYNSystemFreqDamp" : ((10060, LCID, 4, 0),()),
		"DYNTransOutputInterval" : ((10077, LCID, 4, 0),()),
		"DYNTransTimePerStep" : ((10076, LCID, 4, 0),()),
		"DYNTransTimeSteps" : ((10075, LCID, 4, 0),()),
		"DYNType" : ((10063, LCID, 4, 0),()),
		"FCAlternateForm" : ((10024, LCID, 4, 0),()),
		"FCConstantCoeff" : ((10020, LCID, 4, 0),()),
		"FCExcludeConvective" : ((10025, LCID, 4, 0),()),
		"FCFluidConductivity" : ((10012, LCID, 4, 0),()),
		"FCFluidConductivityFunc" : ((10016, LCID, 4, 0),()),
		"FCFluidDensity" : ((10015, LCID, 4, 0),()),
		"FCFluidDensityFunc" : ((10019, LCID, 4, 0),()),
		"FCFluidHeatCapacity" : ((10013, LCID, 4, 0),()),
		"FCFluidHeatCapacityFunc" : ((10017, LCID, 4, 0),()),
		"FCFluidViscosity" : ((10014, LCID, 4, 0),()),
		"FCFluidViscosityFunc" : ((10018, LCID, 4, 0),()),
		"FCPrandtlIn" : ((10022, LCID, 4, 0),()),
		"FCPrandtlOut" : ((10023, LCID, 4, 0),()),
		"FCReynoldsExp" : ((10021, LCID, 4, 0),()),
		"FreeConvAlternateForm" : ((10011, LCID, 4, 0),()),
		"FreeConvExponent" : ((10010, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"IsCombination" : ((10101, LCID, 4, 0),()),
		"IsSequence" : ((10110, LCID, 4, 0),()),
		"NLArcConstraintType" : ((10044, LCID, 4, 0),()),
		"NLArcDesiredIter" : ((10045, LCID, 4, 0),()),
		"NLArcLengthMethod" : ((10036, LCID, 4, 0),()),
		"NLArcMaxAdjust" : ((10043, LCID, 4, 0),()),
		"NLArcMaxIncrement" : ((10046, LCID, 4, 0),()),
		"NLArcMinAdjust" : ((10042, LCID, 4, 0),()),
		"NLArcScaleConstLoad" : ((10041, LCID, 4, 0),()),
		"NLIncrements" : ((10027, LCID, 4, 0),()),
		"NLIntermediateOutput" : ((10034, LCID, 4, 0),()),
		"NLLineSearchTolerance" : ((10050, LCID, 4, 0),()),
		"NLMaxAdjusted" : ((10054, LCID, 4, 0),()),
		"NLMaxBisection" : ((10051, LCID, 4, 0),()),
		"NLMaxDivergeCond" : ((10047, LCID, 4, 0),()),
		"NLMaxIterPerStep" : ((10029, LCID, 4, 0),()),
		"NLMaxLineSearch" : ((10049, LCID, 4, 0),()),
		"NLMaxRotation" : ((10052, LCID, 4, 0),()),
		"NLNewtRaphBisection" : ((10040, LCID, 4, 0),()),
		"NLNewtRaphLineSearch" : ((10038, LCID, 4, 0),()),
		"NLNewtRaphQuasiNewton" : ((10039, LCID, 4, 0),()),
		"NLOn" : ((10026, LCID, 4, 0),()),
		"NLOutputInterval" : ((10035, LCID, 4, 0),()),
		"NLQuasiNewtonVec" : ((10048, LCID, 4, 0),()),
		"NLSolutionOverride" : ((10037, LCID, 4, 0),()),
		"NLStiffnessIter" : ((10033, LCID, 4, 0),()),
		"NLStiffnessMethod" : ((10032, LCID, 4, 0),()),
		"NLStressFraction" : ((10053, LCID, 4, 0),()),
		"NLTimeIncrement" : ((10028, LCID, 4, 0),()),
		"NLTransBoundsMaintain" : ((10057, LCID, 4, 0),()),
		"NLTransDominantSteps" : ((10056, LCID, 4, 0),()),
		"NLTransStabilityTol" : ((10058, LCID, 4, 0),()),
		"NLTransStepSkipFactor" : ((10055, LCID, 4, 0),()),
		"RadViewFactorZTOL" : ((10108, LCID, 4, 0),()),
		"RadiationAmbientElem" : ((10008, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"StefanBoltzmann" : ((10007, LCID, 4, 0),()),
		"TempOffset" : ((10009, LCID, 4, 0),()),
		"bRadViewFactorZTOL" : ((10109, LCID, 4, 0),()),
		"layer" : ((10000, LCID, 4, 0),()),
		"title" : ((10084, LCID, 4, 0),()),
		"vBodyAccel" : ((10096, LCID, 4, 0),()),
		"vBodyAccelFunction" : ((10099, LCID, 4, 0),()),
		"vBodyOrigin" : ((10098, LCID, 4, 0),()),
		"vBodyVaryingAccel" : ((10107, LCID, 4, 0),()),
		"vBodyVelocity" : ((10097, LCID, 4, 0),()),
		"vBodyVelocityFunction" : ((10100, LCID, 4, 0),()),
		"vNLConvergenceFlag" : ((10094, LCID, 4, 0),()),
		"vNLConvergenceVal" : ((10095, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMapData(DispatchBaseClass):
	CLSID = IID('{0023EA23-812A-4253-A431-86B427A49C8C}')
	coclass_clsid = IID('{0023EA25-812A-4253-A431-86B427A49C8C}')

	def Count(self):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), (),)

	def DefineBool(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def DefineInt(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def DefineReal(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def DefineString(self, nLength=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1),),nLength
			)

	def DefineVariant(self, vVar=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((12, 1),),vVar
			)

	def GetBool(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, pbVal=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((3, 1), (3, 1), (16395, 2)), 'GetBool', None,nIndex
			, nID, pbVal)

	def GetIDs(self, nIDSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),nIDSet
			)

	def GetInt(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, pnVal=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((3, 1), (3, 1), (16387, 2)), 'GetInt', None,nIndex
			, nID, pnVal)

	def GetReal(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, pdVal=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((3, 1), (3, 1), (16389, 2)), 'GetReal', None,nIndex
			, nID, pdVal)

	def GetString(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, psVal=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((3, 1), (3, 1), (16392, 2)), 'GetString', None,nIndex
			, nID, psVal)

	def GetVariant(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, vVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),nIndex
			, nID, vVal)

	def Initialize(self, nCount=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),nCount
			)

	def Remove(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def RemoveAll(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def SetBool(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, bVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nIndex
			, nID, bVal)

	def SetInt(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, nVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nIndex
			, nID, nVal)

	def SetReal(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, dVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nIndex
			, nID, dVal)

	def SetString(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, sVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),nIndex
			, nID, sVal)

	def SetVariant(self, nIndex=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, vVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),nIndex
			, nID, vVal)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() method - allow len(ob) to provide this
	def __len__(self):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), (),)

	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMapOutput(DispatchBaseClass):
	CLSID = IID('{FB7C8189-2114-43D6-86DE-78138CDF8C0B}')
	coclass_clsid = IID('{FB7C8191-2114-43D6-86DE-78138CDF8C0B}')

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetOutputDataSurface(self, dataSurfID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),dataSurfID
			)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def MapFromModelToLocationV2(self, outModelID=defaultNamedNotOptArg, nGroup=defaultNamedNotOptArg, nOutSet=defaultNamedNotOptArg, nOutVect=defaultNamedNotOptArg
			, vLocationX=defaultNamedNotOptArg, vLocationY=defaultNamedNotOptArg, vLocationZ=defaultNamedNotOptArg, vLocationP=defaultNamedNotOptArg, vLoadX=defaultNamedNotOptArg
			, vLoadY=defaultNamedNotOptArg, vLoadZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((20, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (16396, 1), (16396, 1), (16396, 1), (16396, 1)),outModelID
			, nGroup, nOutSet, nOutVect, vLocationX, vLocationY
			, vLocationZ, vLocationP, vLoadX, vLoadY, vLoadZ
			)

	def MapFromModelToSet2V2(self, outModelID=defaultNamedNotOptArg, nGroup=defaultNamedNotOptArg, nOutSet=defaultNamedNotOptArg, nOutVect=defaultNamedNotOptArg
			, ID=defaultNamedNotOptArg, elFace=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((20, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),outModelID
			, nGroup, nOutSet, nOutVect, ID, elFace
			)

	def MapFromModelToSetV2(self, outModelID=defaultNamedNotOptArg, nGroup=defaultNamedNotOptArg, nOutSet=defaultNamedNotOptArg, nOutVect=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((20, 1), (3, 1), (3, 1), (3, 1)),outModelID
			, nGroup, nOutSet, nOutVect)

	def MapOutputDataToLocation(self, Count=defaultNamedNotOptArg, vXYx=defaultNamedNotOptArg, vValXYZ=defaultNamedNotOptArg, qValid=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (12, 1), (16396, 1), (16396, 1)),Count
			, vXYx, vValXYZ, qValid)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"DataConversion": (10009, 2, (3, 0), (), "DataConversion", None),
		"DefaultMapValue1": (10002, 2, (5, 0), (), "DefaultMapValue1", None),
		"DefaultMapValue2": (10003, 2, (5, 0), (), "DefaultMapValue2", None),
		"DefaultMapValue3": (10004, 2, (5, 0), (), "DefaultMapValue3", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"MapOffsetTolerance": (10008, 2, (5, 0), (), "MapOffsetTolerance", None),
		"MapOption": (10001, 2, (3, 0), (), "MapOption", None),
		"MapToType": (10007, 2, (3, 0), (), "MapToType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"TargetSet": (10005, 2, (3, 0), (), "TargetSet", None),
		"UseCriteria": (10010, 2, (11, 0), (), "UseCriteria", None),
		"loadType": (10006, 2, (3, 0), (), "loadType", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"DataConversion" : ((10009, LCID, 4, 0),()),
		"DefaultMapValue1" : ((10002, LCID, 4, 0),()),
		"DefaultMapValue2" : ((10003, LCID, 4, 0),()),
		"DefaultMapValue3" : ((10004, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"MapOffsetTolerance" : ((10008, LCID, 4, 0),()),
		"MapOption" : ((10001, LCID, 4, 0),()),
		"MapToType" : ((10007, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"TargetSet" : ((10005, LCID, 4, 0),()),
		"UseCriteria" : ((10010, LCID, 4, 0),()),
		"loadType" : ((10006, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMatl(DispatchBaseClass):
	CLSID = IID('{0AD6E2E8-EE3E-11D4-944C-001083FFF11C}')
	coclass_clsid = IID('{0AD6E2EA-EE3E-11D4-944C-001083FFF11C}')

	def AreDuplicate(self, nMatl1=defaultNamedNotOptArg, nMatl2=defaultNamedNotOptArg, ignoretitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nMatl1
			, nMatl2, ignoretitle)

	def AutoComplete(self):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), (),)

	def CopyArray(self, bUpdateReferences=defaultNamedNotOptArg, bCopyToStartID=defaultNamedNotOptArg, nCopyToStartID=defaultNamedNotOptArg, numID=defaultNamedNotOptArg
			, nOrigID=defaultNamedNotOptArg, pnNewID=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (3, 1), (12, 1), (16396, 2)), 'CopyArray', None,bUpdateReferences
			, bCopyToStartID, nCopyToStartID, numID, nOrigID, pnNewID
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetAllArray(self, SetID=defaultNamedNotOptArg, numMatl=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, matltype=pythoncom.Missing, matlsubtype=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing, title=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,SetID
			, numMatl, entID, Exist, matltype, matlsubtype
			, layer, color, title)

	def GetLibrary(self, ID=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),ID
			, libFILE)

	def GetLibraryOfType(self, libINDEX=defaultNamedNotOptArg, libTYPE=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),libINDEX
			, libTYPE, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def GetValueArray(self, numValue=defaultNamedNotOptArg, nMatlID=defaultNamedNotOptArg, nMatlIndex=defaultNamedNotOptArg, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (16396, 2)), 'GetValueArray', None,numValue
			, nMatlID, nMatlIndex, dValue)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, numMatl=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, bUpdateType=defaultNamedNotOptArg, matltype=defaultNamedNotOptArg
			, matlsubtype=defaultNamedNotOptArg, bUpdateLayer=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, bUpdateColor=defaultNamedNotOptArg, color=defaultNamedNotOptArg
			, bUpdateTitle=defaultNamedNotOptArg, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (12, 1), (11, 1), (12, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1)),numMatl
			, entID, bUpdateType, matltype, matlsubtype, bUpdateLayer
			, layer, bUpdateColor, color, bUpdateTitle, title
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutValue(self, nMatlSetID=defaultNamedNotOptArg, nMatlIndex=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nMatlSetID
			, nMatlIndex, dValue)

	def PutValueArray(self, numValue=defaultNamedNotOptArg, nMatlID=defaultNamedNotOptArg, nMatlIndex=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),numValue
			, nMatlID, nMatlIndex, dValue)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetbVal is actually a property, but must be used as a method to correctly pass the arguments
	def SetbVal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method Setfval is actually a property, but must be used as a method to correctly pass the arguments
	def Setfval(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setival is actually a property, but must be used as a method to correctly pass the arguments
	def Setival(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setmval is actually a property, but must be used as a method to correctly pass the arguments
	def Setmval(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Settval is actually a property, but must be used as a method to correctly pass the arguments
	def Settval(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method bVal is actually a property, but must be used as a method to correctly pass the arguments
	def bVal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method fval is actually a property, but must be used as a method to correctly pass the arguments
	def fval(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method ival is actually a property, but must be used as a method to correctly pass the arguments
	def ival(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method mval is actually a property, but must be used as a method to correctly pass the arguments
	def mval(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method tval is actually a property, but must be used as a method to correctly pass the arguments
	def tval(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Alphaxx": (10019, 2, (5, 0), (), "Alphaxx", None),
		"Alphaxy": (10022, 2, (5, 0), (), "Alphaxy", None),
		"Alphayy": (10020, 2, (5, 0), (), "Alphayy", None),
		"Alphayz": (10023, 2, (5, 0), (), "Alphayz", None),
		"Alphazx": (10024, 2, (5, 0), (), "Alphazx", None),
		"Alphazz": (10021, 2, (5, 0), (), "Alphazz", None),
		"CompressionLimit1": (10037, 2, (5, 0), (), "CompressionLimit1", None),
		"CompressionLimit2": (10038, 2, (5, 0), (), "CompressionLimit2", None),
		"Cp": (10031, 2, (5, 0), (), "Cp", None),
		"Damping": (10033, 2, (5, 0), (), "Damping", None),
		"Density": (10032, 2, (5, 0), (), "Density", None),
		"Ex": (10010, 2, (5, 0), (), "Ex", None),
		"Ey": (10011, 2, (5, 0), (), "Ey", None),
		"Ez": (10012, 2, (5, 0), (), "Ez", None),
		"Gx": (10013, 2, (5, 0), (), "Gx", None),
		"Gy": (10014, 2, (5, 0), (), "Gy", None),
		"Gz": (10015, 2, (5, 0), (), "Gz", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Kxx": (10025, 2, (5, 0), (), "Kxx", None),
		"Kxy": (10028, 2, (5, 0), (), "Kxy", None),
		"Kyy": (10026, 2, (5, 0), (), "Kyy", None),
		"Kyz": (10029, 2, (5, 0), (), "Kyz", None),
		"Kzx": (10030, 2, (5, 0), (), "Kzx", None),
		"Kzz": (10027, 2, (5, 0), (), "Kzz", None),
		"Nuxy": (10016, 2, (5, 0), (), "Nuxy", None),
		"Nuxz": (10018, 2, (5, 0), (), "Nuxz", None),
		"Nuyz": (10017, 2, (5, 0), (), "Nuyz", None),
		"RefTemp": (10034, 2, (5, 0), (), "RefTemp", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"ShearLimit": (10039, 2, (5, 0), (), "ShearLimit", None),
		"TensionLimit1": (10035, 2, (5, 0), (), "TensionLimit1", None),
		"TensionLimit2": (10036, 2, (5, 0), (), "TensionLimit2", None),
		"TsaiWu": (10040, 2, (5, 0), (), "TsaiWu", None),
		"color": (10001, 2, (3, 0), (), "color", None),
		"fmat": (10043, 2, (12, 0), (), "fmat", None),
		"imat": (10042, 2, (12, 0), (), "imat", None),
		"layer": (10000, 2, (3, 0), (), "layer", None),
		"mmat": (10041, 2, (12, 0), (), "mmat", None),
		"subtype": (10003, 2, (3, 0), (), "subtype", None),
		"title": (10009, 2, (8, 0), (), "title", None),
		"tmat": (10044, 2, (12, 0), (), "tmat", None),
		"type": (10002, 2, (3, 0), (), "type", None),
		"vbval": (10045, 2, (12, 0), (), "vbval", None),
		"vfval": (10048, 2, (12, 0), (), "vfval", None),
		"vival": (10047, 2, (12, 0), (), "vival", None),
		"vmval": (10046, 2, (12, 0), (), "vmval", None),
		"vtval": (10049, 2, (12, 0), (), "vtval", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Alphaxx" : ((10019, LCID, 4, 0),()),
		"Alphaxy" : ((10022, LCID, 4, 0),()),
		"Alphayy" : ((10020, LCID, 4, 0),()),
		"Alphayz" : ((10023, LCID, 4, 0),()),
		"Alphazx" : ((10024, LCID, 4, 0),()),
		"Alphazz" : ((10021, LCID, 4, 0),()),
		"CompressionLimit1" : ((10037, LCID, 4, 0),()),
		"CompressionLimit2" : ((10038, LCID, 4, 0),()),
		"Cp" : ((10031, LCID, 4, 0),()),
		"Damping" : ((10033, LCID, 4, 0),()),
		"Density" : ((10032, LCID, 4, 0),()),
		"Ex" : ((10010, LCID, 4, 0),()),
		"Ey" : ((10011, LCID, 4, 0),()),
		"Ez" : ((10012, LCID, 4, 0),()),
		"Gx" : ((10013, LCID, 4, 0),()),
		"Gy" : ((10014, LCID, 4, 0),()),
		"Gz" : ((10015, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Kxx" : ((10025, LCID, 4, 0),()),
		"Kxy" : ((10028, LCID, 4, 0),()),
		"Kyy" : ((10026, LCID, 4, 0),()),
		"Kyz" : ((10029, LCID, 4, 0),()),
		"Kzx" : ((10030, LCID, 4, 0),()),
		"Kzz" : ((10027, LCID, 4, 0),()),
		"Nuxy" : ((10016, LCID, 4, 0),()),
		"Nuxz" : ((10018, LCID, 4, 0),()),
		"Nuyz" : ((10017, LCID, 4, 0),()),
		"RefTemp" : ((10034, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"ShearLimit" : ((10039, LCID, 4, 0),()),
		"TensionLimit1" : ((10035, LCID, 4, 0),()),
		"TensionLimit2" : ((10036, LCID, 4, 0),()),
		"TsaiWu" : ((10040, LCID, 4, 0),()),
		"color" : ((10001, LCID, 4, 0),()),
		"fmat" : ((10043, LCID, 4, 0),()),
		"imat" : ((10042, LCID, 4, 0),()),
		"layer" : ((10000, LCID, 4, 0),()),
		"mmat" : ((10041, LCID, 4, 0),()),
		"subtype" : ((10003, LCID, 4, 0),()),
		"title" : ((10009, LCID, 4, 0),()),
		"tmat" : ((10044, LCID, 4, 0),()),
		"type" : ((10002, LCID, 4, 0),()),
		"vbval" : ((10045, LCID, 4, 0),()),
		"vfval" : ((10048, LCID, 4, 0),()),
		"vival" : ((10047, LCID, 4, 0),()),
		"vmval" : ((10046, LCID, 4, 0),()),
		"vtval" : ((10049, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMatrixInput(DispatchBaseClass):
	CLSID = IID('{2B6ABCD1-ABB6-448D-BC13-FB9C102792B9}')
	coclass_clsid = IID('{2B6ABCD3-ABB6-448D-BC13-FB9C102792B9}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetCombination(self, nSetID=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, dScale=pythoncom.Missing, MatrixInputID=pythoncom.Missing
			, InputName=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((3, 1), (3, 1), (16389, 2), (16387, 2), (16392, 2)), 'GetCombination', None,nSetID
			, entID, dScale, MatrixInputID, InputName)

	def GetCombinationSet(self, pCombinationSet=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((16393, 2),), 'GetCombinationSet', None,pCombinationSet
			)

	def GetCombinations(self, MatrixComboEntityID=defaultNamedNotOptArg, listcount=pythoncom.Missing, MatrixEntityIDs=pythoncom.Missing, DirectNameInputs=pythoncom.Missing
			, ScaleFactors=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetCombinations', None,MatrixComboEntityID
			, listcount, MatrixEntityIDs, DirectNameInputs, ScaleFactors)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetMatrixEntry(self, nSetID=defaultNamedNotOptArg, NodeColumnIndex=defaultNamedNotOptArg, NodeColumnComponent=defaultNamedNotOptArg, NodeRowIndex=defaultNamedNotOptArg
			, NodeRowComponent=defaultNamedNotOptArg, RealMatrixValue=pythoncom.Missing, ImagMatrixValue=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (16389, 2), (16389, 2)), 'GetMatrixEntry', None,nSetID
			, NodeColumnIndex, NodeColumnComponent, NodeRowIndex, NodeRowComponent, RealMatrixValue
			, ImagMatrixValue)

	def GetMatrixList(self, listcount=pythoncom.Missing, NodeColumnIndex=pythoncom.Missing, NodeColumnComponent=pythoncom.Missing, NodeRowIndex=pythoncom.Missing
			, NodeRowComponent=pythoncom.Missing, RealMatrixValue=pythoncom.Missing, ImagMatrixValue=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetMatrixList', None,listcount
			, NodeColumnIndex, NodeColumnComponent, NodeRowIndex, NodeRowComponent, RealMatrixValue
			, ImagMatrixValue)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutCombination(self, nSetID=defaultNamedNotOptArg, dScale=defaultNamedNotOptArg, MatrixInputID=defaultNamedNotOptArg, InputName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (5, 1), (3, 1), (8, 1)),nSetID
			, dScale, MatrixInputID, InputName)

	def PutCombinations(self, listcount=defaultNamedNotOptArg, MatrixEntityIDs=defaultNamedNotOptArg, DirectNameInputs=defaultNamedNotOptArg, ScaleFactors=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),listcount
			, MatrixEntityIDs, DirectNameInputs, ScaleFactors)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutMatrixEntry(self, nSetID=defaultNamedNotOptArg, NodeColumnIndex=defaultNamedNotOptArg, NodeColumnComponent=defaultNamedNotOptArg, NodeRowIndex=defaultNamedNotOptArg
			, NodeRowComponent=defaultNamedNotOptArg, RealMatrixValue=defaultNamedNotOptArg, ImagMatrixValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (5, 1)),nSetID
			, NodeColumnIndex, NodeColumnComponent, NodeRowIndex, NodeRowComponent, RealMatrixValue
			, ImagMatrixValue)

	def PutMatrixList(self, listcount=defaultNamedNotOptArg, NodeColumnIndex=defaultNamedNotOptArg, NodeColumnComponent=defaultNamedNotOptArg, NodeRowIndex=defaultNamedNotOptArg
			, NodeRowComponent=defaultNamedNotOptArg, RealMatrixValue=defaultNamedNotOptArg, ImagMatrixValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),listcount
			, NodeColumnIndex, NodeColumnComponent, NodeRowIndex, NodeRowComponent, RealMatrixValue
			, ImagMatrixValue)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AssignForm": (10009, 2, (3, 0), (), "AssignForm", None),
		"ComplexForm": (10005, 2, (3, 0), (), "ComplexForm", None),
		"DataSource": (10014, 2, (3, 0), (), "DataSource", None),
		"FileInputForm": (10011, 2, (3, 0), (), "FileInputForm", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"InputForm": (10002, 2, (3, 0), (), "InputForm", None),
		"InputPrecision": (10003, 2, (3, 0), (), "InputPrecision", None),
		"Name": (10001, 2, (8, 0), (), "Name", None),
		"OutputPrecision": (10004, 2, (3, 0), (), "OutputPrecision", None),
		"ScaleFactor": (10013, 2, (5, 0), (), "ScaleFactor", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"UnitID": (10010, 2, (3, 0), (), "UnitID", None),
		"colCount": (10006, 2, (3, 0), (), "colCount", None),
		"matrixDir": (10007, 2, (8, 0), (), "matrixDir", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AssignForm" : ((10009, LCID, 4, 0),()),
		"ComplexForm" : ((10005, LCID, 4, 0),()),
		"DataSource" : ((10014, LCID, 4, 0),()),
		"FileInputForm" : ((10011, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"InputForm" : ((10002, LCID, 4, 0),()),
		"InputPrecision" : ((10003, LCID, 4, 0),()),
		"Name" : ((10001, LCID, 4, 0),()),
		"OutputPrecision" : ((10004, LCID, 4, 0),()),
		"ScaleFactor" : ((10013, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"UnitID" : ((10010, LCID, 4, 0),()),
		"colCount" : ((10006, LCID, 4, 0),()),
		"matrixDir" : ((10007, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMergeTool(DispatchBaseClass):
	CLSID = IID('{8B79ED25-CCB9-4E14-9C0B-49E9EC00B1DC}')
	coclass_clsid = IID('{8B79ED27-CCB9-4E14-9C0B-49E9EC00B1DC}')

	def AddRelated(self, bAddAssociated=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((11, 1),),bAddAssociated
			)

	def AlongVector(self, vdirection=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((12, 1),),vdirection
			)

	def BetweenCSys(self, nFromCSysID=defaultNamedNotOptArg, nToCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((3, 1), (3, 1)),nFromCSysID
			, nToCSysID)

	def BetweenPlanes(self, vFromBase=defaultNamedNotOptArg, vFromNormal=defaultNamedNotOptArg, vFromX=defaultNamedNotOptArg, vToBase=defaultNamedNotOptArg
			, vToNormal=defaultNamedNotOptArg, vToX=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),vFromBase
			, vFromNormal, vFromX, vToBase, vToNormal, vToX
			)

	def BetweenVectors(self, vFromBase=defaultNamedNotOptArg, vFromDir=defaultNamedNotOptArg, vToBase=defaultNamedNotOptArg, vToDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),vFromBase
			, vFromDir, vToBase, vToDir)

	def CreatePattern(self, vInitialOffset=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((12, 1),),vInitialOffset
			)

	def GetEntityOptions(self, entityTYPE=defaultNamedNotOptArg, nFromSetID=defaultNamedNotOptArg, nToSetID=defaultNamedNotOptArg, nRenumStrategy=pythoncom.Missing
			, nRenumStartAt=pythoncom.Missing, bRenumberDuplicates=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16387, 2), (16387, 2), (16395, 2)), 'GetEntityOptions', None,entityTYPE
			, nFromSetID, nToSetID, nRenumStrategy, nRenumStartAt, bRenumberDuplicates
			)

	def GetEntityStatus(self, entityTYPE=defaultNamedNotOptArg, bStatus=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((3, 1), (16395, 2)), 'GetEntityStatus', None,entityTYPE
			, bStatus)

	def GetEntityTypes(self, nNumTypes=pythoncom.Missing, nAvailableTypes=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetEntityTypes', None,nNumTypes
			, nAvailableTypes)

	def Merge(self):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), (),)

	def PointToPoint(self, vFrom=defaultNamedNotOptArg, vTo=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((12, 1), (12, 1)),vFrom
			, vTo)

	def Reflect(self, vAcrossBase=defaultNamedNotOptArg, vAcrossDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((12, 1), (12, 1)),vAcrossBase
			, vAcrossDir)

	def RotateAroundVector(self, vAroundBase=defaultNamedNotOptArg, vAroundDir=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg, dDistanceAlong=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((12, 1), (12, 1), (5, 1), (5, 1)),vAroundBase
			, vAroundDir, dAngle, dDistanceAlong)

	def RotatePointToPoint(self, vAroundBase=defaultNamedNotOptArg, vAroundDir=defaultNamedNotOptArg, vFrom=defaultNamedNotOptArg, vTo=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),vAroundBase
			, vAroundDir, vFrom, vTo)

	def SelectCurrentModel(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def SelectEntity(self, bThisEntityOnly=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, nFromSetID=defaultNamedNotOptArg, bSetInCurrentModel=defaultNamedNotOptArg
			, nRenumStrategy=defaultNamedNotOptArg, nRenumStartAt=defaultNamedNotOptArg, bRenumberDuplicates=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (11, 1), (3, 1), (3, 1), (11, 1)),bThisEntityOnly
			, entityTYPE, nFromSetID, bSetInCurrentModel, nRenumStrategy, nRenumStartAt
			, bRenumberDuplicates)

	def SelectFromGroup(self, bThisGroupOnly=defaultNamedNotOptArg, bAllEntityTypes=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, nFromGroupID=defaultNamedNotOptArg
			, nRenumStrategy=defaultNamedNotOptArg, nRenumStartAt=defaultNamedNotOptArg, bRenumberDuplicates=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1)),bThisGroupOnly
			, bAllEntityTypes, entityTYPE, nFromGroupID, nRenumStrategy, nRenumStartAt
			, bRenumberDuplicates)

	def SelectModel(self, nModelID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((20, 1),),nModelID
			)

	def SelectModelByName(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def SetAllStatus(self, bStatus=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((11, 1),),bStatus
			)

	def SetCSysPattern(self, nPatternDirection=defaultNamedNotOptArg, bOn=defaultNamedNotOptArg, nNumberInPattern=defaultNamedNotOptArg, dSpacing=defaultNamedNotOptArg
			, nCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (5, 1), (3, 1)),nPatternDirection
			, bOn, nNumberInPattern, dSpacing, nCSysID)

	def SetEntityStatus(self, entityTYPE=defaultNamedNotOptArg, bStatus=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (11, 1)),entityTYPE
			, bStatus)

	def SetStatus(self, bGeometry=defaultNamedNotOptArg, bModel=defaultNamedNotOptArg, bConnection=defaultNamedNotOptArg, bAeroElasticity=defaultNamedNotOptArg
			, bAnalysisAndSimulation=defaultNamedNotOptArg, bResults=defaultNamedNotOptArg, bOthers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),bGeometry
			, bModel, bConnection, bAeroElasticity, bAnalysisAndSimulation, bResults
			, bOthers)

	def SetVectorPattern(self, nPatternDirection=defaultNamedNotOptArg, bOn=defaultNamedNotOptArg, nNumberInPattern=defaultNamedNotOptArg, dSpacing=defaultNamedNotOptArg
			, vdirection=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (5, 1), (12, 1)),nPatternDirection
			, bOn, nNumberInPattern, dSpacing, vdirection)

	def ShowDialog(self):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), (),)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"AlwaysCreateParentCSys": (10002, 2, (11, 0), (), "AlwaysCreateParentCSys", None),
		"CondenseMergedGroups": (10003, 2, (11, 0), (), "CondenseMergedGroups", None),
		"CreateGroupForMerged": (10001, 2, (11, 0), (), "CreateGroupForMerged", None),
		"DuplicateFirstInPattern": (10006, 2, (11, 0), (), "DuplicateFirstInPattern", None),
		"KeepInOriginalSets": (10005, 2, (11, 0), (), "KeepInOriginalSets", None),
		"LimitToMergedEntities": (10004, 2, (11, 0), (), "LimitToMergedEntities", None),
		"UsePattern": (10000, 2, (11, 0), (), "UsePattern", None),
	}
	_prop_map_put_ = {
		"AlwaysCreateParentCSys" : ((10002, LCID, 4, 0),()),
		"CondenseMergedGroups" : ((10003, LCID, 4, 0),()),
		"CreateGroupForMerged" : ((10001, LCID, 4, 0),()),
		"DuplicateFirstInPattern" : ((10006, LCID, 4, 0),()),
		"KeepInOriginalSets" : ((10005, LCID, 4, 0),()),
		"LimitToMergedEntities" : ((10004, LCID, 4, 0),()),
		"UsePattern" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeshHardPoint(DispatchBaseClass):
	CLSID = IID('{3054CBAA-8117-467C-8987-74764DC3DF3D}')
	coclass_clsid = IID('{3054CBAC-8117-467C-8987-74764DC3DF3D}')

	def AtCoordinates(self, nCount=defaultNamedNotOptArg, vXYZ=defaultNamedNotOptArg, bAutoAssign=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (12, 1), (11, 1)),nCount
			, vXYZ, bAutoAssign)

	def AutoDistanceToGeometry(self):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Enable(self, bEnable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((11, 1),),bEnable
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def IsEnabled(self):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	# The method LocationOnGeometry is actually a property, but must be used as a method to correctly pass the arguments
	def LocationOnGeometry(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def OnPoint(self, pointID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),pointID
			)

	def OnPoint2(self, pointID=defaultNamedNotOptArg, bAutoAssign=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (11, 1)),pointID
			, bAutoAssign)

	def OnSurface(self, nSurfaceID=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, vUV=defaultNamedNotOptArg, bAutoAssign=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (11, 1)),nSurfaceID
			, nCount, vUV, bAutoAssign)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetLocationOnGeometry is actually a property, but must be used as a method to correctly pass the arguments
	def SetLocationOnGeometry(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	def Solid(self, pnSolidID=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((16387, 2),), 'Solid', None,pnSolidID
			)

	def UpdateMeshPoints(self, bDoAll=defaultNamedNotOptArg, nMeshPointSetID=defaultNamedNotOptArg, nDuplicatesOnSolidID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1)),bDoAll
			, nMeshPointSetID, nDuplicatesOnSolidID)

	def UpdateMeshPointsOnGeometry(self, nSolidSetID=defaultNamedNotOptArg, nSurfaceSetID=defaultNamedNotOptArg, nCurveSetID=defaultNamedNotOptArg, nPointSetID=defaultNamedNotOptArg
			, nDuplicatesOnSolidID=defaultNamedNotOptArg, bUpdateUnassignedPoints=defaultNamedNotOptArg, bUpdatePointsOnDeletedGeometry=defaultNamedNotOptArg, bResizeCurves=defaultNamedNotOptArg, bEnabledPointsOnly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1)),nSolidSetID
			, nSurfaceSetID, nCurveSetID, nPointSetID, nDuplicatesOnSolidID, bUpdateUnassignedPoints
			, bUpdatePointsOnDeletedGeometry, bResizeCurves, bEnabledPointsOnly)

	def clear(self):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AutoAssign": (10012, 2, (11, 0), (), "AutoAssign", None),
		"DefinitionID": (10000, 2, (3, 0), (), "DefinitionID", None),
		"DistanceToGeometry": (10007, 2, (5, 0), (), "DistanceToGeometry", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Locked": (10010, 2, (11, 0), (), "Locked", None),
		"NodeOnGeometry": (10006, 2, (11, 0), (), "NodeOnGeometry", None),
		"OnGeometryID": (10005, 2, (3, 0), (), "OnGeometryID", None),
		"OnGeometryType": (10004, 2, (3, 0), (), "OnGeometryType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10003, 2, (3, 0), (), "color", None),
		"layer": (10002, 2, (3, 0), (), "layer", None),
		"pointID": (10001, 2, (3, 0), (), "pointID", None),
		"vLocationOnGeometry": (10011, 2, (12, 0), (), "vLocationOnGeometry", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AutoAssign" : ((10012, LCID, 4, 0),()),
		"DefinitionID" : ((10000, LCID, 4, 0),()),
		"DistanceToGeometry" : ((10007, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Locked" : ((10010, LCID, 4, 0),()),
		"NodeOnGeometry" : ((10006, LCID, 4, 0),()),
		"OnGeometryID" : ((10005, LCID, 4, 0),()),
		"OnGeometryType" : ((10004, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10003, LCID, 4, 0),()),
		"layer" : ((10002, LCID, 4, 0),()),
		"pointID" : ((10001, LCID, 4, 0),()),
		"vLocationOnGeometry" : ((10011, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeshHardPointDefinition(DispatchBaseClass):
	CLSID = IID('{D6EDD9A3-EFF2-41AC-891A-F9FED8F10CEE}')
	coclass_clsid = IID('{D6EDD9A7-EFF2-41AC-891A-F9FED8F10CEE}')

	def CountMeshPoints(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextMeshPoint(self, pDispatch=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16393, 2),), 'NextMeshPoint', None,pDispatch
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def ResetNextMeshPoint(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMesher(DispatchBaseClass):
	CLSID = IID('{B0BD5EA3-C79D-4140-83FF-0642F66D2F37}')
	coclass_clsid = IID('{B0BD5EA5-C79D-4140-83FF-0642F66D2F37}')

	def AddSolid(self, nSetID=defaultNamedNotOptArg, bSetSizes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bSetSizes)

	def AddSurface(self, nSetID=defaultNamedNotOptArg, bSetSizes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bSetSizes)

	def Apply(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def HasPrevious(self):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), (),)

	def Mesh(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def Prepare(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def RemovePrevious(self):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), (),)

	def SetSizes(self, dPrepareSize=defaultNamedNotOptArg, dMeshSize=defaultNamedNotOptArg, dInteriorGrowthFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1)),dPrepareSize
			, dMeshSize, dInteriorGrowthFactor)

	def Size(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def UI(self, bMeshingOptions=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((11, 1),),bMeshingOptions
			)

	def clear(self):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"AdjacentSurfaceMatching": (10046, 2, (11, 0), (), "AdjacentSurfaceMatching", None),
		"AdjustColors": (10048, 2, (11, 0), (), "AdjustColors", None),
		"AskAlreadyMeshed": (10016, 2, (11, 0), (), "AskAlreadyMeshed", None),
		"AttributePropOnly": (10075, 2, (11, 0), (), "AttributePropOnly", None),
		"AutoBoundarySmallSurfPct": (10042, 2, (5, 0), (), "AutoBoundarySmallSurfPct", None),
		"AutoBoundarySmallSurfPctOn": (10035, 2, (11, 0), (), "AutoBoundarySmallSurfPctOn", None),
		"AutoSelectTriMesher": (10010, 2, (11, 0), (), "AutoSelectTriMesher", None),
		"CombineSmallSurfaces": (10027, 2, (11, 0), (), "CombineSmallSurfaces", None),
		"CombinedCurveAngle": (10021, 2, (5, 0), (), "CombinedCurveAngle", None),
		"ConnectEdgeNodes": (10055, 2, (5, 0), (), "ConnectEdgeNodes", None),
		"ConnectEdgeNodesOn": (10054, 2, (11, 0), (), "ConnectEdgeNodesOn", None),
		"CurveSuppressPct": (10018, 2, (5, 0), (), "CurveSuppressPct", None),
		"CutQuadDeviationAngle": (10070, 2, (5, 0), (), "CutQuadDeviationAngle", None),
		"CutSlivers": (10025, 2, (11, 0), (), "CutSlivers", None),
		"DeletePreviousMesh": (10093, 2, (11, 0), (), "DeletePreviousMesh", None),
		"DetectClosePoints": (10024, 2, (11, 0), (), "DetectClosePoints", None),
		"FeatureEdgeAngle": (10020, 2, (5, 0), (), "FeatureEdgeAngle", None),
		"FixedGroupID": (10095, 2, (3, 0), (), "FixedGroupID", None),
		"GeometryCleanup": (10022, 2, (11, 0), (), "GeometryCleanup", None),
		"InitialSizeRatio": (10015, 2, (5, 0), (), "InitialSizeRatio", None),
		"InteriorGrowthFactor": (10009, 2, (5, 0), (), "InteriorGrowthFactor", None),
		"LengthBasedSizing": (10006, 2, (3, 0), (), "LengthBasedSizing", None),
		"MapAlternateBias": (10066, 2, (11, 0), (), "MapAlternateBias", None),
		"MapEqualSidesOnly": (10063, 2, (11, 0), (), "MapEqualSidesOnly", None),
		"MapMaxAngleDeviation": (10061, 2, (5, 0), (), "MapMaxAngleDeviation", None),
		"MapMinCornerAngle": (10062, 2, (5, 0), (), "MapMinCornerAngle", None),
		"MapRightBias": (10067, 2, (11, 0), (), "MapRightBias", None),
		"MapSplitQuadMap": (10065, 2, (11, 0), (), "MapSplitQuadMap", None),
		"MapSubdivisions": (10064, 2, (11, 0), (), "MapSubdivisions", None),
		"MappedMeshingAllowed": (10012, 2, (11, 0), (), "MappedMeshingAllowed", None),
		"MappedMeshingRefinement": (10033, 2, (11, 0), (), "MappedMeshingRefinement", None),
		"MaxAngleTolerance": (10037, 2, (5, 0), (), "MaxAngleTolerance", None),
		"MaxAngleToleranceOn": (10029, 2, (11, 0), (), "MaxAngleToleranceOn", None),
		"MaxElemAspectRatio": (10072, 2, (5, 0), (), "MaxElemAspectRatio", None),
		"MaxElemSmallFeature": (10038, 2, (3, 0), (), "MaxElemSmallFeature", None),
		"MaxElemSmallFeatureOn": (10030, 2, (11, 0), (), "MaxElemSmallFeatureOn", None),
		"MaxPctSmallFeature": (10039, 2, (5, 0), (), "MaxPctSmallFeature", None),
		"MaxPctSmallFeatureOn": (10031, 2, (11, 0), (), "MaxPctSmallFeatureOn", None),
		"MeshSize": (10008, 2, (5, 0), (), "MeshSize", None),
		"MeshSizing": (10001, 2, (11, 0), (), "MeshSizing", None),
		"MeshType": (10003, 2, (3, 0), (), "MeshType", None),
		"Meshing": (10002, 2, (11, 0), (), "Meshing", None),
		"MidsideMaxDistortionAngle": (10053, 2, (5, 0), (), "MidsideMaxDistortionAngle", None),
		"MidsideMaxDistortionAngleOn": (10052, 2, (11, 0), (), "MidsideMaxDistortionAngleOn", None),
		"MidsideMoveToGeometry": (10051, 2, (11, 0), (), "MidsideMoveToGeometry", None),
		"MidsideNodes": (10004, 2, (11, 0), (), "MidsideNodes", None),
		"MinElemBetweenBoundary": (10071, 2, (3, 0), (), "MinElemBetweenBoundary", None),
		"MinElemOnEdge": (10036, 2, (3, 0), (), "MinElemOnEdge", None),
		"MinElemOnEdgeOn": (10028, 2, (11, 0), (), "MinElemOnEdgeOn", None),
		"NarrowAngle": (10019, 2, (5, 0), (), "NarrowAngle", None),
		"NarrowSizePct": (10017, 2, (5, 0), (), "NarrowSizePct", None),
		"NodeMergeOption": (10013, 2, (3, 0), (), "NodeMergeOption", None),
		"OffsetMeshDistance": (10060, 2, (5, 0), (), "OffsetMeshDistance", None),
		"OffsetMeshMode": (10059, 2, (3, 0), (), "OffsetMeshMode", None),
		"PostMeshingCleanup": (10068, 2, (11, 0), (), "PostMeshingCleanup", None),
		"PreV10Meshing": (10050, 2, (11, 0), (), "PreV10Meshing", None),
		"PrepareGeometry": (10000, 2, (11, 0), (), "PrepareGeometry", None),
		"PrepareSize": (10007, 2, (5, 0), (), "PrepareSize", None),
		"ProcessBlends": (10026, 2, (11, 0), (), "ProcessBlends", None),
		"QuadEdgeLayers": (10069, 2, (3, 0), (), "QuadEdgeLayers", None),
		"QuickCutBoundaryOn": (10073, 2, (11, 0), (), "QuickCutBoundaryOn", None),
		"QuickCutMaxNodes": (10074, 2, (3, 0), (), "QuickCutMaxNodes", None),
		"RefineSurfaceMesh": (10045, 2, (11, 0), (), "RefineSurfaceMesh", None),
		"RefinementRatio": (10044, 2, (5, 0), (), "RefinementRatio", None),
		"RefinementRatioOn": (10043, 2, (11, 0), (), "RefinementRatioOn", None),
		"RemovePreviousOnly": (10091, 2, (11, 0), (), "RemovePreviousOnly", None),
		"RemovePreviousPrep": (10092, 2, (11, 0), (), "RemovePreviousPrep", None),
		"RemovePreviousSlaving": (10047, 2, (11, 0), (), "RemovePreviousSlaving", None),
		"Silent": (10094, 2, (11, 0), (), "Silent", None),
		"SkipSizingOnSlaved": (10049, 2, (11, 0), (), "SkipSizingOnSlaved", None),
		"SmoothingIterations": (10057, 2, (3, 0), (), "SmoothingIterations", None),
		"SmoothingLaplacian": (10056, 2, (11, 0), (), "SmoothingLaplacian", None),
		"SmoothingTolerance": (10058, 2, (5, 0), (), "SmoothingTolerance", None),
		"SuppressShortEdgesPct": (10041, 2, (5, 0), (), "SuppressShortEdgesPct", None),
		"SuppressShortEdgesPctOn": (10034, 2, (11, 0), (), "SuppressShortEdgesPctOn", None),
		"SuppressVoids": (10023, 2, (11, 0), (), "SuppressVoids", None),
		"SyncSizes": (10005, 2, (11, 0), (), "SyncSizes", None),
		"TetAdjustNodalPrecision": (10085, 2, (11, 0), (), "TetAdjustNodalPrecision", None),
		"TetCheckSurfaceElem": (10078, 2, (11, 0), (), "TetCheckSurfaceElem", None),
		"TetDeleteSurfaceElem": (10079, 2, (11, 0), (), "TetDeleteSurfaceElem", None),
		"TetGrowthRatio": (10014, 2, (5, 0), (), "TetGrowthRatio", None),
		"TetMeshVoids": (10087, 2, (11, 0), (), "TetMeshVoids", None),
		"TetMidsideMaxDistortionAngle": (10084, 2, (5, 0), (), "TetMidsideMaxDistortionAngle", None),
		"TetMidsideMaxDistortionAngleOn": (10083, 2, (11, 0), (), "TetMidsideMaxDistortionAngleOn", None),
		"TetMidsideMoveToGeometry": (10082, 2, (11, 0), (), "TetMidsideMoveToGeometry", None),
		"TetPreV10Meshing": (10088, 2, (11, 0), (), "TetPreV10Meshing", None),
		"TetQualityToDataTable": (10077, 2, (11, 0), (), "TetQualityToDataTable", None),
		"TetSmoothSolidElem": (10081, 2, (5, 0), (), "TetSmoothSolidElem", None),
		"TetSmoothSolidElemOn": (10080, 2, (11, 0), (), "TetSmoothSolidElemOn", None),
		"TetStatusMessages": (10076, 2, (11, 0), (), "TetStatusMessages", None),
		"TriMesher": (10011, 2, (3, 0), (), "TriMesher", None),
		"VertexAspectRatio": (10040, 2, (5, 0), (), "VertexAspectRatio", None),
		"VertexAspectRatioOn": (10032, 2, (11, 0), (), "VertexAspectRatioOn", None),
	}
	_prop_map_put_ = {
		"AdjacentSurfaceMatching" : ((10046, LCID, 4, 0),()),
		"AdjustColors" : ((10048, LCID, 4, 0),()),
		"AskAlreadyMeshed" : ((10016, LCID, 4, 0),()),
		"AttributePropOnly" : ((10075, LCID, 4, 0),()),
		"AutoBoundarySmallSurfPct" : ((10042, LCID, 4, 0),()),
		"AutoBoundarySmallSurfPctOn" : ((10035, LCID, 4, 0),()),
		"AutoSelectTriMesher" : ((10010, LCID, 4, 0),()),
		"CombineSmallSurfaces" : ((10027, LCID, 4, 0),()),
		"CombinedCurveAngle" : ((10021, LCID, 4, 0),()),
		"ConnectEdgeNodes" : ((10055, LCID, 4, 0),()),
		"ConnectEdgeNodesOn" : ((10054, LCID, 4, 0),()),
		"CurveSuppressPct" : ((10018, LCID, 4, 0),()),
		"CutQuadDeviationAngle" : ((10070, LCID, 4, 0),()),
		"CutSlivers" : ((10025, LCID, 4, 0),()),
		"DeletePreviousMesh" : ((10093, LCID, 4, 0),()),
		"DetectClosePoints" : ((10024, LCID, 4, 0),()),
		"FeatureEdgeAngle" : ((10020, LCID, 4, 0),()),
		"FixedGroupID" : ((10095, LCID, 4, 0),()),
		"GeometryCleanup" : ((10022, LCID, 4, 0),()),
		"InitialSizeRatio" : ((10015, LCID, 4, 0),()),
		"InteriorGrowthFactor" : ((10009, LCID, 4, 0),()),
		"LengthBasedSizing" : ((10006, LCID, 4, 0),()),
		"MapAlternateBias" : ((10066, LCID, 4, 0),()),
		"MapEqualSidesOnly" : ((10063, LCID, 4, 0),()),
		"MapMaxAngleDeviation" : ((10061, LCID, 4, 0),()),
		"MapMinCornerAngle" : ((10062, LCID, 4, 0),()),
		"MapRightBias" : ((10067, LCID, 4, 0),()),
		"MapSplitQuadMap" : ((10065, LCID, 4, 0),()),
		"MapSubdivisions" : ((10064, LCID, 4, 0),()),
		"MappedMeshingAllowed" : ((10012, LCID, 4, 0),()),
		"MappedMeshingRefinement" : ((10033, LCID, 4, 0),()),
		"MaxAngleTolerance" : ((10037, LCID, 4, 0),()),
		"MaxAngleToleranceOn" : ((10029, LCID, 4, 0),()),
		"MaxElemAspectRatio" : ((10072, LCID, 4, 0),()),
		"MaxElemSmallFeature" : ((10038, LCID, 4, 0),()),
		"MaxElemSmallFeatureOn" : ((10030, LCID, 4, 0),()),
		"MaxPctSmallFeature" : ((10039, LCID, 4, 0),()),
		"MaxPctSmallFeatureOn" : ((10031, LCID, 4, 0),()),
		"MeshSize" : ((10008, LCID, 4, 0),()),
		"MeshSizing" : ((10001, LCID, 4, 0),()),
		"MeshType" : ((10003, LCID, 4, 0),()),
		"Meshing" : ((10002, LCID, 4, 0),()),
		"MidsideMaxDistortionAngle" : ((10053, LCID, 4, 0),()),
		"MidsideMaxDistortionAngleOn" : ((10052, LCID, 4, 0),()),
		"MidsideMoveToGeometry" : ((10051, LCID, 4, 0),()),
		"MidsideNodes" : ((10004, LCID, 4, 0),()),
		"MinElemBetweenBoundary" : ((10071, LCID, 4, 0),()),
		"MinElemOnEdge" : ((10036, LCID, 4, 0),()),
		"MinElemOnEdgeOn" : ((10028, LCID, 4, 0),()),
		"NarrowAngle" : ((10019, LCID, 4, 0),()),
		"NarrowSizePct" : ((10017, LCID, 4, 0),()),
		"NodeMergeOption" : ((10013, LCID, 4, 0),()),
		"OffsetMeshDistance" : ((10060, LCID, 4, 0),()),
		"OffsetMeshMode" : ((10059, LCID, 4, 0),()),
		"PostMeshingCleanup" : ((10068, LCID, 4, 0),()),
		"PreV10Meshing" : ((10050, LCID, 4, 0),()),
		"PrepareGeometry" : ((10000, LCID, 4, 0),()),
		"PrepareSize" : ((10007, LCID, 4, 0),()),
		"ProcessBlends" : ((10026, LCID, 4, 0),()),
		"QuadEdgeLayers" : ((10069, LCID, 4, 0),()),
		"QuickCutBoundaryOn" : ((10073, LCID, 4, 0),()),
		"QuickCutMaxNodes" : ((10074, LCID, 4, 0),()),
		"RefineSurfaceMesh" : ((10045, LCID, 4, 0),()),
		"RefinementRatio" : ((10044, LCID, 4, 0),()),
		"RefinementRatioOn" : ((10043, LCID, 4, 0),()),
		"RemovePreviousOnly" : ((10091, LCID, 4, 0),()),
		"RemovePreviousPrep" : ((10092, LCID, 4, 0),()),
		"RemovePreviousSlaving" : ((10047, LCID, 4, 0),()),
		"Silent" : ((10094, LCID, 4, 0),()),
		"SkipSizingOnSlaved" : ((10049, LCID, 4, 0),()),
		"SmoothingIterations" : ((10057, LCID, 4, 0),()),
		"SmoothingLaplacian" : ((10056, LCID, 4, 0),()),
		"SmoothingTolerance" : ((10058, LCID, 4, 0),()),
		"SuppressShortEdgesPct" : ((10041, LCID, 4, 0),()),
		"SuppressShortEdgesPctOn" : ((10034, LCID, 4, 0),()),
		"SuppressVoids" : ((10023, LCID, 4, 0),()),
		"SyncSizes" : ((10005, LCID, 4, 0),()),
		"TetAdjustNodalPrecision" : ((10085, LCID, 4, 0),()),
		"TetCheckSurfaceElem" : ((10078, LCID, 4, 0),()),
		"TetDeleteSurfaceElem" : ((10079, LCID, 4, 0),()),
		"TetGrowthRatio" : ((10014, LCID, 4, 0),()),
		"TetMeshVoids" : ((10087, LCID, 4, 0),()),
		"TetMidsideMaxDistortionAngle" : ((10084, LCID, 4, 0),()),
		"TetMidsideMaxDistortionAngleOn" : ((10083, LCID, 4, 0),()),
		"TetMidsideMoveToGeometry" : ((10082, LCID, 4, 0),()),
		"TetPreV10Meshing" : ((10088, LCID, 4, 0),()),
		"TetQualityToDataTable" : ((10077, LCID, 4, 0),()),
		"TetSmoothSolidElem" : ((10081, LCID, 4, 0),()),
		"TetSmoothSolidElemOn" : ((10080, LCID, 4, 0),()),
		"TetStatusMessages" : ((10076, LCID, 4, 0),()),
		"TriMesher" : ((10011, LCID, 4, 0),()),
		"VertexAspectRatio" : ((10040, LCID, 4, 0),()),
		"VertexAspectRatioOn" : ((10032, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMidFaceCentroidModel(DispatchBaseClass):
	CLSID = IID('{8D7600A5-C1B7-4740-8D63-50E476A84B2D}')
	coclass_clsid = IID('{8D7600B6-C1B7-4740-8D63-50E476A84B2D}')

	def GenerateMidFaceCentroidNodes(self):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), (),)

	def KeepNodes(self, qKeepNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((11, 1),),qKeepNodes
			)

	def Rotate(self):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), (),)

	def SetCentroidNodeColor(self, iColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),iColor
			)

	def SetFaceNodeColor(self, iColor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),iColor
			)

	def SetLoadAndConstraintSet(self, ILoadSet=defaultNamedNotOptArg, IBCSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1)),ILoadSet
			, IBCSet)

	def SetMappingBrick20(self, iDefaultMapping=defaultNamedNotOptArg, iGroupHex20=defaultNamedNotOptArg, iGroupHex26=defaultNamedNotOptArg, iGroupHex27=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),iDefaultMapping
			, iGroupHex20, iGroupHex26, iGroupHex27)

	def SetMappingPyramid13(self, iDefaultMapping=defaultNamedNotOptArg, iGroupPyramid14=defaultNamedNotOptArg, iGroupPyramid18=defaultNamedNotOptArg, iGroupPyramid19=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),iDefaultMapping
			, iGroupPyramid14, iGroupPyramid18, iGroupPyramid19)

	def SetMappingQuad8(self, iDefaultMapping=defaultNamedNotOptArg, iGroupQuad8=defaultNamedNotOptArg, iGroupQuad9=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),iDefaultMapping
			, iGroupQuad8, iGroupQuad9)

	def SetMappingTetra10(self, iDefaultMapping=defaultNamedNotOptArg, iGroupTet10=defaultNamedNotOptArg, iGroupTet14=defaultNamedNotOptArg, iGroupTet15=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),iDefaultMapping
			, iGroupTet10, iGroupTet14, iGroupTet15)

	def SetMappingTria6(self, iDefaultMapping=defaultNamedNotOptArg, iGroupTri6=defaultNamedNotOptArg, iGroupTri7=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),iDefaultMapping
			, iGroupTri6, iGroupTri7)

	def SetMappingWedge15(self, iDefaultMapping=defaultNamedNotOptArg, iGroupWedge15=defaultNamedNotOptArg, iGroupWedge20=defaultNamedNotOptArg, iGroupWedge21=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),iDefaultMapping
			, iGroupWedge15, iGroupWedge20, iGroupWedge21)

	def SetNodeStartIDs(self, iFirstFaceNodeID=defaultNamedNotOptArg, iFirstCentroidNodeID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (3, 1)),iFirstFaceNodeID
			, iFirstCentroidNodeID)

	def SetPointGroup(self, IGroup=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), ((3, 1),),IGroup
			)

	def SetTitle(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def ShowHex_20(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowHex_26(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowHex_27(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowHex_8(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowPyramid_14(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowPyramid_18(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowPyramid_19(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowPyramid_5(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowQuad_4(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowQuad_8(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowQuad_9(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowTet_14(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowTet_15(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowTet_4(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowTri_3(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowTri_6(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowTri_7(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowWedge_15(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowWedge_20(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowWedge_21(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def ShowWedge_6(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def Show_Tet_10(self, qNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((11, 1),),qNodes
			)

	def WriteNeutralFile(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20034, LCID, 1, (3, 0), ((8, 1),),fName
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMonitorPoint(DispatchBaseClass):
	CLSID = IID('{80701FE0-7A74-44F7-936B-218FA64D8D91}')
	coclass_clsid = IID('{80701FE2-7A74-44F7-936B-218FA64D8D91}')

	def AddManualContribution(self, nElemID=defaultNamedNotOptArg, cTABLE=defaultNamedNotOptArg, cTYPE=defaultNamedNotOptArg, cNDDLitem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (8, 1), (8, 1), (8, 1)),nElemID
			, cTABLE, cTYPE, cNDDLitem)

	def ClearAeroMeshSet(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def ClearComponentSet(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	def ClearElemContributions(self):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetAeroMeshSet(self, pAeroMeshSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((16393, 1),),pAeroMeshSet
			)

	def GetAtIndex(self, nIndex=defaultNamedNotOptArg, nElemID=pythoncom.Missing, cTABLE=pythoncom.Missing, cTYPE=pythoncom.Missing
			, cNDDLitem=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((3, 1), (16387, 2), (16392, 2), (16392, 2), (16392, 2)), 'GetAtIndex', None,nIndex
			, nElemID, cTABLE, cTYPE, cNDDLitem)

	def GetComponentSet(self, entityTYPE=defaultNamedNotOptArg, pSelectedComponentSet=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16393, 2)), 'GetComponentSet', None,entityTYPE
			, pSelectedComponentSet)

	def GetElemContributions(self, nCount=pythoncom.Missing, nElemID=pythoncom.Missing, cTABLE=pythoncom.Missing, cTYPE=pythoncom.Missing
			, cNDDLitem=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetElemContributions', None,nCount
			, nElemID, cTABLE, cTYPE, cNDDLitem)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAeroMeshSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def PutComponentSet(self, entityTYPE=defaultNamedNotOptArg, pSelectedComponentSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (16393, 1)),entityTYPE
			, pSelectedComponentSet)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetAtIndex(self, nIndex=defaultNamedNotOptArg, UpdateElemID=defaultNamedNotOptArg, nElemID=defaultNamedNotOptArg, UpdateTABLE=defaultNamedNotOptArg
			, cTABLE=defaultNamedNotOptArg, UpdateTYPE=defaultNamedNotOptArg, cTYPE=defaultNamedNotOptArg, UpdateNDDLitem=defaultNamedNotOptArg, cNDDLitem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (11, 1), (8, 1), (11, 1), (8, 1), (11, 1), (8, 1)),nIndex
			, UpdateElemID, nElemID, UpdateTABLE, cTABLE, UpdateTYPE
			, cTYPE, UpdateNDDLitem, cNDDLitem)

	def SetManualContributions(self, listcount=defaultNamedNotOptArg, nElemID=defaultNamedNotOptArg, cTABLE=defaultNamedNotOptArg, cTYPE=defaultNamedNotOptArg
			, cNDDLitem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),listcount
			, nElemID, cTABLE, cTYPE, cNDDLitem)

	# The method SetSumComponents is actually a property, but must be used as a method to correctly pass the arguments
	def SetSumComponents(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetSumContributions is actually a property, but must be used as a method to correctly pass the arguments
	def SetSumContributions(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method Setxyz is actually a property, but must be used as a method to correctly pass the arguments
	def Setxyz(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SumComponents is actually a property, but must be used as a method to correctly pass the arguments
	def SumComponents(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method SumContributions is actually a property, but must be used as a method to correctly pass the arguments
	def SumContributions(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method xyz is actually a property, but must be used as a method to correctly pass the arguments
	def xyz(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AeroMeshSetID": (10022, 2, (3, 0), (), "AeroMeshSetID", None),
		"AeroPanelID": (10013, 2, (3, 0), (), "AeroPanelID", None),
		"CompTitle": (10017, 2, (8, 0), (), "CompTitle", None),
		"ElemGroup": (10009, 2, (3, 0), (), "ElemGroup", None),
		"HasAeroMeshList": (10021, 2, (11, 0), (), "HasAeroMeshList", None),
		"HasElemList": (10015, 2, (11, 0), (), "HasElemList", None),
		"HasNodeList": (10014, 2, (11, 0), (), "HasNodeList", None),
		"HasPanelList": (10016, 2, (11, 0), (), "HasPanelList", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Name": (10004, 2, (8, 0), (), "Name", None),
		"NodeGroup": (10008, 2, (3, 0), (), "NodeGroup", None),
		"NodeSetID": (10018, 2, (3, 0), (), "NodeSetID", None),
		"NumberOfContributions": (10026, 2, (3, 0), (), "NumberOfContributions", None),
		"PanelSetID": (10020, 2, (3, 0), (), "PanelSetID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10001, 2, (3, 0), (), "color", None),
		"defCSys": (10006, 2, (3, 0), (), "defCSys", None),
		"elemSetID": (10019, 2, (3, 0), (), "elemSetID", None),
		"layer": (10002, 2, (3, 0), (), "layer", None),
		"outCSys": (10007, 2, (3, 0), (), "outCSys", None),
		"title": (10003, 2, (8, 0), (), "title", None),
		"type": (10005, 2, (3, 0), (), "type", None),
		"vSumComponents": (10011, 2, (12, 0), (), "vSumComponents", None),
		"vSumContributions": (10012, 2, (12, 0), (), "vSumContributions", None),
		"vXYZ": (10010, 2, (12, 0), (), "vXYZ", None),
		"x": (10023, 2, (5, 0), (), "x", None),
		"y": (10024, 2, (5, 0), (), "y", None),
		"z": (10025, 2, (5, 0), (), "z", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AeroMeshSetID" : ((10022, LCID, 4, 0),()),
		"AeroPanelID" : ((10013, LCID, 4, 0),()),
		"CompTitle" : ((10017, LCID, 4, 0),()),
		"ElemGroup" : ((10009, LCID, 4, 0),()),
		"HasAeroMeshList" : ((10021, LCID, 4, 0),()),
		"HasElemList" : ((10015, LCID, 4, 0),()),
		"HasNodeList" : ((10014, LCID, 4, 0),()),
		"HasPanelList" : ((10016, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Name" : ((10004, LCID, 4, 0),()),
		"NodeGroup" : ((10008, LCID, 4, 0),()),
		"NodeSetID" : ((10018, LCID, 4, 0),()),
		"NumberOfContributions" : ((10026, LCID, 4, 0),()),
		"PanelSetID" : ((10020, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10001, LCID, 4, 0),()),
		"defCSys" : ((10006, LCID, 4, 0),()),
		"elemSetID" : ((10019, LCID, 4, 0),()),
		"layer" : ((10002, LCID, 4, 0),()),
		"outCSys" : ((10007, LCID, 4, 0),()),
		"title" : ((10003, LCID, 4, 0),()),
		"type" : ((10005, LCID, 4, 0),()),
		"vSumComponents" : ((10011, LCID, 4, 0),()),
		"vSumContributions" : ((10012, LCID, 4, 0),()),
		"vXYZ" : ((10010, LCID, 4, 0),()),
		"x" : ((10023, LCID, 4, 0),()),
		"y" : ((10024, LCID, 4, 0),()),
		"z" : ((10025, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMoveTool(DispatchBaseClass):
	CLSID = IID('{23FA0A2E-1F8E-4ED3-A527-F3F46B40DC9F}')
	coclass_clsid = IID('{23FA0A31-1F8E-4ED3-A527-F3F46B40DC9F}')

	def AlongVector(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vdirection=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),nDataType
			, nEntitySetID, vdirection)

	def BetweenCSys(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, nFromCSysID=defaultNamedNotOptArg, nToCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nDataType
			, nEntitySetID, nFromCSysID, nToCSysID)

	def BetweenPlanes(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vFromBase=defaultNamedNotOptArg, vFromNormal=defaultNamedNotOptArg
			, vFromX=defaultNamedNotOptArg, vToBase=defaultNamedNotOptArg, vToNormal=defaultNamedNotOptArg, vToX=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vFromBase, vFromNormal, vFromX, vToBase
			, vToNormal, vToX)

	def BetweenVectors(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vFromBase=defaultNamedNotOptArg, vFromDir=defaultNamedNotOptArg
			, vToBase=defaultNamedNotOptArg, vToDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vFromBase, vFromDir, vToBase, vToDir
			)

	def IncludeOtherEntities(self, bGeometryOrMesh=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((11, 1),),bGeometryOrMesh
			)

	def IncludeOtherEntities2(self, bCoordSys=defaultNamedNotOptArg, bGeometryOrMesh=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((11, 1), (11, 1)),bCoordSys
			, bGeometryOrMesh)

	def PointToPoint(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vFrom=defaultNamedNotOptArg, vTo=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vFrom, vTo)

	def Reflect(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vAcrossBase=defaultNamedNotOptArg, vAcrossDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vAcrossBase, vAcrossDir)

	def RotateAroundVector(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vAroundBase=defaultNamedNotOptArg, vAroundDir=defaultNamedNotOptArg
			, dAngle=defaultNamedNotOptArg, dDistanceAlong=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1), (5, 1)),nDataType
			, nEntitySetID, vAroundBase, vAroundDir, dAngle, dDistanceAlong
			)

	def RotatePointToPoint(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, vAroundBase=defaultNamedNotOptArg, vAroundDir=defaultNamedNotOptArg
			, vFrom=defaultNamedNotOptArg, vTo=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nDataType
			, nEntitySetID, vAroundBase, vAroundDir, vFrom, vTo
			)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"AlwaysCreateParentCSys": (10002, 2, (11, 0), (), "AlwaysCreateParentCSys", None),
		"ReflectionTrapWidth": (10004, 2, (5, 0), (), "ReflectionTrapWidth", None),
	}
	_prop_map_put_ = {
		"AlwaysCreateParentCSys" : ((10002, LCID, 4, 0),()),
		"ReflectionTrapWidth" : ((10004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INode(DispatchBaseClass):
	CLSID = IID('{43752AF6-E669-11D4-9441-001083FFF11C}')
	coclass_clsid = IID('{43752AF8-E669-11D4-9441-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAll(self, entID=defaultNamedNotOptArg, x=pythoncom.Missing, y=pythoncom.Missing, z=pythoncom.Missing
			, nlayer=pythoncom.Missing, nColor=pythoncom.Missing, ntype=pythoncom.Missing, defCSys=pythoncom.Missing, outCSys=pythoncom.Missing
			, permBC=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16396, 2)), 'GetAll', None,entID
			, x, y, z, nlayer, nColor
			, ntype, defCSys, outCSys, permBC)

	def GetAllArray(self, SetID=defaultNamedNotOptArg, numNode=pythoncom.Missing, entID=pythoncom.Missing, xyz=pythoncom.Missing
			, layer=pythoncom.Missing, color=pythoncom.Missing, ndType=pythoncom.Missing, defCSys=pythoncom.Missing, outCSys=pythoncom.Missing
			, permBC=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,SetID
			, numNode, entID, xyz, layer, color
			, ndType, defCSys, outCSys, permBC)

	def GetAllArray2(self, SetID=defaultNamedNotOptArg, numNode=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, xyz=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing, ndType=pythoncom.Missing, defCSys=pythoncom.Missing
			, outCSys=pythoncom.Missing, permBC=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray2', None,SetID
			, numNode, entID, Exist, xyz, layer
			, color, ndType, defCSys, outCSys, permBC
			)

	def GetClosest(self, vXYZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((12, 1),),vXYZ
			)

	def GetCoordArray(self, SetID=defaultNamedNotOptArg, numNode=pythoncom.Missing, entID=pythoncom.Missing, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20000, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetCoordArray', None,SetID
			, numNode, entID, xyz)

	def GetCoordArray2(self, SetID=defaultNamedNotOptArg, numNode=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetCoordArray2', None,SetID
			, numNode, entID, Exist, xyz)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetSuperelementIDArray(self, SetID=defaultNamedNotOptArg, numNode=pythoncom.Missing, entID=pythoncom.Missing, superelementID=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetSuperelementIDArray', None,SetID
			, numNode, entID, superelementID)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def IsMidsideNode(self, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1),),elemSET
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, z=defaultNamedNotOptArg
			, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg, ndType=defaultNamedNotOptArg, defCSys=defaultNamedNotOptArg, outCSys=defaultNamedNotOptArg
			, permBC=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1)),entID
			, x, y, z, layer, color
			, ndType, defCSys, outCSys, permBC)

	def PutAllArray(self, numNode=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, color=defaultNamedNotOptArg, ndType=defaultNamedNotOptArg, defCSys=defaultNamedNotOptArg, outCSys=defaultNamedNotOptArg, permBC=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),numNode
			, entID, xyz, layer, color, ndType
			, defCSys, outCSys, permBC)

	def PutCoordArray(self, numNode=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),numNode
			, entID, xyz)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutSuperelementIDArray(self, numNode=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, superelementID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),numNode
			, entID, superelementID)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetpermBC is actually a property, but must be used as a method to correctly pass the arguments
	def SetpermBC(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method permBC is actually a property, but must be used as a method to correctly pass the arguments
	def permBC(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"NumberOfConstraints": (10014, 2, (3, 0), (), "NumberOfConstraints", None),
		"NumberOfElements": (10012, 2, (3, 0), (), "NumberOfElements", None),
		"NumberOfLoads": (10013, 2, (3, 0), (), "NumberOfLoads", None),
		"NumberOfMatrices": (10015, 2, (3, 0), (), "NumberOfMatrices", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"color": (10004, 2, (3, 0), (), "color", None),
		"defCSys": (10007, 2, (3, 0), (), "defCSys", None),
		"layer": (10003, 2, (3, 0), (), "layer", None),
		"outCSys": (10008, 2, (3, 0), (), "outCSys", None),
		"superelementID": (10010, 2, (3, 0), (), "superelementID", None),
		"type": (10006, 2, (3, 0), (), "type", None),
		"vpermBC": (10009, 2, (12, 0), (), "vpermBC", None),
		"x": (10000, 2, (5, 0), (), "x", None),
		"xyz": (10011, 2, (12, 0), (), "xyz", None),
		"y": (10001, 2, (5, 0), (), "y", None),
		"z": (10002, 2, (5, 0), (), "z", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"NumberOfConstraints" : ((10014, LCID, 4, 0),()),
		"NumberOfElements" : ((10012, LCID, 4, 0),()),
		"NumberOfLoads" : ((10013, LCID, 4, 0),()),
		"NumberOfMatrices" : ((10015, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"color" : ((10004, LCID, 4, 0),()),
		"defCSys" : ((10007, LCID, 4, 0),()),
		"layer" : ((10003, LCID, 4, 0),()),
		"outCSys" : ((10008, LCID, 4, 0),()),
		"superelementID" : ((10010, LCID, 4, 0),()),
		"type" : ((10006, LCID, 4, 0),()),
		"vpermBC" : ((10009, LCID, 4, 0),()),
		"x" : ((10000, LCID, 4, 0),()),
		"xyz" : ((10011, LCID, 4, 0),()),
		"y" : ((10001, LCID, 4, 0),()),
		"z" : ((10002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOptMC(DispatchBaseClass):
	CLSID = IID('{56532635-5FE8-417C-B067-B131C22DC038}')
	coclass_clsid = IID('{56532637-5FE8-417C-B067-B131C22DC038}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAddm(self, pdAngle=pythoncom.Missing, pdMin=pythoncom.Missing, pvBase=pythoncom.Missing, pvDir=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((16389, 2), (16389, 2), (16396, 2), (16396, 2)), 'GetAddm', None,pdAngle
			, pdMin, pvBase, pvDir)

	def GetCast(self, pvCastBase=pythoncom.Missing, pvCastDir=pythoncom.Missing, pvMoldDir1=pythoncom.Missing, pvMoldDir2=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetCast', None,pvCastBase
			, pvCastDir, pvMoldDir1, pvMoldDir2)

	def GetCheckerboard(self, pbEnabled=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((16395, 2),), 'GetCheckerboard', None,pbEnabled
			)

	def GetCycSym(self, pvBase=pythoncom.Missing, pvRot=pythoncom.Missing, pvNorm=pythoncom.Missing, pnSect=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((16396, 2), (16396, 2), (16396, 2), (16387, 2)), 'GetCycSym', None,pvBase
			, pvRot, pvNorm, pnSect)

	def GetExtrusion(self, pvDir=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((16396, 2),), 'GetExtrusion', None,pvDir
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetMaxSize(self, pdSize=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((16389, 2),), 'GetMaxSize', None,pdSize
			)

	def GetMinSize(self, pdSize=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((16389, 2),), 'GetMinSize', None,pdSize
			)

	def GetPlSym(self, pvBase=pythoncom.Missing, pvDir=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((16396, 2), (16396, 2)), 'GetPlSym', None,pvBase
			, pvDir)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetAddm(self, dAngle=defaultNamedNotOptArg, dMin=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((5, 1), (5, 1), (12, 1), (12, 1)),dAngle
			, dMin, vBase, vDir)

	def SetCast(self, vCastBase=defaultNamedNotOptArg, vCastDir=defaultNamedNotOptArg, vMoldDir1=defaultNamedNotOptArg, vMoldDir2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),vCastBase
			, vCastDir, vMoldDir1, vMoldDir2)

	def SetCheckerboard(self, bEnabled=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((11, 1),),bEnabled
			)

	def SetCycSym(self, vBase=defaultNamedNotOptArg, vRot=defaultNamedNotOptArg, vNorm=defaultNamedNotOptArg, nSect=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (3, 1)),vBase
			, vRot, vNorm, nSect)

	def SetExtrusion(self, vDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((12, 1),),vDir
			)

	def SetMaxSize(self, dSize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((5, 1),),dSize
			)

	def SetMinSize(self, dSize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((5, 1),),dSize
			)

	def SetPlSym(self, vBase=defaultNamedNotOptArg, vDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((12, 1), (12, 1)),vBase
			, vDir)

	# The method SetVec1 is actually a property, but must be used as a method to correctly pass the arguments
	def SetVec1(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetVec2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetVec2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetVec3 is actually a property, but must be used as a method to correctly pass the arguments
	def SetVec3(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetVec4 is actually a property, but must be used as a method to correctly pass the arguments
	def SetVec4(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Vec1 is actually a property, but must be used as a method to correctly pass the arguments
	def Vec1(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Vec2 is actually a property, but must be used as a method to correctly pass the arguments
	def Vec2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Vec3 is actually a property, but must be used as a method to correctly pass the arguments
	def Vec3(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Vec4 is actually a property, but must be used as a method to correctly pass the arguments
	def Vec4(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"ManConType": (10001, 2, (3, 0), (), "ManConType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"dField1": (10007, 2, (5, 0), (), "dField1", None),
		"dField2": (10008, 2, (5, 0), (), "dField2", None),
		"nField1": (10006, 2, (3, 0), (), "nField1", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"vVec1": (10002, 2, (12, 0), (), "vVec1", None),
		"vVec2": (10003, 2, (12, 0), (), "vVec2", None),
		"vVec3": (10004, 2, (12, 0), (), "vVec3", None),
		"vVec4": (10005, 2, (12, 0), (), "vVec4", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"ManConType" : ((10001, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"dField1" : ((10007, LCID, 4, 0),()),
		"dField2" : ((10008, LCID, 4, 0),()),
		"nField1" : ((10006, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"vVec1" : ((10002, LCID, 4, 0),()),
		"vVec2" : ((10003, LCID, 4, 0),()),
		"vVec3" : ((10004, LCID, 4, 0),()),
		"vVec4" : ((10005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOptRel(DispatchBaseClass):
	CLSID = IID('{859D91F8-AFD8-4561-83FB-1F02033297C3}')
	coclass_clsid = IID('{859D91FA-AFD8-4561-83FB-1F02033297C3}')

	# The method Bounds is actually a property, but must be used as a method to correctly pass the arguments
	def Bounds(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def CalculateBounds(self, pdLower=pythoncom.Missing, pdUpper=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((16389, 2), (16389, 2)), 'CalculateBounds', None,pdLower
			, pdUpper)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetMatl(self, pnMatlID=pythoncom.Missing, sType=pythoncom.Missing, sName=pythoncom.Missing, pbBoundType=pythoncom.Missing
			, pdMin=pythoncom.Missing, pdMax=defaultNamedNotOptArg):
		return self._ApplyTypes_(20009, 1, (3, 0), ((16387, 2), (16392, 2), (16392, 2), (16387, 2), (16389, 2), (16389, 1)), 'GetMatl', None,pnMatlID
			, sType, sName, pbBoundType, pdMin, pdMax
			)

	def GetProp(self, pnPropID=pythoncom.Missing, sType=pythoncom.Missing, sName=pythoncom.Missing, pbBoundType=pythoncom.Missing
			, pdMin=pythoncom.Missing, pdMax=defaultNamedNotOptArg):
		return self._ApplyTypes_(20007, 1, (3, 0), ((16387, 2), (16392, 2), (16392, 2), (16387, 2), (16389, 2), (16389, 1)), 'GetProp', None,pnPropID
			, sType, sName, pbBoundType, pdMin, pdMax
			)

	def GetShellT(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg, pdLower=pythoncom.Missing, pdUpper=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((3, 1), (11, 1), (16389, 2), (16389, 2)), 'GetShellT', None,nSetID
			, bClear, pdLower, pdUpper)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def GetTopology(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg, bActive=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((3, 1), (11, 1), (16395, 2)), 'GetTopology', None,nSetID
			, bClear, bActive)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetBounds is actually a property, but must be used as a method to correctly pass the arguments
	def SetBounds(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	def SetupMatl(self, nMatlID=defaultNamedNotOptArg, sType=defaultNamedNotOptArg, sName=defaultNamedNotOptArg, bBoundType=defaultNamedNotOptArg
			, dMin=defaultNamedNotOptArg, dMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (8, 1), (8, 1), (3, 1), (5, 1), (5, 1)),nMatlID
			, sType, sName, bBoundType, dMin, dMax
			)

	def SetupProp(self, nPropID=defaultNamedNotOptArg, sType=defaultNamedNotOptArg, sName=defaultNamedNotOptArg, bBoundType=defaultNamedNotOptArg
			, dMin=defaultNamedNotOptArg, dMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (8, 1), (8, 1), (3, 1), (5, 1), (5, 1)),nPropID
			, sType, sName, bBoundType, dMin, dMax
			)

	def SetupShellT(self, nSetID=defaultNamedNotOptArg, dLower=defaultNamedNotOptArg, dUpper=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1)),nSetID
			, dLower, dUpper)

	def SetupTopology(self, nSetID=defaultNamedNotOptArg, bActive=defaultNamedNotOptArg, bValidate=defaultNamedNotOptArg, bSilent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1)),nSetID
			, bActive, bValidate, bSilent)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"BoundType": (10010, 2, (3, 0), (), "BoundType", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"NameField": (10002, 2, (8, 0), (), "NameField", None),
		"RelationshipID": (10008, 2, (3, 0), (), "RelationshipID", None),
		"RelationshipType": (10003, 2, (3, 0), (), "RelationshipType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"TopologyActive": (10005, 2, (11, 0), (), "TopologyActive", None),
		"TypeField": (10001, 2, (8, 0), (), "TypeField", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"vBounds": (10006, 2, (12, 0), (), "vBounds", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"BoundType" : ((10010, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"NameField" : ((10002, LCID, 4, 0),()),
		"RelationshipID" : ((10008, LCID, 4, 0),()),
		"RelationshipType" : ((10003, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"TopologyActive" : ((10005, LCID, 4, 0),()),
		"TypeField" : ((10001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"vBounds" : ((10006, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOptResp(DispatchBaseClass):
	CLSID = IID('{2BF41A8C-BFEF-479D-9C37-146A3AF46FCE}')
	coclass_clsid = IID('{2BF41A8E-BFEF-479D-9C37-146A3AF46FCE}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetBuckle(self, pnSetID=pythoncom.Missing, pnApproxCode=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((16387, 2), (16387, 2)), 'GetBuckle', None,pnSetID
			, pnApproxCode)

	def GetConstraints(self, pdLowerBounds=pythoncom.Missing, pdUpperbound=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((16389, 2), (16389, 2)), 'GetConstraints', None,pdLowerBounds
			, pdUpperbound)

	def GetDisplacement(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg, pnDof=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((3, 1), (11, 1), (16387, 2)), 'GetDisplacement', None,nSetID
			, bClear, pnDof)

	def GetESE(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg, pbDensity=pythoncom.Missing, penDataType=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((3, 1), (11, 1), (16395, 2), (16387, 2)), 'GetESE', None,nSetID
			, bClear, pbDensity, penDataType)

	def GetEign(self, pnSetID=pythoncom.Missing, pnApproxCode=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((16387, 2), (16387, 2)), 'GetEign', None,pnSetID
			, pnApproxCode)

	def GetElemV2(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg, pnVecID=pythoncom.Missing, penDataType=pythoncom.Missing):
		return self._ApplyTypes_(20021, 1, (3, 0), ((3, 1), (11, 1), (16387, 2), (16387, 2)), 'GetElemV2', None,nSetID
			, bClear, pnVecID, penDataType)

	def GetEntities(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg, penDataType=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((3, 1), (11, 1), (16387, 2)), 'GetEntities', None,nSetID
			, bClear, penDataType)

	def GetFreq(self, pnSetID=pythoncom.Missing, pnApproxCode=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((16387, 2), (16387, 2)), 'GetFreq', None,pnSetID
			, pnApproxCode)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetSPCForce(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg, pnDof=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((3, 1), (11, 1), (16387, 2)), 'GetSPCForce', None,nSetID
			, bClear, pnDof)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetConstraints(self, dLowerBound=defaultNamedNotOptArg, dUpperBound=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((5, 1), (5, 1)),dLowerBound
			, dUpperBound)

	def SetEntities(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg, enDataType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1)),nSetID
			, bClear, enDataType)

	def SetupBuckle(self, nModeNum=defaultNamedNotOptArg, nApproxCode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((3, 1), (3, 1)),nModeNum
			, nApproxCode)

	def SetupDisplacement(self, nSetID=defaultNamedNotOptArg, nDOF=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nDOF)

	def SetupESE(self, nSetID=defaultNamedNotOptArg, bValidate=defaultNamedNotOptArg, bDensity=defaultNamedNotOptArg, enDataType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (3, 1)),nSetID
			, bValidate, bDensity, enDataType)

	def SetupEign(self, nModeNum=defaultNamedNotOptArg, nApproxCode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1), (3, 1)),nModeNum
			, nApproxCode)

	def SetupElemV2(self, nSetID=defaultNamedNotOptArg, bValidate=defaultNamedNotOptArg, nVecID=defaultNamedNotOptArg, enDataType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (3, 1)),nSetID
			, bValidate, nVecID, enDataType)

	def SetupFreq(self, nModeNum=defaultNamedNotOptArg, nApproxCode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (3, 1)),nModeNum
			, nApproxCode)

	def SetupSPCForce(self, nSetID=defaultNamedNotOptArg, bValidate=defaultNamedNotOptArg, nDOF=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1)),nSetID
			, bValidate, nDOF)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"ResponseCategory": (10007, 2, (3, 0), (), "ResponseCategory", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"VectorIDV2": (10012, 2, (3, 0), (), "VectorIDV2", None),
		"atta": (10004, 2, (3, 0), (), "atta", None),
		"attaBlank": (10011, 2, (11, 0), (), "attaBlank", None),
		"attb": (10005, 2, (8, 0), (), "attb", None),
		"attbFieldType": (10009, 2, (3, 0), (), "attbFieldType", None),
		"attiDataType": (10010, 2, (3, 0), (), "attiDataType", None),
		"ptype": (10002, 2, (8, 0), (), "ptype", None),
		"rtype": (10001, 2, (8, 0), (), "rtype", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"ResponseCategory" : ((10007, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"VectorIDV2" : ((10012, LCID, 4, 0),()),
		"atta" : ((10004, LCID, 4, 0),()),
		"attaBlank" : ((10011, LCID, 4, 0),()),
		"attb" : ((10005, LCID, 4, 0),()),
		"attbFieldType" : ((10009, LCID, 4, 0),()),
		"attiDataType" : ((10010, LCID, 4, 0),()),
		"ptype" : ((10002, LCID, 4, 0),()),
		"rtype" : ((10001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOptim(DispatchBaseClass):
	CLSID = IID('{D3A5591A-080C-11D5-9468-001083FFF11C}')
	coclass_clsid = IID('{D3A5591B-080C-11D5-9468-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"cycles": (10004, 2, (3, 0), (), "cycles", None),
		"goal": (10001, 2, (3, 0), (), "goal", None),
		"limit": (10003, 2, (3, 0), (), "limit", None),
		"respID": (10013, 2, (3, 0), (), "respID", None),
		"respMax": (10015, 2, (5, 0), (), "respMax", None),
		"respMin": (10014, 2, (5, 0), (), "respMin", None),
		"respType": (10012, 2, (3, 0), (), "respType", None),
		"type": (10000, 2, (3, 0), (), "type", None),
		"vary": (10002, 2, (3, 0), (), "vary", None),
		"varyDelta": (10011, 2, (5, 0), (), "varyDelta", None),
		"varyExtraID": (10007, 2, (3, 0), (), "varyExtraID", None),
		"varyID": (10006, 2, (3, 0), (), "varyID", None),
		"varyMax": (10010, 2, (5, 0), (), "varyMax", None),
		"varyMin": (10009, 2, (5, 0), (), "varyMin", None),
		"varyPct": (10008, 2, (11, 0), (), "varyPct", None),
		"varyType": (10005, 2, (3, 0), (), "varyType", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"cycles" : ((10004, LCID, 4, 0),()),
		"goal" : ((10001, LCID, 4, 0),()),
		"limit" : ((10003, LCID, 4, 0),()),
		"respID" : ((10013, LCID, 4, 0),()),
		"respMax" : ((10015, LCID, 4, 0),()),
		"respMin" : ((10014, LCID, 4, 0),()),
		"respType" : ((10012, LCID, 4, 0),()),
		"type" : ((10000, LCID, 4, 0),()),
		"vary" : ((10002, LCID, 4, 0),()),
		"varyDelta" : ((10011, LCID, 4, 0),()),
		"varyExtraID" : ((10007, LCID, 4, 0),()),
		"varyID" : ((10006, LCID, 4, 0),()),
		"varyMax" : ((10010, LCID, 4, 0),()),
		"varyMin" : ((10009, LCID, 4, 0),()),
		"varyPct" : ((10008, LCID, 4, 0),()),
		"varyType" : ((10005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOutput(DispatchBaseClass):
	CLSID = IID('{F7E2A8A0-0820-11D5-9468-001083FFF11C}')
	coclass_clsid = IID('{F7E2A8A2-0820-11D5-9468-001083FFF11C}')

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOutputSet(DispatchBaseClass):
	CLSID = IID('{423C4774-0814-11D5-9468-001083FFF11C}')
	coclass_clsid = IID('{423C4776-0814-11D5-9468-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def ExpandCombination(self, bSetTitles=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((11, 1),),bSetTitles
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def OutputVectorsV2(self, nVectorSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1),),nVectorSetID
			)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetCombination(self, enProcessType=defaultNamedNotOptArg, nNumFactors=defaultNamedNotOptArg, vnSetIDArray=defaultNamedNotOptArg, vdFactorArray=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),enProcessType
			, nNumFactors, vnSetIDArray, vdFactorArray)

	def SetComplexOptions(self, bExpandComplex=defaultNamedNotOptArg, dComplexPhase=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((11, 1), (5, 1)),bExpandComplex
			, dComplexPhase)

	def SetStudyCombination(self, enProcessType=defaultNamedNotOptArg, nStudyID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (3, 1)),enProcessType
			, nStudyID)

	# Result is of type IOutput
	def VectorV2(self, entID=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20008, LCID, 1, (9, 0), ((3, 1),),entID
			)
		if ret is not None:
			ret = Dispatch(ret, 'VectorV2', '{F7E2A8A0-0820-11D5-9468-001083FFF11C}')
		return ret

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"analysis": (10002, 2, (3, 0), (), "analysis", None),
		"combination_type": (10006, 2, (3, 0), (), "combination_type", None),
		"nas_case": (10007, 2, (3, 0), (), "nas_case", None),
		"nas_revision": (10008, 2, (3, 0), (), "nas_revision", None),
		"notes": (10004, 2, (8, 0), (), "notes", None),
		"program": (10001, 2, (3, 0), (), "program", None),
		"study": (10005, 2, (3, 0), (), "study", None),
		"title": (10003, 2, (8, 0), (), "title", None),
		"value": (10000, 2, (5, 0), (), "value", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"analysis" : ((10002, LCID, 4, 0),()),
		"combination_type" : ((10006, LCID, 4, 0),()),
		"nas_case" : ((10007, LCID, 4, 0),()),
		"nas_revision" : ((10008, LCID, 4, 0),()),
		"notes" : ((10004, LCID, 4, 0),()),
		"program" : ((10001, LCID, 4, 0),()),
		"study" : ((10005, LCID, 4, 0),()),
		"title" : ((10003, LCID, 4, 0),()),
		"value" : ((10000, LCID, 4, 0),()),
	}
	# Default property for this class is 'value'
	def __call__(self):
		return self._ApplyTypes_(*(10000, 2, (5, 0), (), "value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane(DispatchBaseClass):
	CLSID = IID('{891A6125-406E-4438-8A3F-AF254F4508DD}')
	coclass_clsid = IID('{891A6127-406E-4438-8A3F-AF254F4508DD}')

	# The method Axis is actually a property, but must be used as a method to correctly pass the arguments
	def Axis(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, ID=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vNorm=defaultNamedNotOptArg
			, vAxis=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (8, 1), (12, 1), (12, 1), (12, 1)),ID
			, sTitle, vBase, vNorm, vAxis)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetAxis is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxis(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setbase is actually a property, but must be used as a method to correctly pass the arguments
	def Setbase(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setnorm is actually a property, but must be used as a method to correctly pass the arguments
	def Setnorm(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method base is actually a property, but must be used as a method to correctly pass the arguments
	def base(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method norm is actually a property, but must be used as a method to correctly pass the arguments
	def norm(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"vAxis": (10003, 2, (12, 0), (), "vAxis", None),
		"vBase": (10001, 2, (12, 0), (), "vBase", None),
		"vNorm": (10002, 2, (12, 0), (), "vNorm", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"vAxis" : ((10003, LCID, 4, 0),()),
		"vBase" : ((10001, LCID, 4, 0),()),
		"vNorm" : ((10002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlyMaterial(DispatchBaseClass):
	CLSID = IID('{86B145A0-34EE-4242-BC0D-216007960CA1}')
	coclass_clsid = IID('{86B145A2-34EE-4242-BC0D-216007960CA1}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(25005, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"failuretheory": (10003, 2, (3, 0), (), "failuretheory", None),
		"matlID": (10002, 2, (3, 0), (), "matlID", None),
		"thickness": (10001, 2, (5, 0), (), "thickness", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"failuretheory" : ((10003, LCID, 4, 0),()),
		"matlID" : ((10002, LCID, 4, 0),()),
		"thickness" : ((10001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint(DispatchBaseClass):
	CLSID = IID('{A97FA4FA-09CA-11D5-946C-001083FFF11C}')
	coclass_clsid = IID('{A97FA4FC-09CA-11D5-946C-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Curves(self, nCombinedMode=defaultNamedNotOptArg, numCurves=pythoncom.Missing, curveID=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'Curves', None,nCombinedMode
			, numCurves, curveID)

	def CurvesAsSet(self, nCombinedMode=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nCombinedMode
			, nSetID, bClear)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAllArray(self, SetID=defaultNamedNotOptArg, numPoint=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, xyz=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing, ptType=pythoncom.Missing, defCSys=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,SetID
			, numPoint, entID, Exist, xyz, layer
			, color, ptType, defCSys)

	def GetClosest(self, vXYZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((12, 1),),vXYZ
			)

	def GetCoordArray(self, SetID=defaultNamedNotOptArg, numPoint=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetCoordArray', None,SetID
			, numPoint, entID, Exist, xyz)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def Nodes(self, numNodes=pythoncom.Missing, NodeID=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((16387, 2), (16396, 2)), 'Nodes', None,numNodes
			, NodeID)

	def NodesAsSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, numPoint=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, color=defaultNamedNotOptArg, ptType=defaultNamedNotOptArg, defCSys=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),numPoint
			, entID, xyz, layer, color, ptType
			, defCSys)

	def PutCoordArray(self, numPoint=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),numPoint
			, entID, xyz)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def Solid(self, pnSolidID=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((16387, 2),), 'Solid', None,pnSolidID
			)

	def SurfacesAsSet(self, nCombinedMode=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nCombinedMode
			, nSetID, bClear)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Address": (10009, 2, (3, 0), (), "Address", None),
		"Engine": (10008, 2, (3, 0), (), "Engine", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"InCombinedCurve": (10012, 2, (3, 0), (), "InCombinedCurve", None),
		"MeshSize": (10010, 2, (5, 0), (), "MeshSize", None),
		"ScaleFactor": (10013, 2, (5, 0), (), "ScaleFactor", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"attrPID": (10007, 2, (3, 0), (), "attrPID", None),
		"color": (10004, 2, (3, 0), (), "color", None),
		"defCSys": (10006, 2, (3, 0), (), "defCSys", None),
		"layer": (10003, 2, (3, 0), (), "layer", None),
		"type": (10005, 2, (3, 0), (), "type", None),
		"x": (10000, 2, (5, 0), (), "x", None),
		"xyz": (10011, 2, (12, 0), (), "xyz", None),
		"y": (10001, 2, (5, 0), (), "y", None),
		"z": (10002, 2, (5, 0), (), "z", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Address" : ((10009, LCID, 4, 0),()),
		"Engine" : ((10008, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"InCombinedCurve" : ((10012, LCID, 4, 0),()),
		"MeshSize" : ((10010, LCID, 4, 0),()),
		"ScaleFactor" : ((10013, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"attrPID" : ((10007, LCID, 4, 0),()),
		"color" : ((10004, LCID, 4, 0),()),
		"defCSys" : ((10006, LCID, 4, 0),()),
		"layer" : ((10003, LCID, 4, 0),()),
		"type" : ((10005, LCID, 4, 0),()),
		"x" : ((10000, LCID, 4, 0),()),
		"xyz" : ((10011, LCID, 4, 0),()),
		"y" : ((10001, LCID, 4, 0),()),
		"z" : ((10002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProp(DispatchBaseClass):
	CLSID = IID('{7110873A-F096-11D4-944F-001083FFF11C}')
	coclass_clsid = IID('{7110873C-F096-11D4-944F-001083FFF11C}')

	def AreDuplicate(self, nProp1=defaultNamedNotOptArg, nProp2=defaultNamedNotOptArg, ignoretitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nProp1
			, nProp2, ignoretitle)

	def Area(self, dAreaA=pythoncom.Missing, dAreaB=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((16389, 2), (16389, 2)), 'Area', None,dAreaA
			, dAreaB)

	def ComputeGeneralShape(self, surfaceID=defaultNamedNotOptArg, vecDIR=defaultNamedNotOptArg, sOrient=defaultNamedNotOptArg, EvalMethod=defaultNamedNotOptArg
			, shear_center_offset=defaultNamedNotOptArg, Warping=defaultNamedNotOptArg, stress_recovery=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),surfaceID
			, vecDIR, sOrient, EvalMethod, shear_center_offset, Warping
			, stress_recovery)

	def ComputeGeneralShape2(self, bAtEndAOrOverall=defaultNamedNotOptArg, surfaceID=defaultNamedNotOptArg, vecDIR=defaultNamedNotOptArg, sOrient=defaultNamedNotOptArg
			, EvalMethod=defaultNamedNotOptArg, shear_center_offset=defaultNamedNotOptArg, Warping=defaultNamedNotOptArg, stress_recovery=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((11, 1), (3, 1), (12, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),bAtEndAOrOverall
			, surfaceID, vecDIR, sOrient, EvalMethod, shear_center_offset
			, Warping, stress_recovery)

	def ComputeShape(self, shear_center_offset=defaultNamedNotOptArg, Warping=defaultNamedNotOptArg, stress_recovery=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1)),shear_center_offset
			, Warping, stress_recovery)

	def ComputeStdShape(self, shapeID=defaultNamedNotOptArg, dimensions=defaultNamedNotOptArg, sOrient=defaultNamedNotOptArg, EvalMethod=defaultNamedNotOptArg
			, shear_center_offset=defaultNamedNotOptArg, Warping=defaultNamedNotOptArg, stress_recovery=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),shapeID
			, dimensions, sOrient, EvalMethod, shear_center_offset, Warping
			, stress_recovery)

	def ComputeStdShape2(self, bAtEndAOrOverall=defaultNamedNotOptArg, shapeID=defaultNamedNotOptArg, dimensions=defaultNamedNotOptArg, sOrient=defaultNamedNotOptArg
			, EvalMethod=defaultNamedNotOptArg, shear_center_offset=defaultNamedNotOptArg, Warping=defaultNamedNotOptArg, stress_recovery=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((11, 1), (3, 1), (12, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),bAtEndAOrOverall
			, shapeID, dimensions, sOrient, EvalMethod, shear_center_offset
			, Warping, stress_recovery)

	def CopyArray(self, bUpdateReferences=defaultNamedNotOptArg, bCopyToStartID=defaultNamedNotOptArg, nCopyToStartID=defaultNamedNotOptArg, numID=defaultNamedNotOptArg
			, nOrigID=defaultNamedNotOptArg, pnNewID=pythoncom.Missing):
		return self._ApplyTypes_(20014, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (3, 1), (12, 1), (16396, 2)), 'CopyArray', None,bUpdateReferences
			, bCopyToStartID, nCopyToStartID, numID, nOrigID, pnNewID
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	# The method ExtraMatlID is actually a property, but must be used as a method to correctly pass the arguments
	def ExtraMatlID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetAllArray(self, SetID=defaultNamedNotOptArg, numProp=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, proptype=pythoncom.Missing, mid=pythoncom.Missing, extramid=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing
			, layupID=pythoncom.Missing, refCSys=pythoncom.Missing, title=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,SetID
			, numProp, entID, Exist, proptype, mid
			, extramid, layer, color, layupID, refCSys
			, title)

	def GetFlagArray(self, numValue=defaultNamedNotOptArg, nPropID=defaultNamedNotOptArg, nFlagIndex=defaultNamedNotOptArg, nIntValue=pythoncom.Missing):
		return self._ApplyTypes_(20021, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (16396, 2)), 'GetFlagArray', None,numValue
			, nPropID, nFlagIndex, nIntValue)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetLibraryOfType(self, libINDEX=defaultNamedNotOptArg, libTYPE=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),libINDEX
			, libTYPE, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def GetValueArray(self, numValue=defaultNamedNotOptArg, nPropID=defaultNamedNotOptArg, nPropIndex=defaultNamedNotOptArg, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (16396, 2)), 'GetValueArray', None,numValue
			, nPropID, nPropIndex, dValue)

	def HasMatl(self):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), (),)

	def HasShape(self):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), (),)

	def Inertia(self, dI1A=pythoncom.Missing, dI2A=pythoncom.Missing, dI12A=pythoncom.Missing, dJA=pythoncom.Missing
			, dI1B=pythoncom.Missing, dI2B=pythoncom.Missing, dI12B=pythoncom.Missing, dJB=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'Inertia', None,dI1A
			, dI2A, dI12A, dJA, dI1B, dI2B
			, dI12B, dJB)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	# Result is of type ILayup
	def Layup(self):
		ret = self._oleobj_.InvokeTypes(20004, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Layup', '{EDB333C3-3711-47A5-A628-33B4B8768F88}')
		return ret

	# Result is of type IMatl
	def Matl(self):
		ret = self._oleobj_.InvokeTypes(20003, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Matl', '{0AD6E2E8-EE3E-11D4-944C-001083FFF11C}')
		return ret

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, numProp=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, bUpdateType=defaultNamedNotOptArg, proptype=defaultNamedNotOptArg
			, bUpdateMatl=defaultNamedNotOptArg, mid=defaultNamedNotOptArg, bUpdateExtraMatl=defaultNamedNotOptArg, extramid=defaultNamedNotOptArg, bUpdateLayer=defaultNamedNotOptArg
			, layer=defaultNamedNotOptArg, bUpdateColor=defaultNamedNotOptArg, color=defaultNamedNotOptArg, bUpdateLayup=defaultNamedNotOptArg, layupID=defaultNamedNotOptArg
			, bUpdateCSys=defaultNamedNotOptArg, refCSys=defaultNamedNotOptArg, bUpdateTitle=defaultNamedNotOptArg, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1)),numProp
			, entID, bUpdateType, proptype, bUpdateMatl, mid
			, bUpdateExtraMatl, extramid, bUpdateLayer, layer, bUpdateColor
			, color, bUpdateLayup, layupID, bUpdateCSys, refCSys
			, bUpdateTitle, title)

	def PutFlagArray(self, numValue=defaultNamedNotOptArg, nPropID=defaultNamedNotOptArg, nFlagIndex=defaultNamedNotOptArg, nIntValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),numValue
			, nPropID, nFlagIndex, nIntValue)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def PutValue(self, nPropSetID=defaultNamedNotOptArg, nPropIndex=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nPropSetID
			, nPropIndex, dValue)

	def PutValueArray(self, numValue=defaultNamedNotOptArg, nPropID=defaultNamedNotOptArg, nPropIndex=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),numValue
			, nPropID, nPropIndex, dValue)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetExtraMatlID is actually a property, but must be used as a method to correctly pass the arguments
	def SetExtraMatlID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setflag is actually a property, but must be used as a method to correctly pass the arguments
	def Setflag(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetflagI is actually a property, but must be used as a method to correctly pass the arguments
	def SetflagI(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setpival is actually a property, but must be used as a method to correctly pass the arguments
	def Setpival(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setpval is actually a property, but must be used as a method to correctly pass the arguments
	def Setpval(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method flag is actually a property, but must be used as a method to correctly pass the arguments
	def flag(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method flagI is actually a property, but must be used as a method to correctly pass the arguments
	def flagI(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method pival is actually a property, but must be used as a method to correctly pass the arguments
	def pival(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method pval is actually a property, but must be used as a method to correctly pass the arguments
	def pval(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def thickness(self, dAvgOrAtC1=pythoncom.Missing, dAtC2=pythoncom.Missing, dAtC3=pythoncom.Missing, dAtC4=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'thickness', None,dAvgOrAtC1
			, dAtC2, dAtC3, dAtC4)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"cbush": (10019, 2, (3, 0), (), "cbush", None),
		"color": (10001, 2, (3, 0), (), "color", None),
		"extramat": (10010, 2, (12, 0), (), "extramat", None),
		"layer": (10000, 2, (3, 0), (), "layer", None),
		"layupID": (10018, 2, (3, 0), (), "layupID", None),
		"matlID": (10002, 2, (3, 0), (), "matlID", None),
		"numOutline": (10013, 2, (3, 0), (), "numOutline", None),
		"outline": (10012, 2, (12, 0), (), "outline", None),
		"pmat": (10011, 2, (12, 0), (), "pmat", None),
		"refCS": (10004, 2, (3, 0), (), "refCS", None),
		"title": (10009, 2, (8, 0), (), "title", None),
		"type": (10003, 2, (3, 0), (), "type", None),
		"vExtraMatlID": (10017, 2, (12, 0), (), "vExtraMatlID", None),
		"vflag": (10014, 2, (12, 0), (), "vflag", None),
		"vflagI": (10015, 2, (12, 0), (), "vflagI", None),
		"vpival": (10020, 2, (12, 0), (), "vpival", None),
		"vpval": (10016, 2, (12, 0), (), "vpval", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"cbush" : ((10019, LCID, 4, 0),()),
		"color" : ((10001, LCID, 4, 0),()),
		"extramat" : ((10010, LCID, 4, 0),()),
		"layer" : ((10000, LCID, 4, 0),()),
		"layupID" : ((10018, LCID, 4, 0),()),
		"matlID" : ((10002, LCID, 4, 0),()),
		"numOutline" : ((10013, LCID, 4, 0),()),
		"outline" : ((10012, LCID, 4, 0),()),
		"pmat" : ((10011, LCID, 4, 0),()),
		"refCS" : ((10004, LCID, 4, 0),()),
		"title" : ((10009, LCID, 4, 0),()),
		"type" : ((10003, LCID, 4, 0),()),
		"vExtraMatlID" : ((10017, LCID, 4, 0),()),
		"vflag" : ((10014, LCID, 4, 0),()),
		"vflagI" : ((10015, LCID, 4, 0),()),
		"vpival" : ((10020, LCID, 4, 0),()),
		"vpval" : ((10016, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPublishTable(DispatchBaseClass):
	CLSID = IID('{BE32C851-7FC3-4486-AD34-DF79ABD7EC56}')
	coclass_clsid = IID('{BE32C853-7FC3-4486-AD34-DF79ABD7EC56}')

	def AddColumn(self, sColumnTitle=defaultNamedNotOptArg, nAlign=defaultNamedNotOptArg, dWidth=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((8, 1), (3, 1), (5, 1)),sColumnTitle
			, nAlign, dWidth)

	def AddColumnGroupTitle(self, nStartColumn=defaultNamedNotOptArg, nEndColumn=defaultNamedNotOptArg, sColumnGroupTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),nStartColumn
			, nEndColumn, sColumnGroupTitle)

	def AddRowNumbering(self, nFirstRowNumber=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),nFirstRowNumber
			)

	def Publish(self):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), (),)

	def SetCellInteger(self, nRow=defaultNamedNotOptArg, nColumn=defaultNamedNotOptArg, nValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nColumn, nValue)

	def SetCellReal(self, nRow=defaultNamedNotOptArg, nColumn=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nRow
			, nColumn, dValue)

	def SetCellStyle(self, nRow=defaultNamedNotOptArg, nColumn=defaultNamedNotOptArg, nStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nColumn, nStyle)

	def SetCellText(self, nRow=defaultNamedNotOptArg, nColumn=defaultNamedNotOptArg, sText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),nRow
			, nColumn, sText)

	def SetMultiCellInteger(self, nCount=defaultNamedNotOptArg, vRow=defaultNamedNotOptArg, vColumn=defaultNamedNotOptArg, vvalue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),nCount
			, vRow, vColumn, vvalue)

	def SetMultiCellReal(self, nCount=defaultNamedNotOptArg, vRow=defaultNamedNotOptArg, vColumn=defaultNamedNotOptArg, vvalue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),nCount
			, vRow, vColumn, vvalue)

	def SetMultiCellStyle(self, nCount=defaultNamedNotOptArg, vRow=defaultNamedNotOptArg, vColumn=defaultNamedNotOptArg, vStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),nCount
			, vRow, vColumn, vStyle)

	def SetMultiCellText(self, nCount=defaultNamedNotOptArg, vRow=defaultNamedNotOptArg, vColumn=defaultNamedNotOptArg, vText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),nCount
			, vRow, vColumn, vText)

	def SetRealFormat(self, nWidth=defaultNamedNotOptArg, nPrecision=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (3, 1)),nWidth
			, nPrecision)

	def SetRowTitle(self, nRow=defaultNamedNotOptArg, sRowTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1), (8, 1)),nRow
			, sRowTitle)

	def SetTableStyle(self, nHeaderStyle=defaultNamedNotOptArg, nBodyStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1)),nHeaderStyle
			, nBodyStyle)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPublishTool(DispatchBaseClass):
	CLSID = IID('{49201AE2-58D3-431E-B227-3128F38A55E2}')
	coclass_clsid = IID('{49201AE4-58D3-431E-B227-3128F38A55E2}')

	def AddChart(self, nSizePct=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1),),nSizePct
			)

	def AddDataTable(self, bCopyAllRows=defaultNamedNotOptArg, bCopyHeader=defaultNamedNotOptArg, bCopyFooter=defaultNamedNotOptArg, nNumColumns=defaultNamedNotOptArg
			, sColumnTitles=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (3, 1), (12, 1)),bCopyAllRows
			, bCopyHeader, bCopyFooter, nNumColumns, sColumnTitles)

	def AddEntityEditor(self):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), (),)

	def AddFunctionTableEditor(self, bCopyHeader=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((11, 1),),bCopyHeader
			)

	def AddMessages(self, nFirstLine=defaultNamedNotOptArg, nLastLine=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (3, 1)),nFirstLine
			, nLastLine)

	def AddParagraph(self, sText=defaultNamedNotOptArg, nStyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((8, 1), (3, 1)),sText
			, nStyle)

	def AddPicture(self, sFilename=defaultNamedNotOptArg, nFormat=defaultNamedNotOptArg, nSizePct=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((8, 1), (3, 1), (3, 1)),sFilename
			, nFormat, nSizePct)

	def AddStyle(self, sFontName=defaultNamedNotOptArg, nFontSize=defaultNamedNotOptArg, nColor=defaultNamedNotOptArg, nHighlightColor=defaultNamedNotOptArg
			, bBold=defaultNamedNotOptArg, bItalic=defaultNamedNotOptArg, bUnderline=defaultNamedNotOptArg, bPreserveFormatting=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1)),sFontName
			, nFontSize, nColor, nHighlightColor, bBold, bItalic
			, bUnderline, bPreserveFormatting)

	def AddView(self, nVuID=defaultNamedNotOptArg, nSizePct=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1), (3, 1)),nVuID
			, nSizePct)

	def PublishToClipboard(self):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), (),)

	def PublishToFile(self, sFilename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((8, 1),),sFilename
			)

	def SetFormat(self, nFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),nFormat
			)

	def SetParagraphAlignment(self, nAlign=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),nAlign
			)

	def SetParagraphIndent(self, nLeftIndent=defaultNamedNotOptArg, nRightIndent=defaultNamedNotOptArg, nFirstLineIndent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nLeftIndent
			, nRightIndent, nFirstLineIndent)

	def SetParagraphSpacing(self, nSpaceAbove=defaultNamedNotOptArg, nSpaceBelow=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSpaceAbove
			, nSpaceBelow)

	# Result is of type IPublishTable
	def UserTable(self):
		ret = self._oleobj_.InvokeTypes(20014, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'UserTable', '{BE32C851-7FC3-4486-AD34-DF79ABD7EC56}')
		return ret

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRead(DispatchBaseClass):
	CLSID = IID('{86603850-0DA7-11D5-9470-001083FFF11C}')
	coclass_clsid = IID('{86603852-0DA7-11D5-9470-001083FFF11C}')

	def AtEOF(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def BoolField(self, fieldID=defaultNamedNotOptArg, defValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (11, 0), ((3, 1), (11, 1)),fieldID
			, defValue)

	def ClearSearch(self):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), (),)

	def Close(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def Field(self, fieldID=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (8, 0), ((3, 1),),fieldID
			)

	def FixedFormat(self, numField=defaultNamedNotOptArg, width=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1), (12, 1)),numField
			, width)

	def IntField(self, fieldID=defaultNamedNotOptArg, defValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (3, 1)),fieldID
			, defValue)

	def Jump(self, jumpto=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1),),jumpto
			)

	def JumpToEnd(self, jumpto=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), ((3, 1),),jumpto
			)

	def LineInit(self, maxLineLength=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1),),maxLineLength
			)

	def Open(self, filename=defaultNamedNotOptArg, maxLineLength=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((8, 1), (3, 1)),filename
			, maxLineLength)

	def Position(self):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), (),)

	def Read(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def RealField(self, fieldID=defaultNamedNotOptArg, defValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (5, 0), ((3, 1), (5, 1)),fieldID
			, defValue)

	def Reparse(self):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), (),)

	def SetAutoFormat(self):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), (),)

	def SetFixedFormat(self):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), (),)

	def SetFormFeed(self, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((11, 1),),on
			)

	def SetFreeFormat(self):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), (),)

	def SetNoBlankLines(self, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((11, 1),),on
			)

	def SetNoShortLines(self, on=defaultNamedNotOptArg, minLineLength=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((11, 1), (3, 1)),on
			, minLineLength)

	def SetSearch(self, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((11, 1),),on
			)

	def SetSearchString(self, s=defaultNamedNotOptArg, sor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((8, 1), (8, 1)),s
			, sor)

	def SetSkip(self, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((11, 1),),on
			)

	def SetSkipAfterSearch(self, lines=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1),),lines
			)

	def SetTabSize(self, tabsize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1),),tabsize
			)

	def SetTrimEndSpace(self, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((11, 1),),on
			)

	def SetTrimFront(self, on=defaultNamedNotOptArg, numChar=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((11, 1), (3, 1)),on
			, numChar)

	def SetTrimSpace(self, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((11, 1),),on
			)

	def SetUppercase(self, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((11, 1),),on
			)

	def ShowStatus(self, on=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((11, 1),),on
			)

	def Size(self, nSize=pythoncom.Missing):
		return self._ApplyTypes_(20031, 1, (3, 0), ((16404, 2),), 'Size', None,nSize
			)

	def Skipped(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def TimeAccessed(self, nTime=pythoncom.Missing):
		return self._ApplyTypes_(20034, 1, (3, 0), ((16404, 2),), 'TimeAccessed', None,nTime
			)

	def TimeCreated(self, nTime=pythoncom.Missing):
		return self._ApplyTypes_(20032, 1, (3, 0), ((16404, 2),), 'TimeCreated', None,nTime
			)

	def TimeWritten(self, nTime=pythoncom.Missing):
		return self._ApplyTypes_(20033, 1, (3, 0), ((16404, 2),), 'TimeWritten', None,nTime
			)

	_prop_map_get_ = {
		"Exclusive": (10003, 2, (11, 0), (), "Exclusive", None),
		"Line": (10000, 2, (8, 0), (), "Line", None),
		"Shared": (10002, 2, (11, 0), (), "Shared", None),
		"SharedDelete": (10004, 2, (11, 0), (), "SharedDelete", None),
		"Truncated": (10001, 2, (11, 0), (), "Truncated", None),
	}
	_prop_map_put_ = {
		"Exclusive" : ((10003, LCID, 4, 0),()),
		"Line" : ((10000, LCID, 4, 0),()),
		"Shared" : ((10002, LCID, 4, 0),()),
		"SharedDelete" : ((10004, LCID, 4, 0),()),
		"Truncated" : ((10001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReference(DispatchBaseClass):
	CLSID = IID('{E6F57AAF-E85E-455B-AA4D-4FF48824BB31}')
	coclass_clsid = IID('{E6F57AB1-E85E-455B-AA4D-4FF48824BB31}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteAll(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"ParentFileName": (10001, 2, (8, 0), (), "ParentFileName", None),
		"ReadFileTime": (10004, 2, (3, 0), (), "ReadFileTime", None),
		"ReadFrom": (10002, 2, (3, 0), (), "ReadFrom", None),
		"ReadTime": (10003, 2, (3, 0), (), "ReadTime", None),
		"ReadType": (10005, 2, (3, 0), (), "ReadType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"filename": (10000, 2, (8, 0), (), "filename", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"ParentFileName" : ((10001, LCID, 4, 0),()),
		"ReadFileTime" : ((10004, LCID, 4, 0),()),
		"ReadFrom" : ((10002, LCID, 4, 0),()),
		"ReadTime" : ((10003, LCID, 4, 0),()),
		"ReadType" : ((10005, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"filename" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReport(DispatchBaseClass):
	CLSID = IID('{0D85757C-0374-11D5-9465-001083FFF11C}')
	coclass_clsid = IID('{0D85757E-0374-11D5-9465-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"CenterHeader1": (10002, 2, (11, 0), (), "CenterHeader1", None),
		"CenterHeader2": (10003, 2, (11, 0), (), "CenterHeader2", None),
		"ColumnHeader": (10008, 2, (8, 0), (), "ColumnHeader", None),
		"Data1": (10009, 2, (8, 0), (), "Data1", None),
		"Data2": (10010, 2, (8, 0), (), "Data2", None),
		"Data3": (10011, 2, (8, 0), (), "Data3", None),
		"Data4": (10012, 2, (8, 0), (), "Data4", None),
		"DataType": (10001, 2, (3, 0), (), "DataType", None),
		"DbSpHeader1": (10004, 2, (11, 0), (), "DbSpHeader1", None),
		"DbSpHeader2": (10005, 2, (11, 0), (), "DbSpHeader2", None),
		"Header1": (10006, 2, (8, 0), (), "Header1", None),
		"Header2": (10007, 2, (8, 0), (), "Header2", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"CenterHeader1" : ((10002, LCID, 4, 0),()),
		"CenterHeader2" : ((10003, LCID, 4, 0),()),
		"ColumnHeader" : ((10008, LCID, 4, 0),()),
		"Data1" : ((10009, LCID, 4, 0),()),
		"Data2" : ((10010, LCID, 4, 0),()),
		"Data3" : ((10011, LCID, 4, 0),()),
		"Data4" : ((10012, LCID, 4, 0),()),
		"DataType" : ((10001, LCID, 4, 0),()),
		"DbSpHeader1" : ((10004, LCID, 4, 0),()),
		"DbSpHeader2" : ((10005, LCID, 4, 0),()),
		"Header1" : ((10006, LCID, 4, 0),()),
		"Header2" : ((10007, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IResults(DispatchBaseClass):
	CLSID = IID('{2B88E749-3213-47AB-9CAD-0AEA2E415F16}')
	coclass_clsid = IID('{2B88E74B-3213-47AB-9CAD-0AEA2E415F16}')

	def AddColumnV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, bAddComponentsCorners=defaultNamedNotOptArg, nNumColumnsAdded=pythoncom.Missing
			, nColumnIndices=pythoncom.Missing):
		return self._ApplyTypes_(20310, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (16387, 2), (16396, 2)), 'AddColumnV2', None,nSetID
			, nVectorID, bAddComponentsCorners, nNumColumnsAdded, nColumnIndices)

	def AddConversionColumnV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, nConversionApproach=defaultNamedNotOptArg, nColumnIndex=pythoncom.Missing):
		return self._ApplyTypes_(20311, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16387, 2)), 'AddConversionColumnV2', None,nSetID
			, nVectorID, nConversionApproach, nColumnIndex)

	def AddElemWithCornerColumnsV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, Vec1=defaultNamedNotOptArg, Vec2=defaultNamedNotOptArg
			, Vec3=defaultNamedNotOptArg, Vec4=defaultNamedNotOptArg, Vec5=defaultNamedNotOptArg, Vec6=defaultNamedNotOptArg, Vec7=defaultNamedNotOptArg
			, Vec8=defaultNamedNotOptArg, title=defaultNamedNotOptArg, category=defaultNamedNotOptArg, nonlinear=defaultNamedNotOptArg, pnColumnIndices=pythoncom.Missing):
		return self._ApplyTypes_(20325, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (8, 1), (3, 1), (11, 1), (16396, 2)), 'AddElemWithCornerColumnsV2', None,nSetID
			, nVectorID, Vec1, Vec2, Vec3, Vec4
			, Vec5, Vec6, Vec7, Vec8, title
			, category, nonlinear, pnColumnIndices)

	def AddEmptyColumns(self, nNumberOfColumns=defaultNamedNotOptArg, nColumnIndices=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((3, 1), (16396, 2)), 'AddEmptyColumns', None,nNumberOfColumns
			, nColumnIndices)

	def AddEnvelopeColumn(self, nEnvelopeType=defaultNamedNotOptArg, nDataColumnIndex=pythoncom.Missing, nColumnColumnIndex=pythoncom.Missing):
		return self._ApplyTypes_(20038, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2)), 'AddEnvelopeColumn', None,nEnvelopeType
			, nDataColumnIndex, nColumnColumnIndex)

	def AddScalarAtBeamColumnsV2(self, nSetID=defaultNamedNotOptArg, VecA=defaultNamedNotOptArg, VecB=defaultNamedNotOptArg, title=defaultNamedNotOptArg
			, vecstyle=defaultNamedNotOptArg, category=defaultNamedNotOptArg, nonlinear=defaultNamedNotOptArg, add_endAB_titles=defaultNamedNotOptArg, pnColumnIndices=pythoncom.Missing):
		return self._ApplyTypes_(20326, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (8, 1), (3, 1), (3, 1), (11, 1), (11, 1), (16396, 2)), 'AddScalarAtBeamColumnsV2', None,nSetID
			, VecA, VecB, title, vecstyle, category
			, nonlinear, add_endAB_titles, pnColumnIndices)

	def AddScalarAtElemColumnV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, title=defaultNamedNotOptArg, category=defaultNamedNotOptArg
			, nonlinear=defaultNamedNotOptArg, nColumnIndex=pythoncom.Missing):
		return self._ApplyTypes_(20324, 1, (3, 0), ((3, 1), (3, 1), (8, 1), (3, 1), (11, 1), (16387, 2)), 'AddScalarAtElemColumnV2', None,nSetID
			, nVectorID, title, category, nonlinear, nColumnIndex
			)

	def AddScalarAtNodeColumnV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, title=defaultNamedNotOptArg, category=defaultNamedNotOptArg
			, nonlinear=defaultNamedNotOptArg, nColumnIndex=pythoncom.Missing):
		return self._ApplyTypes_(20322, 1, (3, 0), ((3, 1), (3, 1), (8, 1), (3, 1), (11, 1), (16387, 2)), 'AddScalarAtNodeColumnV2', None,nSetID
			, nVectorID, title, category, nonlinear, nColumnIndex
			)

	def AddVectorAtNodeColumnsV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, VecX=defaultNamedNotOptArg, VecY=defaultNamedNotOptArg
			, VecZ=defaultNamedNotOptArg, title=defaultNamedNotOptArg, category=defaultNamedNotOptArg, nonlinear=defaultNamedNotOptArg, pnColumnIndices=pythoncom.Missing):
		return self._ApplyTypes_(20323, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (8, 1), (3, 1), (11, 1), (16396, 2)), 'AddVectorAtNodeColumnsV2', None,nSetID
			, nVectorID, VecX, VecY, VecZ, title
			, category, nonlinear, pnColumnIndices)

	def DataLocation(self, nDataType=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((16387, 2),), 'DataLocation', None,nDataType
			)

	def DataNeeded(self, nDataType=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((3, 1), (3, 1)),nDataType
			, nEntitySetID)

	def EntityValueV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, nEntityID=defaultNamedNotOptArg, pdVal=pythoncom.Missing):
		return self._ApplyTypes_(20401, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16389, 2)), 'EntityValueV2', None,nSetID
			, nVectorID, nEntityID, pdVal)

	def FindColumnV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, nColumnIndex=pythoncom.Missing):
		return self._ApplyTypes_(20309, 1, (3, 0), ((3, 1), (3, 1), (16387, 2)), 'FindColumnV2', None,nSetID
			, nVectorID, nColumnIndex)

	def GetColumn(self, nColIndex=defaultNamedNotOptArg, pnIDs=pythoncom.Missing, pdVals=pythoncom.Missing):
		return self._ApplyTypes_(20040, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2)), 'GetColumn', None,nColIndex
			, pnIDs, pdVals)

	def GetColumnAbsMax(self, nColumnIndex=defaultNamedNotOptArg, nLimitToSet=defaultNamedNotOptArg, pnAbsMaxID=pythoncom.Missing, pdAbsMaxVal=pythoncom.Missing):
		return self._ApplyTypes_(20370, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16389, 2)), 'GetColumnAbsMax', None,nColumnIndex
			, nLimitToSet, pnAbsMaxID, pdAbsMaxVal)

	def GetColumnComponents(self, nColumnIndex=defaultNamedNotOptArg, pnNumComponents=pythoncom.Missing, pnComponentColumns=pythoncom.Missing):
		return self._ApplyTypes_(20330, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'GetColumnComponents', None,nColumnIndex
			, pnNumComponents, pnComponentColumns)

	def GetColumnInfo(self, nColumnIndex=defaultNamedNotOptArg, nDataType=pythoncom.Missing, nOutputType=pythoncom.Missing, bCentroidTotal=pythoncom.Missing
			, bCalcWarn=pythoncom.Missing):
		return self._ApplyTypes_(20328, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2), (16395, 2), (16395, 2)), 'GetColumnInfo', None,nColumnIndex
			, nDataType, nOutputType, bCentroidTotal, bCalcWarn)

	def GetColumnInteger(self, nColumnIndex=defaultNamedNotOptArg, bIsInteger=pythoncom.Missing):
		return self._ApplyTypes_(20334, 1, (3, 0), ((3, 1), (16395, 2)), 'GetColumnInteger', None,nColumnIndex
			, bIsInteger)

	def GetColumnMinMax(self, nColumnIndex=defaultNamedNotOptArg, nLimitToSet=defaultNamedNotOptArg, pnMinID=pythoncom.Missing, pnMaxID=pythoncom.Missing
			, pdMinVal=pythoncom.Missing, pdMaxVal=pythoncom.Missing):
		return self._ApplyTypes_(20014, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2), (16389, 2), (16389, 2)), 'GetColumnMinMax', None,nColumnIndex
			, nLimitToSet, pnMinID, pnMaxID, pdMinVal, pdMaxVal
			)

	def GetColumnSum(self, nColumnIndex=defaultNamedNotOptArg, nLimitToSet=defaultNamedNotOptArg, pnNumVal=pythoncom.Missing, pdSum=pythoncom.Missing
			, pdSumSq=pythoncom.Missing):
		return self._ApplyTypes_(20044, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16389, 2), (16389, 2)), 'GetColumnSum', None,nColumnIndex
			, nLimitToSet, pnNumVal, pdSum, pdSumSq)

	def GetColumnTitle(self, nColumnIndex=defaultNamedNotOptArg, sTitle=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((3, 1), (16392, 2)), 'GetColumnTitle', None,nColumnIndex
			, sTitle)

	def GetColumnVectorV2(self, nColumnIndex=defaultNamedNotOptArg, pnSetID=pythoncom.Missing, pnVectorID=pythoncom.Missing):
		return self._ApplyTypes_(20312, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetColumnVectorV2', None,nColumnIndex
			, pnSetID, pnVectorID)

	def GetColumns(self, nNumberOfColumns=defaultNamedNotOptArg, nColIndices=defaultNamedNotOptArg, pnIDs=pythoncom.Missing, pdVals=pythoncom.Missing):
		return self._ApplyTypes_(20041, 1, (3, 0), ((3, 1), (12, 1), (16396, 2), (16396, 2)), 'GetColumns', None,nNumberOfColumns
			, nColIndices, pnIDs, pdVals)

	def GetElemWithCornerColumnsV2(self, nColumnIndices=defaultNamedNotOptArg, listcount=pythoncom.Missing, maxcorner=pythoncom.Missing, nID=pythoncom.Missing
			, centroid=pythoncom.Missing, c1=pythoncom.Missing, c2=pythoncom.Missing, c3=pythoncom.Missing, c4=pythoncom.Missing
			, c5=pythoncom.Missing, c6=pythoncom.Missing, c7=pythoncom.Missing, c8=pythoncom.Missing):
		return self._ApplyTypes_(20359, 1, (3, 0), ((12, 1), (16387, 2), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetElemWithCornerColumnsV2', None,nColumnIndices
			, listcount, maxcorner, nID, centroid, c1
			, c2, c3, c4, c5, c6
			, c7, c8)

	def GetElemWithCornerSetV2(self, nColumnIndices=defaultNamedNotOptArg, nElemSetID=defaultNamedNotOptArg, maxcorner=pythoncom.Missing, centroid=pythoncom.Missing
			, c1=pythoncom.Missing, c2=pythoncom.Missing, c3=pythoncom.Missing, c4=pythoncom.Missing, c5=pythoncom.Missing
			, c6=pythoncom.Missing, c7=pythoncom.Missing, c8=pythoncom.Missing):
		return self._ApplyTypes_(20367, 1, (3, 0), ((12, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetElemWithCornerSetV2', None,nColumnIndices
			, nElemSetID, maxcorner, centroid, c1, c2
			, c3, c4, c5, c6, c7
			, c8)

	def GetInRow(self, nRowIndex=defaultNamedNotOptArg, nColumnIndex=defaultNamedNotOptArg, pnID=pythoncom.Missing, pdVal=pythoncom.Missing):
		return self._ApplyTypes_(20027, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16389, 2)), 'GetInRow', None,nRowIndex
			, nColumnIndex, pnID, pdVal)

	def GetModel(self, nModelID=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((16404, 2),), 'GetModel', None,nModelID
			)

	def GetMultipleInRow(self, nRowIndex=defaultNamedNotOptArg, nNumberOfColumns=defaultNamedNotOptArg, nColumnIndices=defaultNamedNotOptArg, pnID=pythoncom.Missing
			, pdVals=pythoncom.Missing):
		return self._ApplyTypes_(20028, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16387, 2), (16396, 2)), 'GetMultipleInRow', None,nRowIndex
			, nNumberOfColumns, nColumnIndices, pnID, pdVals)

	def GetRow(self, nRowIndex=defaultNamedNotOptArg, pnID=pythoncom.Missing, pdVals=pythoncom.Missing):
		return self._ApplyTypes_(20034, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'GetRow', None,nRowIndex
			, pnID, pdVals)

	def GetRowByID(self, nID=defaultNamedNotOptArg, pdVals=pythoncom.Missing):
		return self._ApplyTypes_(20033, 1, (3, 0), ((3, 1), (16396, 2)), 'GetRowByID', None,nID
			, pdVals)

	def GetRows(self, nNumberOfRows=defaultNamedNotOptArg, nRowIndices=defaultNamedNotOptArg, pnIDs=pythoncom.Missing, pdVals=pythoncom.Missing):
		return self._ApplyTypes_(20035, 1, (3, 0), ((3, 1), (12, 1), (16396, 2), (16396, 2)), 'GetRows', None,nNumberOfRows
			, nRowIndices, pnIDs, pdVals)

	def GetRowsAndColumns(self, nNumberOfRows=defaultNamedNotOptArg, nRowIndices=defaultNamedNotOptArg, nNumberOfColumns=defaultNamedNotOptArg, nColIndices=defaultNamedNotOptArg
			, pnIDs=pythoncom.Missing, pdVals=pythoncom.Missing, pbAllExist=pythoncom.Missing):
		return self._ApplyTypes_(20042, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (12, 1), (16396, 2), (16396, 2), (16395, 2)), 'GetRowsAndColumns', None,nNumberOfRows
			, nRowIndices, nNumberOfColumns, nColIndices, pnIDs, pdVals
			, pbAllExist)

	def GetRowsAndColumnsByID(self, nEntitySetID=defaultNamedNotOptArg, nNumberOfColumns=defaultNamedNotOptArg, nColIndices=defaultNamedNotOptArg, pdVals=pythoncom.Missing
			, pbAllExist=pythoncom.Missing):
		return self._ApplyTypes_(20043, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16396, 2), (16395, 2)), 'GetRowsAndColumnsByID', None,nEntitySetID
			, nNumberOfColumns, nColIndices, pdVals, pbAllExist)

	def GetRowsByID(self, nEntitySetID=defaultNamedNotOptArg, pdVals=pythoncom.Missing):
		return self._ApplyTypes_(20036, 1, (3, 0), ((3, 1), (16396, 2)), 'GetRowsByID', None,nEntitySetID
			, pdVals)

	def GetScalarAtBeamColumnsV2(self, nColumnIndices=defaultNamedNotOptArg, listcount=pythoncom.Missing, nID=pythoncom.Missing, ValA=pythoncom.Missing
			, ValB=pythoncom.Missing):
		return self._ApplyTypes_(20361, 1, (3, 0), ((12, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetScalarAtBeamColumnsV2', None,nColumnIndices
			, listcount, nID, ValA, ValB)

	def GetScalarAtBeamSetV2(self, nColumnIndices=defaultNamedNotOptArg, nElemSetID=defaultNamedNotOptArg, ValA=pythoncom.Missing, ValB=pythoncom.Missing):
		return self._ApplyTypes_(20368, 1, (3, 0), ((12, 1), (3, 1), (16396, 2), (16396, 2)), 'GetScalarAtBeamSetV2', None,nColumnIndices
			, nElemSetID, ValA, ValB)

	def GetScalarAtElemColumnV2(self, nColumnIndex=defaultNamedNotOptArg, listcount=pythoncom.Missing, nID=pythoncom.Missing, value=pythoncom.Missing):
		return self._ApplyTypes_(20355, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetScalarAtElemColumnV2', None,nColumnIndex
			, listcount, nID, value)

	def GetScalarAtElemSetV2(self, nColumnIndex=defaultNamedNotOptArg, nElemSetID=defaultNamedNotOptArg, value=pythoncom.Missing):
		return self._ApplyTypes_(20365, 1, (3, 0), ((3, 1), (3, 1), (16396, 2)), 'GetScalarAtElemSetV2', None,nColumnIndex
			, nElemSetID, value)

	def GetScalarAtNodeColumnV2(self, nColumnIndex=defaultNamedNotOptArg, listcount=pythoncom.Missing, nID=pythoncom.Missing, value=pythoncom.Missing):
		return self._ApplyTypes_(20353, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetScalarAtNodeColumnV2', None,nColumnIndex
			, listcount, nID, value)

	def GetScalarAtNodeSetV2(self, nColumnIndex=defaultNamedNotOptArg, nNodeSetID=defaultNamedNotOptArg, value=pythoncom.Missing):
		return self._ApplyTypes_(20364, 1, (3, 0), ((3, 1), (3, 1), (16396, 2)), 'GetScalarAtNodeSetV2', None,nColumnIndex
			, nNodeSetID, value)

	def GetValue(self, nID=defaultNamedNotOptArg, nColumnIndex=defaultNamedNotOptArg, pdVal=pythoncom.Missing):
		return self._ApplyTypes_(20026, 1, (3, 0), ((3, 1), (3, 1), (16389, 2)), 'GetValue', None,nID
			, nColumnIndex, pdVal)

	def GetVectorAtNodeColumnsV2(self, nColumnIndices=defaultNamedNotOptArg, listcount=pythoncom.Missing, nID=pythoncom.Missing, total=pythoncom.Missing
			, x=pythoncom.Missing, y=pythoncom.Missing, z=pythoncom.Missing):
		return self._ApplyTypes_(20357, 1, (3, 0), ((12, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetVectorAtNodeColumnsV2', None,nColumnIndices
			, listcount, nID, total, x, y
			, z)

	def GetVectorAtNodeSetV2(self, nColumnIndices=defaultNamedNotOptArg, nNodeSetID=defaultNamedNotOptArg, total=pythoncom.Missing, x=pythoncom.Missing
			, y=pythoncom.Missing, z=pythoncom.Missing):
		return self._ApplyTypes_(20366, 1, (3, 0), ((12, 1), (3, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetVectorAtNodeSetV2', None,nColumnIndices
			, nNodeSetID, total, x, y, z
			)

	def IsAPIColumn(self, nColumnIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), ((3, 1),),nColumnIndex
			)

	def IsPopulated(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def Next(self, nColumnIndex=defaultNamedNotOptArg, pnID=pythoncom.Missing, pdVal=pythoncom.Missing):
		return self._ApplyTypes_(20025, 1, (3, 0), ((3, 1), (16387, 2), (16389, 2)), 'Next', None,nColumnIndex
			, pnID, pdVal)

	def NextSet(self, nExistState=defaultNamedNotOptArg, nLocateOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20202, LCID, 1, (3, 0), ((3, 1), (3, 1)),nExistState
			, nLocateOption)

	def NextSetReset(self):
		return self._oleobj_.InvokeTypes(20201, LCID, 1, (3, 0), (),)

	def NextStudy(self, nExistState=defaultNamedNotOptArg, nLocateOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20341, LCID, 1, (3, 0), ((3, 1), (3, 1)),nExistState
			, nLocateOption)

	def NextStudyReset(self):
		return self._oleobj_.InvokeTypes(20340, LCID, 1, (3, 0), (),)

	def NextVectorResetV2(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20313, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextVectorV2(self, nSetID=defaultNamedNotOptArg, nExistState=defaultNamedNotOptArg, nLocateOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20314, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nSetID
			, nExistState, nLocateOption)

	def NonExistingUserVectorV2(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20369, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NumberOfColumns(self):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), (),)

	def NumberOfRows(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def NumberOfSets(self):
		return self._oleobj_.InvokeTypes(20200, LCID, 1, (3, 0), (),)

	def NumberOfStudies(self):
		return self._oleobj_.InvokeTypes(20339, LCID, 1, (3, 0), (),)

	def Populate(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def Reset(self):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), (),)

	def Save(self):
		return self._oleobj_.InvokeTypes(20336, LCID, 1, (3, 0), (),)

	def Save2(self, bAddToExistingData=defaultNamedNotOptArg, bDataAddedInRandomIDOrder=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20373, LCID, 1, (3, 0), ((11, 1), (11, 1)),bAddToExistingData
			, bDataAddedInRandomIDOrder)

	def SaveColumn(self, nColumnIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20335, LCID, 1, (3, 0), ((3, 1),),nColumnIndex
			)

	def SendToDataTable(self):
		return self._oleobj_.InvokeTypes(20046, LCID, 1, (3, 0), (),)

	def SetColumn(self, nColIndex=defaultNamedNotOptArg, nNumberOfRows=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg, dVals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20346, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nColIndex
			, nNumberOfRows, nIDs, dVals)

	def SetColumnComponents(self, nColumnIndex=defaultNamedNotOptArg, nNumComponents=defaultNamedNotOptArg, nComponentColumns=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20371, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),nColumnIndex
			, nNumComponents, nComponentColumns)

	def SetColumnComponents2(self, nColumnIndex=defaultNamedNotOptArg, nComponentType=defaultNamedNotOptArg, nNumComponents=defaultNamedNotOptArg, nComponentColumns=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20372, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),nColumnIndex
			, nComponentType, nNumComponents, nComponentColumns)

	def SetColumnGlobalPly(self, nColumnIndex=defaultNamedNotOptArg, nGlobalPlyID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), ((3, 1), (3, 1)),nColumnIndex
			, nGlobalPlyID)

	def SetColumnInfo(self, nColumnIndex=defaultNamedNotOptArg, nDataType=defaultNamedNotOptArg, nOutputType=defaultNamedNotOptArg, bCentroidTotal=defaultNamedNotOptArg
			, bNonlinear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20327, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1)),nColumnIndex
			, nDataType, nOutputType, bCentroidTotal, bNonlinear)

	def SetColumnInteger(self, nColumnIndex=defaultNamedNotOptArg, bIsInteger=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20333, LCID, 1, (3, 0), ((3, 1), (11, 1)),nColumnIndex
			, bIsInteger)

	def SetColumnTitle(self, nColumnIndex=defaultNamedNotOptArg, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20331, LCID, 1, (3, 0), ((3, 1), (8, 1)),nColumnIndex
			, title)

	def SetColumnVectorV2(self, nColumnIndex=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20332, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nColumnIndex
			, nSetID, nVectorID)

	def SetColumns(self, nNumberOfColumns=defaultNamedNotOptArg, nColIndices=defaultNamedNotOptArg, nNumberOfRows=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, dVals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20347, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (12, 1), (12, 1)),nNumberOfColumns
			, nColIndices, nNumberOfRows, nIDs, dVals)

	def SetColumnsComponent(self, nColumnIndex=defaultNamedNotOptArg, nNumComponents=defaultNamedNotOptArg, nComponentColumns=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20329, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),nColumnIndex
			, nNumComponents, nComponentColumns)

	def SetComplexOptions(self, bExpandComplex=defaultNamedNotOptArg, dComplexPhase=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20045, LCID, 1, (3, 0), ((11, 1), (5, 1)),bExpandComplex
			, dComplexPhase)

	def SetCreate(self, nSetID=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg, nStudyID=defaultNamedNotOptArg, nAnalysisProgram=defaultNamedNotOptArg
			, nAnalysisType=defaultNamedNotOptArg, dSetValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20337, LCID, 1, (3, 0), ((3, 1), (8, 1), (3, 1), (3, 1), (3, 1), (5, 1)),nSetID
			, sTitle, nStudyID, nAnalysisProgram, nAnalysisType, dSetValue
			)

	def SetElemWithCornerColumnsV2(self, nColumnIndices=defaultNamedNotOptArg, listcount=defaultNamedNotOptArg, maxcorner=defaultNamedNotOptArg, nID=defaultNamedNotOptArg
			, centroid=defaultNamedNotOptArg, c1=defaultNamedNotOptArg, c2=defaultNamedNotOptArg, c3=defaultNamedNotOptArg, c4=defaultNamedNotOptArg
			, c5=defaultNamedNotOptArg, c6=defaultNamedNotOptArg, c7=defaultNamedNotOptArg, c8=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20360, LCID, 1, (3, 0), ((12, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nColumnIndices
			, listcount, maxcorner, nID, centroid, c1
			, c2, c3, c4, c5, c6
			, c7, c8)

	def SetEngrShearStrain(self, bEngrShearStrain=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((11, 1),),bEngrShearStrain
			)

	def SetExists(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20203, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def SetHasVectorsInDB(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20208, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def SetInRow(self, nRowIndex=defaultNamedNotOptArg, nColumnIndex=defaultNamedNotOptArg, dVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nRowIndex
			, nColumnIndex, dVal)

	def SetInfo(self, nSetID=defaultNamedNotOptArg, pnAnalysisProgram=pythoncom.Missing, pnAnalysisType=pythoncom.Missing, pdSetValue=pythoncom.Missing):
		return self._ApplyTypes_(20204, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2), (16389, 2)), 'SetInfo', None,nSetID
			, pnAnalysisProgram, pnAnalysisType, pdSetValue)

	def SetLineTransform(self, nTransformTo=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20047, LCID, 1, (3, 0), ((3, 1), (3, 1)),nTransformTo
			, nCSysID)

	def SetLocation(self, nSetID=defaultNamedNotOptArg, pnSetLocation=pythoncom.Missing):
		return self._ApplyTypes_(20207, 1, (3, 0), ((3, 1), (16387, 2)), 'SetLocation', None,nSetID
			, pnSetLocation)

	def SetModel(self, nModelID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((20, 1),),nModelID
			)

	def SetMultipleInRow(self, nRowIndex=defaultNamedNotOptArg, nNumberOfColumns=defaultNamedNotOptArg, nColumnIndices=defaultNamedNotOptArg, dVals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nRowIndex
			, nNumberOfColumns, nColumnIndices, dVals)

	def SetNodalTransform(self, nTransformTo=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((3, 1), (3, 1)),nTransformTo
			, nCSysID)

	def SetNotes(self, nSetID=defaultNamedNotOptArg, sNotes=pythoncom.Missing):
		return self._ApplyTypes_(20206, 1, (3, 0), ((3, 1), (16392, 2)), 'SetNotes', None,nSetID
			, sNotes)

	def SetPlateTransform(self, nTransformTo=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg, nCSysAxis=defaultNamedNotOptArg, dVecX=defaultNamedNotOptArg
			, dVecY=defaultNamedNotOptArg, dVecZ=defaultNamedNotOptArg, dToleranceAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1), (5, 1)),nTransformTo
			, nCSysID, nCSysAxis, dVecX, dVecY, dVecZ
			, dToleranceAngle)

	def SetQuad4Orientation(self, nStress=defaultNamedNotOptArg, nStrain=defaultNamedNotOptArg, nForce=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nStress
			, nStrain, nForce)

	def SetQuad8Orientation(self, nStress=defaultNamedNotOptArg, nStrain=defaultNamedNotOptArg, nForce=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nStress
			, nStrain, nForce)

	def SetRevision(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20211, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def SetRow(self, nID=defaultNamedNotOptArg, dVals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20348, LCID, 1, (3, 0), ((3, 1), (12, 1)),nID
			, dVals)

	def SetRows(self, nNumberOfRows=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg, dVals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20349, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),nNumberOfRows
			, nIDs, dVals)

	def SetRowsAndColumnsByID(self, nEntitySetID=defaultNamedNotOptArg, nNumberOfColumns=defaultNamedNotOptArg, nColIndices=defaultNamedNotOptArg, dVals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20351, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nEntitySetID
			, nNumberOfColumns, nColIndices, dVals)

	def SetRowsByID(self, nEntitySetID=defaultNamedNotOptArg, dVals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20350, LCID, 1, (3, 0), ((3, 1), (12, 1)),nEntitySetID
			, dVals)

	def SetScalarAtBeamColumnsV2(self, nColumnIndices=defaultNamedNotOptArg, listcount=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, ValA=defaultNamedNotOptArg
			, ValB=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20362, LCID, 1, (3, 0), ((12, 1), (3, 1), (12, 1), (12, 1), (12, 1)),nColumnIndices
			, listcount, nID, ValA, ValB)

	def SetScalarAtElemColumnV2(self, nColumnIndex=defaultNamedNotOptArg, listcount=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20356, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nColumnIndex
			, listcount, nID, value)

	def SetScalarAtNodeColumnV2(self, nColumnIndex=defaultNamedNotOptArg, listcount=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20354, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),nColumnIndex
			, listcount, nID, value)

	def SetSolidOrientation(self, nIsotropic=defaultNamedNotOptArg, nAnisotropic=defaultNamedNotOptArg, nHyperelastic=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nIsotropic
			, nAnisotropic, nHyperelastic)

	def SetSolidTransform(self, nTransformTo=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1), (3, 1)),nTransformTo
			, nCSysID)

	def SetSubcase(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20210, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def SetTitle(self, nSetID=defaultNamedNotOptArg, sTitle=pythoncom.Missing):
		return self._ApplyTypes_(20205, 1, (3, 0), ((3, 1), (16392, 2)), 'SetTitle', None,nSetID
			, sTitle)

	def SetTri3Orientation(self, nStress=defaultNamedNotOptArg, nStrain=defaultNamedNotOptArg, nForce=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nStress
			, nStrain, nForce)

	def SetTri6Orientation(self, nStress=defaultNamedNotOptArg, nStrain=defaultNamedNotOptArg, nForce=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nStress
			, nStrain, nForce)

	def SetValue(self, nID=defaultNamedNotOptArg, nColumnIndex=defaultNamedNotOptArg, dVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nID
			, nColumnIndex, dVal)

	def SetVectorAtNodeColumnsV2(self, nColumnIndices=defaultNamedNotOptArg, listcount=defaultNamedNotOptArg, nID=defaultNamedNotOptArg, x=defaultNamedNotOptArg
			, y=defaultNamedNotOptArg, z=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20358, LCID, 1, (3, 0), ((12, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),nColumnIndices
			, listcount, nID, x, y, z
			)

	def Sets(self, nSetSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20209, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetSetID
			, bClear)

	def Sort(self, nColumnIndex=defaultNamedNotOptArg, bAscending=defaultNamedNotOptArg, bAbsoluteValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20363, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),nColumnIndex
			, bAscending, bAbsoluteValue)

	def StudyCreate(self, nStudyID=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg, nAnalysisProgram=defaultNamedNotOptArg, nAnalysisType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20338, LCID, 1, (3, 0), ((3, 1), (8, 1), (3, 1), (3, 1)),nStudyID
			, sTitle, nAnalysisProgram, nAnalysisType)

	def StudyExists(self, nStudyID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20342, LCID, 1, (3, 0), ((3, 1),),nStudyID
			)

	def StudyInfo(self, nStudyID=defaultNamedNotOptArg, pnAnalysisProgram=pythoncom.Missing, pnAnalysisType=pythoncom.Missing):
		return self._ApplyTypes_(20343, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2)), 'StudyInfo', None,nStudyID
			, pnAnalysisProgram, pnAnalysisType)

	def StudyNotes(self, nStudyID=defaultNamedNotOptArg, sNotes=pythoncom.Missing):
		return self._ApplyTypes_(20345, 1, (3, 0), ((3, 1), (16392, 2)), 'StudyNotes', None,nStudyID
			, sNotes)

	def StudyTitle(self, nStudyID=defaultNamedNotOptArg, sTitle=pythoncom.Missing):
		return self._ApplyTypes_(20344, 1, (3, 0), ((3, 1), (16392, 2)), 'StudyTitle', None,nStudyID
			, sTitle)

	def VectorComponentsV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, pnNumComponents=pythoncom.Missing, pnComponents=pythoncom.Missing):
		return self._ApplyTypes_(20318, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2)), 'VectorComponentsV2', None,nSetID
			, nVectorID, pnNumComponents, pnComponents)

	def VectorEntitiesV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20320, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),nSetID
			, nVectorID, nEntitySetID, bClear)

	def VectorExistsV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20315, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nVectorID)

	# Result is of type IResultsIDQuery
	def VectorID(self):
		ret = self._oleobj_.InvokeTypes(20375, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'VectorID', '{08AD5C35-28EC-4DD2-BC7E-EF2B94B624A2}')
		return ret

	def VectorInfoV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, pnDataType=pythoncom.Missing, pnOutputType=pythoncom.Missing
			, pbCentroidTotal=pythoncom.Missing, pbNonlinear=pythoncom.Missing, pnCompDir=pythoncom.Missing):
		return self._ApplyTypes_(20316, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2), (16395, 2), (16395, 2), (16387, 2)), 'VectorInfoV2', None,nSetID
			, nVectorID, pnDataType, pnOutputType, pbCentroidTotal, pbNonlinear
			, pnCompDir)

	def VectorLocationV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, pnVectorLocation=pythoncom.Missing):
		return self._ApplyTypes_(20319, 1, (3, 0), ((3, 1), (3, 1), (16387, 2)), 'VectorLocationV2', None,nSetID
			, nVectorID, pnVectorLocation)

	def VectorTitleV2(self, nSetID=defaultNamedNotOptArg, nVectorID=defaultNamedNotOptArg, sTitle=pythoncom.Missing):
		return self._ApplyTypes_(20317, 1, (3, 0), ((3, 1), (3, 1), (16392, 2)), 'VectorTitleV2', None,nSetID
			, nVectorID, sTitle)

	def VectorTitlesV2(self, nSetID=defaultNamedNotOptArg, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg
			, Count=pythoncom.Missing, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(20352, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'VectorTitlesV2', None,nSetID
			, bIncludeID, minID, maxID, Count, listID
			, listTITLE)

	def VectorsV2(self, nSetID=defaultNamedNotOptArg, nVectorSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20321, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nSetID
			, nVectorSetID, bClear)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"AutoPopulate": (10001, 2, (11, 0), (), "AutoPopulate", None),
		"NextSetStartID": (10002, 2, (3, 0), (), "NextSetStartID", None),
		"NextStudyStartID": (10004, 2, (3, 0), (), "NextStudyStartID", None),
		"NextVectorStartID": (10003, 2, (3, 0), (), "NextVectorStartID", None),
		"ValueForNonExisting": (10000, 2, (5, 0), (), "ValueForNonExisting", None),
	}
	_prop_map_put_ = {
		"AutoPopulate" : ((10001, LCID, 4, 0),()),
		"NextSetStartID" : ((10002, LCID, 4, 0),()),
		"NextStudyStartID" : ((10004, LCID, 4, 0),()),
		"NextVectorStartID" : ((10003, LCID, 4, 0),()),
		"ValueForNonExisting" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IResultsIDQuery(DispatchBaseClass):
	CLSID = IID('{08AD5C35-28EC-4DD2-BC7E-EF2B94B624A2}')
	coclass_clsid = IID('{08AD5C37-28EC-4DD2-BC7E-EF2B94B624A2}')

	def Complex(self, enRVComplex=defaultNamedNotOptArg, nRVOriginalVector=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10015, LCID, 1, (3, 0), ((3, 1), (3, 1)),enRVComplex
			, nRVOriginalVector)

	def Elemental(self, enRVResult=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10014, LCID, 1, (3, 0), ((3, 1),),enRVResult
			)

	def Find(self, nRVOutSetID=defaultNamedNotOptArg, sRVTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10001, LCID, 1, (3, 0), ((3, 1), (8, 1)),nRVOutSetID
			, sRVTitle)

	def Laminate(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, nRVPly=defaultNamedNotOptArg, enRVLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10008, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),enRVResult
			, enRVType, nRVPly, enRVLoc)

	def LaminateGlobalPly(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, nRVGlobalPly=defaultNamedNotOptArg, enRVLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10009, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),enRVResult
			, enRVType, nRVGlobalPly, enRVLoc)

	def LaminateGlobalPlyWithCorners(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, nRVGlobalPly=defaultNamedNotOptArg, VectorIDs=pythoncom.Missing):
		return self._ApplyTypes_(10109, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16396, 2)), 'LaminateGlobalPlyWithCorners', None,enRVResult
			, enRVType, nRVGlobalPly, VectorIDs)

	def LaminateSolid(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, nRVPly=defaultNamedNotOptArg, enRVPlyLoc=defaultNamedNotOptArg
			, enRVLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10012, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),enRVResult
			, enRVType, nRVPly, enRVPlyLoc, enRVLoc)

	def LaminateSolidGlobalPly(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, nRVGlobalPly=defaultNamedNotOptArg, enRVPlyLoc=defaultNamedNotOptArg
			, enRVLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10013, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),enRVResult
			, enRVType, nRVGlobalPly, enRVPlyLoc, enRVLoc)

	def LaminateSolidGlobalPlyWithCorners(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, nRVGlobalPly=defaultNamedNotOptArg, enRVPlyLoc=defaultNamedNotOptArg
			, VectorIDs=pythoncom.Missing):
		return self._ApplyTypes_(10113, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (16396, 2)), 'LaminateSolidGlobalPlyWithCorners', None,enRVResult
			, enRVType, nRVGlobalPly, enRVPlyLoc, VectorIDs)

	def LaminateSolidWithCorners(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, nRVPly=defaultNamedNotOptArg, enRVPlyLoc=defaultNamedNotOptArg
			, VectorIDs=pythoncom.Missing):
		return self._ApplyTypes_(10112, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (16396, 2)), 'LaminateSolidWithCorners', None,enRVResult
			, enRVType, nRVPly, enRVPlyLoc, VectorIDs)

	def LaminateWithCorners(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, nRVPly=defaultNamedNotOptArg, VectorIDs=pythoncom.Missing):
		return self._ApplyTypes_(10108, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16396, 2)), 'LaminateWithCorners', None,enRVResult
			, enRVType, nRVPly, VectorIDs)

	def Line(self, enRVElemType=defaultNamedNotOptArg, enRVResult=defaultNamedNotOptArg, enRVEnd=defaultNamedNotOptArg, enRVLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10004, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),enRVElemType
			, enRVResult, enRVEnd, enRVLoc)

	def LineAllLocations(self, enRVElemType=defaultNamedNotOptArg, enRVResult=defaultNamedNotOptArg, VectorIDs=pythoncom.Missing):
		return self._ApplyTypes_(10104, 1, (3, 0), ((3, 1), (3, 1), (16396, 2)), 'LineAllLocations', None,enRVElemType
			, enRVResult, VectorIDs)

	def LineOther(self, enRVResult=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10005, LCID, 1, (3, 0), ((3, 1),),enRVResult
			)

	def Nodal(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10002, LCID, 1, (3, 0), ((3, 1), (3, 1)),enRVResult
			, enRVType)

	def NodalOther(self, enRVResult=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10003, LCID, 1, (3, 0), ((3, 1),),enRVResult
			)

	def NodalWithComponents(self, enRVResult=defaultNamedNotOptArg, VectorIDs=pythoncom.Missing):
		return self._ApplyTypes_(10102, 1, (3, 0), ((3, 1), (16396, 2)), 'NodalWithComponents', None,enRVResult
			, VectorIDs)

	def Plate(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, enRVPly=defaultNamedNotOptArg, enRVLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10006, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),enRVResult
			, enRVType, enRVPly, enRVLoc)

	def PlateOther(self, enRVResult=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10007, LCID, 1, (3, 0), ((3, 1),),enRVResult
			)

	def PlateWithCorners(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, enRVPly=defaultNamedNotOptArg, VectorIDs=pythoncom.Missing):
		return self._ApplyTypes_(10106, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16396, 2)), 'PlateWithCorners', None,enRVResult
			, enRVType, enRVPly, VectorIDs)

	def Solid(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, enRVLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10010, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),enRVResult
			, enRVType, enRVLoc)

	def SolidOther(self, enRVResult=defaultNamedNotOptArg, enRVLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10011, LCID, 1, (3, 0), ((3, 1), (3, 1)),enRVResult
			, enRVLoc)

	def SolidWithCorners(self, enRVResult=defaultNamedNotOptArg, enRVType=defaultNamedNotOptArg, VectorIDs=pythoncom.Missing):
		return self._ApplyTypes_(10110, 1, (3, 0), ((3, 1), (3, 1), (16396, 2)), 'SolidWithCorners', None,enRVResult
			, enRVType, VectorIDs)

	def User(self, nRVUserVector=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10016, LCID, 1, (3, 0), ((3, 1),),nRVUserVector
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRotationalSpeedDefinition(DispatchBaseClass):
	CLSID = IID('{A3C30F9F-9764-4171-8387-D36E2F1B0FD2}')
	coclass_clsid = IID('{A3C30FA1-9764-4171-8387-D36E2F1B0FD2}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"DW": (10007, 2, (5, 0), (), "DW", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"NDW": (10008, 2, (3, 0), (), "NDW", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"W1": (10006, 2, (5, 0), (), "W1", None),
		"WID": (10005, 2, (3, 0), (), "WID", None),
		"title": (10003, 2, (8, 0), (), "title", None),
		"type": (10004, 2, (3, 0), (), "type", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"DW" : ((10007, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"NDW" : ((10008, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"W1" : ((10006, LCID, 4, 0),()),
		"WID" : ((10005, LCID, 4, 0),()),
		"title" : ((10003, LCID, 4, 0),()),
		"type" : ((10004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISEReference(DispatchBaseClass):
	CLSID = IID('{BCF73006-FAAA-4648-9ABE-A4DF900D45BF}')
	coclass_clsid = IID('{BCF73008-FAAA-4648-9ABE-A4DF900D45BF}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"ASMFile": (10003, 2, (8, 0), (), "ASMFile", None),
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AssignForm": (10009, 2, (3, 0), (), "AssignForm", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"LoadsMatrix": (10008, 2, (11, 0), (), "LoadsMatrix", None),
		"Mass": (10005, 2, (11, 0), (), "Mass", None),
		"ReferenceFile": (10000, 2, (8, 0), (), "ReferenceFile", None),
		"ReferenceID": (10002, 2, (3, 0), (), "ReferenceID", None),
		"ReferenceType": (10001, 2, (3, 0), (), "ReferenceType", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"Stiffness": (10004, 2, (11, 0), (), "Stiffness", None),
		"StructuralDaming": (10007, 2, (11, 0), (), "StructuralDaming", None),
		"ViscousDamping": (10006, 2, (11, 0), (), "ViscousDamping", None),
	}
	_prop_map_put_ = {
		"ASMFile" : ((10003, LCID, 4, 0),()),
		"Active" : ((17002, LCID, 4, 0),()),
		"AssignForm" : ((10009, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"LoadsMatrix" : ((10008, LCID, 4, 0),()),
		"Mass" : ((10005, LCID, 4, 0),()),
		"ReferenceFile" : ((10000, LCID, 4, 0),()),
		"ReferenceID" : ((10002, LCID, 4, 0),()),
		"ReferenceType" : ((10001, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"Stiffness" : ((10004, LCID, 4, 0),()),
		"StructuralDaming" : ((10007, LCID, 4, 0),()),
		"ViscousDamping" : ((10006, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IScratch(DispatchBaseClass):
	CLSID = IID('{98D6BD3C-3DDD-4457-B6AD-15D6A1F3CE51}')
	coclass_clsid = IID('{98D6BD3E-3DDD-4457-B6AD-15D6A1F3CE51}')

	def Debug(self):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), (),)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def Exist(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), (),)

	def Prev(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	# The method SetbData is actually a property, but must be used as a method to correctly pass the arguments
	def SetbData(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetnData is actually a property, but must be used as a method to correctly pass the arguments
	def SetnData(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetpData is actually a property, but must be used as a method to correctly pass the arguments
	def SetpData(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (16408, 1)),nVectorIndex
			, arg1)

	# The method SetrData is actually a property, but must be used as a method to correctly pass the arguments
	def SetrData(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method bData is actually a property, but must be used as a method to correctly pass the arguments
	def bData(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def clear(self):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), (),)

	# The method nData is actually a property, but must be used as a method to correctly pass the arguments
	def nData(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method pData is actually a property, but must be used as a method to correctly pass the arguments
	def pData(self, nVectorIndex=defaultNamedNotOptArg):
		return self._ApplyTypes_(18003, 2, (16408, 0), ((3, 1),), 'pData', None,nVectorIndex
			)

	# The method rData is actually a property, but must be used as a method to correctly pass the arguments
	def rData(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISelector(DispatchBaseClass):
	CLSID = IID('{8A3498F7-A383-419E-8117-86A0305175FF}')
	coclass_clsid = IID('{8A3498F9-A383-419E-8117-86A0305175FF}')

	def Add(self, entityTYPE=defaultNamedNotOptArg, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, nID)

	def AddSet(self, entityTYPE=defaultNamedNotOptArg, nSetD=defaultNamedNotOptArg, bUpdateDataTable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),entityTYPE
			, nSetD, bUpdateDataTable)

	def ClearAll(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	def Copy(self):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), (),)

	def Count(self, entityTYPE=defaultNamedNotOptArg, nSelected=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16387, 2)), 'Count', None,entityTYPE
			, nSelected)

	# Result is of type ISet
	def GetSelected(self, entityTYPE=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(20015, LCID, 1, (9, 0), ((3, 1),),entityTYPE
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSelected', '{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
		return ret

	def GetSelectedID(self, entityTYPE=defaultNamedNotOptArg, nNumSelected=pythoncom.Missing, pnSelectedID=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'GetSelectedID', None,entityTYPE
			, nNumSelected, pnSelectedID)

	def Grow(self):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), (),)

	def LoadGroup(self, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1),),groupID
			)

	def Paste(self, bShowDlg=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((11, 1),),bShowDlg
			)

	def SaveGroup(self, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1),),groupID
			)

	def SelectBox(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def SelectCircle(self):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), (),)

	def SelectFreehand(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def SelectPolygon(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def Show(self, bShowAll=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((11, 1),),bShowAll
			)

	def Shrink(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def Tooltips(self, bOn=defaultNamedNotOptArg, bIncludeLayersAndGroups=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((11, 1), (11, 1)),bOn
			, bIncludeLayersAndGroups)

	def UpdateDataTable(self):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), (),)

	def clear(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	_prop_map_get_ = {
		"Active": (10005, 2, (11, 0), (), "Active", None),
		"AddMode": (10001, 2, (11, 0), (), "AddMode", None),
		"DrillMode": (10002, 2, (3, 0), (), "DrillMode", None),
		"MultipleMode": (10000, 2, (11, 0), (), "MultipleMode", None),
		"RelatedMode": (10003, 2, (11, 0), (), "RelatedMode", None),
		"SelectEntity": (10004, 2, (3, 0), (), "SelectEntity", None),
		"ShowInModelInfo": (10006, 2, (11, 0), (), "ShowInModelInfo", None),
	}
	_prop_map_put_ = {
		"Active" : ((10005, LCID, 4, 0),()),
		"AddMode" : ((10001, LCID, 4, 0),()),
		"DrillMode" : ((10002, LCID, 4, 0),()),
		"MultipleMode" : ((10000, LCID, 4, 0),()),
		"RelatedMode" : ((10003, LCID, 4, 0),()),
		"SelectEntity" : ((10004, LCID, 4, 0),()),
		"ShowInModelInfo" : ((10006, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() method - allow len(ob) to provide this
	def __len__(self, entityTYPE=defaultNamedNotOptArg, nSelected=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16387, 2)), '__len__', None,entityTYPE
			, nSelected)

	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISet(DispatchBaseClass):
	CLSID = IID('{FC77C4F9-EC92-11D4-9449-001083FFF11C}')
	coclass_clsid = IID('{FC77C4FB-EC92-11D4-9449-001083FFF11C}')

	def Add(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def AddAll(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	def AddAllAnalysisCases(self, nAnalysisSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20097, LCID, 1, (3, 0), ((3, 1),),nAnalysisSetID
			)

	def AddAllColor(self, entityTYPE=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, nColor=defaultNamedNotOptArg, nColorMatch=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20056, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),entityTYPE
			, nSetID, nColor, nColorMatch)

	def AddAllConnectedElements(self):
		return self._oleobj_.InvokeTypes(20081, LCID, 1, (3, 0), (),)

	def AddAllExcept(self, entityTYPE=defaultNamedNotOptArg, exceptSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, exceptSET)

	def AddAllInRange(self, entityTYPE=defaultNamedNotOptArg, startID=defaultNamedNotOptArg, stopID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20070, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, startID, stopID)

	def AddAllInRangeInSetV2(self, entityTYPE=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, startID=defaultNamedNotOptArg, stopID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20105, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),entityTYPE
			, nSetID, startID, stopID)

	def AddAllSavedSetIDs(self):
		return self._oleobj_.InvokeTypes(20072, LCID, 1, (3, 0), (),)

	def AddAllTitleV2(self, entityTYPE=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, sFind=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20104, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),entityTYPE
			, nSetID, sFind)

	def AddAroundPlane(self, entityTYPE=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vVec=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg
			, dMin=defaultNamedNotOptArg, vdMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20052, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (3, 1), (5, 1), (5, 1)),entityTYPE
			, vBase, vVec, nMode, dMin, vdMax
			)

	def AddAroundPlane2(self, entityTYPE=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vVec=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg
			, dMin=defaultNamedNotOptArg, vdMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20076, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (3, 1), (5, 1), (5, 1)),entityTYPE
			, vBase, vVec, nMode, dMin, vdMax
			)

	def AddAroundPoint(self, entityTYPE=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, dMin=defaultNamedNotOptArg
			, vdMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20050, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (5, 1), (5, 1)),entityTYPE
			, vBase, nMode, dMin, vdMax)

	def AddAroundPoint2(self, entityTYPE=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, dMin=defaultNamedNotOptArg
			, vdMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20074, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (5, 1), (5, 1)),entityTYPE
			, vBase, nMode, dMin, vdMax)

	def AddAroundVector(self, entityTYPE=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vVec=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg
			, dMin=defaultNamedNotOptArg, vdMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20051, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (3, 1), (5, 1), (5, 1)),entityTYPE
			, vBase, vVec, nMode, dMin, vdMax
			)

	def AddAroundVector2(self, entityTYPE=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vVec=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg
			, dMin=defaultNamedNotOptArg, vdMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20075, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (3, 1), (5, 1), (5, 1)),entityTYPE
			, vBase, vVec, nMode, dMin, vdMax
			)

	def AddArray(self, numID=defaultNamedNotOptArg, arrayID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1), (12, 1)),numID
			, arrayID)

	def AddBySize(self, entityTYPE=defaultNamedNotOptArg, nLimitSetID=defaultNamedNotOptArg, nMethod=defaultNamedNotOptArg, dMinVal=defaultNamedNotOptArg
			, dMaxVal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20094, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1)),entityTYPE
			, nLimitSetID, nMethod, dMinVal, dMaxVal)

	def AddCommon(self, set1=defaultNamedNotOptArg, set2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (3, 1)),set1
			, set2)

	def AddComplexOutputVectorsV2(self, nFromOutputSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20101, LCID, 1, (3, 0), ((3, 1),),nFromOutputSetID
			)

	def AddComponentOutputVectorsV2(self, nFromOutputSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20099, LCID, 1, (3, 0), ((3, 1),),nFromOutputSetID
			)

	def AddConnectedElements(self):
		return self._oleobj_.InvokeTypes(20088, LCID, 1, (3, 0), (),)

	def AddConnectedFillets(self):
		return self._oleobj_.InvokeTypes(20082, LCID, 1, (3, 0), (),)

	def AddConstrained(self, bInAnySet=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bExpandBC=defaultNamedNotOptArg, enOnType=defaultNamedNotOptArg
			, enMatch=defaultNamedNotOptArg, bDOF1=defaultNamedNotOptArg, bDOF2=defaultNamedNotOptArg, bDOF3=defaultNamedNotOptArg, bDOF4=defaultNamedNotOptArg
			, bDOF5=defaultNamedNotOptArg, bDOF6=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20084, LCID, 1, (3, 0), ((11, 1), (3, 1), (11, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),bInAnySet
			, nSetID, bExpandBC, enOnType, enMatch, bDOF1
			, bDOF2, bDOF3, bDOF4, bDOF5, bDOF6
			)

	def AddCoordinate(self, entityTYPE=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg, vbXYZ=defaultNamedNotOptArg, vnMode=defaultNamedNotOptArg
			, vdMin=defaultNamedNotOptArg, vdMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20049, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),entityTYPE
			, nCSysID, vbXYZ, vnMode, vdMin, vdMax
			)

	def AddCoordinate2(self, entityTYPE=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg, vbXYZ=defaultNamedNotOptArg, vnMode=defaultNamedNotOptArg
			, vdMin=defaultNamedNotOptArg, vdMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20073, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),entityTYPE
			, nCSysID, vbXYZ, vnMode, vdMin, vdMax
			)

	def AddEntitiesOnLayer(self, laySET=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1), (3, 1)),laySET
			, entityTYPE)

	def AddGroup(self, entityTYPE=defaultNamedNotOptArg, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, groupID)

	def AddLoaded(self, bInAnySet=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bExpandLoad=defaultNamedNotOptArg, enLoadType=defaultNamedNotOptArg
			, enRangeOpt=defaultNamedNotOptArg, dMin=defaultNamedNotOptArg, dMax=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20085, LCID, 1, (3, 0), ((11, 1), (3, 1), (11, 1), (3, 1), (3, 1), (5, 1), (5, 1)),bInAnySet
			, nSetID, bExpandLoad, enLoadType, enRangeOpt, dMin
			, dMax)

	def AddMidsideNodes(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20057, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def AddNewRemoveCommonSet(self, addID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20060, LCID, 1, (3, 0), ((3, 1),),addID
			)

	def AddNodesOnFreeEdges(self, elemSetID=defaultNamedNotOptArg, bParabolicEdges=defaultNamedNotOptArg, bLineElem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20107, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),elemSetID
			, bParabolicEdges, bLineElem)

	def AddNodesOnFreeFaces(self, elemSetID=defaultNamedNotOptArg, bParabolicEdges=defaultNamedNotOptArg, bPlaneElem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20108, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),elemSetID
			, bParabolicEdges, bPlaneElem)

	def AddNodesOnGeometry(self, geomTYPE=defaultNamedNotOptArg, geomID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg, bFullTree=defaultNamedNotOptArg
			, bBoundaryOnly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20053, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),geomTYPE
			, geomID, bClear, bFullTree, bBoundaryOnly)

	def AddRange(self, startID=defaultNamedNotOptArg, stopID=defaultNamedNotOptArg, increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),startID
			, stopID, increment)

	def AddRule(self, nID=defaultNamedNotOptArg, ruleID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((3, 1), (3, 1)),nID
			, ruleID)

	def AddSet(self, addID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1),),addID
			)

	def AddSetFromModel(self, addID=defaultNamedNotOptArg, nModelID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20106, LCID, 1, (3, 0), ((3, 1), (20, 1), (11, 1)),addID
			, nModelID, bClear)

	def AddSetRule(self, addID=defaultNamedNotOptArg, ruleID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((3, 1), (3, 1)),addID
			, ruleID)

	def AddSetToSavedSet(self, nSavedID=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21012, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSavedID
			, entityTYPE)

	def AddSimilarOutputVectorsV2(self, nFromOutputSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20100, LCID, 1, (3, 0), ((3, 1),),nFromOutputSetID
			)

	def AddSolidElementsAlongVector(self, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, elemSET=defaultNamedNotOptArg, bRequireIntersect=defaultNamedNotOptArg
			, bInfiniteVector=defaultNamedNotOptArg, bDirectionalVector=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20079, LCID, 1, (3, 0), ((12, 1), (12, 1), (3, 1), (11, 1), (11, 1), (11, 1)),p1
			, p2, elemSET, bRequireIntersect, bInfiniteVector, bDirectionalVector
			)

	def AddTangentSurfaces(self, dTol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20083, LCID, 1, (3, 0), ((5, 1),),dTol
			)

	def AddToSavedSet(self, nSavedID=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21011, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nSavedID
			, entityTYPE, entID)

	def AddVisible(self, nVuID=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, bUseViewDrawEntityOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20080, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nVuID
			, entityTYPE, bUseViewDrawEntityOption)

	def ConvertToAllCurves(self):
		return self._oleobj_.InvokeTypes(20042, LCID, 1, (3, 0), (),)

	def ConvertToAllSurfaces(self):
		return self._oleobj_.InvokeTypes(20038, LCID, 1, (3, 0), (),)

	def ConvertToBoundarySurfaces(self):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), (),)

	def ConvertToBoundarySurfacesOnly(self):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), (),)

	def ConvertToCombinedCurves(self):
		return self._oleobj_.InvokeTypes(20043, LCID, 1, (3, 0), (),)

	def ConvertToCombinedCurvesOnly(self):
		return self._oleobj_.InvokeTypes(20044, LCID, 1, (3, 0), (),)

	def ConvertToInternalCurves(self):
		return self._oleobj_.InvokeTypes(20045, LCID, 1, (3, 0), (),)

	def ConvertToInternalSurfaces(self):
		return self._oleobj_.InvokeTypes(20041, LCID, 1, (3, 0), (),)

	def ConvertToSlavedMasterSurfaceSet(self):
		return self._oleobj_.InvokeTypes(20113, LCID, 1, (3, 0), (),)

	def Copy(self, origID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1),),origID
			)

	def CopyToClipboard(self, bAsList=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((11, 1),),bAsList
			)

	def Count(self):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), (),)

	def CountCommon(self, set1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20061, LCID, 1, (3, 0), ((3, 1),),set1
			)

	def CountNotCommon(self, set1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20062, LCID, 1, (3, 0), ((3, 1),),set1
			)

	def CountSavedSets(self, pnAllSets=pythoncom.Missing):
		return self._ApplyTypes_(21010, 1, (3, 0), ((16387, 2),), 'CountSavedSets', None,pnAllSets
			)

	def Debug(self):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), (),)

	def DeleteAll(self):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), (),)

	def DeleteAllSavedSets(self):
		return self._oleobj_.InvokeTypes(21005, LCID, 1, (3, 0), (),)

	def DeleteOtherSavedSets(self):
		return self._oleobj_.InvokeTypes(21006, LCID, 1, (3, 0), (),)

	def DeleteSavedSet(self, nSavedID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21004, LCID, 1, (3, 0), ((3, 1),),nSavedID
			)

	def EmptyBlock(self, nStartID=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, nFirstEmptyID=pythoncom.Missing):
		return self._ApplyTypes_(20068, 1, (3, 0), ((3, 1), (3, 1), (16387, 2)), 'EmptyBlock', None,nStartID
			, nCount, nFirstEmptyID)

	def EmptySavedSet(self):
		return self._oleobj_.InvokeTypes(21009, LCID, 1, (3, 0), (),)

	def First(self):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), (),)

	def GetAllSavedSets(self):
		return self._oleobj_.InvokeTypes(21002, LCID, 1, (3, 0), (),)

	def GetArray(self, numID=pythoncom.Missing, arrayID=pythoncom.Missing):
		return self._ApplyTypes_(20025, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetArray', None,numID
			, arrayID)

	def GetSavedSet(self, nSavedID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21001, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSavedID
			, bClear)

	def GetSavedSetType(self, nSavedID=defaultNamedNotOptArg, pnDataType=pythoncom.Missing):
		return self._ApplyTypes_(21015, 1, (3, 0), ((3, 1), (16387, 2)), 'GetSavedSetType', None,nSavedID
			, pnDataType)

	def HasCommon(self, set1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20047, LCID, 1, (3, 0), ((3, 1),),set1
			)

	def HasMultiple(self):
		return self._oleobj_.InvokeTypes(20112, LCID, 1, (3, 0), (),)

	def HasNotCommon(self, set1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20063, LCID, 1, (3, 0), ((3, 1),),set1
			)

	def HasOne(self):
		return self._oleobj_.InvokeTypes(20111, LCID, 1, (3, 0), (),)

	def IndexInSet(self, entID=defaultNamedNotOptArg, index=pythoncom.Missing):
		return self._ApplyTypes_(20095, 1, (3, 0), ((3, 1), (16387, 2)), 'IndexInSet', None,entID
			, index)

	def IsAdded(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def IsArrayAdded(self, numID=defaultNamedNotOptArg, arrayID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20046, LCID, 1, (3, 0), ((3, 1), (12, 1)),numID
			, arrayID)

	def IsEmpty(self):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), (),)

	def IsIdenticalSet(self, set1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20109, LCID, 1, (3, 0), ((3, 1),),set1
			)

	def IsNotEmpty(self):
		return self._oleobj_.InvokeTypes(20110, LCID, 1, (3, 0), (),)

	def IsSetAdded(self, set1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), ((3, 1),),set1
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), (),)

	def Match(self, otherID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((3, 1),),otherID
			)

	def Next(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def NextAfter(self, nStartID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20064, LCID, 1, (3, 0), ((3, 1),),nStartID
			)

	def NextEmptyAfter(self, nStartID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20069, LCID, 1, (3, 0), ((3, 1),),nStartID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), (),)

	def NextSavedSet(self):
		return self._oleobj_.InvokeTypes(21008, LCID, 1, (3, 0), (),)

	def Prev(self):
		return self._oleobj_.InvokeTypes(20065, LCID, 1, (3, 0), (),)

	def PrevBefore(self, nStartID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20066, LCID, 1, (3, 0), ((3, 1),),nStartID
			)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(20067, LCID, 1, (3, 0), (),)

	def PutSavedSet(self, nPutID=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, nSavedID=pythoncom.Missing):
		return self._ApplyTypes_(21003, 1, (3, 0), ((3, 1), (3, 1), (16387, 2)), 'PutSavedSet', None,nPutID
			, entityTYPE, nSavedID)

	def Reload(self, oldID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),oldID
			)

	def Reload2(self, oldID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20071, LCID, 1, (3, 0), ((3, 1),),oldID
			)

	def Remove(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def RemoveArray(self, numID=defaultNamedNotOptArg, arrayID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20048, LCID, 1, (3, 0), ((3, 1), (12, 1)),numID
			, arrayID)

	def RemoveFromSavedSet(self, nSavedID=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21013, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nSavedID
			, entityTYPE, entID)

	def RemoveGroup(self, entityTYPE=defaultNamedNotOptArg, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, groupID)

	def RemoveInternalCurves(self):
		return self._oleobj_.InvokeTypes(20058, LCID, 1, (3, 0), (),)

	def RemoveNotCommon(self, set1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), ((3, 1),),set1
			)

	def RemoveNotCommonToGroup(self, entityTYPE=defaultNamedNotOptArg, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20034, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, groupID)

	def RemoveNotVisible(self, nVuID=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, bUseViewDrawEntityOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20096, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nVuID
			, entityTYPE, bUseViewDrawEntityOption)

	def RemoveRange(self, startID=defaultNamedNotOptArg, stopID=defaultNamedNotOptArg, increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),startID
			, stopID, increment)

	def RemoveRule(self, nID=defaultNamedNotOptArg, ruleID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20086, LCID, 1, (3, 0), ((3, 1), (3, 1)),nID
			, ruleID)

	def RemoveSet(self, addID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1),),addID
			)

	def RemoveSetFromSavedSet(self, nSavedID=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21014, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSavedID
			, entityTYPE)

	def RemoveSetRule(self, removeID=defaultNamedNotOptArg, ruleID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20087, LCID, 1, (3, 0), ((3, 1), (3, 1)),removeID
			, ruleID)

	def Reset(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def ResetSavedSet(self):
		return self._oleobj_.InvokeTypes(21007, LCID, 1, (3, 0), (),)

	def Select(self, entityTYPE=defaultNamedNotOptArg, clear=defaultNamedNotOptArg, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (11, 1), (8, 1)),entityTYPE
			, clear, title)

	def SelectID(self, entityTYPE=defaultNamedNotOptArg, title=defaultNamedNotOptArg, selID=pythoncom.Missing):
		return self._ApplyTypes_(20014, 1, (3, 0), ((3, 1), (8, 1), (16387, 2)), 'SelectID', None,entityTYPE
			, title, selID)

	def SelectIDInSetV2(self, entityTYPE=defaultNamedNotOptArg, title=defaultNamedNotOptArg, nInSetID=defaultNamedNotOptArg, selID=pythoncom.Missing):
		return self._ApplyTypes_(20102, 1, (3, 0), ((3, 1), (8, 1), (3, 1), (16387, 2)), 'SelectIDInSetV2', None,entityTYPE
			, title, nInSetID, selID)

	def SelectIDWithNew(self, entityTYPE=defaultNamedNotOptArg, title=defaultNamedNotOptArg, selID=pythoncom.Missing):
		return self._ApplyTypes_(20092, 1, (3, 0), ((3, 1), (8, 1), (16387, 2)), 'SelectIDWithNew', None,entityTYPE
			, title, selID)

	def SelectList(self, nNumEntity=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20054, LCID, 1, (3, 0), ((3, 1), (3, 1)),nNumEntity
			, entityTYPE)

	def SelectMultiIDV2(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20103, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),entityTYPE
			, entitySET, title)

	def SelectOutputVectorIDV2(self, title=defaultNamedNotOptArg, outputSetID=defaultNamedNotOptArg, limitOutputType=defaultNamedNotOptArg, limitComplex=defaultNamedNotOptArg
			, limitToEntity=defaultNamedNotOptArg, allowCorner=defaultNamedNotOptArg, selID=pythoncom.Missing):
		return self._ApplyTypes_(20098, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'SelectOutputVectorIDV2', None,title
			, outputSetID, limitOutputType, limitComplex, limitToEntity, allowCorner
			, selID)

	def SetDeveloperID(self, DeveloperID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21000, LCID, 1, (3, 0), ((3, 1),),DeveloperID
			)

	def Show(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20077, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	def ShowAutoscale(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20078, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	def clear(self):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"CurrentID": (10002, 2, (3, 0), (), "CurrentID", None),
		"ID": (10000, 2, (3, 0), (), "ID", None),
		"Save": (10001, 2, (11, 0), (), "Save", None),
	}
	_prop_map_put_ = {
		"CurrentID" : ((10002, LCID, 4, 0),()),
		"ID" : ((10000, LCID, 4, 0),()),
		"Save" : ((10001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() method - allow len(ob) to provide this
	def __len__(self):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), (),)

	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISolid(DispatchBaseClass):
	CLSID = IID('{28BCBA84-0D7F-11D5-9470-001083FFF11C}')
	coclass_clsid = IID('{28BCBA86-0D7F-11D5-9470-001083FFF11C}')

	def BoundingBox(self, box=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((16396, 2),), 'BoundingBox', None,box
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Curves(self, nCombinedMode=defaultNamedNotOptArg, numCurves=pythoncom.Missing, curveID=pythoncom.Missing):
		return self._ApplyTypes_(20000, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'Curves', None,nCombinedMode
			, numCurves, curveID)

	def CurvesAsSet(self, nCombinedMode=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nCombinedMode
			, nSetID, bClear)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1),),ID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Elements(self, numElems=pythoncom.Missing, elemID=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((16387, 2), (16396, 2)), 'Elements', None,numElems
			, elemID)

	def ElementsAsSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def ElementsAsSet2(self, bInSolid=defaultNamedNotOptArg, bOnSurfaces=defaultNamedNotOptArg, bOnCurves=defaultNamedNotOptArg, bOnPoints=defaultNamedNotOptArg
			, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (11, 1)),bInSolid
			, bOnSurfaces, bOnCurves, bOnPoints, nSetID, bClear
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Export(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def Facets(self, numFacets=pythoncom.Missing, xyzFacet=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((16387, 2), (16396, 2)), 'Facets', None,numFacets
			, xyzFacet)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def FreeCurvesAsSet(self, nCombinedMode=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nCombinedMode
			, nSetID, bClear)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def InitMeshAttributes(self, nPropID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1),),nPropID
			)

	def Inside(self, vXYZ=defaultNamedNotOptArg, nInsideCode=pythoncom.Missing):
		return self._ApplyTypes_(20025, 1, (3, 0), ((12, 1), (16387, 2)), 'Inside', None,vXYZ
			, nInsideCode)

	def IsAllFacet(self):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), (),)

	def IsFacet(self):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), (),)

	def IsGeneral(self):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), (),)

	def IsSheet(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def IsSolid(self):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), (),)

	def IsWire(self):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def MassProp(self, Area=pythoncom.Missing, volume=pythoncom.Missing, cg=pythoncom.Missing, Inertia=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((16389, 2), (16389, 2), (16396, 2), (16396, 2)), 'MassProp', None,Area
			, volume, cg, Inertia)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def Nodes(self, getBoundary=defaultNamedNotOptArg, getInterior=defaultNamedNotOptArg, numNodes=pythoncom.Missing, NodeID=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((11, 1), (11, 1), (16387, 2), (16396, 2)), 'Nodes', None,getBoundary
			, getInterior, numNodes, NodeID)

	def NodesAsSet(self, getBoundary=defaultNamedNotOptArg, getInterior=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (11, 1)),getBoundary
			, getInterior, nSetID, bClear)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def PointsAsSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetVolReverse is actually a property, but must be used as a method to correctly pass the arguments
	def SetVolReverse(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (3, 1), (11, 1)),nRowIndex
			, nColIndex, arg2)

	# The method SetVolSurface is actually a property, but must be used as a method to correctly pass the arguments
	def SetVolSurface(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def SheetFacesAsSet(self, nSetID=defaultNamedNotOptArg, nInsideSolidSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nInsideSolidSetID)

	def Surfaces(self, nCombinedMode=defaultNamedNotOptArg, numSurfs=pythoncom.Missing, surfaceID=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'Surfaces', None,nCombinedMode
			, numSurfs, surfaceID)

	def SurfacesAsSet(self, nCombinedMode=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nCombinedMode
			, nSetID, bClear)

	# The method VolReverse is actually a property, but must be used as a method to correctly pass the arguments
	def VolReverse(self, nRowIndex=defaultNamedNotOptArg, nColIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (11, 0), ((3, 1), (3, 1)),nRowIndex
			, nColIndex)

	# The method VolSurface is actually a property, but must be used as a method to correctly pass the arguments
	def VolSurface(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def WireCurvesAsSet(self, nSetID=defaultNamedNotOptArg, nInsideSolidSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1), (3, 1)),nSetID
			, nInsideSolidSetID)

	def points(self, numPoints=pythoncom.Missing, pointID=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((16387, 2), (16396, 2)), 'points', None,numPoints
			, pointID)

	def volume(self, volume=pythoncom.Missing):
		return self._ApplyTypes_(20027, 1, (3, 0), ((16389, 2),), 'volume', None,volume
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Address": (10009, 2, (3, 0), (), "Address", None),
		"Engine": (10010, 2, (3, 0), (), "Engine", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"ScaleFactor": (10014, 2, (5, 0), (), "ScaleFactor", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"VolColor": (10004, 2, (3, 0), (), "VolColor", None),
		"VolLayer": (10005, 2, (3, 0), (), "VolLayer", None),
		"VolType": (10006, 2, (3, 0), (), "VolType", None),
		"attrMaxMidsideAngle": (10017, 2, (5, 0), (), "attrMaxMidsideAngle", None),
		"attrMidsideOnGeometry": (10016, 2, (11, 0), (), "attrMidsideOnGeometry", None),
		"attrPID": (10001, 2, (3, 0), (), "attrPID", None),
		"attrTopology": (10015, 2, (3, 0), (), "attrTopology", None),
		"color": (10007, 2, (3, 0), (), "color", None),
		"layer": (10008, 2, (3, 0), (), "layer", None),
		"title": (10011, 2, (8, 0), (), "title", None),
		"type": (10000, 2, (3, 0), (), "type", None),
		"vVolReverse": (10013, 2, (12, 0), (), "vVolReverse", None),
		"vVolSurface": (10012, 2, (12, 0), (), "vVolSurface", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Address" : ((10009, LCID, 4, 0),()),
		"Engine" : ((10010, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"ScaleFactor" : ((10014, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"VolColor" : ((10004, LCID, 4, 0),()),
		"VolLayer" : ((10005, LCID, 4, 0),()),
		"VolType" : ((10006, LCID, 4, 0),()),
		"attrMaxMidsideAngle" : ((10017, LCID, 4, 0),()),
		"attrMidsideOnGeometry" : ((10016, LCID, 4, 0),()),
		"attrPID" : ((10001, LCID, 4, 0),()),
		"attrTopology" : ((10015, LCID, 4, 0),()),
		"color" : ((10007, LCID, 4, 0),()),
		"layer" : ((10008, LCID, 4, 0),()),
		"title" : ((10011, LCID, 4, 0),()),
		"type" : ((10000, LCID, 4, 0),()),
		"vVolReverse" : ((10013, LCID, 4, 0),()),
		"vVolSurface" : ((10012, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISolidCleanupTool(DispatchBaseClass):
	CLSID = IID('{04B2D4B6-4F23-485B-8151-307D0C14462E}')
	coclass_clsid = IID('{04B2D4B8-4F23-485B-8151-307D0C14462E}')

	def Cleanup(self, nSolidSet=defaultNamedNotOptArg, bEnableAdvancedCleanup=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSolidSet
			, bEnableAdvancedCleanup)

	def Dialog(self):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), (),)

	def SetTolerances(self, dTolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((5, 1),),dTolerance
			)

	_prop_map_get_ = {
		"AdvAllowSurfaceMods": (10013, 2, (11, 0), (), "AdvAllowSurfaceMods", None),
		"AdvCleanInvalidGeometry": (10005, 2, (11, 0), (), "AdvCleanInvalidGeometry", None),
		"AdvCleanValidGeometry": (10009, 2, (11, 0), (), "AdvCleanValidGeometry", None),
		"AdvImproveEdges": (10026, 2, (11, 0), (), "AdvImproveEdges", None),
		"AdvImproveEdgesTolerance": (10027, 2, (5, 0), (), "AdvImproveEdgesTolerance", None),
		"AdvMergeSharedGeometry": (10028, 2, (11, 0), (), "AdvMergeSharedGeometry", None),
		"AdvOptimize": (10007, 2, (11, 0), (), "AdvOptimize", None),
		"AdvReapplyBlends": (10029, 2, (11, 0), (), "AdvReapplyBlends", None),
		"AdvRemoveGashes": (10022, 2, (11, 0), (), "AdvRemoveGashes", None),
		"AdvRemoveGashesTolerance": (10023, 2, (5, 0), (), "AdvRemoveGashesTolerance", None),
		"AdvRemoveSelfIntersection": (10012, 2, (11, 0), (), "AdvRemoveSelfIntersection", None),
		"AdvRemoveSlivers": (10020, 2, (11, 0), (), "AdvRemoveSlivers", None),
		"AdvRemoveSliversTolerance": (10021, 2, (5, 0), (), "AdvRemoveSliversTolerance", None),
		"AdvRemoveSmallEdges": (10016, 2, (11, 0), (), "AdvRemoveSmallEdges", None),
		"AdvRemoveSmallEdgesTolerance": (10017, 2, (5, 0), (), "AdvRemoveSmallEdgesTolerance", None),
		"AdvRemoveSmallFaces": (10018, 2, (11, 0), (), "AdvRemoveSmallFaces", None),
		"AdvRemoveSmallFacesTolerance": (10019, 2, (5, 0), (), "AdvRemoveSmallFacesTolerance", None),
		"AdvRemoveSmallFeatures": (10006, 2, (11, 0), (), "AdvRemoveSmallFeatures", None),
		"AdvRemoveSpikes": (10014, 2, (11, 0), (), "AdvRemoveSpikes", None),
		"AdvRemoveSpikesTolerance": (10015, 2, (5, 0), (), "AdvRemoveSpikesTolerance", None),
		"AdvRepairEdges": (10010, 2, (11, 0), (), "AdvRepairEdges", None),
		"AdvSimplifyGeometry": (10024, 2, (11, 0), (), "AdvSimplifyGeometry", None),
		"AdvSimplifyGeometryTolerance": (10025, 2, (5, 0), (), "AdvSimplifyGeometryTolerance", None),
		"AdvSmoothDiscontinuity": (10011, 2, (11, 0), (), "AdvSmoothDiscontinuity", None),
		"AdvStitch": (10008, 2, (11, 0), (), "AdvStitch", None),
		"AdvStitchReplaceMissingGeometry": (10033, 2, (11, 0), (), "AdvStitchReplaceMissingGeometry", None),
		"AdvStitchSmoothDiscontinuity": (10031, 2, (11, 0), (), "AdvStitchSmoothDiscontinuity", None),
		"AdvStitchSmoothDiscontinuityTolerance": (10032, 2, (5, 0), (), "AdvStitchSmoothDiscontinuityTolerance", None),
		"AdvStitchTolerance": (10030, 2, (5, 0), (), "AdvStitchTolerance", None),
		"CheckGeometry": (10000, 2, (11, 0), (), "CheckGeometry", None),
		"MatchModelScaleFactor": (10001, 2, (11, 0), (), "MatchModelScaleFactor", None),
		"RemoveRedundantGeometry": (10002, 2, (11, 0), (), "RemoveRedundantGeometry", None),
		"ShowProgressMessages": (10003, 2, (11, 0), (), "ShowProgressMessages", None),
	}
	_prop_map_put_ = {
		"AdvAllowSurfaceMods" : ((10013, LCID, 4, 0),()),
		"AdvCleanInvalidGeometry" : ((10005, LCID, 4, 0),()),
		"AdvCleanValidGeometry" : ((10009, LCID, 4, 0),()),
		"AdvImproveEdges" : ((10026, LCID, 4, 0),()),
		"AdvImproveEdgesTolerance" : ((10027, LCID, 4, 0),()),
		"AdvMergeSharedGeometry" : ((10028, LCID, 4, 0),()),
		"AdvOptimize" : ((10007, LCID, 4, 0),()),
		"AdvReapplyBlends" : ((10029, LCID, 4, 0),()),
		"AdvRemoveGashes" : ((10022, LCID, 4, 0),()),
		"AdvRemoveGashesTolerance" : ((10023, LCID, 4, 0),()),
		"AdvRemoveSelfIntersection" : ((10012, LCID, 4, 0),()),
		"AdvRemoveSlivers" : ((10020, LCID, 4, 0),()),
		"AdvRemoveSliversTolerance" : ((10021, LCID, 4, 0),()),
		"AdvRemoveSmallEdges" : ((10016, LCID, 4, 0),()),
		"AdvRemoveSmallEdgesTolerance" : ((10017, LCID, 4, 0),()),
		"AdvRemoveSmallFaces" : ((10018, LCID, 4, 0),()),
		"AdvRemoveSmallFacesTolerance" : ((10019, LCID, 4, 0),()),
		"AdvRemoveSmallFeatures" : ((10006, LCID, 4, 0),()),
		"AdvRemoveSpikes" : ((10014, LCID, 4, 0),()),
		"AdvRemoveSpikesTolerance" : ((10015, LCID, 4, 0),()),
		"AdvRepairEdges" : ((10010, LCID, 4, 0),()),
		"AdvSimplifyGeometry" : ((10024, LCID, 4, 0),()),
		"AdvSimplifyGeometryTolerance" : ((10025, LCID, 4, 0),()),
		"AdvSmoothDiscontinuity" : ((10011, LCID, 4, 0),()),
		"AdvStitch" : ((10008, LCID, 4, 0),()),
		"AdvStitchReplaceMissingGeometry" : ((10033, LCID, 4, 0),()),
		"AdvStitchSmoothDiscontinuity" : ((10031, LCID, 4, 0),()),
		"AdvStitchSmoothDiscontinuityTolerance" : ((10032, LCID, 4, 0),()),
		"AdvStitchTolerance" : ((10030, LCID, 4, 0),()),
		"CheckGeometry" : ((10000, LCID, 4, 0),()),
		"MatchModelScaleFactor" : ((10001, LCID, 4, 0),()),
		"RemoveRedundantGeometry" : ((10002, LCID, 4, 0),()),
		"ShowProgressMessages" : ((10003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISolidEdit(DispatchBaseClass):
	CLSID = IID('{C9B3B295-F3EE-44EC-9B20-D37CA9D588A3}')
	coclass_clsid = IID('{C9B3B297-F3EE-44EC-9B20-D37CA9D588A3}')

	def SurfaceEdit(self, nSetID=defaultNamedNotOptArg, bExtend=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1)),nSetID
			, bExtend, dValue)

	def SurfaceMoveAlongVector(self, nSetID=defaultNamedNotOptArg, dDistance=defaultNamedNotOptArg, vdirection=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (5, 1), (12, 1)),nSetID
			, dDistance, vdirection)

	def SurfaceOffset(self, nSetID=defaultNamedNotOptArg, bExtend=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1)),nSetID
			, bExtend, dValue)

	def SurfaceRotateAroundVector(self, nSetID=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vdirection=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (5, 1), (12, 1), (12, 1)),nSetID
			, dAngle, vBase, vdirection)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"bAutoRemesh": (10006, 2, (11, 0), (), "bAutoRemesh", None),
		"bSelectColinear": (10003, 2, (11, 0), (), "bSelectColinear", None),
		"bSelectConcentric": (10002, 2, (11, 0), (), "bSelectConcentric", None),
		"bSelectIdentical": (10001, 2, (11, 0), (), "bSelectIdentical", None),
		"bSelectOffset": (10005, 2, (11, 0), (), "bSelectOffset", None),
		"bSelectTangentEdges": (10004, 2, (11, 0), (), "bSelectTangentEdges", None),
		"bSmartSelect": (10000, 2, (11, 0), (), "bSmartSelect", None),
	}
	_prop_map_put_ = {
		"bAutoRemesh" : ((10006, LCID, 4, 0),()),
		"bSelectColinear" : ((10003, LCID, 4, 0),()),
		"bSelectConcentric" : ((10002, LCID, 4, 0),()),
		"bSelectIdentical" : ((10001, LCID, 4, 0),()),
		"bSelectOffset" : ((10005, LCID, 4, 0),()),
		"bSelectTangentEdges" : ((10004, LCID, 4, 0),()),
		"bSmartSelect" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISortSet(DispatchBaseClass):
	CLSID = IID('{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}')
	coclass_clsid = IID('{E4A806F2-65DD-4B9A-8CA7-BB2B71BEDFAE}')

	def Add(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def AddAll(self, nID=defaultNamedNotOptArg, dReal1=defaultNamedNotOptArg, dReal2=defaultNamedNotOptArg, dReal3=defaultNamedNotOptArg
			, dInt1=defaultNamedNotOptArg, dInt2=defaultNamedNotOptArg, dInt3=defaultNamedNotOptArg, eDataType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nID
			, dReal1, dReal2, dReal3, dInt1, dInt2
			, dInt3, eDataType)

	def AddAroundPlane(self, entityTYPE=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vDir=defaultNamedNotOptArg
			, bAbs=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (11, 1)),entityTYPE
			, nSetID, vBase, vDir, bAbs)

	def AddAroundPoint(self, entityTYPE=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),entityTYPE
			, nSetID, vBase)

	def AddAroundVector(self, entityTYPE=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),entityTYPE
			, nSetID, vBase, vDir)

	def AddInt(self, nID=defaultNamedNotOptArg, dInt1=defaultNamedNotOptArg, dInt2=defaultNamedNotOptArg, dInt3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nID
			, dInt1, dInt2, dInt3)

	def AddReal(self, nID=defaultNamedNotOptArg, dReal1=defaultNamedNotOptArg, dReal2=defaultNamedNotOptArg, dReal3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),nID
			, dReal1, dReal2, dReal3)

	def ConvertToBoundarySurfaces(self):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), (),)

	def Count(self):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), (),)

	def Current(self):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), (),)

	def Find(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), (),)

	def GetData(self, nID=defaultNamedNotOptArg, dReal1=pythoncom.Missing, dReal2=pythoncom.Missing, dReal3=pythoncom.Missing
			, dInt1=pythoncom.Missing, dInt2=pythoncom.Missing, dInt3=pythoncom.Missing, eDataType=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetData', None,nID
			, dReal1, dReal2, dReal3, dInt1, dInt2
			, dInt3, eDataType)

	def GetDataType(self, nID=defaultNamedNotOptArg, eDataType=pythoncom.Missing):
		return self._ApplyTypes_(20033, 1, (3, 0), ((3, 1), (16387, 2)), 'GetDataType', None,nID
			, eDataType)

	def GetInt(self, nID=defaultNamedNotOptArg, dInt1=pythoncom.Missing, dInt2=pythoncom.Missing, dInt3=pythoncom.Missing):
		return self._ApplyTypes_(20031, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2), (16387, 2)), 'GetInt', None,nID
			, dInt1, dInt2, dInt3)

	def GetReal(self, nID=defaultNamedNotOptArg, dReal1=pythoncom.Missing, dReal2=pythoncom.Missing, dReal3=pythoncom.Missing):
		return self._ApplyTypes_(20029, 1, (3, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetReal', None,nID
			, dReal1, dReal2, dReal3)

	def GetSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20034, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def IsAdded(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def IsEmpty(self):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), (),)

	def Prev(self):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), (),)

	def Remove(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def RemoveSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), (),)

	def Select(self, entityTYPE=defaultNamedNotOptArg, Reload=defaultNamedNotOptArg, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((3, 1), (11, 1), (8, 1)),entityTYPE
			, Reload, title)

	def SelectID(self, entityTYPE=defaultNamedNotOptArg, title=defaultNamedNotOptArg, selID=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((3, 1), (8, 1), (16387, 2)), 'SelectID', None,entityTYPE
			, title, selID)

	def SelectList(self, nNumEntity=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (3, 1)),nNumEntity
			, entityTYPE)

	def SetData(self, nID=defaultNamedNotOptArg, dReal1=defaultNamedNotOptArg, dReal2=defaultNamedNotOptArg, dReal3=defaultNamedNotOptArg
			, dInt1=defaultNamedNotOptArg, dInt2=defaultNamedNotOptArg, dInt3=defaultNamedNotOptArg, eDataType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nID
			, dReal1, dReal2, dReal3, dInt1, dInt2
			, dInt3, eDataType)

	def SetDataType(self, nID=defaultNamedNotOptArg, eDataType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((3, 1), (3, 1)),nID
			, eDataType)

	def SetInt(self, nID=defaultNamedNotOptArg, dInt1=defaultNamedNotOptArg, dInt2=defaultNamedNotOptArg, dInt3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nID
			, dInt1, dInt2, dInt3)

	def SetReal(self, nID=defaultNamedNotOptArg, dReal1=defaultNamedNotOptArg, dReal2=defaultNamedNotOptArg, dReal3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),nID
			, dReal1, dReal2, dReal3)

	def Sort(self, bSortReal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((11, 1),),bSortReal
			)

	def SortRemoveDuplicates(self, bSortReal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((11, 1),),bSortReal
			)

	def clear(self):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"ID": (10000, 2, (3, 0), (), "ID", None),
		"dReal1": (10001, 2, (5, 0), (), "dReal1", None),
		"dReal2": (10002, 2, (5, 0), (), "dReal2", None),
		"dReal3": (10003, 2, (5, 0), (), "dReal3", None),
		"eDataType": (10007, 2, (3, 0), (), "eDataType", None),
		"nInt1": (10004, 2, (3, 0), (), "nInt1", None),
		"nInt2": (10005, 2, (3, 0), (), "nInt2", None),
		"nInt3": (10006, 2, (3, 0), (), "nInt3", None),
	}
	_prop_map_put_ = {
		"ID" : ((10000, LCID, 4, 0),()),
		"dReal1" : ((10001, LCID, 4, 0),()),
		"dReal2" : ((10002, LCID, 4, 0),()),
		"dReal3" : ((10003, LCID, 4, 0),()),
		"eDataType" : ((10007, LCID, 4, 0),()),
		"nInt1" : ((10004, LCID, 4, 0),()),
		"nInt2" : ((10005, LCID, 4, 0),()),
		"nInt3" : ((10006, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() method - allow len(ob) to provide this
	def __len__(self):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), (),)

	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IStressLinear(DispatchBaseClass):
	CLSID = IID('{08B1C6B1-3124-4D88-BE4C-DFE7642E817E}')
	coclass_clsid = IID('{08B1C6B3-3124-4D88-BE4C-DFE7642E817E}')

	def CalcSolidPrinStresses(self, vStressTensorIn=defaultNamedNotOptArg, vPrinTrescaData=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((12, 1), (16396, 2)), 'CalcSolidPrinStresses', None,vStressTensorIn
			, vPrinTrescaData)

	def CalcStressLinearization(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def Transform3DStress(self, cSysFromID=defaultNamedNotOptArg, cSysToID=defaultNamedNotOptArg, vStressTensorIn=defaultNamedNotOptArg, vStressTensorOut=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16396, 2)), 'Transform3DStress', None,cSysFromID
			, cSysToID, vStressTensorIn, vStressTensorOut)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"bFullStressTensor": (10001, 2, (11, 0), (), "bFullStressTensor", None),
		"bNonlinearMode": (10006, 2, (11, 0), (), "bNonlinearMode", None),
		"dBendingStress": (10009, 2, (5, 0), (), "dBendingStress", None),
		"dMaxMemBend": (10010, 2, (5, 0), (), "dMaxMemBend", None),
		"dMaxStress": (10011, 2, (5, 0), (), "dMaxStress", None),
		"dMembraneStress": (10008, 2, (5, 0), (), "dMembraneStress", None),
		"nElemType": (10005, 2, (3, 0), (), "nElemType", None),
		"nStressMode": (10007, 2, (3, 0), (), "nStressMode", None),
		"ndID1": (10002, 2, (3, 0), (), "ndID1", None),
		"ndID2": (10003, 2, (3, 0), (), "ndID2", None),
		"ouSetID": (10004, 2, (3, 0), (), "ouSetID", None),
	}
	_prop_map_put_ = {
		"bFullStressTensor" : ((10001, LCID, 4, 0),()),
		"bNonlinearMode" : ((10006, LCID, 4, 0),()),
		"dBendingStress" : ((10009, LCID, 4, 0),()),
		"dMaxMemBend" : ((10010, LCID, 4, 0),()),
		"dMaxStress" : ((10011, LCID, 4, 0),()),
		"dMembraneStress" : ((10008, LCID, 4, 0),()),
		"nElemType" : ((10005, LCID, 4, 0),()),
		"nStressMode" : ((10007, LCID, 4, 0),()),
		"ndID1" : ((10002, LCID, 4, 0),()),
		"ndID2" : ((10003, LCID, 4, 0),()),
		"ouSetID" : ((10004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISurface(DispatchBaseClass):
	CLSID = IID('{AA0FCDBC-0CB0-11D5-946F-001083FFF11C}')
	coclass_clsid = IID('{AA0FCDBE-0CB0-11D5-946F-001083FFF11C}')

	def AddMeshPoint(self, nPointID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20060, LCID, 1, (3, 0), ((3, 1),),nPointID
			)

	def AdjacentSurfaces(self, nCombinedMode=defaultNamedNotOptArg, numSurfaces=pythoncom.Missing, surfaceID=pythoncom.Missing):
		return self._ApplyTypes_(20035, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'AdjacentSurfaces', None,nCombinedMode
			, numSurfaces, surfaceID)

	def AdjacentSurfacesAsSet(self, nCombinedMode=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nCombinedMode
			, nSetID, bClear)

	def AngleAtPoint(self, nPtID=defaultNamedNotOptArg, dAngle=pythoncom.Missing, vBisector=pythoncom.Missing, vNormal=pythoncom.Missing):
		return self._ApplyTypes_(20048, 1, (3, 0), ((3, 1), (16389, 2), (16396, 2), (16396, 2)), 'AngleAtPoint', None,nPtID
			, dAngle, vBisector, vNormal)

	def ApproximateArea(self, Area=pythoncom.Missing):
		return self._ApplyTypes_(20050, 1, (3, 0), ((16389, 2),), 'ApproximateArea', None,Area
			)

	def Area(self, Area=pythoncom.Missing):
		return self._ApplyTypes_(20014, 1, (3, 0), ((16389, 2),), 'Area', None,Area
			)

	# The method BoundaryCurve is actually a property, but must be used as a method to correctly pass the arguments
	def BoundaryCurve(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method BoundaryFlag is actually a property, but must be used as a method to correctly pass the arguments
	def BoundaryFlag(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def BoundarySurfaces(self, numSurf=pythoncom.Missing, surfID=pythoncom.Missing):
		return self._ApplyTypes_(20034, 1, (3, 0), ((16387, 2), (16396, 2)), 'BoundarySurfaces', None,numSurf
			, surfID)

	def BoundarySurfacesAsSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def BoundingBox(self, box=pythoncom.Missing):
		return self._ApplyTypes_(20030, 1, (3, 0), ((16396, 2),), 'BoundingBox', None,box
			)

	def BoundingBoxInCSys(self, nCSysID=defaultNamedNotOptArg, box=pythoncom.Missing):
		return self._ApplyTypes_(20067, 1, (3, 0), ((3, 1), (16396, 2)), 'BoundingBoxInCSys', None,nCSysID
			, box)

	def BoundingSize(self, pvDim=pythoncom.Missing, pvLongDir=pythoncom.Missing, pvNormalDir=pythoncom.Missing):
		return self._ApplyTypes_(20049, 1, (3, 0), ((16396, 2), (16396, 2), (16396, 2)), 'BoundingSize', None,pvDim
			, pvLongDir, pvNormalDir)

	def CommonCurvesAsSet(self, nCombinedMode=defaultNamedNotOptArg, nOtherSurfaceID=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20054, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),nCombinedMode
			, nOtherSurfaceID, nSetID, bClear)

	def Conical(self, radius=pythoncom.Missing, angle=pythoncom.Missing, base=pythoncom.Missing, Axis=pythoncom.Missing):
		return self._ApplyTypes_(20026, 1, (3, 0), ((16389, 2), (16389, 2), (16396, 2), (16396, 2)), 'Conical', None,radius
			, angle, base, Axis)

	def CountMeshPoint(self):
		return self._oleobj_.InvokeTypes(20061, LCID, 1, (3, 0), (),)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Curvature(self, vXYZ=defaultNamedNotOptArg, pdRadius1=pythoncom.Missing, vCurveDir1=pythoncom.Missing, pdRadius2=pythoncom.Missing
			, vCurveDir2=pythoncom.Missing, vNormDir=pythoncom.Missing):
		return self._ApplyTypes_(20057, 1, (3, 0), ((12, 1), (16389, 2), (16396, 2), (16389, 2), (16396, 2), (16396, 2)), 'Curvature', None,vXYZ
			, pdRadius1, vCurveDir1, pdRadius2, vCurveDir2, vNormDir
			)

	def CurveLoops(self, nCombinedMode=defaultNamedNotOptArg, numLoops=pythoncom.Missing, numCurves=pythoncom.Missing, curveID=pythoncom.Missing):
		return self._ApplyTypes_(20052, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2), (16396, 2)), 'CurveLoops', None,nCombinedMode
			, numLoops, numCurves, curveID)

	def Curves(self, nCombinedMode=defaultNamedNotOptArg, numCurves=pythoncom.Missing, curveID=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'Curves', None,nCombinedMode
			, numCurves, curveID)

	def CurvesAsSet(self, nCombinedMode=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20038, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nCombinedMode
			, nSetID, bClear)

	def CurvesAtPoint(self, nPtID=defaultNamedNotOptArg, PrevCurveID=defaultNamedNotOptArg, NextCurveID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20053, LCID, 1, (3, 0), ((3, 1), (16387, 1), (16387, 1)),nPtID
			, PrevCurveID, NextCurveID)

	def Cylindrical(self, radius=pythoncom.Missing, base=pythoncom.Missing, Axis=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((16389, 2), (16396, 2), (16396, 2)), 'Cylindrical', None,radius
			, base, Axis)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	# The method Divisions is actually a property, but must be used as a method to correctly pass the arguments
	def Divisions(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def ElementFaces(self, getPlaneElem=defaultNamedNotOptArg, getSolidElem=defaultNamedNotOptArg, requireElemAttach=defaultNamedNotOptArg, numFaces=pythoncom.Missing
			, elemID=pythoncom.Missing, faceID=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (16387, 2), (16396, 2), (16396, 2)), 'ElementFaces', None,getPlaneElem
			, getSolidElem, requireElemAttach, numFaces, elemID, faceID
			)

	def Elements(self, numElems=pythoncom.Missing, elemID=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((16387, 2), (16396, 2)), 'Elements', None,numElems
			, elemID)

	def ElementsAsSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20041, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def ElementsWithFaces(self, numElems=pythoncom.Missing, elemID=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((16387, 2), (16396, 2)), 'ElementsWithFaces', None,numElems
			, elemID)

	def EndPoints(self, numPoints=pythoncom.Missing, pointID=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((16387, 2), (16396, 2)), 'EndPoints', None,numPoints
			, pointID)

	def EndPointsAsSet(self, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), ((3, 1), (11, 1)),nSetID
			, bClear)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Facets(self, numFacets=pythoncom.Missing, xyzFacet=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((16387, 2), (16396, 2)), 'Facets', None,numFacets
			, xyzFacet)

	def FindMappedMeshingCorners(self, nNumDesired=defaultNamedNotOptArg, pnNumFound=pythoncom.Missing, pnCornerList=pythoncom.Missing):
		return self._ApplyTypes_(20055, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'FindMappedMeshingCorners', None,nNumDesired
			, pnNumFound, pnCornerList)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetAllArray(self, SetID=defaultNamedNotOptArg, numSurface=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, surfacetype=pythoncom.Missing, layer=pythoncom.Missing, color=pythoncom.Missing, donotmesh=pythoncom.Missing, nInternalToBoundary=pythoncom.Missing
			, Divisions=pythoncom.Missing, Reverse=pythoncom.Missing, Curves=pythoncom.Missing):
		return self._ApplyTypes_(20072, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllArray', None,SetID
			, numSurface, entID, Exist, surfacetype, layer
			, color, donotmesh, nInternalToBoundary, Divisions, Reverse
			, Curves)

	def GetAllAttrArray(self, SetID=defaultNamedNotOptArg, numSurface=pythoncom.Missing, entID=pythoncom.Missing, Exist=pythoncom.Missing
			, pid=pythoncom.Missing, approach=pythoncom.Missing, approachData=pythoncom.Missing):
		return self._ApplyTypes_(20073, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAllAttrArray', None,SetID
			, numSurface, entID, Exist, pid, approach
			, approachData)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def HasConsistentSurfaceMesh(self):
		return self._oleobj_.InvokeTypes(20076, LCID, 1, (3, 0), (),)

	def HasPole(self):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), (),)

	def InitMeshAttributes(self, nPropID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20070, LCID, 1, (3, 0), ((3, 1),),nPropID
			)

	def Inside(self, u=defaultNamedNotOptArg, v=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((5, 1), (5, 1)),u
			, v)

	def InsideXYZ(self, xyz=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20044, LCID, 1, (3, 0), ((12, 1),),xyz
			)

	def IsBlend(self, blendtype=pythoncom.Missing, dRadius=pythoncom.Missing):
		return self._ApplyTypes_(20066, 1, (3, 0), ((16387, 2), (16389, 2)), 'IsBlend', None,blendtype
			, dRadius)

	def IsBoundingSolidRegion(self):
		return self._oleobj_.InvokeTypes(20045, LCID, 1, (3, 0), (),)

	def IsCone(self):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), (),)

	def IsCylinder(self):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), (),)

	def IsFacet(self):
		return self._oleobj_.InvokeTypes(20071, LCID, 1, (3, 0), (),)

	def IsMappable(self, bForceBlends=defaultNamedNotOptArg, dMaxBlendRadius=defaultNamedNotOptArg, dMergeAngle=defaultNamedNotOptArg, pnNumEdges=pythoncom.Missing
			, pnCornerPoints=pythoncom.Missing, pdEdgeLength=pythoncom.Missing, pnNumEdgeCurves=pythoncom.Missing, pnEdgeCurves=pythoncom.Missing):
		return self._ApplyTypes_(20059, 1, (3, 0), ((11, 1), (5, 1), (5, 1), (16387, 2), (16396, 2), (16396, 2), (16387, 2), (16396, 2)), 'IsMappable', None,bForceBlends
			, dMaxBlendRadius, dMergeAngle, pnNumEdges, pnCornerPoints, pdEdgeLength
			, pnNumEdgeCurves, pnEdgeCurves)

	def IsMappedApproach(self):
		return self._oleobj_.InvokeTypes(20058, LCID, 1, (3, 0), (),)

	def IsMultiLoop(self):
		return self._oleobj_.InvokeTypes(20062, LCID, 1, (3, 0), (),)

	def IsPlane(self):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), (),)

	def IsSphere(self):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), (),)

	def IsSuppressed(self):
		return self._oleobj_.InvokeTypes(20056, LCID, 1, (3, 0), (),)

	def IsTorus(self):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), (),)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def MaxNormalDeviation(self, dLimit=defaultNamedNotOptArg, dAngle=pythoncom.Missing):
		return self._ApplyTypes_(20031, 1, (3, 0), ((5, 1), (16389, 2)), 'MaxNormalDeviation', None,dLimit
			, dAngle)

	def Mesh(self, propID=defaultNamedNotOptArg, elemShape=defaultNamedNotOptArg, bAllowMapped=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20047, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),propID
			, elemShape, bAllowMapped)

	# The method MeshPoint is actually a property, but must be used as a method to correctly pass the arguments
	def MeshPoint(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def MinRadiiOfCurvature(self, pdConcaveRadius=pythoncom.Missing, pdConvexRadius=pythoncom.Missing, pbIsPlanar=pythoncom.Missing):
		return self._ApplyTypes_(20051, 1, (3, 0), ((16389, 2), (16389, 2), (16395, 2)), 'MinRadiiOfCurvature', None,pdConcaveRadius
			, pdConvexRadius, pbIsPlanar)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def Nodes(self, getBoundary=defaultNamedNotOptArg, getInterior=defaultNamedNotOptArg, numNodes=pythoncom.Missing, NodeID=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((11, 1), (11, 1), (16387, 2), (16396, 2)), 'Nodes', None,getBoundary
			, getInterior, numNodes, NodeID)

	def NodesAsSet(self, getBoundary=defaultNamedNotOptArg, getInterior=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20042, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (11, 1)),getBoundary
			, getInterior, nSetID, bClear)

	def NormalAtXYZ(self, nLocations=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, normal=pythoncom.Missing):
		return self._ApplyTypes_(20032, 1, (3, 0), ((3, 1), (12, 1), (16396, 2)), 'NormalAtXYZ', None,nLocations
			, xyz, normal)

	def NormalBox(self, box=pythoncom.Missing):
		return self._ApplyTypes_(20033, 1, (3, 0), ((16396, 2),), 'NormalBox', None,box
			)

	def ParamToXYZ(self, u=defaultNamedNotOptArg, v=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((5, 1), (5, 1), (16396, 2)), 'ParamToXYZ', None,u
			, v, xyz)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Planar(self, base=pythoncom.Missing, normal=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((16396, 2), (16396, 2)), 'Planar', None,base
			, normal)

	def PointLoops(self, nCombinedMode=defaultNamedNotOptArg, numLoops=pythoncom.Missing, numPoints=pythoncom.Missing, pointID=pythoncom.Missing):
		return self._ApplyTypes_(20063, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2), (16396, 2)), 'PointLoops', None,nCombinedMode
			, numLoops, numPoints, pointID)

	def PointsAsSet(self, nCombinedMode=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nCombinedMode
			, nSetID, bClear)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def ProjectAlongVector(self, bBothDirections=defaultNamedNotOptArg, vAlong=defaultNamedNotOptArg, vOrig=defaultNamedNotOptArg, vProj=pythoncom.Missing):
		return self._ApplyTypes_(20065, 1, (3, 0), ((11, 1), (12, 1), (12, 1), (16396, 2)), 'ProjectAlongVector', None,bBothDirections
			, vAlong, vOrig, vProj)

	def ProjectOnto(self, initial=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg, projection=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((12, 1), (5, 1), (16396, 2)), 'ProjectOnto', None,initial
			, tolerance, projection)

	def ProjectToClosest(self, vOrig=defaultNamedNotOptArg, vProj=pythoncom.Missing):
		return self._ApplyTypes_(20064, 1, (3, 0), ((12, 1), (16396, 2)), 'ProjectToClosest', None,vOrig
			, vProj)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutAllArray(self, numSurface=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, bUpdateLayer=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, bUpdateColor=defaultNamedNotOptArg, color=defaultNamedNotOptArg, bUpdateDoNotMesh=defaultNamedNotOptArg, donotmesh=defaultNamedNotOptArg, bUpdateDivisions=defaultNamedNotOptArg
			, Divisions=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20074, LCID, 1, (3, 0), ((3, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1)),numSurface
			, entID, bUpdateLayer, layer, bUpdateColor, color
			, bUpdateDoNotMesh, donotmesh, bUpdateDivisions, Divisions)

	def PutAllAttrArray(self, numSurface=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, bUpdatePID=defaultNamedNotOptArg, pid=defaultNamedNotOptArg
			, bUpdateApproach=defaultNamedNotOptArg, approach=defaultNamedNotOptArg, approachData=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20075, LCID, 1, (3, 0), ((3, 1), (12, 1), (11, 1), (12, 1), (11, 1), (12, 1), (12, 1)),numSurface
			, entID, bUpdatePID, pid, bUpdateApproach, approach
			, approachData)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def RationalParamToXYZ(self, u=defaultNamedNotOptArg, v=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20029, 1, (3, 0), ((5, 1), (5, 1), (16396, 2)), 'RationalParamToXYZ', None,u
			, v, xyz)

	def RemoveAllMeshPoints(self):
		return self._oleobj_.InvokeTypes(20069, LCID, 1, (3, 0), (),)

	def RemoveMeshPoint(self, nPointID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20068, LCID, 1, (3, 0), ((3, 1),),nPointID
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def ResetMeshAttr(self):
		return self._oleobj_.InvokeTypes(20046, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetBoundaryCurve is actually a property, but must be used as a method to correctly pass the arguments
	def SetBoundaryCurve(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetBoundaryFlag is actually a property, but must be used as a method to correctly pass the arguments
	def SetBoundaryFlag(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetDivisions is actually a property, but must be used as a method to correctly pass the arguments
	def SetDivisions(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetMeshPoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetMeshPoint(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetStdCurve is actually a property, but must be used as a method to correctly pass the arguments
	def SetStdCurve(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetStdCurveReverse is actually a property, but must be used as a method to correctly pass the arguments
	def SetStdCurveReverse(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetapproachData is actually a property, but must be used as a method to correctly pass the arguments
	def SetapproachData(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def Solid(self, pnSolidID=pythoncom.Missing):
		return self._ApplyTypes_(20043, 1, (3, 0), ((16387, 2),), 'Solid', None,pnSolidID
			)

	def Spherical(self, radius=pythoncom.Missing, center=pythoncom.Missing):
		return self._ApplyTypes_(20025, 1, (3, 0), ((16389, 2), (16396, 2)), 'Spherical', None,radius
			, center)

	# The method StdCurve is actually a property, but must be used as a method to correctly pass the arguments
	def StdCurve(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method StdCurveReverse is actually a property, but must be used as a method to correctly pass the arguments
	def StdCurveReverse(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def Tangents(self, u=defaultNamedNotOptArg, v=defaultNamedNotOptArg, stan=pythoncom.Missing, ttan=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((5, 1), (5, 1), (16396, 2), (16396, 2)), 'Tangents', None,u
			, v, stan, ttan)

	def Toroidal(self, radius1=pythoncom.Missing, radius2=pythoncom.Missing, base=pythoncom.Missing, Axis=pythoncom.Missing):
		return self._ApplyTypes_(20027, 1, (3, 0), ((16389, 2), (16389, 2), (16396, 2), (16396, 2)), 'Toroidal', None,radius1
			, radius2, base, Axis)

	def XYZToParam(self, xyz=defaultNamedNotOptArg, u=pythoncom.Missing, v=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((12, 1), (16389, 2), (16389, 2)), 'XYZToParam', None,xyz
			, u, v)

	# The method approachData is actually a property, but must be used as a method to correctly pass the arguments
	def approachData(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def cg(self, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((16396, 2),), 'cg', None,xyz
			)

	def normal(self, u=defaultNamedNotOptArg, v=defaultNamedNotOptArg, normal=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((5, 1), (5, 1), (16396, 2)), 'normal', None,u
			, v, normal)

	def points(self, nCombinedMode=defaultNamedNotOptArg, numPoints=pythoncom.Missing, pointID=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2)), 'points', None,nCombinedMode
			, numPoints, pointID)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Address": (10010, 2, (3, 0), (), "Address", None),
		"BoundaryMode": (10018, 2, (3, 0), (), "BoundaryMode", None),
		"BoundaryOnSurface": (10019, 2, (3, 0), (), "BoundaryOnSurface", None),
		"Engine": (10011, 2, (3, 0), (), "Engine", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"InternalToBoundary": (10028, 2, (3, 0), (), "InternalToBoundary", None),
		"MeshSizeChord": (10014, 2, (5, 0), (), "MeshSizeChord", None),
		"MeshSizeInterior": (10013, 2, (5, 0), (), "MeshSizeInterior", None),
		"QuadMeshLayers": (10027, 2, (3, 0), (), "QuadMeshLayers", None),
		"ScaleFactor": (10053, 2, (5, 0), (), "ScaleFactor", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"Suppressed": (10012, 2, (11, 0), (), "Suppressed", None),
		"approach": (10005, 2, (3, 0), (), "approach", None),
		"attrConnectEdgeNodeTol": (10048, 2, (5, 0), (), "attrConnectEdgeNodeTol", None),
		"attrConnectEdgeNodes": (10047, 2, (11, 0), (), "attrConnectEdgeNodes", None),
		"attrInitialized": (10050, 2, (11, 0), (), "attrInitialized", None),
		"attrMapAltTri": (10034, 2, (11, 0), (), "attrMapAltTri", None),
		"attrMapAngleDeviation": (10036, 2, (5, 0), (), "attrMapAngleDeviation", None),
		"attrMapEqualOnly": (10033, 2, (11, 0), (), "attrMapEqualOnly", None),
		"attrMapMinCornerAngle": (10037, 2, (5, 0), (), "attrMapMinCornerAngle", None),
		"attrMapRightBias": (10035, 2, (11, 0), (), "attrMapRightBias", None),
		"attrMapSplitQuads": (10052, 2, (11, 0), (), "attrMapSplitQuads", None),
		"attrMapSubdivisions": (10032, 2, (11, 0), (), "attrMapSubdivisions", None),
		"attrMappedLevel": (10031, 2, (3, 0), (), "attrMappedLevel", None),
		"attrMaxAspect": (10041, 2, (5, 0), (), "attrMaxAspect", None),
		"attrMaxQuads": (10055, 2, (11, 0), (), "attrMaxQuads", None),
		"attrMesher": (10030, 2, (3, 0), (), "attrMesher", None),
		"attrMidsideAngle": (10039, 2, (5, 0), (), "attrMidsideAngle", None),
		"attrMidsideGeom": (10038, 2, (11, 0), (), "attrMidsideGeom", None),
		"attrMinBetween": (10040, 2, (3, 0), (), "attrMinBetween", None),
		"attrOffset": (10004, 2, (5, 0), (), "attrOffset", None),
		"attrOffsetFrom": (10049, 2, (3, 0), (), "attrOffsetFrom", None),
		"attrPID": (10003, 2, (3, 0), (), "attrPID", None),
		"attrPostMeshCleanup": (10051, 2, (11, 0), (), "attrPostMeshCleanup", None),
		"attrQuadCutAngle": (10043, 2, (5, 0), (), "attrQuadCutAngle", None),
		"attrQuickCutNodes": (10042, 2, (3, 0), (), "attrQuickCutNodes", None),
		"attrSmoothIter": (10045, 2, (3, 0), (), "attrSmoothIter", None),
		"attrSmoothLaplacian": (10044, 2, (11, 0), (), "attrSmoothLaplacian", None),
		"attrSmoothTolerance": (10046, 2, (5, 0), (), "attrSmoothTolerance", None),
		"attrTopology": (10029, 2, (3, 0), (), "attrTopology", None),
		"attrVertexLoopsAsHardPoints": (10054, 2, (11, 0), (), "attrVertexLoopsAsHardPoints", None),
		"color": (10008, 2, (3, 0), (), "color", None),
		"layer": (10009, 2, (3, 0), (), "layer", None),
		"type": (10000, 2, (3, 0), (), "type", None),
		"vBoundaryCurve": (10025, 2, (12, 0), (), "vBoundaryCurve", None),
		"vBoundaryFlag": (10026, 2, (12, 0), (), "vBoundaryFlag", None),
		"vDivisions": (10023, 2, (12, 0), (), "vDivisions", None),
		"vMeshPoint": (10024, 2, (12, 0), (), "vMeshPoint", None),
		"vStdCurve": (10020, 2, (12, 0), (), "vStdCurve", None),
		"vStdCurveReverse": (10021, 2, (12, 0), (), "vStdCurveReverse", None),
		"vapproachData": (10022, 2, (12, 0), (), "vapproachData", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Address" : ((10010, LCID, 4, 0),()),
		"BoundaryMode" : ((10018, LCID, 4, 0),()),
		"BoundaryOnSurface" : ((10019, LCID, 4, 0),()),
		"Engine" : ((10011, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"InternalToBoundary" : ((10028, LCID, 4, 0),()),
		"MeshSizeChord" : ((10014, LCID, 4, 0),()),
		"MeshSizeInterior" : ((10013, LCID, 4, 0),()),
		"QuadMeshLayers" : ((10027, LCID, 4, 0),()),
		"ScaleFactor" : ((10053, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"Suppressed" : ((10012, LCID, 4, 0),()),
		"approach" : ((10005, LCID, 4, 0),()),
		"attrConnectEdgeNodeTol" : ((10048, LCID, 4, 0),()),
		"attrConnectEdgeNodes" : ((10047, LCID, 4, 0),()),
		"attrInitialized" : ((10050, LCID, 4, 0),()),
		"attrMapAltTri" : ((10034, LCID, 4, 0),()),
		"attrMapAngleDeviation" : ((10036, LCID, 4, 0),()),
		"attrMapEqualOnly" : ((10033, LCID, 4, 0),()),
		"attrMapMinCornerAngle" : ((10037, LCID, 4, 0),()),
		"attrMapRightBias" : ((10035, LCID, 4, 0),()),
		"attrMapSplitQuads" : ((10052, LCID, 4, 0),()),
		"attrMapSubdivisions" : ((10032, LCID, 4, 0),()),
		"attrMappedLevel" : ((10031, LCID, 4, 0),()),
		"attrMaxAspect" : ((10041, LCID, 4, 0),()),
		"attrMaxQuads" : ((10055, LCID, 4, 0),()),
		"attrMesher" : ((10030, LCID, 4, 0),()),
		"attrMidsideAngle" : ((10039, LCID, 4, 0),()),
		"attrMidsideGeom" : ((10038, LCID, 4, 0),()),
		"attrMinBetween" : ((10040, LCID, 4, 0),()),
		"attrOffset" : ((10004, LCID, 4, 0),()),
		"attrOffsetFrom" : ((10049, LCID, 4, 0),()),
		"attrPID" : ((10003, LCID, 4, 0),()),
		"attrPostMeshCleanup" : ((10051, LCID, 4, 0),()),
		"attrQuadCutAngle" : ((10043, LCID, 4, 0),()),
		"attrQuickCutNodes" : ((10042, LCID, 4, 0),()),
		"attrSmoothIter" : ((10045, LCID, 4, 0),()),
		"attrSmoothLaplacian" : ((10044, LCID, 4, 0),()),
		"attrSmoothTolerance" : ((10046, LCID, 4, 0),()),
		"attrTopology" : ((10029, LCID, 4, 0),()),
		"attrVertexLoopsAsHardPoints" : ((10054, LCID, 4, 0),()),
		"color" : ((10008, LCID, 4, 0),()),
		"layer" : ((10009, LCID, 4, 0),()),
		"type" : ((10000, LCID, 4, 0),()),
		"vBoundaryCurve" : ((10025, LCID, 4, 0),()),
		"vBoundaryFlag" : ((10026, LCID, 4, 0),()),
		"vDivisions" : ((10023, LCID, 4, 0),()),
		"vMeshPoint" : ((10024, LCID, 4, 0),()),
		"vStdCurve" : ((10020, LCID, 4, 0),()),
		"vStdCurveReverse" : ((10021, LCID, 4, 0),()),
		"vapproachData" : ((10022, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITableData(DispatchBaseClass):
	CLSID = IID('{17387165-149C-43E5-A91D-EAC4D1E4EAAD}')
	coclass_clsid = IID('{17387167-149C-43E5-A91D-EAC4D1E4EAAD}')

	def CellRange(self, nMinRow=pythoncom.Missing, nMaxRow=pythoncom.Missing, nMinCol=pythoncom.Missing, nMaxCol=pythoncom.Missing):
		return self._ApplyTypes_(20004, 1, (3, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'CellRange', None,nMinRow
			, nMaxRow, nMinCol, nMaxCol)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetCellDouble(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, dValue=pythoncom.Missing):
		return self._ApplyTypes_(20014, 1, (3, 0), ((3, 1), (3, 1), (16389, 2)), 'GetCellDouble', None,nRow
			, nCol, dValue)

	def GetCellEntity(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, ntype=pythoncom.Missing, nID=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2)), 'GetCellEntity', None,nRow
			, nCol, ntype, nID)

	def GetCellInteger(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nValue=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((3, 1), (3, 1), (16387, 2)), 'GetCellInteger', None,nRow
			, nCol, nValue)

	def GetCellText(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, sText=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((3, 1), (3, 1), (16392, 2)), 'GetCellText', None,nRow
			, nCol, sText)

	def GetFunction(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetMultiCellDouble(self, nFirstRow=defaultNamedNotOptArg, nLastRow=defaultNamedNotOptArg, nFirstCol=defaultNamedNotOptArg, nLastCol=defaultNamedNotOptArg
			, dValues=pythoncom.Missing):
		return self._ApplyTypes_(20021, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (16396, 2)), 'GetMultiCellDouble', None,nFirstRow
			, nLastRow, nFirstCol, nLastCol, dValues)

	def GetMultiCellInteger(self, nFirstRow=defaultNamedNotOptArg, nLastRow=defaultNamedNotOptArg, nFirstCol=defaultNamedNotOptArg, nLastCol=defaultNamedNotOptArg
			, nValues=pythoncom.Missing):
		return self._ApplyTypes_(20022, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (16396, 2)), 'GetMultiCellInteger', None,nFirstRow
			, nLastRow, nFirstCol, nLastCol, nValues)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Initialize(self, nNumRow=defaultNamedNotOptArg, nNumCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1)),nNumRow
			, nNumCol)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutFunction(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def Resize(self, nNumRow=defaultNamedNotOptArg, nNumCol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (3, 1)),nNumRow
			, nNumCol)

	def SaveToFile(self, sFilename=defaultNamedNotOptArg, bAppend=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((8, 1), (11, 1)),sFilename
			, bAppend)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetCellDouble(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nRow
			, nCol, dValue)

	def SetCellEntity(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, ntype=defaultNamedNotOptArg, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
			, nCol, ntype, nID)

	def SetCellEquation(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, sEqn=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),nRow
			, nCol, sEqn)

	def SetCellInteger(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
			, nCol, nValue)

	def SetCellText(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, sText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),nRow
			, nCol, sText)

	def SetMultiCellDouble(self, nFirstRow=defaultNamedNotOptArg, nLastRow=defaultNamedNotOptArg, nFirstCol=defaultNamedNotOptArg, nLastCol=defaultNamedNotOptArg
			, dValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1)),nFirstRow
			, nLastRow, nFirstCol, nLastCol, dValues)

	def SetMultiCellInteger(self, nFirstRow=defaultNamedNotOptArg, nLastRow=defaultNamedNotOptArg, nFirstCol=defaultNamedNotOptArg, nLastCol=defaultNamedNotOptArg
			, nValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1)),nFirstRow
			, nLastRow, nFirstCol, nLastCol, nValues)

	def SetMultiCellText(self, nFirstRow=defaultNamedNotOptArg, nLastRow=defaultNamedNotOptArg, nFirstCol=defaultNamedNotOptArg, nLastCol=defaultNamedNotOptArg
			, sValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1)),nFirstRow
			, nLastRow, nFirstCol, nLastCol, sValues)

	def clear(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Columns": (10006, 2, (3, 0), (), "Columns", None),
		"FunctionType": (10003, 2, (3, 0), (), "FunctionType", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Rows": (10005, 2, (3, 0), (), "Rows", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"VectorFunctionType": (10004, 2, (3, 0), (), "VectorFunctionType", None),
		"subtype": (10002, 2, (3, 0), (), "subtype", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"type": (10001, 2, (3, 0), (), "type", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Columns" : ((10006, LCID, 4, 0),()),
		"FunctionType" : ((10003, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Rows" : ((10005, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"VectorFunctionType" : ((10004, LCID, 4, 0),()),
		"subtype" : ((10002, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"type" : ((10001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IText(DispatchBaseClass):
	CLSID = IID('{FDEA6C66-77F3-4F6C-BDB9-EA976919B421}')
	coclass_clsid = IID('{FDEA6C67-77F3-4F6C-BDB9-EA976919B421}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetFontData(self, pdPointHeight=pythoncom.Missing, pbBold=pythoncom.Missing, pbItalic=pythoncom.Missing, ppcName=pythoncom.Missing):
		return self._ApplyTypes_(20003, 1, (3, 0), ((16389, 2), (16395, 2), (16395, 2), (16392, 2)), 'GetFontData', None,pdPointHeight
			, pbBold, pbItalic, ppcName)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	# The method PointerPosition is actually a property, but must be used as a method to correctly pass the arguments
	def PointerPosition(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetFontData(self, dPointHeight=defaultNamedNotOptArg, bBold=defaultNamedNotOptArg, bItalic=defaultNamedNotOptArg, pcName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((5, 1), (11, 1), (11, 1), (8, 1)),dPointHeight
			, bBold, bItalic, pcName)

	# The method SetPointerPosition is actually a property, but must be used as a method to correctly pass the arguments
	def SetPointerPosition(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetTextPosition is actually a property, but must be used as a method to correctly pass the arguments
	def SetTextPosition(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method TextPosition is actually a property, but must be used as a method to correctly pass the arguments
	def TextPosition(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AllViews": (10001, 2, (11, 0), (), "AllViews", None),
		"BackColor": (10008, 2, (3, 0), (), "BackColor", None),
		"BorderColor": (10007, 2, (3, 0), (), "BorderColor", None),
		"DrawBorder": (10003, 2, (11, 0), (), "DrawBorder", None),
		"DrawPointer": (10002, 2, (11, 0), (), "DrawPointer", None),
		"FontNumber": (10013, 2, (3, 0), (), "FontNumber", None),
		"HorzJustify": (10011, 2, (3, 0), (), "HorzJustify", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"ModelPosition": (10000, 2, (11, 0), (), "ModelPosition", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"VertJustify": (10012, 2, (3, 0), (), "VertJustify", None),
		"VisibleView": (10004, 2, (3, 0), (), "VisibleView", None),
		"color": (10006, 2, (3, 0), (), "color", None),
		"layer": (10005, 2, (3, 0), (), "layer", None),
		"text": (10014, 2, (8, 0), (), "text", None),
		"vPointerPosition": (10016, 2, (12, 0), (), "vPointerPosition", None),
		"vTextPosition": (10015, 2, (12, 0), (), "vTextPosition", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AllViews" : ((10001, LCID, 4, 0),()),
		"BackColor" : ((10008, LCID, 4, 0),()),
		"BorderColor" : ((10007, LCID, 4, 0),()),
		"DrawBorder" : ((10003, LCID, 4, 0),()),
		"DrawPointer" : ((10002, LCID, 4, 0),()),
		"FontNumber" : ((10013, LCID, 4, 0),()),
		"HorzJustify" : ((10011, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"ModelPosition" : ((10000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"VertJustify" : ((10012, LCID, 4, 0),()),
		"VisibleView" : ((10004, LCID, 4, 0),()),
		"color" : ((10006, LCID, 4, 0),()),
		"layer" : ((10005, LCID, 4, 0),()),
		"text" : ((10014, LCID, 4, 0),()),
		"vPointerPosition" : ((10016, LCID, 4, 0),()),
		"vTextPosition" : ((10015, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITmgBC(DispatchBaseClass):
	CLSID = IID('{F809A642-09BC-11D5-946C-001083FFF11C}')
	coclass_clsid = IID('{F809A644-09BC-11D5-946C-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAll(self, entID=defaultNamedNotOptArg, i=pythoncom.Missing, r=pythoncom.Missing, c=pythoncom.Missing):
		return self._ApplyTypes_(20000, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2), (16396, 2)), 'GetAll', None,entID
			, i, r, c)

	def GetAll2(self, entID=defaultNamedNotOptArg, i=pythoncom.Missing, r=pythoncom.Missing, b=pythoncom.Missing
			, c=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAll2', None,entID
			, i, r, b, c)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, i=defaultNamedNotOptArg, r=defaultNamedNotOptArg, c=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),entID
			, i, r, c)

	def PutAll2(self, entID=defaultNamedNotOptArg, i=defaultNamedNotOptArg, r=defaultNamedNotOptArg, b=defaultNamedNotOptArg
			, c=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),entID
			, i, r, b, c)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setb is actually a property, but must be used as a method to correctly pass the arguments
	def Setb(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method Setc is actually a property, but must be used as a method to correctly pass the arguments
	def Setc(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Seti is actually a property, but must be used as a method to correctly pass the arguments
	def Seti(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setr is actually a property, but must be used as a method to correctly pass the arguments
	def Setr(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method b is actually a property, but must be used as a method to correctly pass the arguments
	def b(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method c is actually a property, but must be used as a method to correctly pass the arguments
	def c(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method i is actually a property, but must be used as a method to correctly pass the arguments
	def i(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method r is actually a property, but must be used as a method to correctly pass the arguments
	def r(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"vb": (10006, 2, (12, 0), (), "vb", None),
		"vc": (10005, 2, (12, 0), (), "vc", None),
		"vi": (10003, 2, (12, 0), (), "vi", None),
		"vr": (10004, 2, (12, 0), (), "vr", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"vb" : ((10006, LCID, 4, 0),()),
		"vc" : ((10005, LCID, 4, 0),()),
		"vi" : ((10003, LCID, 4, 0),()),
		"vr" : ((10004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITmgCtl(DispatchBaseClass):
	CLSID = IID('{C1DD56F8-09BD-11D5-946C-001083FFF11C}')
	coclass_clsid = IID('{C1DD56FA-09BD-11D5-946C-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAll(self, entID=defaultNamedNotOptArg, i=pythoncom.Missing, r=pythoncom.Missing, b=pythoncom.Missing
			, c=pythoncom.Missing):
		return self._ApplyTypes_(20000, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAll', None,entID
			, i, r, b, c)

	def GetAll2(self, entID=defaultNamedNotOptArg, i=pythoncom.Missing, r=pythoncom.Missing, b=pythoncom.Missing
			, c=pythoncom.Missing):
		return self._ApplyTypes_(20002, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetAll2', None,entID
			, i, r, b, c)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, i=defaultNamedNotOptArg, r=defaultNamedNotOptArg, b=defaultNamedNotOptArg
			, c=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),entID
			, i, r, b, c)

	def PutAll2(self, entID=defaultNamedNotOptArg, i=defaultNamedNotOptArg, r=defaultNamedNotOptArg, b=defaultNamedNotOptArg
			, c=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),entID
			, i, r, b, c)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setb is actually a property, but must be used as a method to correctly pass the arguments
	def Setb(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method Setc is actually a property, but must be used as a method to correctly pass the arguments
	def Setc(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Seti is actually a property, but must be used as a method to correctly pass the arguments
	def Seti(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setr is actually a property, but must be used as a method to correctly pass the arguments
	def Setr(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method b is actually a property, but must be used as a method to correctly pass the arguments
	def b(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method c is actually a property, but must be used as a method to correctly pass the arguments
	def c(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method i is actually a property, but must be used as a method to correctly pass the arguments
	def i(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method r is actually a property, but must be used as a method to correctly pass the arguments
	def r(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"vb": (10006, 2, (12, 0), (), "vb", None),
		"vc": (10007, 2, (12, 0), (), "vc", None),
		"vi": (10004, 2, (12, 0), (), "vi", None),
		"vr": (10005, 2, (12, 0), (), "vr", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"vb" : ((10006, LCID, 4, 0),()),
		"vc" : ((10007, LCID, 4, 0),()),
		"vi" : ((10004, LCID, 4, 0),()),
		"vr" : ((10005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITmgInt(DispatchBaseClass):
	CLSID = IID('{5A0AEF80-09BE-11D5-946C-001083FFF11C}')
	coclass_clsid = IID('{5A0AEF82-09BE-11D5-946C-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAll(self, entID=defaultNamedNotOptArg, i=pythoncom.Missing):
		return self._ApplyTypes_(20000, 1, (3, 0), ((3, 1), (16396, 2)), 'GetAll', None,entID
			, i)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, i=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1)),entID
			, i)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Seti is actually a property, but must be used as a method to correctly pass the arguments
	def Seti(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method i is actually a property, but must be used as a method to correctly pass the arguments
	def i(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"vi": (10001, 2, (12, 0), (), "vi", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"vi" : ((10001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITmgOpt(DispatchBaseClass):
	CLSID = IID('{EC1095A6-09BE-11D5-946C-001083FFF11C}')
	coclass_clsid = IID('{EC1095A8-09BE-11D5-946C-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAll(self, entID=defaultNamedNotOptArg, i=pythoncom.Missing, r=pythoncom.Missing, c=pythoncom.Missing):
		return self._ApplyTypes_(20000, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2), (16396, 2)), 'GetAll', None,entID
			, i, r, c)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, i=defaultNamedNotOptArg, r=defaultNamedNotOptArg, c=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),entID
			, i, r, c)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setc is actually a property, but must be used as a method to correctly pass the arguments
	def Setc(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Seti is actually a property, but must be used as a method to correctly pass the arguments
	def Seti(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setr is actually a property, but must be used as a method to correctly pass the arguments
	def Setr(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method c is actually a property, but must be used as a method to correctly pass the arguments
	def c(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method i is actually a property, but must be used as a method to correctly pass the arguments
	def i(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method r is actually a property, but must be used as a method to correctly pass the arguments
	def r(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"vc": (10005, 2, (12, 0), (), "vc", None),
		"vi": (10003, 2, (12, 0), (), "vi", None),
		"vr": (10004, 2, (12, 0), (), "vr", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"vc" : ((10005, LCID, 4, 0),()),
		"vi" : ((10003, LCID, 4, 0),()),
		"vr" : ((10004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITmgReal(DispatchBaseClass):
	CLSID = IID('{9D6A22B4-09BE-11D5-946C-001083FFF11C}')
	coclass_clsid = IID('{9D6A22B6-09BE-11D5-946C-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetAll(self, entID=defaultNamedNotOptArg, i=pythoncom.Missing, r=pythoncom.Missing):
		return self._ApplyTypes_(20000, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2)), 'GetAll', None,entID
			, i, r)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, entID=defaultNamedNotOptArg, i=defaultNamedNotOptArg, r=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),entID
			, i, r)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Seti is actually a property, but must be used as a method to correctly pass the arguments
	def Seti(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setr is actually a property, but must be used as a method to correctly pass the arguments
	def Setr(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method i is actually a property, but must be used as a method to correctly pass the arguments
	def i(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method r is actually a property, but must be used as a method to correctly pass the arguments
	def r(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"vi": (10002, 2, (12, 0), (), "vi", None),
		"vr": (10003, 2, (12, 0), (), "vr", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"vi" : ((10002, LCID, 4, 0),()),
		"vr" : ((10003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITrackData(DispatchBaseClass):
	CLSID = IID('{CF420F7F-631E-4597-83A5-B6C971AEAB99}')
	coclass_clsid = IID('{CF420F81-631E-4597-83A5-B6C971AEAB99}')

	def Created(self, entityTYPE=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),entityTYPE
			, nSetID, bClear)

	def Deleted(self, entityTYPE=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bClear=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),entityTYPE
			, nSetID, bClear)

	def Start(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	def StartGeometry(self):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), (),)

	def StartMesh(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def Stop(self, entityTYPE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),entityTYPE
			)

	def StopAll(self):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), (),)

	def clear(self):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserData(DispatchBaseClass):
	CLSID = IID('{CFA77C4C-63E9-11D5-94AA-001083FFF11C}')
	coclass_clsid = IID('{CFA77C4E-63E9-11D5-94AA-001083FFF11C}')

	def AtEOF(self):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), (),)

	def Deletable(self, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), ((3, 1),),ID
			)

	def Delete(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def DeleteTitle(self, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((8, 1),),title
			)

	def Exist(self, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20034, LCID, 1, (3, 0), ((3, 1),),ID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), (),)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetTitle(self, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((8, 1),),title
			)

	def Jump(self, jumpto=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1),),jumpto
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), (),)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), (),)

	def Position(self):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), (),)

	def Prev(self):
		return self._oleobj_.InvokeTypes(20038, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutTitle(self, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((8, 1),),title
			)

	def ReadBool(self, val=pythoncom.Missing):
		return self._ApplyTypes_(20021, 1, (3, 0), ((16395, 2),), 'ReadBool', None,val
			)

	def ReadBoolArray(self, num=pythoncom.Missing, val=pythoncom.Missing):
		return self._ApplyTypes_(20022, 1, (3, 0), ((16387, 2), (16396, 2)), 'ReadBoolArray', None,num
			, val)

	def ReadDouble(self, val=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((16389, 2),), 'ReadDouble', None,val
			)

	def ReadDoubleArray(self, num=pythoncom.Missing, val=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((16387, 2), (16396, 2)), 'ReadDoubleArray', None,num
			, val)

	def ReadFloat(self, val=pythoncom.Missing):
		return self._ApplyTypes_(20017, 1, (3, 0), ((16388, 2),), 'ReadFloat', None,val
			)

	def ReadLong(self, val=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((16387, 2),), 'ReadLong', None,val
			)

	def ReadLongArray(self, num=pythoncom.Missing, val=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((16387, 2), (16396, 2)), 'ReadLongArray', None,num
			, val)

	def ReadShort(self, val=pythoncom.Missing):
		return self._ApplyTypes_(20020, 1, (3, 0), ((16386, 2),), 'ReadShort', None,val
			)

	def ReadString(self, val=pythoncom.Missing):
		return self._ApplyTypes_(20023, 1, (3, 0), ((16392, 2),), 'ReadString', None,val
			)

	def Reset(self):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), (),)

	def Truncate(self, fsize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((3, 1),),fsize
			)

	def WriteBool(self, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((11, 1),),val
			)

	def WriteBoolArray(self, num=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1), (12, 1)),num
			, val)

	def WriteDouble(self, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((5, 1),),val
			)

	def WriteDoubleArray(self, num=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (12, 1)),num
			, val)

	def WriteFloat(self, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), ((4, 1),),val
			)

	def WriteLong(self, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1),),val
			)

	def WriteLongArray(self, num=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((3, 1), (12, 1)),num
			, val)

	def WriteShort(self, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((2, 1),),val
			)

	def WriteString(self, val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((8, 1),),val
			)

	def clear(self):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		"ID": (10002, 2, (3, 0), (), "ID", None),
		"SetID": (10003, 2, (3, 0), (), "SetID", None),
		"Size": (10001, 2, (3, 0), (), "Size", None),
		"title": (10000, 2, (8, 0), (), "title", None),
	}
	_prop_map_put_ = {
		"ID" : ((10002, LCID, 4, 0),()),
		"SetID" : ((10003, LCID, 4, 0),()),
		"Size" : ((10001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserDefinedGraphics(DispatchBaseClass):
	CLSID = IID('{9B5131E5-BFB8-4219-8F7D-764DBC32C323}')
	coclass_clsid = IID('{9B5131E7-BFB8-4219-8F7D-764DBC32C323}')

	def Attach(self, pDetachedName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20066, LCID, 1, (3, 0), ((8, 1),),pDetachedName
			)

	def BitmapCreate(self, iWidth=defaultNamedNotOptArg, iHeight=defaultNamedNotOptArg, pqBits=defaultNamedNotOptArg, piBitmapID=pythoncom.Missing):
		return self._ApplyTypes_(20044, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16387, 2)), 'BitmapCreate', None,iWidth
			, iHeight, pqBits, piBitmapID)

	def BitmapMarkForDeletion(self, iBitmapID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20045, LCID, 1, (3, 0), ((3, 1),),iBitmapID
			)

	def Blank(self, qBlanked=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((11, 1),),qBlanked
			)

	def CollectorAddLineElementFace(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nFaces=defaultNamedNotOptArg, piElementID=defaultNamedNotOptArg
			, piFaceID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20086, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, nFaces, piElementID, piFaceID)

	def CollectorAddLineLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nLines=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20038, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nLines, pdPoints)

	def CollectorAddLineQuad4Locations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nQuad3=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20081, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nQuad3, pdPoints)

	def CollectorAddLineQuad8Locations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nQuad8=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20082, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nQuad8, pdPoints)

	def CollectorAddLineTria6Locations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nTria6=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20080, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nTria6, pdPoints)

	def CollectorAddMeshLineLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg
			, nLines=defaultNamedNotOptArg, piLines=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nPoints, pdPoints, nLines, piLines
			)

	def CollectorAddMeshTriangleLineLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg
			, nTriangles=defaultNamedNotOptArg, piTriangles=defaultNamedNotOptArg, qFreeEdge=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20079, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (3, 1), (12, 1), (11, 1)),iCollectorID
			, iAppearanceID, nPoints, pdPoints, nTriangles, piTriangles
			, qFreeEdge)

	def CollectorAddMeshTriangleLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg
			, nTriangles=defaultNamedNotOptArg, piTriangles=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20042, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nPoints, pdPoints, nTriangles, piTriangles
			)

	def CollectorAddMeshTriangleNormalLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg
			, pdNormals=defaultNamedNotOptArg, nTriangles=defaultNamedNotOptArg, piTriangles=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20043, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nPoints, pdPoints, pdNormals, nTriangles
			, piTriangles)

	def CollectorAddPointEntityFaceLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piFaceIDs
			)

	def CollectorAddPointEntityLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs)

	def CollectorAddPointLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nPoints, pdPoints)

	def CollectorAddPolyLineLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nPoints, pdPoints)

	def CollectorAddSymbolEntityEdgeAutoLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piEdgeIDs=defaultNamedNotOptArg, piOrientOptions=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20069, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piEdgeIDs
			, piOrientOptions)

	def CollectorAddSymbolEntityEdgeLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piEdgeIDs=defaultNamedNotOptArg, pdDirections=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20068, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piEdgeIDs
			, pdDirections, pdOrthogonals)

	def CollectorAddSymbolEntityFaceLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg, pdDirections=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piFaceIDs
			, pdDirections, pdOrthogonals)

	def CollectorAddSymbolEntityFaceNormalAutoLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg, piOrientOptions=defaultNamedNotOptArg, pdOrientAngles=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20067, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piFaceIDs
			, piOrientOptions, pdOrientAngles)

	def CollectorAddSymbolEntityFaceNormalLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piFaceIDs
			, pdOrthogonals)

	def CollectorAddSymbolEntityLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, pdDirections=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, pdDirections
			, pdOrthogonals)

	def CollectorAddSymbolLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nSymbols=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg
			, pfDirections=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20021, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, nSymbols, pdPoints, pfDirections, pdOrthogonals
			)

	def CollectorAddSymbolREAL8EntityEdgeAutoLocations(self, iCollectorID=defaultNamedNotOptArg, iSymbolAppearanceID=defaultNamedNotOptArg, iLabelAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg
			, nIDs=defaultNamedNotOptArg, piIDs=defaultNamedNotOptArg, piEdgeIDs=defaultNamedNotOptArg, piOrientOptions=defaultNamedNotOptArg, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20072, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iSymbolAppearanceID, iLabelAppearanceID, eType, nIDs, piIDs
			, piEdgeIDs, piOrientOptions, pdValues)

	def CollectorAddSymbolREAL8EntityEdgeLocations(self, iCollectorID=defaultNamedNotOptArg, iSymbolAppearanceID=defaultNamedNotOptArg, iLabelAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg
			, nIDs=defaultNamedNotOptArg, piIDs=defaultNamedNotOptArg, piEdgeIDs=defaultNamedNotOptArg, pdDirections=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg
			, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20071, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iSymbolAppearanceID, iLabelAppearanceID, eType, nIDs, piIDs
			, piEdgeIDs, pdDirections, pdOrthogonals, pdValues)

	def CollectorAddSymbolREAL8EntityFaceLocations(self, iCollectorID=defaultNamedNotOptArg, iSymbolAppearanceID=defaultNamedNotOptArg, iLabelAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg
			, nIDs=defaultNamedNotOptArg, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg, pdDirections=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg
			, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iSymbolAppearanceID, iLabelAppearanceID, eType, nIDs, piIDs
			, piFaceIDs, pdDirections, pdOrthogonals, pdValues)

	def CollectorAddSymbolREAL8EntityFaceNormalAutoLocations(self, iCollectorID=defaultNamedNotOptArg, iSymbolAppearanceID=defaultNamedNotOptArg, iLabelAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg
			, nIDs=defaultNamedNotOptArg, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg, piOrientOptions=defaultNamedNotOptArg, pdOrientAngles=defaultNamedNotOptArg
			, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20070, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iSymbolAppearanceID, iLabelAppearanceID, eType, nIDs, piIDs
			, piFaceIDs, piOrientOptions, pdOrientAngles, pdValues)

	def CollectorAddSymbolREAL8EntityFaceNormalLocations(self, iCollectorID=defaultNamedNotOptArg, iSymbolAppearanceID=defaultNamedNotOptArg, iLabelAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg
			, nIDs=defaultNamedNotOptArg, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iSymbolAppearanceID, iLabelAppearanceID, eType, nIDs, piIDs
			, piFaceIDs, pdOrthogonals, pdValues)

	def CollectorAddSymbolREAL8EntityLocations(self, iCollectorID=defaultNamedNotOptArg, iSymbolAppearanceID=defaultNamedNotOptArg, iLabelAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg
			, nIDs=defaultNamedNotOptArg, piIDs=defaultNamedNotOptArg, pdDirections=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iSymbolAppearanceID, iLabelAppearanceID, eType, nIDs, piIDs
			, pdDirections, pdOrthogonals, pdValues)

	def CollectorAddSymbolREAL8Locations(self, iCollectorID=defaultNamedNotOptArg, iSymbolAppearanceID=defaultNamedNotOptArg, iLabelAppearanceID=defaultNamedNotOptArg, nSymbols=defaultNamedNotOptArg
			, pdPoints=defaultNamedNotOptArg, pfDirections=defaultNamedNotOptArg, pdOrthogonals=defaultNamedNotOptArg, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iSymbolAppearanceID, iLabelAppearanceID, nSymbols, pdPoints, pfDirections
			, pdOrthogonals, pdValues)

	def CollectorAddTextContourLegendLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg, piIDs=defaultNamedNotOptArg
			, ppText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20077, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, nIDs, piIDs, ppText)

	def CollectorAddTextEntityFaceLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg, ppText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piFaceIDs
			, ppText)

	def CollectorAddTextEntityLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, ppText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, ppText
			)

	def CollectorAddTextINT4EntityFaceLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg, piValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20034, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piFaceIDs
			, piValues)

	def CollectorAddTextINT4EntityLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piValues
			)

	def CollectorAddTextINT4Locations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg
			, piValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, nPoints, pdPoints, piValues)

	def CollectorAddTextLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg
			, ppText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, nPoints, pdPoints, ppText)

	def CollectorAddTextREAL8EntityFaceLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, piFaceIDs=defaultNamedNotOptArg, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, piFaceIDs
			, pdValues)

	def CollectorAddTextREAL8EntityLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nIDs=defaultNamedNotOptArg
			, piIDs=defaultNamedNotOptArg, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, eType, nIDs, piIDs, pdValues
			)

	def CollectorAddTextREAL8Locations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg
			, pdValues=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, nPoints, pdPoints, pdValues)

	def CollectorAddTriangleElementFace(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nFaces=defaultNamedNotOptArg, piElementID=defaultNamedNotOptArg
			, piFaceID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20087, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),iCollectorID
			, iAppearanceID, nFaces, piElementID, piFaceID)

	def CollectorAddTriangleLocations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nTriangles=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20041, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nTriangles, pdPoints)

	def CollectorAddTriangleQuad4Locations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nQuad4=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20084, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nQuad4, pdPoints)

	def CollectorAddTriangleQuad8Locations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nQuad8=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20085, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nQuad8, pdPoints)

	def CollectorAddTriangleTria6Locations(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, nTria6=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20083, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iCollectorID
			, iAppearanceID, nTria6, pdPoints)

	def CollectorAppearance(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, dColor1=defaultNamedNotOptArg, dColor2=defaultNamedNotOptArg
			, dLineWidth=defaultNamedNotOptArg, iLineStyle=defaultNamedNotOptArg, iFillPattern=defaultNamedNotOptArg, qLighting=defaultNamedNotOptArg, iCullMode=defaultNamedNotOptArg
			, iFont=defaultNamedNotOptArg, dPointSize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1), (3, 1), (3, 1), (11, 1), (3, 1), (3, 1), (5, 1)),iCollectorID
			, iAppearanceID, dColor1, dColor2, dLineWidth, iLineStyle
			, iFillPattern, qLighting, iCullMode, iFont, dPointSize
			)

	def CollectorAppearanceSetFontData(self, iCollectorID=defaultNamedNotOptArg, iAppearanceID=defaultNamedNotOptArg, iPointHeight=defaultNamedNotOptArg, bBold=defaultNamedNotOptArg
			, bItalic=defaultNamedNotOptArg, pcName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20074, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (8, 1)),iCollectorID
			, iAppearanceID, iPointHeight, bBold, bItalic, pcName
			)

	def CollectorBitmap(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, iBitmapID=defaultNamedNotOptArg, dXOffset=defaultNamedNotOptArg
			, dYOffset=defaultNamedNotOptArg, dDepthOffset=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20006, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1), (16387, 2)), 'CollectorBitmap', None,pName
			, nAppearances, iBitmapID, dXOffset, dYOffset, dDepthOffset
			, piCollectorID)

	def CollectorBlank(self, iCollectorID=defaultNamedNotOptArg, qBlanked=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1), (11, 1)),iCollectorID
			, qBlanked)

	def CollectorContourLegendText(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20078, 1, (3, 0), ((8, 1), (3, 1), (16387, 2)), 'CollectorContourLegendText', None,pName
			, nAppearances, piCollectorID)

	def CollectorElementFaceFreeEdge(self, iCollectorID=defaultNamedNotOptArg, qFreeEdge=defaultNamedNotOptArg, qConsiderMidsideNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20088, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),iCollectorID
			, qFreeEdge, qConsiderMidsideNodes)

	def CollectorLabels(self, iCollectorID=defaultNamedNotOptArg, qLabels=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((3, 1), (11, 1)),iCollectorID
			, qLabels)

	def CollectorLines(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, dDepthOffset=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20012, 1, (3, 0), ((8, 1), (3, 1), (5, 1), (16387, 2)), 'CollectorLines', None,pName
			, nAppearances, dDepthOffset, piCollectorID)

	def CollectorMarkForDeletion(self, iCollectorID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((3, 1),),iCollectorID
			)

	def CollectorPoints(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, dDepthOffset=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20005, 1, (3, 0), ((8, 1), (3, 1), (5, 1), (16387, 2)), 'CollectorPoints', None,pName
			, nAppearances, dDepthOffset, piCollectorID)

	def CollectorSingleSymbol(self, iCollectorID=defaultNamedNotOptArg, qSingle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20073, LCID, 1, (3, 0), ((3, 1), (11, 1)),iCollectorID
			, qSingle)

	def CollectorSymbol(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, iSymbolID=defaultNamedNotOptArg, qScreenScale=defaultNamedNotOptArg
			, dScreenScale=defaultNamedNotOptArg, dDepthOffset=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20007, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (11, 1), (5, 1), (5, 1), (16387, 2)), 'CollectorSymbol', None,pName
			, nAppearances, iSymbolID, qScreenScale, dScreenScale, dDepthOffset
			, piCollectorID)

	def CollectorSymbolREAL8(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, iSymbolID=defaultNamedNotOptArg, qScreenScale=defaultNamedNotOptArg
			, dMaxScale=defaultNamedNotOptArg, dMinScale=defaultNamedNotOptArg, dXOffset=defaultNamedNotOptArg, dYOffset=defaultNamedNotOptArg, dZOffset=defaultNamedNotOptArg
			, dDepthOffset=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20008, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (11, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (8, 1), (16387, 2)), 'CollectorSymbolREAL8', None,pName
			, nAppearances, iSymbolID, qScreenScale, dMaxScale, dMinScale
			, dXOffset, dYOffset, dZOffset, dDepthOffset, pFormat
			, piCollectorID)

	def CollectorText(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, dXOffset=defaultNamedNotOptArg, dYOffset=defaultNamedNotOptArg
			, dZOffset=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20009, 1, (3, 0), ((8, 1), (3, 1), (5, 1), (5, 1), (5, 1), (16387, 2)), 'CollectorText', None,pName
			, nAppearances, dXOffset, dYOffset, dZOffset, piCollectorID
			)

	def CollectorTextINT4(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, dXOffset=defaultNamedNotOptArg, dYOffset=defaultNamedNotOptArg
			, dZOffset=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20010, 1, (3, 0), ((8, 1), (3, 1), (5, 1), (5, 1), (5, 1), (8, 1), (16387, 2)), 'CollectorTextINT4', None,pName
			, nAppearances, dXOffset, dYOffset, dZOffset, pFormat
			, piCollectorID)

	def CollectorTextREAL8(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, dXOffset=defaultNamedNotOptArg, dYOffset=defaultNamedNotOptArg
			, dZOffset=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20011, 1, (3, 0), ((8, 1), (3, 1), (5, 1), (5, 1), (5, 1), (8, 1), (16387, 2)), 'CollectorTextREAL8', None,pName
			, nAppearances, dXOffset, dYOffset, dZOffset, pFormat
			, piCollectorID)

	def CollectorTriangles(self, pName=defaultNamedNotOptArg, nAppearances=defaultNamedNotOptArg, dDepthOffset=defaultNamedNotOptArg, piCollectorID=pythoncom.Missing):
		return self._ApplyTypes_(20013, 1, (3, 0), ((8, 1), (3, 1), (5, 1), (16387, 2)), 'CollectorTriangles', None,pName
			, nAppearances, dDepthOffset, piCollectorID)

	def Detach(self, pDetachedName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20065, LCID, 1, (3, 0), ((8, 1),),pDetachedName
			)

	def GetOpenGLTransformationSpace(self, piTransSpace=pythoncom.Missing):
		return self._ApplyTypes_(20076, 1, (3, 0), ((16387, 2),), 'GetOpenGLTransformationSpace', None,piTransSpace
			)

	def GetView(self, piViewID=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((16387, 2),), 'GetView', None,piViewID
			)

	def Publish(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def SetName(self, pName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((8, 1),),pName
			)

	def SetOpenGLTransformationSpace(self, iTransSpace=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20075, LCID, 1, (3, 0), ((3, 1),),iTransSpace
			)

	def SetView(self, iViewID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),iViewID
			)

	def SymbolAddFillBrick(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dPoints=defaultNamedNotOptArg, qEndCap=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20059, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (11, 1)),iSymbolID
			, iAppearanceOffset, dPoints, qEndCap)

	def SymbolAddFillCircle(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dCenter=defaultNamedNotOptArg, dPointOnCircle=defaultNamedNotOptArg
			, dNormal=defaultNamedNotOptArg, nDividers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20058, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (3, 1)),iSymbolID
			, iAppearanceOffset, dCenter, dPointOnCircle, dNormal, nDividers
			)

	def SymbolAddFillCone(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dCenter=defaultNamedNotOptArg, dPointOnCircle=defaultNamedNotOptArg
			, dDirection=defaultNamedNotOptArg, dHeight=defaultNamedNotOptArg, nDividers=defaultNamedNotOptArg, nSubDividers=defaultNamedNotOptArg, qEndCap=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20061, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (5, 1), (3, 1), (3, 1), (11, 1)),iSymbolID
			, iAppearanceOffset, dCenter, dPointOnCircle, dDirection, dHeight
			, nDividers, nSubDividers, qEndCap)

	def SymbolAddFillCylinder(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dCenter=defaultNamedNotOptArg, dPointOnCircle=defaultNamedNotOptArg
			, dDirection=defaultNamedNotOptArg, dHeight=defaultNamedNotOptArg, nDividers=defaultNamedNotOptArg, nSubDividers=defaultNamedNotOptArg, qEndCap=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20060, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (5, 1), (3, 1), (3, 1), (11, 1)),iSymbolID
			, iAppearanceOffset, dCenter, dPointOnCircle, dDirection, dHeight
			, nDividers, nSubDividers, qEndCap)

	def SymbolAddFillSphere(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dCenter=defaultNamedNotOptArg, dPointOnEquator=defaultNamedNotOptArg
			, dDirection=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg, nLongDividers=defaultNamedNotOptArg, nLongSubDividers=defaultNamedNotOptArg, nLatDividers=defaultNamedNotOptArg
			, nLatSubDividers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20064, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1)),iSymbolID
			, iAppearanceOffset, dCenter, dPointOnEquator, dDirection, dAngle
			, nLongDividers, nLongSubDividers, nLatDividers, nLatSubDividers)

	def SymbolAddFillTriangle(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dPoints=defaultNamedNotOptArg, dNormals=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20057, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),iSymbolID
			, iAppearanceOffset, dPoints, dNormals)

	def SymbolAddFillTubeBrick(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dOuterPoints=defaultNamedNotOptArg, dInnerPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20062, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),iSymbolID
			, iAppearanceOffset, dOuterPoints, dInnerPoints)

	def SymbolAddFillTubeCylinder(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dCenter=defaultNamedNotOptArg, dPointOnCircle=defaultNamedNotOptArg
			, dDirection=defaultNamedNotOptArg, dHeight=defaultNamedNotOptArg, dInnerProportion=defaultNamedNotOptArg, nDividers=defaultNamedNotOptArg, nSubDividers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20063, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (5, 1), (5, 1), (3, 1), (3, 1)),iSymbolID
			, iAppearanceOffset, dCenter, dPointOnCircle, dDirection, dHeight
			, dInnerProportion, nDividers, nSubDividers)

	def SymbolAddLineBrick(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20053, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),iSymbolID
			, iAppearanceOffset, dPoints)

	def SymbolAddLineCircle(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dCenter=defaultNamedNotOptArg, dPointOnCircle=defaultNamedNotOptArg
			, dNormal=defaultNamedNotOptArg, nDividers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20052, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (3, 1)),iSymbolID
			, iAppearanceOffset, dCenter, dPointOnCircle, dNormal, nDividers
			)

	def SymbolAddLineCone(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dCenter=defaultNamedNotOptArg, dPointOnCircle=defaultNamedNotOptArg
			, dDirection=defaultNamedNotOptArg, dHeight=defaultNamedNotOptArg, nDividers=defaultNamedNotOptArg, nSubDividers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20055, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (5, 1), (3, 1), (3, 1)),iSymbolID
			, iAppearanceOffset, dCenter, dPointOnCircle, dDirection, dHeight
			, nDividers, nSubDividers)

	def SymbolAddLineCylinder(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dCenter=defaultNamedNotOptArg, dPointOnCircle=defaultNamedNotOptArg
			, dDirection=defaultNamedNotOptArg, dHeight=defaultNamedNotOptArg, nDividers=defaultNamedNotOptArg, nSubDividers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20054, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (5, 1), (3, 1), (3, 1)),iSymbolID
			, iAppearanceOffset, dCenter, dPointOnCircle, dDirection, dHeight
			, nDividers, nSubDividers)

	def SymbolAddLinePoly(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20051, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iSymbolID
			, iAppearanceOffset, nPoints, pdPoints)

	def SymbolAddLineSphere(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dCenter=defaultNamedNotOptArg, dPointOnEquator=defaultNamedNotOptArg
			, dDirection=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg, nLongDividers=defaultNamedNotOptArg, nLongSubDividers=defaultNamedNotOptArg, nLatDividers=defaultNamedNotOptArg
			, nLatSubDividers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20056, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1)),iSymbolID
			, iAppearanceOffset, dCenter, dPointOnEquator, dDirection, dAngle
			, nLongDividers, nLongSubDividers, nLatDividers, nLatSubDividers)

	def SymbolAddLineStraight(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, dPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20050, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),iSymbolID
			, iAppearanceOffset, dPoints)

	def SymbolAddPoints(self, iSymbolID=defaultNamedNotOptArg, iAppearanceOffset=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pdPoints=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20049, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),iSymbolID
			, iAppearanceOffset, nPoints, pdPoints)

	def SymbolCreate(self, nAppearances=defaultNamedNotOptArg, dLabelLocation=defaultNamedNotOptArg, qScreenOrient=defaultNamedNotOptArg, piSymbolID=pythoncom.Missing):
		return self._ApplyTypes_(20046, 1, (3, 0), ((3, 1), (12, 1), (11, 1), (16387, 2)), 'SymbolCreate', None,nAppearances
			, dLabelLocation, qScreenOrient, piSymbolID)

	def SymbolMarkForDeletion(self, iSymbolID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20047, LCID, 1, (3, 0), ((3, 1),),iSymbolID
			)

	def SymbolSetAddInScreen(self, iSymbolID=defaultNamedNotOptArg, iInScreenMode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20048, LCID, 1, (3, 0), ((3, 1), (3, 1)),iSymbolID
			, iInScreenMode)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVar(DispatchBaseClass):
	CLSID = IID('{72473E7E-0369-11D5-9465-001083FFF11C}')
	coclass_clsid = IID('{72473E7F-0369-11D5-9465-001083FFF11C}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Define(self, varname=defaultNamedNotOptArg, Equation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((8, 1), (8, 1)),varname
			, Equation)

	def DefineReal(self, varname=defaultNamedNotOptArg, value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((8, 1), (5, 1)),varname
			, value)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Evaluate(self):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (5, 0), (),)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def GetVarID(self, varname=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((8, 1),),varname
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"Equation": (10002, 2, (8, 0), (), "Equation", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"value": (10000, 2, (5, 0), (), "value", None),
		"varname": (10001, 2, (8, 0), (), "varname", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"Equation" : ((10002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"value" : ((10000, LCID, 4, 0),()),
		"varname" : ((10001, LCID, 4, 0),()),
	}
	# Default property for this class is 'value'
	def __call__(self):
		return self._ApplyTypes_(*(10000, 2, (5, 0), (), "value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector(DispatchBaseClass):
	CLSID = IID('{F2E67C72-0E5B-477F-8377-BACD7317A2FF}')
	coclass_clsid = IID('{F2E67C74-0E5B-477F-8377-BACD7317A2FF}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29004, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29005, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def PutAll(self, ID=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg, vBase=defaultNamedNotOptArg, vDir=defaultNamedNotOptArg
			, dLen=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1), (8, 1), (12, 1), (12, 1), (5, 1)),ID
			, sTitle, vBase, vDir, dLen)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method Setbase is actually a property, but must be used as a method to correctly pass the arguments
	def Setbase(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setdir is actually a property, but must be used as a method to correctly pass the arguments
	def Setdir(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method base is actually a property, but must be used as a method to correctly pass the arguments
	def base(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method dir is actually a property, but must be used as a method to correctly pass the arguments
	def dir(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Length": (10003, 2, (5, 0), (), "Length", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"title": (10000, 2, (8, 0), (), "title", None),
		"vBase": (10001, 2, (12, 0), (), "vBase", None),
		"vDir": (10002, 2, (12, 0), (), "vDir", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Length" : ((10003, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"title" : ((10000, LCID, 4, 0),()),
		"vBase" : ((10001, LCID, 4, 0),()),
		"vDir" : ((10002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IView(DispatchBaseClass):
	CLSID = IID('{037BFA00-F86C-11D4-9458-001083FFF11C}')
	coclass_clsid = IID('{037BFA02-F86C-11D4-9458-001083FFF11C}')

	def Align2Vector(self, vZx=defaultNamedNotOptArg, vZy=defaultNamedNotOptArg, vZz=defaultNamedNotOptArg, vXYx=defaultNamedNotOptArg
			, vXYy=defaultNamedNotOptArg, vXYZ=defaultNamedNotOptArg, bAutoXY=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),vZx
			, vZy, vZz, vXYx, vXYy, vXYZ
			, bAutoXY)

	def AlignCSys(self, csysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1),),csysID
			)

	def AlignVector(self, oX=defaultNamedNotOptArg, oY=defaultNamedNotOptArg, oZ=defaultNamedNotOptArg, dX=defaultNamedNotOptArg
			, dY=defaultNamedNotOptArg, dZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),oX
			, oY, oZ, dX, dY, dZ
			)

	def AlignWorkplane(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def AutoscaleAll(self, redoBox=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((11, 1),),redoBox
			)

	def AutoscaleVisible(self, redoBox=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), ((11, 1),),redoBox
			)

	# The method AxisLocation is actually a property, but must be used as a method to correctly pass the arguments
	def AxisLocation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def ClearMultiGroupList(self):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), (),)

	# The method ClipPlaneNormal is actually a property, but must be used as a method to correctly pass the arguments
	def ClipPlaneNormal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18042, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method ClipPlaneOrigin is actually a property, but must be used as a method to correctly pass the arguments
	def ClipPlaneOrigin(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18041, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method ColorMode is actually a property, but must be used as a method to correctly pass the arguments
	def ColorMode(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method ContourColor is actually a property, but must be used as a method to correctly pass the arguments
	def ContourColor(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method ContourLegendLocation is actually a property, but must be used as a method to correctly pass the arguments
	def ContourLegendLocation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18046, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method ContourVecDir is actually a property, but must be used as a method to correctly pass the arguments
	def ContourVecDir(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18027, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method ContourVecID1V2 is actually a property, but must be used as a method to correctly pass the arguments
	def ContourVecID1V2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18048, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method ContourVecID2V2 is actually a property, but must be used as a method to correctly pass the arguments
	def ContourVecID2V2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18049, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method ContourVecID3V2 is actually a property, but must be used as a method to correctly pass the arguments
	def ContourVecID3V2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18050, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method ContourVecOn is actually a property, but must be used as a method to correctly pass the arguments
	def ContourVecOn(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18043, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	# The method Draw is actually a property, but must be used as a method to correctly pass the arguments
	def Draw(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def FitVisible(self, redoBox=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((11, 1),),redoBox
			)

	# The method Function is actually a property, but must be used as a method to correctly pass the arguments
	def Function(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18022, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetFontData(self, pdPointHeight=pythoncom.Missing, pbBold=pythoncom.Missing, pbItalic=pythoncom.Missing, ppcName=pythoncom.Missing):
		return self._ApplyTypes_(20025, 1, (3, 0), ((16389, 2), (16395, 2), (16395, 2), (16392, 2)), 'GetFontData', None,pdPointHeight
			, pbBold, pbItalic, ppcName)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetModelDataContourForm(self, peForm=pythoncom.Missing):
		return self._ApplyTypes_(20021, 1, (3, 0), ((16387, 2),), 'GetModelDataContourForm', None,peForm
			)

	def GetModelDataContourType(self, eVMDC=pythoncom.Missing, ePropType=pythoncom.Missing, eMatlType=pythoncom.Missing, iLocation=pythoncom.Missing):
		return self._ApplyTypes_(20023, 1, (3, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetModelDataContourType', None,eVMDC
			, ePropType, eMatlType, iLocation)

	def GetMultiGroupList(self, nGroup=pythoncom.Missing, nGroupID=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((16387, 2), (16396, 2)), 'GetMultiGroupList', None,nGroup
			, nGroupID)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Initialize(self):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), (),)

	def IsLayerVisible(self, layerID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),layerID
			)

	# The method Label is actually a property, but must be used as a method to correctly pass the arguments
	def Label(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18014, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	# The method Light is actually a property, but must be used as a method to correctly pass the arguments
	def Light(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method LogoLocation is actually a property, but must be used as a method to correctly pass the arguments
	def LogoLocation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18036, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	# The method PostTitlesLocation is actually a property, but must be used as a method to correctly pass the arguments
	def PostTitlesLocation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18045, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	# The method PrevCenter is actually a property, but must be used as a method to correctly pass the arguments
	def PrevCenter(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18015, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	# The method PrevRotation is actually a property, but must be used as a method to correctly pass the arguments
	def PrevRotation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18039, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Redraw(self):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), (),)

	def Regenerate(self):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), (),)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def Rotate(self, oX=defaultNamedNotOptArg, oY=defaultNamedNotOptArg, oZ=defaultNamedNotOptArg, dX=defaultNamedNotOptArg
			, dY=defaultNamedNotOptArg, dZ=defaultNamedNotOptArg, angle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),oX
			, oY, oZ, dX, dY, dZ
			, angle)

	# The method RotationCenter is actually a property, but must be used as a method to correctly pass the arguments
	def RotationCenter(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18034, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method RotationVector is actually a property, but must be used as a method to correctly pass the arguments
	def RotationVector(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18035, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Section2Base is actually a property, but must be used as a method to correctly pass the arguments
	def Section2Base(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18018, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Section2Normal is actually a property, but must be used as a method to correctly pass the arguments
	def Section2Normal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18019, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Section3Base is actually a property, but must be used as a method to correctly pass the arguments
	def Section3Base(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18020, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Section3Normal is actually a property, but must be used as a method to correctly pass the arguments
	def Section3Normal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18021, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method SectionBase is actually a property, but must be used as a method to correctly pass the arguments
	def SectionBase(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18016, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method SectionNormal is actually a property, but must be used as a method to correctly pass the arguments
	def SectionNormal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18017, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	# The method SetAxisLocation is actually a property, but must be used as a method to correctly pass the arguments
	def SetAxisLocation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetClipPlaneNormal is actually a property, but must be used as a method to correctly pass the arguments
	def SetClipPlaneNormal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18042, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetClipPlaneOrigin is actually a property, but must be used as a method to correctly pass the arguments
	def SetClipPlaneOrigin(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18041, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	def SetClippingPlane(self, vOrigin=defaultNamedNotOptArg, vdirection=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((12, 1), (12, 1)),vOrigin
			, vdirection)

	# The method SetColorMode is actually a property, but must be used as a method to correctly pass the arguments
	def SetColorMode(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetContourColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetContourColor(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetContourLegendLocation is actually a property, but must be used as a method to correctly pass the arguments
	def SetContourLegendLocation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18046, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetContourVecDir is actually a property, but must be used as a method to correctly pass the arguments
	def SetContourVecDir(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18027, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetContourVecID1V2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetContourVecID1V2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18048, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetContourVecID2V2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetContourVecID2V2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18049, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetContourVecID3V2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetContourVecID3V2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18050, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetContourVecOn is actually a property, but must be used as a method to correctly pass the arguments
	def SetContourVecOn(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18043, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetDraw is actually a property, but must be used as a method to correctly pass the arguments
	def SetDraw(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	def SetFontData(self, dPointHeight=defaultNamedNotOptArg, bBold=defaultNamedNotOptArg, bItalic=defaultNamedNotOptArg, pcName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((5, 1), (11, 1), (11, 1), (8, 1)),dPointHeight
			, bBold, bItalic, pcName)

	# The method SetFunction is actually a property, but must be used as a method to correctly pass the arguments
	def SetFunction(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18022, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetLabel is actually a property, but must be used as a method to correctly pass the arguments
	def SetLabel(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18014, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def SetLayerVisible(self, layerID=defaultNamedNotOptArg, Visible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((3, 1), (11, 1)),layerID
			, Visible)

	# The method SetLight is actually a property, but must be used as a method to correctly pass the arguments
	def SetLight(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetLogoLocation is actually a property, but must be used as a method to correctly pass the arguments
	def SetLogoLocation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18036, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	def SetModelDataContourForm(self, eForm=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((3, 1),),eForm
			)

	def SetModelDataContourType(self, eType=defaultNamedNotOptArg, ePropType=defaultNamedNotOptArg, eMatlType=defaultNamedNotOptArg, iLocation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),eType
			, ePropType, eMatlType, iLocation)

	def SetMultiGroupList(self, bClear=defaultNamedNotOptArg, nGroups=defaultNamedNotOptArg, nGroupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((11, 1), (3, 1), (12, 1)),bClear
			, nGroups, nGroupID)

	def SetMultiGroupListFromSets(self, bClear=defaultNamedNotOptArg, nShowSetID=defaultNamedNotOptArg, nHideSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1)),bClear
			, nShowSetID, nHideSetID)

	# The method SetPostTitlesLocation is actually a property, but must be used as a method to correctly pass the arguments
	def SetPostTitlesLocation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18045, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetPrevCenter is actually a property, but must be used as a method to correctly pass the arguments
	def SetPrevCenter(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18015, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetPrevRotation is actually a property, but must be used as a method to correctly pass the arguments
	def SetPrevRotation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18039, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetRotationCenter is actually a property, but must be used as a method to correctly pass the arguments
	def SetRotationCenter(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18034, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetRotationVector is actually a property, but must be used as a method to correctly pass the arguments
	def SetRotationVector(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18035, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSection2Base is actually a property, but must be used as a method to correctly pass the arguments
	def SetSection2Base(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18018, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSection2Normal is actually a property, but must be used as a method to correctly pass the arguments
	def SetSection2Normal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18019, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSection3Base is actually a property, but must be used as a method to correctly pass the arguments
	def SetSection3Base(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18020, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSection3Normal is actually a property, but must be used as a method to correctly pass the arguments
	def SetSection3Normal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18021, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSectionBase is actually a property, but must be used as a method to correctly pass the arguments
	def SetSectionBase(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18016, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSectionNormal is actually a property, but must be used as a method to correctly pass the arguments
	def SetSectionNormal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18017, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetSpotlightDir is actually a property, but must be used as a method to correctly pass the arguments
	def SetSpotlightDir(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18028, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetStreamLineLocation is actually a property, but must be used as a method to correctly pass the arguments
	def SetStreamLineLocation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18037, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetTransformPlateVector is actually a property, but must be used as a method to correctly pass the arguments
	def SetTransformPlateVector(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18040, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetUserContourLevel is actually a property, but must be used as a method to correctly pass the arguments
	def SetUserContourLevel(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetUserContourPalette is actually a property, but must be used as a method to correctly pass the arguments
	def SetUserContourPalette(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18038, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetUserContourValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetUserContourValue(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetViewLegendLocation is actually a property, but must be used as a method to correctly pass the arguments
	def SetViewLegendLocation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18044, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetXYOutputDataV2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetXYOutputDataV2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18047, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetXYOutputEntity is actually a property, but must be used as a method to correctly pass the arguments
	def SetXYOutputEntity(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetXYOutputSet is actually a property, but must be used as a method to correctly pass the arguments
	def SetXYOutputSet(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetXYScale is actually a property, but must be used as a method to correctly pass the arguments
	def SetXYScale(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetXYSetRange is actually a property, but must be used as a method to correctly pass the arguments
	def SetXYSetRange(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18023, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setcenter is actually a property, but must be used as a method to correctly pass the arguments
	def Setcenter(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setcolor is actually a property, but must be used as a method to correctly pass the arguments
	def Setcolor(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method Setrotation is actually a property, but must be used as a method to correctly pass the arguments
	def Setrotation(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SpotlightDir is actually a property, but must be used as a method to correctly pass the arguments
	def SpotlightDir(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18028, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method StreamLineLocation is actually a property, but must be used as a method to correctly pass the arguments
	def StreamLineLocation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18037, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method TransformPlateVector is actually a property, but must be used as a method to correctly pass the arguments
	def TransformPlateVector(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18040, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method UserContourLevel is actually a property, but must be used as a method to correctly pass the arguments
	def UserContourLevel(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method UserContourPalette is actually a property, but must be used as a method to correctly pass the arguments
	def UserContourPalette(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18038, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method UserContourValue is actually a property, but must be used as a method to correctly pass the arguments
	def UserContourValue(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method ViewLegendLocation is actually a property, but must be used as a method to correctly pass the arguments
	def ViewLegendLocation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18044, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def Visible(self, Visible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((11, 1),),Visible
			)

	# The method XYOutputDataV2 is actually a property, but must be used as a method to correctly pass the arguments
	def XYOutputDataV2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18047, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method XYOutputEntity is actually a property, but must be used as a method to correctly pass the arguments
	def XYOutputEntity(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method XYOutputSet is actually a property, but must be used as a method to correctly pass the arguments
	def XYOutputSet(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method XYScale is actually a property, but must be used as a method to correctly pass the arguments
	def XYScale(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method XYSetRange is actually a property, but must be used as a method to correctly pass the arguments
	def XYSetRange(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18023, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method center is actually a property, but must be used as a method to correctly pass the arguments
	def center(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method color is actually a property, but must be used as a method to correctly pass the arguments
	def color(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method rotation is actually a property, but must be used as a method to correctly pass the arguments
	def rotation(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AmbientLight": (10038, 2, (5, 0), (), "AmbientLight", None),
		"AnimationDelay": (10045, 2, (3, 0), (), "AnimationDelay", None),
		"AnimationFrames": (10044, 2, (3, 0), (), "AnimationFrames", None),
		"ArrowsToLabel": (10041, 2, (5, 0), (), "ArrowsToLabel", None),
		"Aspect": (10006, 2, (5, 0), (), "Aspect", None),
		"BC": (10023, 2, (3, 0), (), "BC", None),
		"BeamDiagramScale": (10079, 2, (5, 0), (), "BeamDiagramScale", None),
		"BlankNodesOff": (10229, 2, (11, 0), (), "BlankNodesOff", None),
		"ComplexSyncIncrement": (10238, 2, (5, 0), (), "ComplexSyncIncrement", None),
		"ComplexSyncMethod": (10236, 2, (3, 0), (), "ComplexSyncMethod", None),
		"ComplexSyncPhase": (10237, 2, (5, 0), (), "ComplexSyncPhase", None),
		"Contour": (10003, 2, (3, 0), (), "Contour", None),
		"ContourCornerData": (10234, 2, (11, 0), (), "ContourCornerData", None),
		"ContourDataConversion": (10235, 2, (3, 0), (), "ContourDataConversion", None),
		"ContourDataSelection": (10230, 2, (3, 0), (), "ContourDataSelection", None),
		"ContourDataV2": (10385, 2, (3, 0), (), "ContourDataV2", None),
		"ContourElemBreakAngle": (10134, 2, (5, 0), (), "ContourElemBreakAngle", None),
		"ContourElemBreakColor": (10132, 2, (11, 0), (), "ContourElemBreakColor", None),
		"ContourElemBreakGeom": (10133, 2, (11, 0), (), "ContourElemBreakGeom", None),
		"ContourElemBreakLayer": (10131, 2, (11, 0), (), "ContourElemBreakLayer", None),
		"ContourElemBreakLinearParabolic": (10417, 2, (11, 0), (), "ContourElemBreakLinearParabolic", None),
		"ContourElemBreakMatl": (10130, 2, (11, 0), (), "ContourElemBreakMatl", None),
		"ContourElemBreakProp": (10129, 2, (11, 0), (), "ContourElemBreakProp", None),
		"ContourElemUnaveraged": (10128, 2, (11, 0), (), "ContourElemUnaveraged", None),
		"ContourGroup": (10198, 2, (3, 0), (), "ContourGroup", None),
		"ContourLabelDigits": (10103, 2, (3, 0), (), "ContourLabelDigits", None),
		"ContourLabelFreq": (10049, 2, (3, 0), (), "ContourLabelFreq", None),
		"ContourLegendDigits": (10104, 2, (3, 0), (), "ContourLegendDigits", None),
		"ContourLegendFreq": (10050, 2, (3, 0), (), "ContourLegendFreq", None),
		"ContourLegendHorizontal": (10254, 2, (11, 0), (), "ContourLegendHorizontal", None),
		"ContourLegendLockOrientation": (10268, 2, (11, 0), (), "ContourLegendLockOrientation", None),
		"ContourLegendReversed": (10255, 2, (11, 0), (), "ContourLegendReversed", None),
		"ContourLegendShrinkPct": (10193, 2, (5, 0), (), "ContourLegendShrinkPct", None),
		"ContourLegendTopLeftLabel": (10267, 2, (11, 0), (), "ContourLegendTopLeftLabel", None),
		"ContourLegendWidthPct": (10259, 2, (5, 0), (), "ContourLegendWidthPct", None),
		"ContourVecAddlV2": (10386, 2, (3, 0), (), "ContourVecAddlV2", None),
		"ContourVecAutoOrient": (10241, 2, (11, 0), (), "ContourVecAutoOrient", None),
		"ContourVecAutoVec": (10240, 2, (11, 0), (), "ContourVecAutoVec", None),
		"ContourVecCSys": (10098, 2, (3, 0), (), "ContourVecCSys", None),
		"ContourVecColor1": (10249, 2, (3, 0), (), "ContourVecColor1", None),
		"ContourVecColor2": (10108, 2, (3, 0), (), "ContourVecColor2", None),
		"ContourVecColor3": (10109, 2, (3, 0), (), "ContourVecColor3", None),
		"ContourVecDigits": (10217, 2, (3, 0), (), "ContourVecDigits", None),
		"ContourVecHide": (10093, 2, (11, 0), (), "ContourVecHide", None),
		"ContourVecLength": (10218, 2, (5, 0), (), "ContourVecLength", None),
		"ContourVecMinLen": (10248, 2, (5, 0), (), "ContourVecMinLen", None),
		"ContourVecMinVec": (10247, 2, (5, 0), (), "ContourVecMinVec", None),
		"ContourVecMinVecOn": (10246, 2, (11, 0), (), "ContourVecMinVecOn", None),
		"ContourVecMode": (10094, 2, (3, 0), (), "ContourVecMode", None),
		"ContourVector1V2": (10390, 2, (3, 0), (), "ContourVector1V2", None),
		"ContourVector2V2": (10391, 2, (3, 0), (), "ContourVector2V2", None),
		"ContourVector3V2": (10392, 2, (3, 0), (), "ContourVector3V2", None),
		"CriteriaMax": (10052, 2, (5, 0), (), "CriteriaMax", None),
		"CriteriaMin": (10053, 2, (5, 0), (), "CriteriaMin", None),
		"CurveConnectFree": (10410, 2, (11, 0), (), "CurveConnectFree", None),
		"CurveConnectFreeColor": (10414, 2, (3, 0), (), "CurveConnectFreeColor", None),
		"CurveConnectManifold": (10411, 2, (11, 0), (), "CurveConnectManifold", None),
		"CurveConnectManifoldColor": (10415, 2, (3, 0), (), "CurveConnectManifoldColor", None),
		"CurveConnectNonManifold": (10412, 2, (11, 0), (), "CurveConnectNonManifold", None),
		"CurveConnectNonManifoldColor": (10416, 2, (3, 0), (), "CurveConnectNonManifoldColor", None),
		"CurveConnectWirebody": (10409, 2, (11, 0), (), "CurveConnectWirebody", None),
		"CurveConnectWirebodyColor": (10413, 2, (3, 0), (), "CurveConnectWirebodyColor", None),
		"DO_BCs_BaseExponent": (10299, 2, (3, 0), (), "DO_BCs_BaseExponent", None),
		"DO_BCs_BeforeDecimalSeparator": (10290, 2, (3, 0), (), "DO_BCs_BeforeDecimalSeparator", None),
		"DO_BCs_DecimalPlaces": (10297, 2, (3, 0), (), "DO_BCs_DecimalPlaces", None),
		"DO_BCs_Exponent": (10301, 2, (11, 0), (), "DO_BCs_Exponent", None),
		"DO_BCs_ExponentDigits": (10293, 2, (3, 0), (), "DO_BCs_ExponentDigits", None),
		"DO_BCs_LeadingZeros": (10295, 2, (3, 0), (), "DO_BCs_LeadingZeros", None),
		"DO_BCs_MaxDigits": (10298, 2, (3, 0), (), "DO_BCs_MaxDigits", None),
		"DO_BCs_MinimumExponentSize": (10291, 2, (3, 0), (), "DO_BCs_MinimumExponentSize", None),
		"DO_BCs_Option": (10287, 2, (3, 0), (), "DO_BCs_Option", None),
		"DO_BCs_OriginalDigits": (10300, 2, (3, 0), (), "DO_BCs_OriginalDigits", None),
		"DO_BCs_RoundToZero": (10288, 2, (11, 0), (), "DO_BCs_RoundToZero", None),
		"DO_BCs_RoundToZeroValue": (10289, 2, (5, 0), (), "DO_BCs_RoundToZeroValue", None),
		"DO_BCs_SigFigs": (10294, 2, (3, 0), (), "DO_BCs_SigFigs", None),
		"DO_BCs_TrailingZeros": (10296, 2, (3, 0), (), "DO_BCs_TrailingZeros", None),
		"DO_BeamDiagram_BaseExponent": (10406, 2, (3, 0), (), "DO_BeamDiagram_BaseExponent", None),
		"DO_BeamDiagram_BeforeDecimalSeparator": (10397, 2, (3, 0), (), "DO_BeamDiagram_BeforeDecimalSeparator", None),
		"DO_BeamDiagram_DecimalPlaces": (10404, 2, (3, 0), (), "DO_BeamDiagram_DecimalPlaces", None),
		"DO_BeamDiagram_Exponent": (10408, 2, (11, 0), (), "DO_BeamDiagram_Exponent", None),
		"DO_BeamDiagram_ExponentDigits": (10400, 2, (3, 0), (), "DO_BeamDiagram_ExponentDigits", None),
		"DO_BeamDiagram_LeadingZeros": (10402, 2, (3, 0), (), "DO_BeamDiagram_LeadingZeros", None),
		"DO_BeamDiagram_MaxDigits": (10405, 2, (3, 0), (), "DO_BeamDiagram_MaxDigits", None),
		"DO_BeamDiagram_MinimumExponentSize": (10398, 2, (3, 0), (), "DO_BeamDiagram_MinimumExponentSize", None),
		"DO_BeamDiagram_Option": (10394, 2, (3, 0), (), "DO_BeamDiagram_Option", None),
		"DO_BeamDiagram_OriginalDigits": (10407, 2, (3, 0), (), "DO_BeamDiagram_OriginalDigits", None),
		"DO_BeamDiagram_RoundToZero": (10395, 2, (11, 0), (), "DO_BeamDiagram_RoundToZero", None),
		"DO_BeamDiagram_RoundToZeroValue": (10396, 2, (5, 0), (), "DO_BeamDiagram_RoundToZeroValue", None),
		"DO_BeamDiagram_SigFigs": (10401, 2, (3, 0), (), "DO_BeamDiagram_SigFigs", None),
		"DO_BeamDiagram_TrailingZeros": (10403, 2, (3, 0), (), "DO_BeamDiagram_TrailingZeros", None),
		"DO_ContourArrow_BaseExponent": (10347, 2, (3, 0), (), "DO_ContourArrow_BaseExponent", None),
		"DO_ContourArrow_BeforeDecimalSeparator": (10338, 2, (3, 0), (), "DO_ContourArrow_BeforeDecimalSeparator", None),
		"DO_ContourArrow_DecimalPlaces": (10345, 2, (3, 0), (), "DO_ContourArrow_DecimalPlaces", None),
		"DO_ContourArrow_Exponent": (10349, 2, (11, 0), (), "DO_ContourArrow_Exponent", None),
		"DO_ContourArrow_ExponentDigits": (10341, 2, (3, 0), (), "DO_ContourArrow_ExponentDigits", None),
		"DO_ContourArrow_LeadingZeros": (10343, 2, (3, 0), (), "DO_ContourArrow_LeadingZeros", None),
		"DO_ContourArrow_MaxDigits": (10346, 2, (3, 0), (), "DO_ContourArrow_MaxDigits", None),
		"DO_ContourArrow_MinimumExponentSize": (10339, 2, (3, 0), (), "DO_ContourArrow_MinimumExponentSize", None),
		"DO_ContourArrow_Option": (10335, 2, (3, 0), (), "DO_ContourArrow_Option", None),
		"DO_ContourArrow_OriginalDigits": (10348, 2, (3, 0), (), "DO_ContourArrow_OriginalDigits", None),
		"DO_ContourArrow_RoundToZero": (10336, 2, (11, 0), (), "DO_ContourArrow_RoundToZero", None),
		"DO_ContourArrow_RoundToZeroValue": (10337, 2, (5, 0), (), "DO_ContourArrow_RoundToZeroValue", None),
		"DO_ContourArrow_SigFigs": (10342, 2, (3, 0), (), "DO_ContourArrow_SigFigs", None),
		"DO_ContourArrow_TrailingZeros": (10344, 2, (3, 0), (), "DO_ContourArrow_TrailingZeros", None),
		"DO_ContourLegend_BaseExponent": (10331, 2, (3, 0), (), "DO_ContourLegend_BaseExponent", None),
		"DO_ContourLegend_BeforeDecimalSeparator": (10322, 2, (3, 0), (), "DO_ContourLegend_BeforeDecimalSeparator", None),
		"DO_ContourLegend_DecimalPlaces": (10329, 2, (3, 0), (), "DO_ContourLegend_DecimalPlaces", None),
		"DO_ContourLegend_Exponent": (10333, 2, (11, 0), (), "DO_ContourLegend_Exponent", None),
		"DO_ContourLegend_ExponentDigits": (10325, 2, (3, 0), (), "DO_ContourLegend_ExponentDigits", None),
		"DO_ContourLegend_LeadingZeros": (10327, 2, (3, 0), (), "DO_ContourLegend_LeadingZeros", None),
		"DO_ContourLegend_MaxDigits": (10330, 2, (3, 0), (), "DO_ContourLegend_MaxDigits", None),
		"DO_ContourLegend_MinimumExponentSize": (10323, 2, (3, 0), (), "DO_ContourLegend_MinimumExponentSize", None),
		"DO_ContourLegend_Option": (10319, 2, (3, 0), (), "DO_ContourLegend_Option", None),
		"DO_ContourLegend_OriginalDigits": (10332, 2, (3, 0), (), "DO_ContourLegend_OriginalDigits", None),
		"DO_ContourLegend_RoundToZero": (10320, 2, (11, 0), (), "DO_ContourLegend_RoundToZero", None),
		"DO_ContourLegend_RoundToZeroValue": (10321, 2, (5, 0), (), "DO_ContourLegend_RoundToZeroValue", None),
		"DO_ContourLegend_SigFigs": (10326, 2, (3, 0), (), "DO_ContourLegend_SigFigs", None),
		"DO_ContourLegend_TrailingZeros": (10328, 2, (3, 0), (), "DO_ContourLegend_TrailingZeros", None),
		"DO_Criteria_BaseExponent": (10315, 2, (3, 0), (), "DO_Criteria_BaseExponent", None),
		"DO_Criteria_BeforeDecimalSeparator": (10306, 2, (3, 0), (), "DO_Criteria_BeforeDecimalSeparator", None),
		"DO_Criteria_DecimalPlaces": (10313, 2, (3, 0), (), "DO_Criteria_DecimalPlaces", None),
		"DO_Criteria_Exponent": (10317, 2, (11, 0), (), "DO_Criteria_Exponent", None),
		"DO_Criteria_ExponentDigits": (10309, 2, (3, 0), (), "DO_Criteria_ExponentDigits", None),
		"DO_Criteria_LeadingZeros": (10311, 2, (3, 0), (), "DO_Criteria_LeadingZeros", None),
		"DO_Criteria_MaxDigits": (10314, 2, (3, 0), (), "DO_Criteria_MaxDigits", None),
		"DO_Criteria_MinimumExponentSize": (10307, 2, (3, 0), (), "DO_Criteria_MinimumExponentSize", None),
		"DO_Criteria_Option": (10303, 2, (3, 0), (), "DO_Criteria_Option", None),
		"DO_Criteria_OriginalDigits": (10316, 2, (3, 0), (), "DO_Criteria_OriginalDigits", None),
		"DO_Criteria_RoundToZero": (10304, 2, (11, 0), (), "DO_Criteria_RoundToZero", None),
		"DO_Criteria_RoundToZeroValue": (10305, 2, (5, 0), (), "DO_Criteria_RoundToZeroValue", None),
		"DO_Criteria_SigFigs": (10310, 2, (3, 0), (), "DO_Criteria_SigFigs", None),
		"DO_Criteria_TrailingZeros": (10312, 2, (3, 0), (), "DO_Criteria_TrailingZeros", None),
		"DO_Deformed_BaseExponent": (10379, 2, (3, 0), (), "DO_Deformed_BaseExponent", None),
		"DO_Deformed_BeforeDecimalSeparator": (10370, 2, (3, 0), (), "DO_Deformed_BeforeDecimalSeparator", None),
		"DO_Deformed_DecimalPlaces": (10377, 2, (3, 0), (), "DO_Deformed_DecimalPlaces", None),
		"DO_Deformed_Exponent": (10381, 2, (11, 0), (), "DO_Deformed_Exponent", None),
		"DO_Deformed_ExponentDigits": (10373, 2, (3, 0), (), "DO_Deformed_ExponentDigits", None),
		"DO_Deformed_LeadingZeros": (10375, 2, (3, 0), (), "DO_Deformed_LeadingZeros", None),
		"DO_Deformed_MaxDigits": (10378, 2, (3, 0), (), "DO_Deformed_MaxDigits", None),
		"DO_Deformed_MinimumExponentSize": (10371, 2, (3, 0), (), "DO_Deformed_MinimumExponentSize", None),
		"DO_Deformed_Option": (10367, 2, (3, 0), (), "DO_Deformed_Option", None),
		"DO_Deformed_OriginalDigits": (10380, 2, (3, 0), (), "DO_Deformed_OriginalDigits", None),
		"DO_Deformed_RoundToZero": (10368, 2, (11, 0), (), "DO_Deformed_RoundToZero", None),
		"DO_Deformed_RoundToZeroValue": (10369, 2, (5, 0), (), "DO_Deformed_RoundToZeroValue", None),
		"DO_Deformed_SigFigs": (10374, 2, (3, 0), (), "DO_Deformed_SigFigs", None),
		"DO_Deformed_TrailingZeros": (10376, 2, (3, 0), (), "DO_Deformed_TrailingZeros", None),
		"DO_FreeBody_BaseExponent": (10363, 2, (3, 0), (), "DO_FreeBody_BaseExponent", None),
		"DO_FreeBody_BeforeDecimalSeparator": (10354, 2, (3, 0), (), "DO_FreeBody_BeforeDecimalSeparator", None),
		"DO_FreeBody_DecimalPlaces": (10361, 2, (3, 0), (), "DO_FreeBody_DecimalPlaces", None),
		"DO_FreeBody_Exponent": (10365, 2, (11, 0), (), "DO_FreeBody_Exponent", None),
		"DO_FreeBody_ExponentDigits": (10357, 2, (3, 0), (), "DO_FreeBody_ExponentDigits", None),
		"DO_FreeBody_LeadingZeros": (10359, 2, (3, 0), (), "DO_FreeBody_LeadingZeros", None),
		"DO_FreeBody_MaxDigits": (10362, 2, (3, 0), (), "DO_FreeBody_MaxDigits", None),
		"DO_FreeBody_MinimumExponentSize": (10355, 2, (3, 0), (), "DO_FreeBody_MinimumExponentSize", None),
		"DO_FreeBody_Option": (10351, 2, (3, 0), (), "DO_FreeBody_Option", None),
		"DO_FreeBody_OriginalDigits": (10364, 2, (3, 0), (), "DO_FreeBody_OriginalDigits", None),
		"DO_FreeBody_RoundToZero": (10352, 2, (11, 0), (), "DO_FreeBody_RoundToZero", None),
		"DO_FreeBody_RoundToZeroValue": (10353, 2, (5, 0), (), "DO_FreeBody_RoundToZeroValue", None),
		"DO_FreeBody_SigFigs": (10358, 2, (3, 0), (), "DO_FreeBody_SigFigs", None),
		"DO_FreeBody_TrailingZeros": (10360, 2, (3, 0), (), "DO_FreeBody_TrailingZeros", None),
		"DO_Loads_BaseExponent": (10283, 2, (3, 0), (), "DO_Loads_BaseExponent", None),
		"DO_Loads_BeforeDecimalSeparator": (10274, 2, (3, 0), (), "DO_Loads_BeforeDecimalSeparator", None),
		"DO_Loads_DecimalPlaces": (10281, 2, (3, 0), (), "DO_Loads_DecimalPlaces", None),
		"DO_Loads_Exponent": (10285, 2, (11, 0), (), "DO_Loads_Exponent", None),
		"DO_Loads_ExponentDigits": (10277, 2, (3, 0), (), "DO_Loads_ExponentDigits", None),
		"DO_Loads_LeadingZeros": (10279, 2, (3, 0), (), "DO_Loads_LeadingZeros", None),
		"DO_Loads_MaxDigits": (10282, 2, (3, 0), (), "DO_Loads_MaxDigits", None),
		"DO_Loads_MinimumExponentSize": (10275, 2, (3, 0), (), "DO_Loads_MinimumExponentSize", None),
		"DO_Loads_Option": (10271, 2, (3, 0), (), "DO_Loads_Option", None),
		"DO_Loads_OriginalDigits": (10284, 2, (3, 0), (), "DO_Loads_OriginalDigits", None),
		"DO_Loads_RoundToZero": (10272, 2, (11, 0), (), "DO_Loads_RoundToZero", None),
		"DO_Loads_RoundToZeroValue": (10273, 2, (5, 0), (), "DO_Loads_RoundToZeroValue", None),
		"DO_Loads_SigFigs": (10278, 2, (3, 0), (), "DO_Loads_SigFigs", None),
		"DO_Loads_TrailingZeros": (10280, 2, (3, 0), (), "DO_Loads_TrailingZeros", None),
		"DeformDataV2": (10384, 2, (3, 0), (), "DeformDataV2", None),
		"DeformRelativeToNode": (10219, 2, (3, 0), (), "DeformRelativeToNode", None),
		"Deformed": (10002, 2, (3, 0), (), "Deformed", None),
		"DeformedAbsScale": (10043, 2, (5, 0), (), "DeformedAbsScale", None),
		"DeformedRelScale": (10042, 2, (5, 0), (), "DeformedRelScale", None),
		"DiscreteValueOn": (10260, 2, (11, 0), (), "DiscreteValueOn", None),
		"DiscreteValueSetID": (10261, 2, (3, 0), (), "DiscreteValueSetID", None),
		"ElementNoResultMode": (10269, 2, (3, 0), (), "ElementNoResultMode", None),
		"FeatureLineAngle": (10251, 2, (5, 0), (), "FeatureLineAngle", None),
		"FinalOutputSet": (10027, 2, (3, 0), (), "FinalOutputSet", None),
		"FreebodyDigits": (10222, 2, (3, 0), (), "FreebodyDigits", None),
		"FreebodyLength": (10223, 2, (5, 0), (), "FreebodyLength", None),
		"FreebodyMinVecFlag": (10116, 2, (11, 0), (), "FreebodyMinVecFlag", None),
		"FreebodyNodalForceFactor": (10226, 2, (5, 0), (), "FreebodyNodalForceFactor", None),
		"FreebodyNodalMomentFactor": (10227, 2, (5, 0), (), "FreebodyNodalMomentFactor", None),
		"FreebodyShowMag": (10123, 2, (5, 0), (), "FreebodyShowMag", None),
		"FreebodyShowSum": (10115, 2, (11, 0), (), "FreebodyShowSum", None),
		"FreebodyTotalForceFactor": (10224, 2, (5, 0), (), "FreebodyTotalForceFactor", None),
		"FreebodyTotalMomentFactor": (10225, 2, (5, 0), (), "FreebodyTotalMomentFactor", None),
		"FreebodyUnitsPerLength": (10228, 2, (5, 0), (), "FreebodyUnitsPerLength", None),
		"GlobalPlyLocation": (10216, 2, (3, 0), (), "GlobalPlyLocation", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"InterOccularDist": (10035, 2, (5, 0), (), "InterOccularDist", None),
		"IsosurfaceValue": (10105, 2, (5, 0), (), "IsosurfaceValue", None),
		"LabelGroup": (10250, 2, (3, 0), (), "LabelGroup", None),
		"LoadVecLength": (10070, 2, (5, 0), (), "LoadVecLength", None),
		"LoadVectorMinScale": (10106, 2, (5, 0), (), "LoadVectorMinScale", None),
		"Magnification": (10005, 2, (5, 0), (), "Magnification", None),
		"MaxUserContourPalette": (10200, 2, (3, 0), (), "MaxUserContourPalette", None),
		"Mode": (10000, 2, (3, 0), (), "Mode", None),
		"ModelDataContourGroup": (10263, 2, (3, 0), (), "ModelDataContourGroup", None),
		"ModelDataContourLabels": (10264, 2, (11, 0), (), "ModelDataContourLabels", None),
		"ModelDataContourOn": (10262, 2, (11, 0), (), "ModelDataContourOn", None),
		"OtherVecLength": (10071, 2, (5, 0), (), "OtherVecLength", None),
		"OutputSet": (10026, 2, (3, 0), (), "OutputSet", None),
		"OutputSetInc": (10028, 2, (3, 0), (), "OutputSetInc", None),
		"PerspectiveAngle": (10037, 2, (5, 0), (), "PerspectiveAngle", None),
		"PerspectiveDist": (10034, 2, (5, 0), (), "PerspectiveDist", None),
		"PostTitlesJustification": (10253, 2, (3, 0), (), "PostTitlesJustification", None),
		"PostTitlesLockJustification": (10266, 2, (11, 0), (), "PostTitlesLockJustification", None),
		"PrevMagnification": (10073, 2, (5, 0), (), "PrevMagnification", None),
		"PrevWindowBottom": (10018, 2, (5, 0), (), "PrevWindowBottom", None),
		"PrevWindowLeft": (10015, 2, (5, 0), (), "PrevWindowLeft", None),
		"PrevWindowRight": (10017, 2, (5, 0), (), "PrevWindowRight", None),
		"PrevWindowTop": (10016, 2, (5, 0), (), "PrevWindowTop", None),
		"PrevWindowXmax": (10020, 2, (5, 0), (), "PrevWindowXmax", None),
		"PrevWindowXmin": (10019, 2, (5, 0), (), "PrevWindowXmin", None),
		"PrevWindowYmax": (10022, 2, (5, 0), (), "PrevWindowYmax", None),
		"PrevWindowYmin": (10021, 2, (5, 0), (), "PrevWindowYmin", None),
		"RenderLogDepthOffset": (10382, 2, (5, 0), (), "RenderLogDepthOffset", None),
		"RenderPushForward": (10107, 2, (5, 0), (), "RenderPushForward", None),
		"RenderPushLabel": (10184, 2, (3, 0), (), "RenderPushLabel", None),
		"RenderPushUndeformed": (10183, 2, (5, 0), (), "RenderPushUndeformed", None),
		"RenderPushUnit": (10182, 2, (5, 0), (), "RenderPushUnit", None),
		"RotateAroundModelAxes": (10195, 2, (11, 0), (), "RotateAroundModelAxes", None),
		"RotateCSys": (10202, 2, (3, 0), (), "RotateCSys", None),
		"RotateSingleAxis": (10196, 2, (11, 0), (), "RotateSingleAxis", None),
		"RotateUseAxis": (10197, 2, (11, 0), (), "RotateUseAxis", None),
		"RotationCenterOn": (10135, 2, (11, 0), (), "RotationCenterOn", None),
		"Section1On": (10076, 2, (11, 0), (), "Section1On", None),
		"Section2On": (10077, 2, (11, 0), (), "Section2On", None),
		"Section3On": (10078, 2, (11, 0), (), "Section3On", None),
		"SectionCapMode": (10270, 2, (3, 0), (), "SectionCapMode", None),
		"SectionCount": (10086, 2, (3, 0), (), "SectionCount", None),
		"SectionMode": (10087, 2, (11, 0), (), "SectionMode", None),
		"SectionPlaneMode": (10075, 2, (11, 0), (), "SectionPlaneMode", None),
		"SectionSpacing": (10085, 2, (5, 0), (), "SectionSpacing", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"ShowAllLayers": (10074, 2, (11, 0), (), "ShowAllLayers", None),
		"ShrinkFactor": (10036, 2, (5, 0), (), "ShrinkFactor", None),
		"SpotlightDist": (10101, 2, (5, 0), (), "SpotlightDist", None),
		"StreamLineID": (10186, 2, (3, 0), (), "StreamLineID", None),
		"StreamLineMaxLenFactor": (10189, 2, (5, 0), (), "StreamLineMaxLenFactor", None),
		"StreamLineMaxTime": (10191, 2, (5, 0), (), "StreamLineMaxTime", None),
		"StreamLineMinSpeedPct": (10190, 2, (5, 0), (), "StreamLineMinSpeedPct", None),
		"StreamLineOpt": (10185, 2, (3, 0), (), "StreamLineOpt", None),
		"StreamLineRungeKuttaOrder": (10187, 2, (3, 0), (), "StreamLineRungeKuttaOrder", None),
		"StreamLineTolerance": (10188, 2, (5, 0), (), "StreamLineTolerance", None),
		"TraceIDV2": (10393, 2, (3, 0), (), "TraceIDV2", None),
		"TraceOpt": (10091, 2, (3, 0), (), "TraceOpt", None),
		"TransformDeformCSys": (10204, 2, (3, 0), (), "TransformDeformCSys", None),
		"TransformDeformMode": (10203, 2, (3, 0), (), "TransformDeformMode", None),
		"TransformDeformX": (10205, 2, (11, 0), (), "TransformDeformX", None),
		"TransformDeformXInput": (10242, 2, (11, 0), (), "TransformDeformXInput", None),
		"TransformDeformY": (10206, 2, (11, 0), (), "TransformDeformY", None),
		"TransformDeformYInput": (10243, 2, (11, 0), (), "TransformDeformYInput", None),
		"TransformDeformZ": (10207, 2, (11, 0), (), "TransformDeformZ", None),
		"TransformDeformZInput": (10244, 2, (11, 0), (), "TransformDeformZInput", None),
		"TransformNodalCSys": (10209, 2, (3, 0), (), "TransformNodalCSys", None),
		"TransformNodalMode": (10208, 2, (3, 0), (), "TransformNodalMode", None),
		"TransformPlateCSys": (10211, 2, (3, 0), (), "TransformPlateCSys", None),
		"TransformPlateDOF": (10212, 2, (3, 0), (), "TransformPlateDOF", None),
		"TransformPlateMode": (10210, 2, (3, 0), (), "TransformPlateMode", None),
		"TransformPlateTolerance": (10245, 2, (5, 0), (), "TransformPlateTolerance", None),
		"TransformSolidCSys": (10215, 2, (3, 0), (), "TransformSolidCSys", None),
		"TransformSolidMode": (10214, 2, (3, 0), (), "TransformSolidMode", None),
		"TransparencyPercent": (10194, 2, (3, 0), (), "TransparencyPercent", None),
		"UndefAnimation": (10089, 2, (11, 0), (), "UndefAnimation", None),
		"UserContourCount": (10048, 2, (3, 0), (), "UserContourCount", None),
		"ViewLegendJustification": (10252, 2, (3, 0), (), "ViewLegendJustification", None),
		"ViewLegendLockJustification": (10265, 2, (11, 0), (), "ViewLegendLockJustification", None),
		"WindowBackColor": (10014, 2, (3, 0), (), "WindowBackColor", None),
		"WindowBackColor2": (10139, 2, (3, 0), (), "WindowBackColor2", None),
		"WindowBackColor3": (10177, 2, (3, 0), (), "WindowBackColor3", None),
		"WindowBorder": (10012, 2, (3, 0), (), "WindowBorder", None),
		"WindowEraseBack": (10013, 2, (11, 0), (), "WindowEraseBack", None),
		"WindowLogo": (10180, 2, (11, 0), (), "WindowLogo", None),
		"WindowShadeBack": (10140, 2, (11, 0), (), "WindowShadeBack", None),
		"WindowShadeBackOpt": (10178, 2, (3, 0), (), "WindowShadeBackOpt", None),
		"WindowShadeHorizon": (10179, 2, (3, 0), (), "WindowShadeHorizon", None),
		"WindowTitleBar": (10011, 2, (11, 0), (), "WindowTitleBar", None),
		"XYCSys": (10061, 2, (3, 0), (), "XYCSys", None),
		"XYDirection": (10062, 2, (3, 0), (), "XYDirection", None),
		"XYSubtitle": (10060, 2, (8, 0), (), "XYSubtitle", None),
		"XYTitle": (10059, 2, (8, 0), (), "XYTitle", None),
		"XYXTics": (10063, 2, (3, 0), (), "XYXTics", None),
		"XYXmax": (10055, 2, (5, 0), (), "XYXmax", None),
		"XYXmin": (10054, 2, (5, 0), (), "XYXmin", None),
		"XYYTics": (10064, 2, (3, 0), (), "XYYTics", None),
		"XYymax": (10057, 2, (5, 0), (), "XYymax", None),
		"XYymin": (10056, 2, (5, 0), (), "XYymin", None),
		"group": (10025, 2, (3, 0), (), "group", None),
		"load": (10024, 2, (3, 0), (), "load", None),
		"title": (10138, 2, (8, 0), (), "title", None),
		"vAxisLocation": (10147, 2, (12, 0), (), "vAxisLocation", None),
		"vCenter": (10142, 2, (12, 0), (), "vCenter", None),
		"vClipPlaneNormal": (10221, 2, (12, 0), (), "vClipPlaneNormal", None),
		"vClipPlaneOrigin": (10220, 2, (12, 0), (), "vClipPlaneOrigin", None),
		"vColor": (10153, 2, (12, 0), (), "vColor", None),
		"vColorMode": (10152, 2, (12, 0), (), "vColorMode", None),
		"vContourColor": (10150, 2, (12, 0), (), "vContourColor", None),
		"vContourLegendLocation": (10258, 2, (12, 0), (), "vContourLegendLocation", None),
		"vContourVecDir": (10168, 2, (12, 0), (), "vContourVecDir", None),
		"vContourVecID1V2": (10387, 2, (12, 0), (), "vContourVecID1V2", None),
		"vContourVecID2V2": (10388, 2, (12, 0), (), "vContourVecID2V2", None),
		"vContourVecID3V2": (10389, 2, (12, 0), (), "vContourVecID3V2", None),
		"vContourVecOn": (10239, 2, (12, 0), (), "vContourVecOn", None),
		"vDraw": (10154, 2, (12, 0), (), "vDraw", None),
		"vLabel": (10155, 2, (12, 0), (), "vLabel", None),
		"vLight": (10146, 2, (12, 0), (), "vLight", None),
		"vLogoLocation": (10181, 2, (12, 0), (), "vLogoLocation", None),
		"vPostTitlesLocation": (10257, 2, (12, 0), (), "vPostTitlesLocation", None),
		"vPrevCenter": (10156, 2, (12, 0), (), "vPrevCenter", None),
		"vPrevRotation": (10201, 2, (12, 0), (), "vPrevRotation", None),
		"vRotation": (10141, 2, (12, 0), (), "vRotation", None),
		"vRotationCenter": (10175, 2, (12, 0), (), "vRotationCenter", None),
		"vRotationVector": (10176, 2, (12, 0), (), "vRotationVector", None),
		"vSection2Base": (10159, 2, (12, 0), (), "vSection2Base", None),
		"vSection2Normal": (10160, 2, (12, 0), (), "vSection2Normal", None),
		"vSection3Base": (10161, 2, (12, 0), (), "vSection3Base", None),
		"vSection3Normal": (10162, 2, (12, 0), (), "vSection3Normal", None),
		"vSectionBase": (10157, 2, (12, 0), (), "vSectionBase", None),
		"vSectionNormal": (10158, 2, (12, 0), (), "vSectionNormal", None),
		"vSpotlightDir": (10169, 2, (12, 0), (), "vSpotlightDir", None),
		"vStreamLineLocation": (10192, 2, (12, 0), (), "vStreamLineLocation", None),
		"vTransformPlateVector": (10213, 2, (12, 0), (), "vTransformPlateVector", None),
		"vUserContourLevel": (10148, 2, (12, 0), (), "vUserContourLevel", None),
		"vUserContourPalette": (10199, 2, (12, 0), (), "vUserContourPalette", None),
		"vUserContourValue": (10149, 2, (12, 0), (), "vUserContourValue", None),
		"vViewLegendLocation": (10256, 2, (12, 0), (), "vViewLegendLocation", None),
		"vXYOutputDataV2": (10383, 2, (12, 0), (), "vXYOutputDataV2", None),
		"vXYOutputEntity": (10145, 2, (12, 0), (), "vXYOutputEntity", None),
		"vXYOutputSet": (10143, 2, (12, 0), (), "vXYOutputSet", None),
		"vXYScale": (10151, 2, (12, 0), (), "vXYScale", None),
		"vXYSetRange": (10164, 2, (12, 0), (), "vXYSetRange", None),
		"vfunction": (10163, 2, (12, 0), (), "vfunction", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AmbientLight" : ((10038, LCID, 4, 0),()),
		"AnimationDelay" : ((10045, LCID, 4, 0),()),
		"AnimationFrames" : ((10044, LCID, 4, 0),()),
		"ArrowsToLabel" : ((10041, LCID, 4, 0),()),
		"Aspect" : ((10006, LCID, 4, 0),()),
		"BC" : ((10023, LCID, 4, 0),()),
		"BeamDiagramScale" : ((10079, LCID, 4, 0),()),
		"BlankNodesOff" : ((10229, LCID, 4, 0),()),
		"ComplexSyncIncrement" : ((10238, LCID, 4, 0),()),
		"ComplexSyncMethod" : ((10236, LCID, 4, 0),()),
		"ComplexSyncPhase" : ((10237, LCID, 4, 0),()),
		"Contour" : ((10003, LCID, 4, 0),()),
		"ContourCornerData" : ((10234, LCID, 4, 0),()),
		"ContourDataConversion" : ((10235, LCID, 4, 0),()),
		"ContourDataSelection" : ((10230, LCID, 4, 0),()),
		"ContourDataV2" : ((10385, LCID, 4, 0),()),
		"ContourElemBreakAngle" : ((10134, LCID, 4, 0),()),
		"ContourElemBreakColor" : ((10132, LCID, 4, 0),()),
		"ContourElemBreakGeom" : ((10133, LCID, 4, 0),()),
		"ContourElemBreakLayer" : ((10131, LCID, 4, 0),()),
		"ContourElemBreakLinearParabolic" : ((10417, LCID, 4, 0),()),
		"ContourElemBreakMatl" : ((10130, LCID, 4, 0),()),
		"ContourElemBreakProp" : ((10129, LCID, 4, 0),()),
		"ContourElemUnaveraged" : ((10128, LCID, 4, 0),()),
		"ContourGroup" : ((10198, LCID, 4, 0),()),
		"ContourLabelDigits" : ((10103, LCID, 4, 0),()),
		"ContourLabelFreq" : ((10049, LCID, 4, 0),()),
		"ContourLegendDigits" : ((10104, LCID, 4, 0),()),
		"ContourLegendFreq" : ((10050, LCID, 4, 0),()),
		"ContourLegendHorizontal" : ((10254, LCID, 4, 0),()),
		"ContourLegendLockOrientation" : ((10268, LCID, 4, 0),()),
		"ContourLegendReversed" : ((10255, LCID, 4, 0),()),
		"ContourLegendShrinkPct" : ((10193, LCID, 4, 0),()),
		"ContourLegendTopLeftLabel" : ((10267, LCID, 4, 0),()),
		"ContourLegendWidthPct" : ((10259, LCID, 4, 0),()),
		"ContourVecAddlV2" : ((10386, LCID, 4, 0),()),
		"ContourVecAutoOrient" : ((10241, LCID, 4, 0),()),
		"ContourVecAutoVec" : ((10240, LCID, 4, 0),()),
		"ContourVecCSys" : ((10098, LCID, 4, 0),()),
		"ContourVecColor1" : ((10249, LCID, 4, 0),()),
		"ContourVecColor2" : ((10108, LCID, 4, 0),()),
		"ContourVecColor3" : ((10109, LCID, 4, 0),()),
		"ContourVecDigits" : ((10217, LCID, 4, 0),()),
		"ContourVecHide" : ((10093, LCID, 4, 0),()),
		"ContourVecLength" : ((10218, LCID, 4, 0),()),
		"ContourVecMinLen" : ((10248, LCID, 4, 0),()),
		"ContourVecMinVec" : ((10247, LCID, 4, 0),()),
		"ContourVecMinVecOn" : ((10246, LCID, 4, 0),()),
		"ContourVecMode" : ((10094, LCID, 4, 0),()),
		"ContourVector1V2" : ((10390, LCID, 4, 0),()),
		"ContourVector2V2" : ((10391, LCID, 4, 0),()),
		"ContourVector3V2" : ((10392, LCID, 4, 0),()),
		"CriteriaMax" : ((10052, LCID, 4, 0),()),
		"CriteriaMin" : ((10053, LCID, 4, 0),()),
		"CurveConnectFree" : ((10410, LCID, 4, 0),()),
		"CurveConnectFreeColor" : ((10414, LCID, 4, 0),()),
		"CurveConnectManifold" : ((10411, LCID, 4, 0),()),
		"CurveConnectManifoldColor" : ((10415, LCID, 4, 0),()),
		"CurveConnectNonManifold" : ((10412, LCID, 4, 0),()),
		"CurveConnectNonManifoldColor" : ((10416, LCID, 4, 0),()),
		"CurveConnectWirebody" : ((10409, LCID, 4, 0),()),
		"CurveConnectWirebodyColor" : ((10413, LCID, 4, 0),()),
		"DO_BCs_BaseExponent" : ((10299, LCID, 4, 0),()),
		"DO_BCs_BeforeDecimalSeparator" : ((10290, LCID, 4, 0),()),
		"DO_BCs_DecimalPlaces" : ((10297, LCID, 4, 0),()),
		"DO_BCs_Exponent" : ((10301, LCID, 4, 0),()),
		"DO_BCs_ExponentDigits" : ((10293, LCID, 4, 0),()),
		"DO_BCs_LeadingZeros" : ((10295, LCID, 4, 0),()),
		"DO_BCs_MaxDigits" : ((10298, LCID, 4, 0),()),
		"DO_BCs_MinimumExponentSize" : ((10291, LCID, 4, 0),()),
		"DO_BCs_Option" : ((10287, LCID, 4, 0),()),
		"DO_BCs_OriginalDigits" : ((10300, LCID, 4, 0),()),
		"DO_BCs_RoundToZero" : ((10288, LCID, 4, 0),()),
		"DO_BCs_RoundToZeroValue" : ((10289, LCID, 4, 0),()),
		"DO_BCs_SigFigs" : ((10294, LCID, 4, 0),()),
		"DO_BCs_TrailingZeros" : ((10296, LCID, 4, 0),()),
		"DO_BeamDiagram_BaseExponent" : ((10406, LCID, 4, 0),()),
		"DO_BeamDiagram_BeforeDecimalSeparator" : ((10397, LCID, 4, 0),()),
		"DO_BeamDiagram_DecimalPlaces" : ((10404, LCID, 4, 0),()),
		"DO_BeamDiagram_Exponent" : ((10408, LCID, 4, 0),()),
		"DO_BeamDiagram_ExponentDigits" : ((10400, LCID, 4, 0),()),
		"DO_BeamDiagram_LeadingZeros" : ((10402, LCID, 4, 0),()),
		"DO_BeamDiagram_MaxDigits" : ((10405, LCID, 4, 0),()),
		"DO_BeamDiagram_MinimumExponentSize" : ((10398, LCID, 4, 0),()),
		"DO_BeamDiagram_Option" : ((10394, LCID, 4, 0),()),
		"DO_BeamDiagram_OriginalDigits" : ((10407, LCID, 4, 0),()),
		"DO_BeamDiagram_RoundToZero" : ((10395, LCID, 4, 0),()),
		"DO_BeamDiagram_RoundToZeroValue" : ((10396, LCID, 4, 0),()),
		"DO_BeamDiagram_SigFigs" : ((10401, LCID, 4, 0),()),
		"DO_BeamDiagram_TrailingZeros" : ((10403, LCID, 4, 0),()),
		"DO_ContourArrow_BaseExponent" : ((10347, LCID, 4, 0),()),
		"DO_ContourArrow_BeforeDecimalSeparator" : ((10338, LCID, 4, 0),()),
		"DO_ContourArrow_DecimalPlaces" : ((10345, LCID, 4, 0),()),
		"DO_ContourArrow_Exponent" : ((10349, LCID, 4, 0),()),
		"DO_ContourArrow_ExponentDigits" : ((10341, LCID, 4, 0),()),
		"DO_ContourArrow_LeadingZeros" : ((10343, LCID, 4, 0),()),
		"DO_ContourArrow_MaxDigits" : ((10346, LCID, 4, 0),()),
		"DO_ContourArrow_MinimumExponentSize" : ((10339, LCID, 4, 0),()),
		"DO_ContourArrow_Option" : ((10335, LCID, 4, 0),()),
		"DO_ContourArrow_OriginalDigits" : ((10348, LCID, 4, 0),()),
		"DO_ContourArrow_RoundToZero" : ((10336, LCID, 4, 0),()),
		"DO_ContourArrow_RoundToZeroValue" : ((10337, LCID, 4, 0),()),
		"DO_ContourArrow_SigFigs" : ((10342, LCID, 4, 0),()),
		"DO_ContourArrow_TrailingZeros" : ((10344, LCID, 4, 0),()),
		"DO_ContourLegend_BaseExponent" : ((10331, LCID, 4, 0),()),
		"DO_ContourLegend_BeforeDecimalSeparator" : ((10322, LCID, 4, 0),()),
		"DO_ContourLegend_DecimalPlaces" : ((10329, LCID, 4, 0),()),
		"DO_ContourLegend_Exponent" : ((10333, LCID, 4, 0),()),
		"DO_ContourLegend_ExponentDigits" : ((10325, LCID, 4, 0),()),
		"DO_ContourLegend_LeadingZeros" : ((10327, LCID, 4, 0),()),
		"DO_ContourLegend_MaxDigits" : ((10330, LCID, 4, 0),()),
		"DO_ContourLegend_MinimumExponentSize" : ((10323, LCID, 4, 0),()),
		"DO_ContourLegend_Option" : ((10319, LCID, 4, 0),()),
		"DO_ContourLegend_OriginalDigits" : ((10332, LCID, 4, 0),()),
		"DO_ContourLegend_RoundToZero" : ((10320, LCID, 4, 0),()),
		"DO_ContourLegend_RoundToZeroValue" : ((10321, LCID, 4, 0),()),
		"DO_ContourLegend_SigFigs" : ((10326, LCID, 4, 0),()),
		"DO_ContourLegend_TrailingZeros" : ((10328, LCID, 4, 0),()),
		"DO_Criteria_BaseExponent" : ((10315, LCID, 4, 0),()),
		"DO_Criteria_BeforeDecimalSeparator" : ((10306, LCID, 4, 0),()),
		"DO_Criteria_DecimalPlaces" : ((10313, LCID, 4, 0),()),
		"DO_Criteria_Exponent" : ((10317, LCID, 4, 0),()),
		"DO_Criteria_ExponentDigits" : ((10309, LCID, 4, 0),()),
		"DO_Criteria_LeadingZeros" : ((10311, LCID, 4, 0),()),
		"DO_Criteria_MaxDigits" : ((10314, LCID, 4, 0),()),
		"DO_Criteria_MinimumExponentSize" : ((10307, LCID, 4, 0),()),
		"DO_Criteria_Option" : ((10303, LCID, 4, 0),()),
		"DO_Criteria_OriginalDigits" : ((10316, LCID, 4, 0),()),
		"DO_Criteria_RoundToZero" : ((10304, LCID, 4, 0),()),
		"DO_Criteria_RoundToZeroValue" : ((10305, LCID, 4, 0),()),
		"DO_Criteria_SigFigs" : ((10310, LCID, 4, 0),()),
		"DO_Criteria_TrailingZeros" : ((10312, LCID, 4, 0),()),
		"DO_Deformed_BaseExponent" : ((10379, LCID, 4, 0),()),
		"DO_Deformed_BeforeDecimalSeparator" : ((10370, LCID, 4, 0),()),
		"DO_Deformed_DecimalPlaces" : ((10377, LCID, 4, 0),()),
		"DO_Deformed_Exponent" : ((10381, LCID, 4, 0),()),
		"DO_Deformed_ExponentDigits" : ((10373, LCID, 4, 0),()),
		"DO_Deformed_LeadingZeros" : ((10375, LCID, 4, 0),()),
		"DO_Deformed_MaxDigits" : ((10378, LCID, 4, 0),()),
		"DO_Deformed_MinimumExponentSize" : ((10371, LCID, 4, 0),()),
		"DO_Deformed_Option" : ((10367, LCID, 4, 0),()),
		"DO_Deformed_OriginalDigits" : ((10380, LCID, 4, 0),()),
		"DO_Deformed_RoundToZero" : ((10368, LCID, 4, 0),()),
		"DO_Deformed_RoundToZeroValue" : ((10369, LCID, 4, 0),()),
		"DO_Deformed_SigFigs" : ((10374, LCID, 4, 0),()),
		"DO_Deformed_TrailingZeros" : ((10376, LCID, 4, 0),()),
		"DO_FreeBody_BaseExponent" : ((10363, LCID, 4, 0),()),
		"DO_FreeBody_BeforeDecimalSeparator" : ((10354, LCID, 4, 0),()),
		"DO_FreeBody_DecimalPlaces" : ((10361, LCID, 4, 0),()),
		"DO_FreeBody_Exponent" : ((10365, LCID, 4, 0),()),
		"DO_FreeBody_ExponentDigits" : ((10357, LCID, 4, 0),()),
		"DO_FreeBody_LeadingZeros" : ((10359, LCID, 4, 0),()),
		"DO_FreeBody_MaxDigits" : ((10362, LCID, 4, 0),()),
		"DO_FreeBody_MinimumExponentSize" : ((10355, LCID, 4, 0),()),
		"DO_FreeBody_Option" : ((10351, LCID, 4, 0),()),
		"DO_FreeBody_OriginalDigits" : ((10364, LCID, 4, 0),()),
		"DO_FreeBody_RoundToZero" : ((10352, LCID, 4, 0),()),
		"DO_FreeBody_RoundToZeroValue" : ((10353, LCID, 4, 0),()),
		"DO_FreeBody_SigFigs" : ((10358, LCID, 4, 0),()),
		"DO_FreeBody_TrailingZeros" : ((10360, LCID, 4, 0),()),
		"DO_Loads_BaseExponent" : ((10283, LCID, 4, 0),()),
		"DO_Loads_BeforeDecimalSeparator" : ((10274, LCID, 4, 0),()),
		"DO_Loads_DecimalPlaces" : ((10281, LCID, 4, 0),()),
		"DO_Loads_Exponent" : ((10285, LCID, 4, 0),()),
		"DO_Loads_ExponentDigits" : ((10277, LCID, 4, 0),()),
		"DO_Loads_LeadingZeros" : ((10279, LCID, 4, 0),()),
		"DO_Loads_MaxDigits" : ((10282, LCID, 4, 0),()),
		"DO_Loads_MinimumExponentSize" : ((10275, LCID, 4, 0),()),
		"DO_Loads_Option" : ((10271, LCID, 4, 0),()),
		"DO_Loads_OriginalDigits" : ((10284, LCID, 4, 0),()),
		"DO_Loads_RoundToZero" : ((10272, LCID, 4, 0),()),
		"DO_Loads_RoundToZeroValue" : ((10273, LCID, 4, 0),()),
		"DO_Loads_SigFigs" : ((10278, LCID, 4, 0),()),
		"DO_Loads_TrailingZeros" : ((10280, LCID, 4, 0),()),
		"DeformDataV2" : ((10384, LCID, 4, 0),()),
		"DeformRelativeToNode" : ((10219, LCID, 4, 0),()),
		"Deformed" : ((10002, LCID, 4, 0),()),
		"DeformedAbsScale" : ((10043, LCID, 4, 0),()),
		"DeformedRelScale" : ((10042, LCID, 4, 0),()),
		"DiscreteValueOn" : ((10260, LCID, 4, 0),()),
		"DiscreteValueSetID" : ((10261, LCID, 4, 0),()),
		"ElementNoResultMode" : ((10269, LCID, 4, 0),()),
		"FeatureLineAngle" : ((10251, LCID, 4, 0),()),
		"FinalOutputSet" : ((10027, LCID, 4, 0),()),
		"FreebodyDigits" : ((10222, LCID, 4, 0),()),
		"FreebodyLength" : ((10223, LCID, 4, 0),()),
		"FreebodyMinVecFlag" : ((10116, LCID, 4, 0),()),
		"FreebodyNodalForceFactor" : ((10226, LCID, 4, 0),()),
		"FreebodyNodalMomentFactor" : ((10227, LCID, 4, 0),()),
		"FreebodyShowMag" : ((10123, LCID, 4, 0),()),
		"FreebodyShowSum" : ((10115, LCID, 4, 0),()),
		"FreebodyTotalForceFactor" : ((10224, LCID, 4, 0),()),
		"FreebodyTotalMomentFactor" : ((10225, LCID, 4, 0),()),
		"FreebodyUnitsPerLength" : ((10228, LCID, 4, 0),()),
		"GlobalPlyLocation" : ((10216, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"InterOccularDist" : ((10035, LCID, 4, 0),()),
		"IsosurfaceValue" : ((10105, LCID, 4, 0),()),
		"LabelGroup" : ((10250, LCID, 4, 0),()),
		"LoadVecLength" : ((10070, LCID, 4, 0),()),
		"LoadVectorMinScale" : ((10106, LCID, 4, 0),()),
		"Magnification" : ((10005, LCID, 4, 0),()),
		"MaxUserContourPalette" : ((10200, LCID, 4, 0),()),
		"Mode" : ((10000, LCID, 4, 0),()),
		"ModelDataContourGroup" : ((10263, LCID, 4, 0),()),
		"ModelDataContourLabels" : ((10264, LCID, 4, 0),()),
		"ModelDataContourOn" : ((10262, LCID, 4, 0),()),
		"OtherVecLength" : ((10071, LCID, 4, 0),()),
		"OutputSet" : ((10026, LCID, 4, 0),()),
		"OutputSetInc" : ((10028, LCID, 4, 0),()),
		"PerspectiveAngle" : ((10037, LCID, 4, 0),()),
		"PerspectiveDist" : ((10034, LCID, 4, 0),()),
		"PostTitlesJustification" : ((10253, LCID, 4, 0),()),
		"PostTitlesLockJustification" : ((10266, LCID, 4, 0),()),
		"PrevMagnification" : ((10073, LCID, 4, 0),()),
		"PrevWindowBottom" : ((10018, LCID, 4, 0),()),
		"PrevWindowLeft" : ((10015, LCID, 4, 0),()),
		"PrevWindowRight" : ((10017, LCID, 4, 0),()),
		"PrevWindowTop" : ((10016, LCID, 4, 0),()),
		"PrevWindowXmax" : ((10020, LCID, 4, 0),()),
		"PrevWindowXmin" : ((10019, LCID, 4, 0),()),
		"PrevWindowYmax" : ((10022, LCID, 4, 0),()),
		"PrevWindowYmin" : ((10021, LCID, 4, 0),()),
		"RenderLogDepthOffset" : ((10382, LCID, 4, 0),()),
		"RenderPushForward" : ((10107, LCID, 4, 0),()),
		"RenderPushLabel" : ((10184, LCID, 4, 0),()),
		"RenderPushUndeformed" : ((10183, LCID, 4, 0),()),
		"RenderPushUnit" : ((10182, LCID, 4, 0),()),
		"RotateAroundModelAxes" : ((10195, LCID, 4, 0),()),
		"RotateCSys" : ((10202, LCID, 4, 0),()),
		"RotateSingleAxis" : ((10196, LCID, 4, 0),()),
		"RotateUseAxis" : ((10197, LCID, 4, 0),()),
		"RotationCenterOn" : ((10135, LCID, 4, 0),()),
		"Section1On" : ((10076, LCID, 4, 0),()),
		"Section2On" : ((10077, LCID, 4, 0),()),
		"Section3On" : ((10078, LCID, 4, 0),()),
		"SectionCapMode" : ((10270, LCID, 4, 0),()),
		"SectionCount" : ((10086, LCID, 4, 0),()),
		"SectionMode" : ((10087, LCID, 4, 0),()),
		"SectionPlaneMode" : ((10075, LCID, 4, 0),()),
		"SectionSpacing" : ((10085, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"ShowAllLayers" : ((10074, LCID, 4, 0),()),
		"ShrinkFactor" : ((10036, LCID, 4, 0),()),
		"SpotlightDist" : ((10101, LCID, 4, 0),()),
		"StreamLineID" : ((10186, LCID, 4, 0),()),
		"StreamLineMaxLenFactor" : ((10189, LCID, 4, 0),()),
		"StreamLineMaxTime" : ((10191, LCID, 4, 0),()),
		"StreamLineMinSpeedPct" : ((10190, LCID, 4, 0),()),
		"StreamLineOpt" : ((10185, LCID, 4, 0),()),
		"StreamLineRungeKuttaOrder" : ((10187, LCID, 4, 0),()),
		"StreamLineTolerance" : ((10188, LCID, 4, 0),()),
		"TraceIDV2" : ((10393, LCID, 4, 0),()),
		"TraceOpt" : ((10091, LCID, 4, 0),()),
		"TransformDeformCSys" : ((10204, LCID, 4, 0),()),
		"TransformDeformMode" : ((10203, LCID, 4, 0),()),
		"TransformDeformX" : ((10205, LCID, 4, 0),()),
		"TransformDeformXInput" : ((10242, LCID, 4, 0),()),
		"TransformDeformY" : ((10206, LCID, 4, 0),()),
		"TransformDeformYInput" : ((10243, LCID, 4, 0),()),
		"TransformDeformZ" : ((10207, LCID, 4, 0),()),
		"TransformDeformZInput" : ((10244, LCID, 4, 0),()),
		"TransformNodalCSys" : ((10209, LCID, 4, 0),()),
		"TransformNodalMode" : ((10208, LCID, 4, 0),()),
		"TransformPlateCSys" : ((10211, LCID, 4, 0),()),
		"TransformPlateDOF" : ((10212, LCID, 4, 0),()),
		"TransformPlateMode" : ((10210, LCID, 4, 0),()),
		"TransformPlateTolerance" : ((10245, LCID, 4, 0),()),
		"TransformSolidCSys" : ((10215, LCID, 4, 0),()),
		"TransformSolidMode" : ((10214, LCID, 4, 0),()),
		"TransparencyPercent" : ((10194, LCID, 4, 0),()),
		"UndefAnimation" : ((10089, LCID, 4, 0),()),
		"UserContourCount" : ((10048, LCID, 4, 0),()),
		"ViewLegendJustification" : ((10252, LCID, 4, 0),()),
		"ViewLegendLockJustification" : ((10265, LCID, 4, 0),()),
		"WindowBackColor" : ((10014, LCID, 4, 0),()),
		"WindowBackColor2" : ((10139, LCID, 4, 0),()),
		"WindowBackColor3" : ((10177, LCID, 4, 0),()),
		"WindowBorder" : ((10012, LCID, 4, 0),()),
		"WindowEraseBack" : ((10013, LCID, 4, 0),()),
		"WindowLogo" : ((10180, LCID, 4, 0),()),
		"WindowShadeBack" : ((10140, LCID, 4, 0),()),
		"WindowShadeBackOpt" : ((10178, LCID, 4, 0),()),
		"WindowShadeHorizon" : ((10179, LCID, 4, 0),()),
		"WindowTitleBar" : ((10011, LCID, 4, 0),()),
		"XYCSys" : ((10061, LCID, 4, 0),()),
		"XYDirection" : ((10062, LCID, 4, 0),()),
		"XYSubtitle" : ((10060, LCID, 4, 0),()),
		"XYTitle" : ((10059, LCID, 4, 0),()),
		"XYXTics" : ((10063, LCID, 4, 0),()),
		"XYXmax" : ((10055, LCID, 4, 0),()),
		"XYXmin" : ((10054, LCID, 4, 0),()),
		"XYYTics" : ((10064, LCID, 4, 0),()),
		"XYymax" : ((10057, LCID, 4, 0),()),
		"XYymin" : ((10056, LCID, 4, 0),()),
		"group" : ((10025, LCID, 4, 0),()),
		"load" : ((10024, LCID, 4, 0),()),
		"title" : ((10138, LCID, 4, 0),()),
		"vAxisLocation" : ((10147, LCID, 4, 0),()),
		"vCenter" : ((10142, LCID, 4, 0),()),
		"vClipPlaneNormal" : ((10221, LCID, 4, 0),()),
		"vClipPlaneOrigin" : ((10220, LCID, 4, 0),()),
		"vColor" : ((10153, LCID, 4, 0),()),
		"vColorMode" : ((10152, LCID, 4, 0),()),
		"vContourColor" : ((10150, LCID, 4, 0),()),
		"vContourLegendLocation" : ((10258, LCID, 4, 0),()),
		"vContourVecDir" : ((10168, LCID, 4, 0),()),
		"vContourVecID1V2" : ((10387, LCID, 4, 0),()),
		"vContourVecID2V2" : ((10388, LCID, 4, 0),()),
		"vContourVecID3V2" : ((10389, LCID, 4, 0),()),
		"vContourVecOn" : ((10239, LCID, 4, 0),()),
		"vDraw" : ((10154, LCID, 4, 0),()),
		"vLabel" : ((10155, LCID, 4, 0),()),
		"vLight" : ((10146, LCID, 4, 0),()),
		"vLogoLocation" : ((10181, LCID, 4, 0),()),
		"vPostTitlesLocation" : ((10257, LCID, 4, 0),()),
		"vPrevCenter" : ((10156, LCID, 4, 0),()),
		"vPrevRotation" : ((10201, LCID, 4, 0),()),
		"vRotation" : ((10141, LCID, 4, 0),()),
		"vRotationCenter" : ((10175, LCID, 4, 0),()),
		"vRotationVector" : ((10176, LCID, 4, 0),()),
		"vSection2Base" : ((10159, LCID, 4, 0),()),
		"vSection2Normal" : ((10160, LCID, 4, 0),()),
		"vSection3Base" : ((10161, LCID, 4, 0),()),
		"vSection3Normal" : ((10162, LCID, 4, 0),()),
		"vSectionBase" : ((10157, LCID, 4, 0),()),
		"vSectionNormal" : ((10158, LCID, 4, 0),()),
		"vSpotlightDir" : ((10169, LCID, 4, 0),()),
		"vStreamLineLocation" : ((10192, LCID, 4, 0),()),
		"vTransformPlateVector" : ((10213, LCID, 4, 0),()),
		"vUserContourLevel" : ((10148, LCID, 4, 0),()),
		"vUserContourPalette" : ((10199, LCID, 4, 0),()),
		"vUserContourValue" : ((10149, LCID, 4, 0),()),
		"vViewLegendLocation" : ((10256, LCID, 4, 0),()),
		"vXYOutputDataV2" : ((10383, LCID, 4, 0),()),
		"vXYOutputEntity" : ((10145, LCID, 4, 0),()),
		"vXYOutputSet" : ((10143, LCID, 4, 0),()),
		"vXYScale" : ((10151, LCID, 4, 0),()),
		"vXYSetRange" : ((10164, LCID, 4, 0),()),
		"vfunction" : ((10163, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IViewOrient(DispatchBaseClass):
	CLSID = IID('{3042DDD0-BB63-41CB-85F7-52FDE63B0624}')
	coclass_clsid = IID('{3042DDD2-BB63-41CB-85F7-52FDE63B0624}')

	def CoordSysRotation(self, iCoordSys=defaultNamedNotOptArg, qUseCenter=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg
			, dZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (5, 1), (5, 1)),iCoordSys
			, qUseCenter, dX, dY, dZ)

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetEyeDirection(self, pdEyeX=pythoncom.Missing, pdEyeY=pythoncom.Missing, pdEyeZ=pythoncom.Missing, pdRightX=pythoncom.Missing
			, pdRightY=pythoncom.Missing, pdRightZ=pythoncom.Missing):
		return self._ApplyTypes_(20001, 1, (3, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetEyeDirection', None,pdEyeX
			, pdEyeY, pdEyeZ, pdRightX, pdRightY, pdRightZ
			)

	def GetFirstPathID(self, piPathID=pythoncom.Missing):
		return self._ApplyTypes_(20015, 1, (3, 0), ((16387, 2),), 'GetFirstPathID', None,piPathID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetNextPathID(self, piPathID=pythoncom.Missing):
		return self._ApplyTypes_(20016, 1, (3, 0), ((16387, 2),), 'GetNextPathID', None,piPathID
			)

	def GetRotationAngles(self, pdX=pythoncom.Missing, pdY=pythoncom.Missing, pdZ=pythoncom.Missing):
		return self._ApplyTypes_(20018, 1, (3, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetRotationAngles', None,pdX
			, pdY, pdZ)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def ModelRotation(self, qUseCenter=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((11, 1), (5, 1), (5, 1), (5, 1)),qUseCenter
			, dX, dY, dZ)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def PlaybackDelete(self, iPathID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((3, 1),),iPathID
			)

	def PlaybackNext(self):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), (),)

	def PlaybackStart(self, iViewID=defaultNamedNotOptArg, iPathID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((3, 1), (3, 1)),iViewID
			, iPathID)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def RecordEnd(self):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), (),)

	def RecordStart(self, nMaxFrames=defaultNamedNotOptArg, iViewID=defaultNamedNotOptArg, iPathID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nMaxFrames
			, iViewID, iPathID)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def RollThru(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	# The method RotationCenter is actually a property, but must be used as a method to correctly pass the arguments
	def RotationCenter(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method RotationVector is actually a property, but must be used as a method to correctly pass the arguments
	def RotationVector(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SetEyeDirection(self, dEyeX=defaultNamedNotOptArg, dEyeY=defaultNamedNotOptArg, dEyeZ=defaultNamedNotOptArg, dRightX=defaultNamedNotOptArg
			, dRightY=defaultNamedNotOptArg, dRightZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),dEyeX
			, dEyeY, dEyeZ, dRightX, dRightY, dRightZ
			)

	def SetRotationAngles(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1)),dX
			, dY, dZ)

	# The method SetRotationCenter is actually a property, but must be used as a method to correctly pass the arguments
	def SetRotationCenter(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetRotationVector is actually a property, but must be used as a method to correctly pass the arguments
	def SetRotationVector(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method Setcenter is actually a property, but must be used as a method to correctly pass the arguments
	def Setcenter(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	def SnapToAxes(self):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), (),)

	def Spin(self, nFrames=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dZ=defaultNamedNotOptArg
			, dVX=defaultNamedNotOptArg, dVY=defaultNamedNotOptArg, dVZ=defaultNamedNotOptArg, pdFPS=pythoncom.Missing):
		return self._ApplyTypes_(20019, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (16389, 2)), 'Spin', None,nFrames
			, dX, dY, dZ, dVX, dVY
			, dVZ, pdFPS)

	def VectorRotation(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dZ=defaultNamedNotOptArg, dVX=defaultNamedNotOptArg
			, dVY=defaultNamedNotOptArg, dVZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),dX
			, dY, dZ, dVX, dVY, dVZ
			)

	def ViewRotation(self, qUseCenter=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((11, 1), (5, 1), (5, 1), (5, 1)),qUseCenter
			, dX, dY, dZ)

	# The method center is actually a property, but must be used as a method to correctly pass the arguments
	def center(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"AspectRatio": (10004, 2, (5, 0), (), "AspectRatio", None),
		"AutoAspectRatio": (10003, 2, (11, 0), (), "AutoAspectRatio", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Magnification": (10001, 2, (5, 0), (), "Magnification", None),
		"ModelAlwaysInFront": (10002, 2, (11, 0), (), "ModelAlwaysInFront", None),
		"Perspective": (10005, 2, (11, 0), (), "Perspective", None),
		"PerspectiveAngle": (10006, 2, (5, 0), (), "PerspectiveAngle", None),
		"RotationAxesOption": (10007, 2, (3, 0), (), "RotationAxesOption", None),
		"RotationCenterOption": (10008, 2, (3, 0), (), "RotationCenterOption", None),
		"RotationCoordSys": (10009, 2, (3, 0), (), "RotationCoordSys", None),
		"SecondaryRotationAxesOption": (10013, 2, (3, 0), (), "SecondaryRotationAxesOption", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"SingleAxis": (10010, 2, (11, 0), (), "SingleAxis", None),
		"vCenter": (10000, 2, (12, 0), (), "vCenter", None),
		"vRotationCenter": (10011, 2, (12, 0), (), "vRotationCenter", None),
		"vRotationVector": (10012, 2, (12, 0), (), "vRotationVector", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"AspectRatio" : ((10004, LCID, 4, 0),()),
		"AutoAspectRatio" : ((10003, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Magnification" : ((10001, LCID, 4, 0),()),
		"ModelAlwaysInFront" : ((10002, LCID, 4, 0),()),
		"Perspective" : ((10005, LCID, 4, 0),()),
		"PerspectiveAngle" : ((10006, LCID, 4, 0),()),
		"RotationAxesOption" : ((10007, LCID, 4, 0),()),
		"RotationCenterOption" : ((10008, LCID, 4, 0),()),
		"RotationCoordSys" : ((10009, LCID, 4, 0),()),
		"SecondaryRotationAxesOption" : ((10013, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"SingleAxis" : ((10010, LCID, 4, 0),()),
		"vCenter" : ((10000, LCID, 4, 0),()),
		"vRotationCenter" : ((10011, LCID, 4, 0),()),
		"vRotationVector" : ((10012, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IXYPlotDefinition(DispatchBaseClass):
	CLSID = IID('{FFE3E8FC-F64A-4FE0-9430-6A60BA5A3B22}')
	coclass_clsid = IID('{FFE3E8FE-F64A-4FE0-9430-6A60BA5A3B22}')

	def CountSet(self):
		return self._oleobj_.InvokeTypes(29027, LCID, 1, (3, 0), (),)

	def Deletable(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29007, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def Delete(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29008, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def DeleteLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29020, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Exist(self, nID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29006, LCID, 1, (3, 0), ((3, 1),),nID
			)

	def First(self):
		return self._oleobj_.InvokeTypes(29012, LCID, 1, (3, 0), (),)

	def FirstInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29026, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def Get(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def GetLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29018, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def GetTitleIDList(self, bIncludeID=defaultNamedNotOptArg, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing
			, listID=pythoncom.Missing, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29022, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleIDList', None,bIncludeID
			, minID, maxID, Count, listID, listTITLE
			)

	def GetTitleList(self, minID=defaultNamedNotOptArg, maxID=defaultNamedNotOptArg, Count=pythoncom.Missing, listID=pythoncom.Missing
			, listTITLE=pythoncom.Missing):
		return self._ApplyTypes_(29021, 1, (3, 0), ((3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'GetTitleList', None,minID
			, maxID, Count, listID, listTITLE)

	def Last(self):
		return self._oleobj_.InvokeTypes(29013, LCID, 1, (3, 0), (),)

	def Next(self):
		return self._oleobj_.InvokeTypes(29010, LCID, 1, (3, 0), (),)

	def NextEmptyID(self):
		return self._oleobj_.InvokeTypes(29016, LCID, 1, (3, 0), (),)

	def NextEmptySet(self):
		return self._oleobj_.InvokeTypes(29002, LCID, 1, (3, 0), (),)

	def NextExistingInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29028, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextID(self):
		return self._oleobj_.InvokeTypes(29014, LCID, 1, (3, 0), (),)

	def NextInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29025, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def NextSet(self):
		return self._oleobj_.InvokeTypes(29000, LCID, 1, (3, 0), (),)

	def ParseTitleID(self, sTitleIDStr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29023, LCID, 1, (3, 0), ((8, 1),),sTitleIDStr
			)

	def Prev(self):
		return self._oleobj_.InvokeTypes(29011, LCID, 1, (3, 0), (),)

	def PrevEmptyID(self):
		return self._oleobj_.InvokeTypes(29017, LCID, 1, (3, 0), (),)

	def PrevEmptySet(self):
		return self._oleobj_.InvokeTypes(29003, LCID, 1, (3, 0), (),)

	def PrevID(self):
		return self._oleobj_.InvokeTypes(29015, LCID, 1, (3, 0), (),)

	def PrevSet(self):
		return self._oleobj_.InvokeTypes(29001, LCID, 1, (3, 0), (),)

	def Put(self, entID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((3, 1),),entID
			)

	def PutLibrary(self, libINDEX=defaultNamedNotOptArg, libFILE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29019, LCID, 1, (3, 0), ((3, 1), (3, 1)),libINDEX
			, libFILE)

	def Reset(self):
		return self._oleobj_.InvokeTypes(29009, LCID, 1, (3, 0), (),)

	def SelectID(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29024, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	def SelectIDWithNew(self, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(29029, LCID, 1, (3, 0), ((8, 1),),sTitle
			)

	_prop_map_get_ = {
		"Active": (17002, 2, (3, 0), (), "Active", None),
		"COMP_VM": (10153, 2, (11, 0), (), "COMP_VM", None),
		"COMP_XX": (10147, 2, (11, 0), (), "COMP_XX", None),
		"COMP_XY": (10150, 2, (11, 0), (), "COMP_XY", None),
		"COMP_XZ": (10152, 2, (11, 0), (), "COMP_XZ", None),
		"COMP_YY": (10148, 2, (11, 0), (), "COMP_YY", None),
		"COMP_YZ": (10151, 2, (11, 0), (), "COMP_YZ", None),
		"COMP_ZZ": (10149, 2, (11, 0), (), "COMP_ZZ", None),
		"Cij_11": (10086, 2, (11, 0), (), "Cij_11", None),
		"Cij_12": (10087, 2, (11, 0), (), "Cij_12", None),
		"Cij_13": (10088, 2, (11, 0), (), "Cij_13", None),
		"Cij_14": (10089, 2, (11, 0), (), "Cij_14", None),
		"Cij_15": (10090, 2, (11, 0), (), "Cij_15", None),
		"Cij_16": (10091, 2, (11, 0), (), "Cij_16", None),
		"Cij_21": (10092, 2, (11, 0), (), "Cij_21", None),
		"Cij_22": (10093, 2, (11, 0), (), "Cij_22", None),
		"Cij_23": (10094, 2, (11, 0), (), "Cij_23", None),
		"Cij_24": (10095, 2, (11, 0), (), "Cij_24", None),
		"Cij_25": (10096, 2, (11, 0), (), "Cij_25", None),
		"Cij_26": (10097, 2, (11, 0), (), "Cij_26", None),
		"Cij_31": (10098, 2, (11, 0), (), "Cij_31", None),
		"Cij_32": (10099, 2, (11, 0), (), "Cij_32", None),
		"Cij_33": (10100, 2, (11, 0), (), "Cij_33", None),
		"Cij_34": (10101, 2, (11, 0), (), "Cij_34", None),
		"Cij_35": (10102, 2, (11, 0), (), "Cij_35", None),
		"Cij_36": (10103, 2, (11, 0), (), "Cij_36", None),
		"Cij_41": (10104, 2, (11, 0), (), "Cij_41", None),
		"Cij_42": (10105, 2, (11, 0), (), "Cij_42", None),
		"Cij_43": (10106, 2, (11, 0), (), "Cij_43", None),
		"Cij_44": (10107, 2, (11, 0), (), "Cij_44", None),
		"Cij_45": (10108, 2, (11, 0), (), "Cij_45", None),
		"Cij_46": (10109, 2, (11, 0), (), "Cij_46", None),
		"Cij_51": (10110, 2, (11, 0), (), "Cij_51", None),
		"Cij_52": (10111, 2, (11, 0), (), "Cij_52", None),
		"Cij_53": (10112, 2, (11, 0), (), "Cij_53", None),
		"Cij_54": (10113, 2, (11, 0), (), "Cij_54", None),
		"Cij_55": (10114, 2, (11, 0), (), "Cij_55", None),
		"Cij_56": (10115, 2, (11, 0), (), "Cij_56", None),
		"Cij_61": (10116, 2, (11, 0), (), "Cij_61", None),
		"Cij_62": (10117, 2, (11, 0), (), "Cij_62", None),
		"Cij_63": (10118, 2, (11, 0), (), "Cij_63", None),
		"Cij_64": (10119, 2, (11, 0), (), "Cij_64", None),
		"Cij_65": (10120, 2, (11, 0), (), "Cij_65", None),
		"Cij_66": (10121, 2, (11, 0), (), "Cij_66", None),
		"DAMAGE": (10146, 2, (11, 0), (), "DAMAGE", None),
		"DISP_1": (10122, 2, (11, 0), (), "DISP_1", None),
		"DISP_2": (10123, 2, (11, 0), (), "DISP_2", None),
		"DISP_3": (10124, 2, (11, 0), (), "DISP_3", None),
		"DISP_4": (10125, 2, (11, 0), (), "DISP_4", None),
		"DISP_5": (10126, 2, (11, 0), (), "DISP_5", None),
		"DISP_6": (10127, 2, (11, 0), (), "DISP_6", None),
		"FORCE_1": (10134, 2, (11, 0), (), "FORCE_1", None),
		"FORCE_2": (10135, 2, (11, 0), (), "FORCE_2", None),
		"FORCE_3": (10136, 2, (11, 0), (), "FORCE_3", None),
		"FORCE_4": (10137, 2, (11, 0), (), "FORCE_4", None),
		"FORCE_5": (10138, 2, (11, 0), (), "FORCE_5", None),
		"FORCE_6": (10139, 2, (11, 0), (), "FORCE_6", None),
		"ID": (17000, 2, (3, 0), (), "ID", None),
		"Kij_11": (10014, 2, (11, 0), (), "Kij_11", None),
		"Kij_12": (10015, 2, (11, 0), (), "Kij_12", None),
		"Kij_13": (10016, 2, (11, 0), (), "Kij_13", None),
		"Kij_14": (10017, 2, (11, 0), (), "Kij_14", None),
		"Kij_15": (10018, 2, (11, 0), (), "Kij_15", None),
		"Kij_16": (10019, 2, (11, 0), (), "Kij_16", None),
		"Kij_21": (10020, 2, (11, 0), (), "Kij_21", None),
		"Kij_22": (10021, 2, (11, 0), (), "Kij_22", None),
		"Kij_23": (10022, 2, (11, 0), (), "Kij_23", None),
		"Kij_24": (10023, 2, (11, 0), (), "Kij_24", None),
		"Kij_25": (10024, 2, (11, 0), (), "Kij_25", None),
		"Kij_26": (10025, 2, (11, 0), (), "Kij_26", None),
		"Kij_31": (10026, 2, (11, 0), (), "Kij_31", None),
		"Kij_32": (10027, 2, (11, 0), (), "Kij_32", None),
		"Kij_33": (10028, 2, (11, 0), (), "Kij_33", None),
		"Kij_34": (10029, 2, (11, 0), (), "Kij_34", None),
		"Kij_35": (10030, 2, (11, 0), (), "Kij_35", None),
		"Kij_36": (10031, 2, (11, 0), (), "Kij_36", None),
		"Kij_41": (10032, 2, (11, 0), (), "Kij_41", None),
		"Kij_42": (10033, 2, (11, 0), (), "Kij_42", None),
		"Kij_43": (10034, 2, (11, 0), (), "Kij_43", None),
		"Kij_44": (10035, 2, (11, 0), (), "Kij_44", None),
		"Kij_45": (10036, 2, (11, 0), (), "Kij_45", None),
		"Kij_46": (10037, 2, (11, 0), (), "Kij_46", None),
		"Kij_51": (10038, 2, (11, 0), (), "Kij_51", None),
		"Kij_52": (10039, 2, (11, 0), (), "Kij_52", None),
		"Kij_53": (10040, 2, (11, 0), (), "Kij_53", None),
		"Kij_54": (10041, 2, (11, 0), (), "Kij_54", None),
		"Kij_55": (10042, 2, (11, 0), (), "Kij_55", None),
		"Kij_56": (10043, 2, (11, 0), (), "Kij_56", None),
		"Kij_61": (10044, 2, (11, 0), (), "Kij_61", None),
		"Kij_62": (10045, 2, (11, 0), (), "Kij_62", None),
		"Kij_63": (10046, 2, (11, 0), (), "Kij_63", None),
		"Kij_64": (10047, 2, (11, 0), (), "Kij_64", None),
		"Kij_65": (10048, 2, (11, 0), (), "Kij_65", None),
		"Kij_66": (10049, 2, (11, 0), (), "Kij_66", None),
		"LOC_1": (10010, 2, (11, 0), (), "LOC_1", None),
		"LOC_2": (10011, 2, (11, 0), (), "LOC_2", None),
		"LOC_3": (10012, 2, (11, 0), (), "LOC_3", None),
		"Mij_11": (10050, 2, (11, 0), (), "Mij_11", None),
		"Mij_12": (10051, 2, (11, 0), (), "Mij_12", None),
		"Mij_13": (10052, 2, (11, 0), (), "Mij_13", None),
		"Mij_14": (10053, 2, (11, 0), (), "Mij_14", None),
		"Mij_15": (10054, 2, (11, 0), (), "Mij_15", None),
		"Mij_16": (10055, 2, (11, 0), (), "Mij_16", None),
		"Mij_21": (10056, 2, (11, 0), (), "Mij_21", None),
		"Mij_22": (10057, 2, (11, 0), (), "Mij_22", None),
		"Mij_23": (10058, 2, (11, 0), (), "Mij_23", None),
		"Mij_24": (10059, 2, (11, 0), (), "Mij_24", None),
		"Mij_25": (10060, 2, (11, 0), (), "Mij_25", None),
		"Mij_26": (10061, 2, (11, 0), (), "Mij_26", None),
		"Mij_31": (10062, 2, (11, 0), (), "Mij_31", None),
		"Mij_32": (10063, 2, (11, 0), (), "Mij_32", None),
		"Mij_33": (10064, 2, (11, 0), (), "Mij_33", None),
		"Mij_34": (10065, 2, (11, 0), (), "Mij_34", None),
		"Mij_35": (10066, 2, (11, 0), (), "Mij_35", None),
		"Mij_36": (10067, 2, (11, 0), (), "Mij_36", None),
		"Mij_41": (10068, 2, (11, 0), (), "Mij_41", None),
		"Mij_42": (10069, 2, (11, 0), (), "Mij_42", None),
		"Mij_43": (10070, 2, (11, 0), (), "Mij_43", None),
		"Mij_44": (10071, 2, (11, 0), (), "Mij_44", None),
		"Mij_45": (10072, 2, (11, 0), (), "Mij_45", None),
		"Mij_46": (10073, 2, (11, 0), (), "Mij_46", None),
		"Mij_51": (10074, 2, (11, 0), (), "Mij_51", None),
		"Mij_52": (10075, 2, (11, 0), (), "Mij_52", None),
		"Mij_53": (10076, 2, (11, 0), (), "Mij_53", None),
		"Mij_54": (10077, 2, (11, 0), (), "Mij_54", None),
		"Mij_55": (10078, 2, (11, 0), (), "Mij_55", None),
		"Mij_56": (10079, 2, (11, 0), (), "Mij_56", None),
		"Mij_61": (10080, 2, (11, 0), (), "Mij_61", None),
		"Mij_62": (10081, 2, (11, 0), (), "Mij_62", None),
		"Mij_63": (10082, 2, (11, 0), (), "Mij_63", None),
		"Mij_64": (10083, 2, (11, 0), (), "Mij_64", None),
		"Mij_65": (10084, 2, (11, 0), (), "Mij_65", None),
		"Mij_66": (10085, 2, (11, 0), (), "Mij_66", None),
		"ORBITD": (10142, 2, (11, 0), (), "ORBITD", None),
		"ORBITF": (10144, 2, (11, 0), (), "ORBITF", None),
		"ORBITM": (10145, 2, (11, 0), (), "ORBITM", None),
		"ORBITR": (10143, 2, (11, 0), (), "ORBITR", None),
		"RDISP": (10140, 2, (11, 0), (), "RDISP", None),
		"RES": (10008, 2, (3, 0), (), "RES", None),
		"RFORCE": (10141, 2, (11, 0), (), "RFORCE", None),
		"SID_ELEM": (10006, 2, (3, 0), (), "SID_ELEM", None),
		"SID_GRP": (10007, 2, (3, 0), (), "SID_GRP", None),
		"SID_NODE": (10005, 2, (3, 0), (), "SID_NODE", None),
		"SetID": (17001, 2, (3, 0), (), "SetID", None),
		"VELOC_1": (10128, 2, (11, 0), (), "VELOC_1", None),
		"VELOC_2": (10129, 2, (11, 0), (), "VELOC_2", None),
		"VELOC_3": (10130, 2, (11, 0), (), "VELOC_3", None),
		"VELOC_4": (10131, 2, (11, 0), (), "VELOC_4", None),
		"VELOC_5": (10132, 2, (11, 0), (), "VELOC_5", None),
		"VELOC_6": (10133, 2, (11, 0), (), "VELOC_6", None),
		"cid": (10013, 2, (3, 0), (), "cid", None),
		"title": (10003, 2, (8, 0), (), "title", None),
		"type": (10004, 2, (3, 0), (), "type", None),
	}
	_prop_map_put_ = {
		"Active" : ((17002, LCID, 4, 0),()),
		"COMP_VM" : ((10153, LCID, 4, 0),()),
		"COMP_XX" : ((10147, LCID, 4, 0),()),
		"COMP_XY" : ((10150, LCID, 4, 0),()),
		"COMP_XZ" : ((10152, LCID, 4, 0),()),
		"COMP_YY" : ((10148, LCID, 4, 0),()),
		"COMP_YZ" : ((10151, LCID, 4, 0),()),
		"COMP_ZZ" : ((10149, LCID, 4, 0),()),
		"Cij_11" : ((10086, LCID, 4, 0),()),
		"Cij_12" : ((10087, LCID, 4, 0),()),
		"Cij_13" : ((10088, LCID, 4, 0),()),
		"Cij_14" : ((10089, LCID, 4, 0),()),
		"Cij_15" : ((10090, LCID, 4, 0),()),
		"Cij_16" : ((10091, LCID, 4, 0),()),
		"Cij_21" : ((10092, LCID, 4, 0),()),
		"Cij_22" : ((10093, LCID, 4, 0),()),
		"Cij_23" : ((10094, LCID, 4, 0),()),
		"Cij_24" : ((10095, LCID, 4, 0),()),
		"Cij_25" : ((10096, LCID, 4, 0),()),
		"Cij_26" : ((10097, LCID, 4, 0),()),
		"Cij_31" : ((10098, LCID, 4, 0),()),
		"Cij_32" : ((10099, LCID, 4, 0),()),
		"Cij_33" : ((10100, LCID, 4, 0),()),
		"Cij_34" : ((10101, LCID, 4, 0),()),
		"Cij_35" : ((10102, LCID, 4, 0),()),
		"Cij_36" : ((10103, LCID, 4, 0),()),
		"Cij_41" : ((10104, LCID, 4, 0),()),
		"Cij_42" : ((10105, LCID, 4, 0),()),
		"Cij_43" : ((10106, LCID, 4, 0),()),
		"Cij_44" : ((10107, LCID, 4, 0),()),
		"Cij_45" : ((10108, LCID, 4, 0),()),
		"Cij_46" : ((10109, LCID, 4, 0),()),
		"Cij_51" : ((10110, LCID, 4, 0),()),
		"Cij_52" : ((10111, LCID, 4, 0),()),
		"Cij_53" : ((10112, LCID, 4, 0),()),
		"Cij_54" : ((10113, LCID, 4, 0),()),
		"Cij_55" : ((10114, LCID, 4, 0),()),
		"Cij_56" : ((10115, LCID, 4, 0),()),
		"Cij_61" : ((10116, LCID, 4, 0),()),
		"Cij_62" : ((10117, LCID, 4, 0),()),
		"Cij_63" : ((10118, LCID, 4, 0),()),
		"Cij_64" : ((10119, LCID, 4, 0),()),
		"Cij_65" : ((10120, LCID, 4, 0),()),
		"Cij_66" : ((10121, LCID, 4, 0),()),
		"DAMAGE" : ((10146, LCID, 4, 0),()),
		"DISP_1" : ((10122, LCID, 4, 0),()),
		"DISP_2" : ((10123, LCID, 4, 0),()),
		"DISP_3" : ((10124, LCID, 4, 0),()),
		"DISP_4" : ((10125, LCID, 4, 0),()),
		"DISP_5" : ((10126, LCID, 4, 0),()),
		"DISP_6" : ((10127, LCID, 4, 0),()),
		"FORCE_1" : ((10134, LCID, 4, 0),()),
		"FORCE_2" : ((10135, LCID, 4, 0),()),
		"FORCE_3" : ((10136, LCID, 4, 0),()),
		"FORCE_4" : ((10137, LCID, 4, 0),()),
		"FORCE_5" : ((10138, LCID, 4, 0),()),
		"FORCE_6" : ((10139, LCID, 4, 0),()),
		"ID" : ((17000, LCID, 4, 0),()),
		"Kij_11" : ((10014, LCID, 4, 0),()),
		"Kij_12" : ((10015, LCID, 4, 0),()),
		"Kij_13" : ((10016, LCID, 4, 0),()),
		"Kij_14" : ((10017, LCID, 4, 0),()),
		"Kij_15" : ((10018, LCID, 4, 0),()),
		"Kij_16" : ((10019, LCID, 4, 0),()),
		"Kij_21" : ((10020, LCID, 4, 0),()),
		"Kij_22" : ((10021, LCID, 4, 0),()),
		"Kij_23" : ((10022, LCID, 4, 0),()),
		"Kij_24" : ((10023, LCID, 4, 0),()),
		"Kij_25" : ((10024, LCID, 4, 0),()),
		"Kij_26" : ((10025, LCID, 4, 0),()),
		"Kij_31" : ((10026, LCID, 4, 0),()),
		"Kij_32" : ((10027, LCID, 4, 0),()),
		"Kij_33" : ((10028, LCID, 4, 0),()),
		"Kij_34" : ((10029, LCID, 4, 0),()),
		"Kij_35" : ((10030, LCID, 4, 0),()),
		"Kij_36" : ((10031, LCID, 4, 0),()),
		"Kij_41" : ((10032, LCID, 4, 0),()),
		"Kij_42" : ((10033, LCID, 4, 0),()),
		"Kij_43" : ((10034, LCID, 4, 0),()),
		"Kij_44" : ((10035, LCID, 4, 0),()),
		"Kij_45" : ((10036, LCID, 4, 0),()),
		"Kij_46" : ((10037, LCID, 4, 0),()),
		"Kij_51" : ((10038, LCID, 4, 0),()),
		"Kij_52" : ((10039, LCID, 4, 0),()),
		"Kij_53" : ((10040, LCID, 4, 0),()),
		"Kij_54" : ((10041, LCID, 4, 0),()),
		"Kij_55" : ((10042, LCID, 4, 0),()),
		"Kij_56" : ((10043, LCID, 4, 0),()),
		"Kij_61" : ((10044, LCID, 4, 0),()),
		"Kij_62" : ((10045, LCID, 4, 0),()),
		"Kij_63" : ((10046, LCID, 4, 0),()),
		"Kij_64" : ((10047, LCID, 4, 0),()),
		"Kij_65" : ((10048, LCID, 4, 0),()),
		"Kij_66" : ((10049, LCID, 4, 0),()),
		"LOC_1" : ((10010, LCID, 4, 0),()),
		"LOC_2" : ((10011, LCID, 4, 0),()),
		"LOC_3" : ((10012, LCID, 4, 0),()),
		"Mij_11" : ((10050, LCID, 4, 0),()),
		"Mij_12" : ((10051, LCID, 4, 0),()),
		"Mij_13" : ((10052, LCID, 4, 0),()),
		"Mij_14" : ((10053, LCID, 4, 0),()),
		"Mij_15" : ((10054, LCID, 4, 0),()),
		"Mij_16" : ((10055, LCID, 4, 0),()),
		"Mij_21" : ((10056, LCID, 4, 0),()),
		"Mij_22" : ((10057, LCID, 4, 0),()),
		"Mij_23" : ((10058, LCID, 4, 0),()),
		"Mij_24" : ((10059, LCID, 4, 0),()),
		"Mij_25" : ((10060, LCID, 4, 0),()),
		"Mij_26" : ((10061, LCID, 4, 0),()),
		"Mij_31" : ((10062, LCID, 4, 0),()),
		"Mij_32" : ((10063, LCID, 4, 0),()),
		"Mij_33" : ((10064, LCID, 4, 0),()),
		"Mij_34" : ((10065, LCID, 4, 0),()),
		"Mij_35" : ((10066, LCID, 4, 0),()),
		"Mij_36" : ((10067, LCID, 4, 0),()),
		"Mij_41" : ((10068, LCID, 4, 0),()),
		"Mij_42" : ((10069, LCID, 4, 0),()),
		"Mij_43" : ((10070, LCID, 4, 0),()),
		"Mij_44" : ((10071, LCID, 4, 0),()),
		"Mij_45" : ((10072, LCID, 4, 0),()),
		"Mij_46" : ((10073, LCID, 4, 0),()),
		"Mij_51" : ((10074, LCID, 4, 0),()),
		"Mij_52" : ((10075, LCID, 4, 0),()),
		"Mij_53" : ((10076, LCID, 4, 0),()),
		"Mij_54" : ((10077, LCID, 4, 0),()),
		"Mij_55" : ((10078, LCID, 4, 0),()),
		"Mij_56" : ((10079, LCID, 4, 0),()),
		"Mij_61" : ((10080, LCID, 4, 0),()),
		"Mij_62" : ((10081, LCID, 4, 0),()),
		"Mij_63" : ((10082, LCID, 4, 0),()),
		"Mij_64" : ((10083, LCID, 4, 0),()),
		"Mij_65" : ((10084, LCID, 4, 0),()),
		"Mij_66" : ((10085, LCID, 4, 0),()),
		"ORBITD" : ((10142, LCID, 4, 0),()),
		"ORBITF" : ((10144, LCID, 4, 0),()),
		"ORBITM" : ((10145, LCID, 4, 0),()),
		"ORBITR" : ((10143, LCID, 4, 0),()),
		"RDISP" : ((10140, LCID, 4, 0),()),
		"RES" : ((10008, LCID, 4, 0),()),
		"RFORCE" : ((10141, LCID, 4, 0),()),
		"SID_ELEM" : ((10006, LCID, 4, 0),()),
		"SID_GRP" : ((10007, LCID, 4, 0),()),
		"SID_NODE" : ((10005, LCID, 4, 0),()),
		"SetID" : ((17001, LCID, 4, 0),()),
		"VELOC_1" : ((10128, LCID, 4, 0),()),
		"VELOC_2" : ((10129, LCID, 4, 0),()),
		"VELOC_3" : ((10130, LCID, 4, 0),()),
		"VELOC_4" : ((10131, LCID, 4, 0),()),
		"VELOC_5" : ((10132, LCID, 4, 0),()),
		"VELOC_6" : ((10133, LCID, 4, 0),()),
		"cid" : ((10013, LCID, 4, 0),()),
		"title" : ((10003, LCID, 4, 0),()),
		"type" : ((10004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Imodel(DispatchBaseClass):
	CLSID = IID('{08F336B2-E668-11D4-9441-001083FFF11C}')
	coclass_clsid = IID('{A01DD4C4-A8F0-11D4-9FAC-00105A0A86C2}')

	def Get_Pref_font_CHARSET(self, piCHARSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20664, LCID, 1, (3, 0), ((16387, 1),),piCHARSET
			)

	# The method Info_ActiveID is actually a property, but must be used as a method to correctly pass the arguments
	def Info_ActiveID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18032, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_ActiveType is actually a property, but must be used as a method to correctly pass the arguments
	def Info_ActiveType(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18033, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_Color is actually a property, but must be used as a method to correctly pass the arguments
	def Info_Color(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18034, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_Count is actually a property, but must be used as a method to correctly pass the arguments
	def Info_Count(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_ElemFormulation1 is actually a property, but must be used as a method to correctly pass the arguments
	def Info_ElemFormulation1(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_ElemFormulation2 is actually a property, but must be used as a method to correctly pass the arguments
	def Info_ElemFormulation2(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_ElemFormulation3 is actually a property, but must be used as a method to correctly pass the arguments
	def Info_ElemFormulation3(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18045, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_Increment is actually a property, but must be used as a method to correctly pass the arguments
	def Info_Increment(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18030, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_MatlAngleVec is actually a property, but must be used as a method to correctly pass the arguments
	def Info_MatlAngleVec(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18022, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_MaxID is actually a property, but must be used as a method to correctly pass the arguments
	def Info_MaxID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_MinID is actually a property, but must be used as a method to correctly pass the arguments
	def Info_MinID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_ModelSizeX is actually a property, but must be used as a method to correctly pass the arguments
	def Info_ModelSizeX(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18024, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_ModelSizeY is actually a property, but must be used as a method to correctly pass the arguments
	def Info_ModelSizeY(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18025, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_ModelSizeZ is actually a property, but must be used as a method to correctly pass the arguments
	def Info_ModelSizeZ(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18026, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_NextID is actually a property, but must be used as a method to correctly pass the arguments
	def Info_NextID(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18031, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_PermBC is actually a property, but must be used as a method to correctly pass the arguments
	def Info_PermBC(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_SnapSpacing is actually a property, but must be used as a method to correctly pass the arguments
	def Info_SnapSpacing(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18019, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_SurfDivisionsCurved is actually a property, but must be used as a method to correctly pass the arguments
	def Info_SurfDivisionsCurved(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18036, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_SurfDivisionsLinear is actually a property, but must be used as a method to correctly pass the arguments
	def Info_SurfDivisionsLinear(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18035, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplaneOrigin is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplaneOrigin(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplanePrevOrigin is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplanePrevOrigin(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18015, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplanePrevX is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplanePrevX(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18016, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplanePrevY is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplanePrevY(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18017, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplanePrevZ is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplanePrevZ(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18018, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplaneRuler is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplaneRuler(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplaneSizeX is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplaneSizeX(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18020, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplaneSizeY is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplaneSizeY(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18021, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplaneX is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplaneX(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplaneY is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplaneY(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Info_WorkplaneZ is actually a property, but must be used as a method to correctly pass the arguments
	def Info_WorkplaneZ(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18014, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_AngleDimetric is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_AngleDimetric(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_AngleIsometric is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_AngleIsometric(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_AngleTrimetric is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_AngleTrimetric(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_EntityColor is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_EntityColor(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18027, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_FBDefComponents is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_FBDefComponents(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18044, LCID, 2, (17, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_FBDefContributions is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_FBDefContributions(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18041, LCID, 2, (17, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_FBDefNodalVectorMode is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_FBDefNodalVectorMode(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18042, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_FBDefTotalVectorMode is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_FBDefTotalVectorMode(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18043, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_NasQstOn is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_NasQstOn(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18038, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_NasQstVal is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_NasQstVal(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18039, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_RenderRotate is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_RenderRotate(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 2, (11, 0), ((3, 1),),nVectorIndex
			)

	# The method Pref_SpaceballFactors is actually a property, but must be used as a method to correctly pass the arguments
	def Pref_SpaceballFactors(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18040, LCID, 2, (5, 0), ((3, 1),),nVectorIndex
			)

	# The method SetInfo_ActiveID is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_ActiveID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18032, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_ActiveType is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_ActiveType(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18033, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_Color is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_Color(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18034, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_Count is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_Count(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_ElemFormulation1 is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_ElemFormulation1(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18009, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_ElemFormulation2 is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_ElemFormulation2(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18010, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_ElemFormulation3 is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_ElemFormulation3(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18045, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_Increment is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_Increment(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18030, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_MatlAngleVec is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_MatlAngleVec(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18022, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_MaxID is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_MaxID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_MinID is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_MinID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18007, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_ModelSizeX is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_ModelSizeX(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18024, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_ModelSizeY is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_ModelSizeY(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18025, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_ModelSizeZ is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_ModelSizeZ(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18026, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_NextID is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_NextID(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18031, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_PermBC is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_PermBC(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18004, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_SnapSpacing is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_SnapSpacing(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18019, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_SurfDivisionsCurved is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_SurfDivisionsCurved(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18036, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_SurfDivisionsLinear is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_SurfDivisionsLinear(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18035, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplaneOrigin is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplaneOrigin(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18011, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplanePrevOrigin is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplanePrevOrigin(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18015, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplanePrevX is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplanePrevX(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18016, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplanePrevY is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplanePrevY(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18017, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplanePrevZ is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplanePrevZ(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18018, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplaneRuler is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplaneRuler(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplaneSizeX is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplaneSizeX(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18020, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplaneSizeY is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplaneSizeY(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18021, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplaneX is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplaneX(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18012, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplaneY is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplaneY(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18013, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetInfo_WorkplaneZ is actually a property, but must be used as a method to correctly pass the arguments
	def SetInfo_WorkplaneZ(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18014, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetPref_AngleDimetric is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_AngleDimetric(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18000, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetPref_AngleIsometric is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_AngleIsometric(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18001, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetPref_AngleTrimetric is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_AngleTrimetric(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18002, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetPref_EntityColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_EntityColor(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18027, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetPref_FBDefComponents is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_FBDefComponents(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18044, LCID, 4, (24, 0), ((3, 1), (17, 1)),nVectorIndex
			, arg1)

	# The method SetPref_FBDefContributions is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_FBDefContributions(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18041, LCID, 4, (24, 0), ((3, 1), (17, 1)),nVectorIndex
			, arg1)

	# The method SetPref_FBDefNodalVectorMode is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_FBDefNodalVectorMode(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18042, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetPref_FBDefTotalVectorMode is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_FBDefTotalVectorMode(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18043, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetPref_NasQstOn is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_NasQstOn(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18038, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetPref_NasQstVal is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_NasQstVal(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18039, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	# The method SetPref_RenderRotate is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_RenderRotate(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18003, LCID, 4, (24, 0), ((3, 1), (11, 1)),nVectorIndex
			, arg1)

	# The method SetPref_SpaceballFactors is actually a property, but must be used as a method to correctly pass the arguments
	def SetPref_SpaceballFactors(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18040, LCID, 4, (24, 0), ((3, 1), (5, 1)),nVectorIndex
			, arg1)

	# The method SetTool_CursorXYZ is actually a property, but must be used as a method to correctly pass the arguments
	def SetTool_CursorXYZ(self, nVectorIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(18023, LCID, 4, (24, 0), ((3, 1), (3, 1)),nVectorIndex
			, arg1)

	def Set_Pref_font_CHARSET(self, iCHARSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20663, LCID, 1, (3, 0), ((3, 1),),iCHARSET
			)

	# The method Tool_CursorXYZ is actually a property, but must be used as a method to correctly pass the arguments
	def Tool_CursorXYZ(self, nVectorIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18023, LCID, 2, (3, 0), ((3, 1),),nVectorIndex
			)

	def feAbortSelectionTool(self):
		return self._oleobj_.InvokeTypes(20741, LCID, 1, (3, 0), (),)

	def feAddToolbar(self, BarName=defaultNamedNotOptArg, barLocation=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20368, LCID, 1, (3, 0), ((8, 1), (3, 1)),BarName
			, barLocation)

	def feAddToolbarCommand(self, BarName=defaultNamedNotOptArg, cmdIndex=defaultNamedNotOptArg, cmdID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20370, LCID, 1, (3, 0), ((8, 1), (3, 1), (3, 1)),BarName
			, cmdIndex, cmdID)

	def feAddToolbarSubmenu(self, BarName=defaultNamedNotOptArg, cmdIndex=defaultNamedNotOptArg, menuName=defaultNamedNotOptArg, menuID=pythoncom.Missing):
		return self._ApplyTypes_(20404, 1, (3, 0), ((8, 1), (3, 1), (8, 1), (16387, 2)), 'feAddToolbarSubmenu', None,BarName
			, cmdIndex, menuName, menuID)

	def feAddToolbarSubmenuCommand(self, menuID=defaultNamedNotOptArg, cmdIndex=defaultNamedNotOptArg, cmdID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20405, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),menuID
			, cmdIndex, cmdID)

	def feAddToolbarSubmenuSubmenu(self, menuID=defaultNamedNotOptArg, ctrlIndex=defaultNamedNotOptArg, menuName=defaultNamedNotOptArg, submenuID=pythoncom.Missing):
		return self._ApplyTypes_(20441, 1, (3, 0), ((3, 1), (3, 1), (8, 1), (16387, 2)), 'feAddToolbarSubmenuSubmenu', None,menuID
			, ctrlIndex, menuName, submenuID)

	def feAddToolbarSubmenuUserCommand(self, menuID=defaultNamedNotOptArg, cmdIndex=defaultNamedNotOptArg, cmdTitle=defaultNamedNotOptArg, cmdBitmap=defaultNamedNotOptArg
			, cmdID=pythoncom.Missing):
		return self._ApplyTypes_(20406, 1, (3, 0), ((3, 1), (3, 1), (8, 1), (8, 1), (16387, 2)), 'feAddToolbarSubmenuUserCommand', None,menuID
			, cmdIndex, cmdTitle, cmdBitmap, cmdID)

	def feAddToolbarUserCommand(self, BarName=defaultNamedNotOptArg, cmdIndex=defaultNamedNotOptArg, cmdTitle=defaultNamedNotOptArg, cmdBitmap=defaultNamedNotOptArg
			, cmdID=pythoncom.Missing):
		return self._ApplyTypes_(20371, 1, (3, 0), ((8, 1), (3, 1), (8, 1), (8, 1), (16387, 2)), 'feAddToolbarUserCommand', None,BarName
			, cmdIndex, cmdTitle, cmdBitmap, cmdID)

	def feAddUserCommand(self, strTitle=defaultNamedNotOptArg, strCmd=defaultNamedNotOptArg, strArg=defaultNamedNotOptArg, strStartDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20359, LCID, 1, (3, 0), ((8, 1), (8, 1), (8, 1), (8, 1)),strTitle
			, strCmd, strArg, strStartDir)

	def feAddUserCommand2(self, strTitle=defaultNamedNotOptArg, strCmd=defaultNamedNotOptArg, strArg=defaultNamedNotOptArg, bPIDMID=defaultNamedNotOptArg
			, strStartDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20750, LCID, 1, (3, 0), ((8, 1), (8, 1), (8, 1), (11, 1), (8, 1)),strTitle
			, strCmd, strArg, bPIDMID, strStartDir)

	def feAlignBetweenCSys(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, nFromCSysID=defaultNamedNotOptArg, nToCSysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20564, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),entityTYPE
			, entitySET, nFromCSysID, nToCSysID)

	def feAlignTo(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, fromLoc=defaultNamedNotOptArg, fromVec=defaultNamedNotOptArg
			, toLoc=defaultNamedNotOptArg, toVec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20303, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),entityTYPE
			, entitySET, fromLoc, fromVec, toLoc, toVec
			)

	def feAppAllowUVSurfaceForMeshFaces(self, bOn=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20737, LCID, 1, (3, 0), ((11, 1),),bOn
			)

	def feAppBringToTop(self, toTop=defaultNamedNotOptArg, underWindow=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20000, LCID, 1, (3, 0), ((11, 1), (3, 1)),toTop
			, underWindow)

	def feAppColorCreate(self, enColor=defaultNamedNotOptArg, enPattern=defaultNamedNotOptArg, enLinestyle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20553, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),enColor
			, enPattern, enLinestyle)

	def feAppColorGetBaseColor(self, nColor=defaultNamedNotOptArg, penColor=pythoncom.Missing):
		return self._ApplyTypes_(20554, 1, (3, 0), ((3, 1), (16387, 2)), 'feAppColorGetBaseColor', None,nColor
			, penColor)

	def feAppColorGetLinestyle(self, nColor=defaultNamedNotOptArg, penLinestyle=pythoncom.Missing):
		return self._ApplyTypes_(20556, 1, (3, 0), ((3, 1), (16387, 2)), 'feAppColorGetLinestyle', None,nColor
			, penLinestyle)

	def feAppColorGetPattern(self, nColor=defaultNamedNotOptArg, penPattern=pythoncom.Missing):
		return self._ApplyTypes_(20555, 1, (3, 0), ((3, 1), (16387, 2)), 'feAppColorGetPattern', None,nColor
			, penPattern)

	def feAppColorGetRGB(self, nColor=defaultNamedNotOptArg, pnRed=pythoncom.Missing, pnGreen=pythoncom.Missing, pnBlue=pythoncom.Missing):
		return self._ApplyTypes_(20557, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2), (16387, 2)), 'feAppColorGetRGB', None,nColor
			, pnRed, pnGreen, pnBlue)

	def feAppColorPalette(self, nDefault=defaultNamedNotOptArg, nColor=pythoncom.Missing):
		return self._ApplyTypes_(20403, 1, (3, 0), ((3, 1), (16387, 2)), 'feAppColorPalette', None,nDefault
			, nColor)

	def feAppCountModels(self, numModels=pythoncom.Missing):
		return self._ApplyTypes_(20349, 1, (3, 0), ((16387, 2),), 'feAppCountModels', None,numModels
			)

	def feAppEmbed(self, windowID=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, cx=defaultNamedNotOptArg
			, cy=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20335, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),windowID
			, x, y, cx, cy)

	def feAppEventCallback(self, eventID=defaultNamedNotOptArg, callback=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20418, LCID, 1, (3, 0), ((3, 1), (8, 1)),eventID
			, callback)

	def feAppGetActiveView(self, nViewID=pythoncom.Missing):
		return self._ApplyTypes_(20376, 1, (3, 0), ((16387, 2),), 'feAppGetActiveView', None,nViewID
			)

	def feAppGetAllModels(self, numModels=pythoncom.Missing, nModelID=pythoncom.Missing):
		return self._ApplyTypes_(20350, 1, (3, 0), ((16387, 2), (16396, 2)), 'feAppGetAllModels', None,numModels
			, nModelID)

	def feAppGetAllViews(self, numViews=pythoncom.Missing, nViewID=pythoncom.Missing):
		return self._ApplyTypes_(20378, 1, (3, 0), ((16387, 2), (16396, 2)), 'feAppGetAllViews', None,numViews
			, nViewID)

	def feAppGetModel(self, nModelID=pythoncom.Missing):
		return self._ApplyTypes_(20347, 1, (3, 0), ((16404, 2),), 'feAppGetModel', None,nModelID
			)

	def feAppGetModel32(self, nHiModelID=pythoncom.Missing, nLoModelID=pythoncom.Missing):
		return self._ApplyTypes_(20589, 1, (3, 0), ((16387, 2), (16387, 2)), 'feAppGetModel32', None,nHiModelID
			, nLoModelID)

	def feAppGetModelByName(self, fName=defaultNamedNotOptArg, nModelID=pythoncom.Missing):
		return self._ApplyTypes_(20714, 1, (3, 0), ((8, 1), (16404, 2)), 'feAppGetModelByName', None,fName
			, nModelID)

	def feAppGetModelName(self, nModelID=defaultNamedNotOptArg, ModelName=pythoncom.Missing):
		return self._ApplyTypes_(20344, 1, (3, 0), ((20, 1), (16392, 2)), 'feAppGetModelName', None,nModelID
			, ModelName)

	def feAppGetRunningApplication(self, appName=defaultNamedNotOptArg, processID=defaultNamedNotOptArg, activeWindow=defaultNamedNotOptArg, appObject=pythoncom.Missing):
		return self._ApplyTypes_(20716, 1, (3, 0), ((8, 1), (3, 1), (16396, 1), (16396, 2)), 'feAppGetRunningApplication', None,appName
			, processID, activeWindow, appObject)

	def feAppLoadColorPalette(self, sPaletteFileName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20718, LCID, 1, (3, 0), ((8, 1),),sPaletteFileName
			)

	def feAppLoadContourPalette(self, bUpdateViewPalette=defaultNamedNotOptArg, sPaletteFileName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20719, LCID, 1, (3, 0), ((11, 1), (8, 1)),bUpdateViewPalette
			, sPaletteFileName)

	def feAppLock(self):
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (3, 0), (),)

	def feAppLockDraw(self):
		return self._oleobj_.InvokeTypes(20393, LCID, 1, (3, 0), (),)

	def feAppLockExit(self):
		return self._oleobj_.InvokeTypes(20331, LCID, 1, (3, 0), (),)

	def feAppLockModel(self):
		return self._oleobj_.InvokeTypes(20333, LCID, 1, (3, 0), (),)

	def feAppManageGraphicsTabs(self, Visible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20355, LCID, 1, (3, 0), ((11, 1),),Visible
			)

	def feAppManagePanes(self, PaneName=defaultNamedNotOptArg, action=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20353, LCID, 1, (3, 0), ((8, 1), (3, 1)),PaneName
			, action)

	def feAppManageStatusBar(self, Visible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20354, LCID, 1, (3, 0), ((11, 1),),Visible
			)

	def feAppManageToolbars(self, BarName=defaultNamedNotOptArg, Visible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20352, LCID, 1, (3, 0), ((8, 1), (11, 1)),BarName
			, Visible)

	def feAppMessage(self, color=defaultNamedNotOptArg, message=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (3, 0), ((3, 1), (8, 1)),color
			, message)

	def feAppMessageBox(self, msgmode=defaultNamedNotOptArg, message=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20388, LCID, 1, (3, 0), ((3, 1), (8, 1)),msgmode
			, message)

	def feAppMessageClear(self):
		return self._oleobj_.InvokeTypes(20572, LCID, 1, (3, 0), (),)

	def feAppMessageEndListing(self):
		return self._oleobj_.InvokeTypes(20464, LCID, 1, (3, 0), (),)

	def feAppMessageStartListing(self):
		return self._oleobj_.InvokeTypes(20463, LCID, 1, (3, 0), (),)

	def feAppModelContents(self, bReport=defaultNamedNotOptArg, emptyBlocks=pythoncom.Missing, entityBlocks=pythoncom.Missing):
		return self._ApplyTypes_(20433, 1, (3, 0), ((11, 1), (16387, 2), (16396, 2)), 'feAppModelContents', None,bReport
			, emptyBlocks, entityBlocks)

	def feAppModelDefragment(self):
		return self._oleobj_.InvokeTypes(20436, LCID, 1, (3, 0), (),)

	def feAppModelInfoShow(self):
		return self._oleobj_.InvokeTypes(20622, LCID, 1, (3, 0), (),)

	def feAppPosition(self, move=defaultNamedNotOptArg, Size=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg
			, cx=defaultNamedNotOptArg, cy=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (3, 0), ((11, 1), (11, 1), (5, 1), (5, 1), (5, 1), (5, 1)),move
			, Size, x, y, cx, cy
			)

	def feAppRegisterAddIn(self, regster=defaultNamedNotOptArg, windowID=defaultNamedNotOptArg, messageID=defaultNamedNotOptArg, tile=defaultNamedNotOptArg
			, location=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (11, 1), (3, 1)),regster
			, windowID, messageID, tile, location)

	def feAppRegisterAddInPane(self, regster=defaultNamedNotOptArg, windowID=defaultNamedNotOptArg, messageID=defaultNamedNotOptArg, bPreventClose=defaultNamedNotOptArg
			, bPreventHide=defaultNamedNotOptArg, location=defaultNamedNotOptArg, neighborID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20351, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (11, 1), (11, 1), (3, 1), (3, 1)),regster
			, windowID, messageID, bPreventClose, bPreventHide, location
			, neighborID)

	def feAppRegisterAddInPaneWithFrame(self, regster=defaultNamedNotOptArg, windowID=defaultNamedNotOptArg, messageID=defaultNamedNotOptArg, bPreventClose=defaultNamedNotOptArg
			, bPreventHide=defaultNamedNotOptArg, location=defaultNamedNotOptArg, neighborID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20456, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (11, 1), (11, 1), (3, 1), (3, 1)),regster
			, windowID, messageID, bPreventClose, bPreventHide, location
			, neighborID)

	def feAppRegisterMessageHandler(self, regster=defaultNamedNotOptArg, windowID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20337, LCID, 1, (3, 0), ((11, 1), (3, 1)),regster
			, windowID)

	def feAppResetLocale(self):
		return self._oleobj_.InvokeTypes(20634, LCID, 1, (3, 0), (),)

	def feAppRunningApplicationInfo(self, appName=defaultNamedNotOptArg, processIDs=pythoncom.Missing, activeWindows=pythoncom.Missing, nint=pythoncom.Missing):
		return self._ApplyTypes_(20715, 1, (3, 0), ((8, 1), (16396, 2), (16396, 2), (16396, 2)), 'feAppRunningApplicationInfo', None,appName
			, processIDs, activeWindows, nint)

	def feAppSetActiveView(self, nViewID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20377, LCID, 1, (3, 0), ((3, 1),),nViewID
			)

	def feAppSetModel(self, nModelID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20346, LCID, 1, (3, 0), ((20, 1),),nModelID
			)

	def feAppSetModel32(self, nHiModelID=defaultNamedNotOptArg, nLoModelID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20588, LCID, 1, (3, 0), ((3, 1), (3, 1)),nHiModelID
			, nLoModelID)

	def feAppSetModelByName(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20348, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feAppSetModelInfoShow(self, bEnable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20623, LCID, 1, (3, 0), ((11, 1),),bEnable
			)

	def feAppShowWindow(self, maximize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (3, 0), ((11, 1),),maximize
			)

	def feAppStatusRedraw(self):
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (3, 0), (),)

	def feAppStatusShow(self, Enable=defaultNamedNotOptArg, max_status=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20004, LCID, 1, (3, 0), ((11, 1), (3, 1)),Enable
			, max_status)

	def feAppStatusUpdate(self, current_status=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20005, LCID, 1, (3, 0), ((3, 1),),current_status
			)

	def feAppUndoCheckpoint(self, undoTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20590, LCID, 1, (3, 0), ((8, 1),),undoTitle
			)

	def feAppUndoClear(self):
		return self._oleobj_.InvokeTypes(20631, LCID, 1, (3, 0), (),)

	def feAppUnlock(self):
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (3, 0), (),)

	def feAppUnlockDraw(self):
		return self._oleobj_.InvokeTypes(20394, LCID, 1, (3, 0), (),)

	def feAppUnlockExit(self):
		return self._oleobj_.InvokeTypes(20332, LCID, 1, (3, 0), (),)

	def feAppUnlockModel(self):
		return self._oleobj_.InvokeTypes(20334, LCID, 1, (3, 0), (),)

	def feAppUpdateModelBox(self, bForceUpdate=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20467, LCID, 1, (3, 0), ((11, 1),),bForceUpdate
			)

	def feAppUpdatePanes(self, bFullRefresh=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20387, LCID, 1, (3, 0), ((11, 1),),bFullRefresh
			)

	def feAppVersion(self):
		return self._oleobj_.InvokeTypes(20448, LCID, 1, (3, 0), (),)

	def feAppVisible(self, Visible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20336, LCID, 1, (3, 0), ((11, 1),),Visible
			)

	def feArcAngleCenterStart(self, angle=defaultNamedNotOptArg, center=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20188, LCID, 1, (3, 0), ((5, 1), (12, 1), (12, 1), (11, 1)),angle
			, center, Start, messages)

	def feArcAngleStartEnd(self, angle=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, end=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20187, LCID, 1, (3, 0), ((5, 1), (12, 1), (12, 1), (11, 1)),angle
			, Start, end, messages)

	def feArcCenterPoints(self, center=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, mid=defaultNamedNotOptArg, end=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20191, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (11, 1)),center
			, Start, mid, end, messages)

	def feArcCenterStartEnd(self, center=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, end=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20185, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (11, 1)),center
			, Start, end, messages)

	def feArcChordCenterStart(self, Length=defaultNamedNotOptArg, center=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20189, LCID, 1, (3, 0), ((5, 1), (12, 1), (12, 1), (11, 1)),Length
			, center, Start, messages)

	def feArcPoints(self, Start=defaultNamedNotOptArg, mid=defaultNamedNotOptArg, end=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20190, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (11, 1)),Start
			, mid, end, messages)

	def feArcRadiusStartEnd(self, radius=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, end=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20186, LCID, 1, (3, 0), ((5, 1), (12, 1), (12, 1), (11, 1)),radius
			, Start, end, messages)

	def feArcTangentStartEnd(self, Tangent=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, end=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20192, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (11, 1)),Tangent
			, Start, end, messages)

	def feAutoMeshAssociativity(self, elemSetID=defaultNamedNotOptArg, solidSetID=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg, bClearPrevious=defaultNamedNotOptArg
			, bCheckContainment=defaultNamedNotOptArg, bAttachMidside=defaultNamedNotOptArg, bGroupExtra=defaultNamedNotOptArg, bMessages=defaultNamedNotOptArg, nUnattachedGroup=pythoncom.Missing):
		return self._ApplyTypes_(20447, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (16387, 2)), 'feAutoMeshAssociativity', None,elemSetID
			, solidSetID, dTolerance, bClearPrevious, bCheckContainment, bAttachMidside
			, bGroupExtra, bMessages, nUnattachedGroup)

	def feBCCombine(self, fromSET=defaultNamedNotOptArg, toSET=defaultNamedNotOptArg, overwrite=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20343, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),fromSET
			, toSET, overwrite)

	def feBoundaryAddSurfaces(self, nBoundaryID=defaultNamedNotOptArg, surfaceSET=defaultNamedNotOptArg, bAddToExisting=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20442, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),nBoundaryID
			, surfaceSET, bAddToExisting)

	def feBoundaryFromCurves(self, curveSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20218, LCID, 1, (3, 0), ((3, 1),),curveSET
			)

	def feBoundaryFromPoints(self, nCSys=defaultNamedNotOptArg, nPoints=defaultNamedNotOptArg, pXYZ=defaultNamedNotOptArg, nBoundaryID=pythoncom.Missing):
		return self._ApplyTypes_(20446, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16387, 2)), 'feBoundaryFromPoints', None,nCSys
			, nPoints, pXYZ, nBoundaryID)

	def feBoundaryFromSurfaces(self, surfaceSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20219, LCID, 1, (3, 0), ((3, 1),),surfaceSET
			)

	def feBoundaryFromSurfaces2(self, surfaceSET=defaultNamedNotOptArg, bMessages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20493, LCID, 1, (3, 0), ((3, 1), (11, 1)),surfaceSET
			, bMessages)

	def feBoundaryUpdateSurfaces(self, boundaryID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20220, LCID, 1, (3, 0), ((3, 1),),boundaryID
			)

	def feChartPaneCopy(self, bCopyPicture=defaultNamedNotOptArg, bCopyText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20632, LCID, 1, (3, 0), ((11, 1), (11, 1)),bCopyPicture
			, bCopyText)

	def feChartPaneGetDisplayed(self):
		return self._oleobj_.InvokeTypes(20526, LCID, 1, (3, 0), (),)

	def feChartPaneSetDisplayed(self, nChartID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20527, LCID, 1, (3, 0), ((3, 1),),nChartID
			)

	def feCheckCoincidentCurve(self, curveSET=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20096, LCID, 1, (3, 0), ((3, 1), (5, 1)),curveSET
			, tolerance)

	def feCheckCoincidentElem(self, elemSET=defaultNamedNotOptArg, chkTYPE=defaultNamedNotOptArg, chkSHAPE=defaultNamedNotOptArg, chkMASS=defaultNamedNotOptArg
			, doLIST=defaultNamedNotOptArg, makeGROUP1=defaultNamedNotOptArg, makeGROUP2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20098, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),elemSET
			, chkTYPE, chkSHAPE, chkMASS, doLIST, makeGROUP1
			, makeGROUP2)

	def feCheckCoincidentLoads(self, LoadSet=defaultNamedNotOptArg, mergeLOADS=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20104, LCID, 1, (3, 0), ((3, 1), (11, 1)),LoadSet
			, mergeLOADS)

	def feCheckCoincidentNode(self, keepSET=defaultNamedNotOptArg, mergeSET=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg, Merge=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg, coinCount=pythoncom.Missing, coinNodes=pythoncom.Missing):
		return self._ApplyTypes_(20094, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (11, 1), (11, 1), (16387, 2), (16396, 2)), 'feCheckCoincidentNode', None,keepSET
			, mergeSET, tolerance, Merge, messages, coinCount
			, coinNodes)

	def feCheckCoincidentNode2(self, mergeSET=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg, Merge=defaultNamedNotOptArg, nMergeMode=defaultNamedNotOptArg
			, nMergeLoc=defaultNamedNotOptArg, bMergeAcrossConnections=defaultNamedNotOptArg, nMessageMode=defaultNamedNotOptArg, bSaveGroups=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20479, LCID, 1, (3, 0), ((3, 1), (5, 1), (11, 1), (3, 1), (3, 1), (11, 1), (3, 1), (11, 1)),mergeSET
			, tolerance, Merge, nMergeMode, nMergeLoc, bMergeAcrossConnections
			, nMessageMode, bSaveGroups)

	def feCheckCoincidentNode3(self, mergeSET=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg, Merge=defaultNamedNotOptArg, nMergeMode=defaultNamedNotOptArg
			, nMergeLoc=defaultNamedNotOptArg, bMergeAcrossConnections=defaultNamedNotOptArg, nMergeAcrossOutputCSys=defaultNamedNotOptArg, nMergeAcrossCSysID=defaultNamedNotOptArg, nMessageMode=defaultNamedNotOptArg
			, bSaveGroups=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20558, LCID, 1, (3, 0), ((3, 1), (5, 1), (11, 1), (3, 1), (3, 1), (11, 1), (11, 1), (3, 1), (3, 1), (11, 1)),mergeSET
			, tolerance, Merge, nMergeMode, nMergeLoc, bMergeAcrossConnections
			, nMergeAcrossOutputCSys, nMergeAcrossCSysID, nMessageMode, bSaveGroups)

	def feCheckCoincidentNode4(self, mergeSET=defaultNamedNotOptArg, bMergeIntoAll=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg, Merge=defaultNamedNotOptArg
			, nMergeMode=defaultNamedNotOptArg, nMergeLoc=defaultNamedNotOptArg, bMergeAcrossConnections=defaultNamedNotOptArg, nMergeAcrossOutputCSys=defaultNamedNotOptArg, nMergeAcrossCSysID=defaultNamedNotOptArg
			, nMessageMode=defaultNamedNotOptArg, bSaveGroups=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20700, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (11, 1), (3, 1), (3, 1), (11, 1), (11, 1), (3, 1), (3, 1), (11, 1)),mergeSET
			, bMergeIntoAll, tolerance, Merge, nMergeMode, nMergeLoc
			, bMergeAcrossConnections, nMergeAcrossOutputCSys, nMergeAcrossCSysID, nMessageMode, bSaveGroups
			)

	def feCheckCoincidentNode5(self, mergeSET=defaultNamedNotOptArg, bMergeIntoAll=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg, max_midside_angle_distortion=defaultNamedNotOptArg
			, Merge=defaultNamedNotOptArg, nMergeMode=defaultNamedNotOptArg, nMergeLoc=defaultNamedNotOptArg, bMergeAcrossConnections=defaultNamedNotOptArg, nMergeAcrossOutputCSys=defaultNamedNotOptArg
			, nMergeAcrossCSysID=defaultNamedNotOptArg, nMessageMode=defaultNamedNotOptArg, bSaveGroups=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20738, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (5, 1), (11, 1), (3, 1), (3, 1), (11, 1), (11, 1), (3, 1), (3, 1), (11, 1)),mergeSET
			, bMergeIntoAll, tolerance, max_midside_angle_distortion, Merge, nMergeMode
			, nMergeLoc, bMergeAcrossConnections, nMergeAcrossOutputCSys, nMergeAcrossCSysID, nMessageMode
			, bSaveGroups)

	def feCheckCoincidentPoint(self, keepSET=defaultNamedNotOptArg, mergeSET=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg, Merge=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg, coinCount=pythoncom.Missing, coinPoints=pythoncom.Missing):
		return self._ApplyTypes_(20095, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (11, 1), (11, 1), (16387, 2), (16396, 2)), 'feCheckCoincidentPoint', None,keepSET
			, mergeSET, tolerance, Merge, messages, coinCount
			, coinPoints)

	def feCheckConstraints(self, doPERM=defaultNamedNotOptArg, doLIST=defaultNamedNotOptArg, bcSUM=pythoncom.Missing, bcSEP=pythoncom.Missing):
		return self._ApplyTypes_(20103, 1, (3, 0), ((11, 1), (11, 1), (16396, 2), (16396, 2)), 'feCheckConstraints', None,doPERM
			, doLIST, bcSUM, bcSEP)

	def feCheckElemDistortion(self, elemSET=defaultNamedNotOptArg, doLIST=defaultNamedNotOptArg, makeGROUP=defaultNamedNotOptArg, chkASPECT=defaultNamedNotOptArg
			, chkTAPER=defaultNamedNotOptArg, chkANGLE=defaultNamedNotOptArg, chkWARP=defaultNamedNotOptArg, chkNasWARP=defaultNamedNotOptArg, chkALTTAPER=defaultNamedNotOptArg
			, chkTET=defaultNamedNotOptArg, chkJDet=defaultNamedNotOptArg, chkComb=defaultNamedNotOptArg, maxASPECT=defaultNamedNotOptArg, maxTAPER=defaultNamedNotOptArg
			, maxANGLE=defaultNamedNotOptArg, maxWARP=defaultNamedNotOptArg, maxNasWARP=defaultNamedNotOptArg, maxALTTAPER=defaultNamedNotOptArg, maxTET=defaultNamedNotOptArg
			, minJDet=defaultNamedNotOptArg, minComb=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20100, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),elemSET
			, doLIST, makeGROUP, chkASPECT, chkTAPER, chkANGLE
			, chkWARP, chkNasWARP, chkALTTAPER, chkTET, chkJDet
			, chkComb, maxASPECT, maxTAPER, maxANGLE, maxWARP
			, maxNasWARP, maxALTTAPER, maxTET, minJDet, minComb
			)

	def feCheckElemDistortion2(self, elemSET=defaultNamedNotOptArg, doLIST=defaultNamedNotOptArg, makeGROUP=defaultNamedNotOptArg, chkASPECT=defaultNamedNotOptArg
			, chkTAPER=defaultNamedNotOptArg, chkANGLE=defaultNamedNotOptArg, chkWARP=defaultNamedNotOptArg, chkNasWARP=defaultNamedNotOptArg, chkALTTAPER=defaultNamedNotOptArg
			, chkTET=defaultNamedNotOptArg, chkJDet=defaultNamedNotOptArg, chkComb=defaultNamedNotOptArg, chkExpTime=defaultNamedNotOptArg, maxASPECT=defaultNamedNotOptArg
			, maxTAPER=defaultNamedNotOptArg, maxANGLE=defaultNamedNotOptArg, maxWARP=defaultNamedNotOptArg, maxNasWARP=defaultNamedNotOptArg, maxALTTAPER=defaultNamedNotOptArg
			, maxTET=defaultNamedNotOptArg, minJDet=defaultNamedNotOptArg, minComb=defaultNamedNotOptArg, minExpTime=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20477, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),elemSET
			, doLIST, makeGROUP, chkASPECT, chkTAPER, chkANGLE
			, chkWARP, chkNasWARP, chkALTTAPER, chkTET, chkJDet
			, chkComb, chkExpTime, maxASPECT, maxTAPER, maxANGLE
			, maxWARP, maxNasWARP, maxALTTAPER, maxTET, minJDet
			, minComb, minExpTime)

	def feCheckElemFixup(self, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20099, LCID, 1, (3, 0), ((3, 1),),elemSET
			)

	def feCheckElemInterference(self, nSetID=defaultNamedNotOptArg, bFreeFaceSolids=defaultNamedNotOptArg, bMakeGroup=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20698, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),nSetID
			, bFreeFaceSolids, bMakeGroup)

	def feCheckElemInterference2(self, elSetID=defaultNamedNotOptArg, bFreeFaceSolids=defaultNamedNotOptArg, bMakeGroup=defaultNamedNotOptArg, bIntFactor=defaultNamedNotOptArg
			, dTol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20725, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (5, 1)),elSetID
			, bFreeFaceSolids, bMakeGroup, bIntFactor, dTol)

	def feCheckElemNormal(self, elemSET=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg, doLIST=defaultNamedNotOptArg, swapNORMAL=defaultNamedNotOptArg
			, autonormal=defaultNamedNotOptArg, manNORMAL=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20102, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (12, 1)),elemSET
			, csysID, doLIST, swapNORMAL, autonormal, manNORMAL
			)

	def feCheckPlanarNodes(self, nodeSET=defaultNamedNotOptArg, messages=defaultNamedNotOptArg, Project=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg
			, askPlane=defaultNamedNotOptArg, planeBase=defaultNamedNotOptArg, planeNormal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20097, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (5, 1), (11, 1), (12, 1), (12, 1)),nodeSET
			, messages, Project, tolerance, askPlane, planeBase
			, planeNormal)

	def feCheckSumForces(self, expandGEOM=defaultNamedNotOptArg, doLIST=defaultNamedNotOptArg, useSETS=defaultNamedNotOptArg, nodeSET=defaultNamedNotOptArg
			, elemSET=defaultNamedNotOptArg, basePOINT=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg, summedFORCES=pythoncom.Missing):
		return self._ApplyTypes_(20105, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (3, 1), (3, 1), (12, 1), (3, 1), (16396, 2)), 'feCheckSumForces', None,expandGEOM
			, doLIST, useSETS, nodeSET, elemSET, basePOINT
			, csysID, summedFORCES)

	def feCheckSumForces2(self, useBodyLoad=defaultNamedNotOptArg, expandGEOM=defaultNamedNotOptArg, doLIST=defaultNamedNotOptArg, useSETS=defaultNamedNotOptArg
			, nodeSET=defaultNamedNotOptArg, elemSET=defaultNamedNotOptArg, loaddefSET=defaultNamedNotOptArg, basePOINT=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg
			, summedFORCES=pythoncom.Missing):
		return self._ApplyTypes_(20549, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (3, 1), (3, 1), (12, 1), (3, 1), (16396, 2)), 'feCheckSumForces2', None,useBodyLoad
			, expandGEOM, doLIST, useSETS, nodeSET, elemSET
			, loaddefSET, basePOINT, csysID, summedFORCES)

	def feCircle2Point(self, radius=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, mid=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20196, LCID, 1, (3, 0), ((5, 1), (12, 1), (12, 1), (11, 1)),radius
			, Start, mid, messages)

	def feCircle3Point(self, Start=defaultNamedNotOptArg, mid=defaultNamedNotOptArg, end=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20198, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (11, 1)),Start
			, mid, end, messages)

	def feCircleCenter(self, radius=defaultNamedNotOptArg, center=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20195, LCID, 1, (3, 0), ((5, 1), (12, 1), (11, 1)),radius
			, center, messages)

	def feCircleCenterPoints(self, center=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, mid=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20199, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (11, 1)),center
			, Start, mid, messages)

	def feCircleCenterTangent(self, curveID=defaultNamedNotOptArg, center=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20200, LCID, 1, (3, 0), ((3, 1), (12, 1), (11, 1)),curveID
			, center, messages)

	def feCircleConcentric(self, radius=defaultNamedNotOptArg, curveID=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20197, LCID, 1, (3, 0), ((5, 1), (3, 1), (11, 1)),radius
			, curveID, messages)

	def feCircleDiameter(self, Start=defaultNamedNotOptArg, dia=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20194, LCID, 1, (3, 0), ((12, 1), (12, 1), (11, 1)),Start
			, dia, messages)

	def feCircleRadius(self, center=defaultNamedNotOptArg, Start=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20193, LCID, 1, (3, 0), ((12, 1), (12, 1), (11, 1)),center
			, Start, messages)

	def feCircleTangentTangent(self, curve1=defaultNamedNotOptArg, curve2=defaultNamedNotOptArg, radius=defaultNamedNotOptArg, nearloc=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20201, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (12, 1), (11, 1)),curve1
			, curve2, radius, nearloc, messages)

	def feCompute2DInvariants(self, bStress=defaultNamedNotOptArg, dTensor=defaultNamedNotOptArg, dInvariant=pythoncom.Missing):
		return self._ApplyTypes_(20551, 1, (3, 0), ((11, 1), (12, 1), (16396, 2)), 'feCompute2DInvariants', None,bStress
			, dTensor, dInvariant)

	def feCompute3DInvariants(self, bStress=defaultNamedNotOptArg, dTensor=defaultNamedNotOptArg, dInvariant=pythoncom.Missing):
		return self._ApplyTypes_(20550, 1, (3, 0), ((11, 1), (12, 1), (16396, 2)), 'feCompute3DInvariants', None,bStress
			, dTensor, dInvariant)

	def feConnectAuto(self, solidSET=defaultNamedNotOptArg, linearTolerance=defaultNamedNotOptArg, angleTolerance=defaultNamedNotOptArg, strategy=defaultNamedNotOptArg
			, bSelfConnect=defaultNamedNotOptArg, bCombineAll=defaultNamedNotOptArg, nConnectProp=defaultNamedNotOptArg, bGlued=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20425, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (3, 1), (11, 1), (11, 1), (3, 1), (11, 1)),solidSET
			, linearTolerance, angleTolerance, strategy, bSelfConnect, bCombineAll
			, nConnectProp, bGlued)

	def feConnectAuto2(self, solidSET=defaultNamedNotOptArg, connectTYPE=defaultNamedNotOptArg, linearTolerance=defaultNamedNotOptArg, angleTolerance=defaultNamedNotOptArg
			, strategy=defaultNamedNotOptArg, bSelfConnect=defaultNamedNotOptArg, bCombineAll=defaultNamedNotOptArg, nConnectProp=defaultNamedNotOptArg, bGlued=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20487, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1), (11, 1), (11, 1), (3, 1), (11, 1)),solidSET
			, connectTYPE, linearTolerance, angleTolerance, strategy, bSelfConnect
			, bCombineAll, nConnectProp, bGlued)

	def feConnectLinearParabolic(self, enType=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg, bAddMidside=defaultNamedNotOptArg, bMerge=defaultNamedNotOptArg
			, bGroupBadMidnodes=defaultNamedNotOptArg, bGroupUpdatedElements=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20699, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1)),enType
			, nSetID, bAddMidside, bMerge, bGroupBadMidnodes, bGroupUpdatedElements
			)

	def feCoordAlongCurve(self, cuID=defaultNamedNotOptArg, fromstart=defaultNamedNotOptArg, cuLENGTH=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20112, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (16396, 2)), 'feCoordAlongCurve', None,cuID
			, fromstart, cuLENGTH, xyz)

	def feCoordArrayTransform(self, Count=defaultNamedNotOptArg, fromCSYS=defaultNamedNotOptArg, toCSYS=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20121, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16396, 2)), 'feCoordArrayTransform', None,Count
			, fromCSYS, toCSYS, xyz)

	def feCoordArrayTransform2(self, Count=defaultNamedNotOptArg, fromCSYS=defaultNamedNotOptArg, toCSYS=defaultNamedNotOptArg, inXYZ=defaultNamedNotOptArg
			, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20383, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (16396, 2)), 'feCoordArrayTransform2', None,Count
			, fromCSYS, toCSYS, inXYZ, xyz)

	def feCoordCenterOfPoints(self, vXYZ1=defaultNamedNotOptArg, vXYZ2=defaultNamedNotOptArg, vXYZ3=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20501, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (16396, 2)), 'feCoordCenterOfPoints', None,vXYZ1
			, vXYZ2, vXYZ3, xyz)

	def feCoordColinear(self, xyz1=defaultNamedNotOptArg, xyz2=defaultNamedNotOptArg, xyz3=defaultNamedNotOptArg, isColinear=pythoncom.Missing):
		return self._ApplyTypes_(20122, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (16395, 2)), 'feCoordColinear', None,xyz1
			, xyz2, xyz3, isColinear)

	def feCoordCurveCenter(self, cuID=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20114, 1, (3, 0), ((3, 1), (16396, 2)), 'feCoordCurveCenter', None,cuID
			, xyz)

	def feCoordCurveMidpoint(self, cuID=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20113, 1, (3, 0), ((3, 1), (16396, 2)), 'feCoordCurveMidpoint', None,cuID
			, xyz)

	def feCoordFromWorkplane(self, wpXYZ=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20107, 1, (3, 0), ((12, 1), (16396, 2)), 'feCoordFromWorkplane', None,wpXYZ
			, xyz)

	def feCoordInSurface(self, suID=defaultNamedNotOptArg, suXY=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20116, 1, (3, 0), ((3, 1), (12, 1), (16396, 2)), 'feCoordInSurface', None,suID
			, suXY, xyz)

	def feCoordIntersectCurves(self, cuID1=defaultNamedNotOptArg, cuID2=defaultNamedNotOptArg, nearXYZ=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20109, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16396, 2)), 'feCoordIntersectCurves', None,cuID1
			, cuID2, nearXYZ, xyz)

	def feCoordIntersectLines(self, infLine=defaultNamedNotOptArg, pA1=defaultNamedNotOptArg, pA2=defaultNamedNotOptArg, pB1=defaultNamedNotOptArg
			, pB2=defaultNamedNotOptArg, pIntersect=pythoncom.Missing):
		return self._ApplyTypes_(20110, 1, (3, 0), ((11, 1), (12, 1), (12, 1), (12, 1), (12, 1), (16396, 2)), 'feCoordIntersectLines', None,infLine
			, pA1, pA2, pB1, pB2, pIntersect
			)

	def feCoordOnNode(self, ndID=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20119, 1, (3, 0), ((3, 1), (16396, 2)), 'feCoordOnNode', None,ndID
			, xyz)

	def feCoordOnPoint(self, ptID=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20118, 1, (3, 0), ((3, 1), (16396, 2)), 'feCoordOnPoint', None,ptID
			, xyz)

	def feCoordOntoCurve(self, cuID=defaultNamedNotOptArg, fromxyz=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20111, 1, (3, 0), ((3, 1), (12, 1), (16396, 2)), 'feCoordOntoCurve', None,cuID
			, fromxyz, xyz)

	def feCoordOntoLine(self, xyz=defaultNamedNotOptArg, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, xyzLine=pythoncom.Missing):
		return self._ApplyTypes_(20126, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (16396, 2)), 'feCoordOntoLine', None,xyz
			, p1, p2, xyzLine)

	def feCoordOntoPlane(self, xyz=defaultNamedNotOptArg, projDir=defaultNamedNotOptArg, planePt=defaultNamedNotOptArg, planeNorm=defaultNamedNotOptArg
			, xyzPlane=pythoncom.Missing):
		return self._ApplyTypes_(20125, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (16396, 2)), 'feCoordOntoPlane', None,xyz
			, projDir, planePt, planeNorm, xyzPlane)

	def feCoordOntoSurface(self, suID=defaultNamedNotOptArg, fromxyz=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20115, 1, (3, 0), ((3, 1), (12, 1), (16396, 2)), 'feCoordOntoSurface', None,suID
			, fromxyz, xyz)

	def feCoordPick(self, dlgTITLE=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20106, 1, (3, 0), ((8, 1), (16396, 2)), 'feCoordPick', None,dlgTITLE
			, xyz)

	def feCoordPickByMethod(self, method=defaultNamedNotOptArg, dlgTITLE=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20427, 1, (3, 0), ((3, 1), (8, 1), (16396, 2)), 'feCoordPickByMethod', None,method
			, dlgTITLE, xyz)

	def feCoordPlaneIntersect(self, baseA=defaultNamedNotOptArg, normA=defaultNamedNotOptArg, baseB=defaultNamedNotOptArg, normB=defaultNamedNotOptArg
			, baseC=defaultNamedNotOptArg, normC=defaultNamedNotOptArg, baseV=pythoncom.Missing):
		return self._ApplyTypes_(20127, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (16396, 2)), 'feCoordPlaneIntersect', None,baseA
			, normA, baseB, normB, baseC, normC
			, baseV)

	def feCoordRotate(self, xyz=defaultNamedNotOptArg, angle=defaultNamedNotOptArg, origin=defaultNamedNotOptArg, Axis=defaultNamedNotOptArg
			, xyzROT=pythoncom.Missing):
		return self._ApplyTypes_(20124, 1, (3, 0), ((12, 1), (5, 1), (12, 1), (12, 1), (16396, 2)), 'feCoordRotate', None,xyz
			, angle, origin, Axis, xyzROT)

	def feCoordSurfaceIntersect(self, cuID=defaultNamedNotOptArg, suID=defaultNamedNotOptArg, nearXYZ=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20117, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16396, 2)), 'feCoordSurfaceIntersect', None,cuID
			, suID, nearXYZ, xyz)

	def feCoordToDirCos(self, origin=defaultNamedNotOptArg, xaxis=defaultNamedNotOptArg, xyplane=defaultNamedNotOptArg, dircos=pythoncom.Missing):
		return self._ApplyTypes_(20123, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (16396, 2)), 'feCoordToDirCos', None,origin
			, xaxis, xyplane, dircos)

	def feCoordToWorkplane(self, xyz=defaultNamedNotOptArg, wpXYZ=pythoncom.Missing):
		return self._ApplyTypes_(20108, 1, (3, 0), ((12, 1), (16396, 2)), 'feCoordToWorkplane', None,xyz
			, wpXYZ)

	def feCoordTransform(self, fromCSYS=defaultNamedNotOptArg, fromxyz=defaultNamedNotOptArg, toCSYS=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20120, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (16396, 2)), 'feCoordTransform', None,fromCSYS
			, fromxyz, toCSYS, xyz)

	def feCoordVectorPlaneIntersect(self, xyz=defaultNamedNotOptArg, projDir=defaultNamedNotOptArg, planePt=defaultNamedNotOptArg, planeNorm=defaultNamedNotOptArg
			, xyzPlane=pythoncom.Missing):
		return self._ApplyTypes_(20443, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (16396, 2)), 'feCoordVectorPlaneIntersect', None,xyz
			, projDir, planePt, planeNorm, xyzPlane)

	def feCreateFunction(self, nNumAvailableTypes=defaultNamedNotOptArg, AvailableTypes=defaultNamedNotOptArg, nID=pythoncom.Missing):
		return self._ApplyTypes_(20621, 1, (3, 0), ((3, 1), (12, 1), (16387, 2)), 'feCreateFunction', None,nNumAvailableTypes
			, AvailableTypes, nID)

	def feCrossSectionReport(self, nPropID=defaultNamedNotOptArg, bDoEndA=defaultNamedNotOptArg, bCopyToClipboard=defaultNamedNotOptArg, fName=defaultNamedNotOptArg
			, nFileFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20599, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (8, 1), (3, 1)),nPropID
			, bDoEndA, bCopyToClipboard, fName, nFileFormat)

	def feCurveBreak(self, curveID=defaultNamedNotOptArg, nearloc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20214, LCID, 1, (3, 0), ((3, 1), (12, 1)),curveID
			, nearloc)

	def feCurveBreak2(self, nSetID=defaultNamedNotOptArg, nearloc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20751, LCID, 1, (3, 0), ((3, 1), (12, 1)),nSetID
			, nearloc)

	def feCurveChamfer(self, len1=defaultNamedNotOptArg, len2=defaultNamedNotOptArg, curve1=defaultNamedNotOptArg, curve2=defaultNamedNotOptArg
			, nearloc=defaultNamedNotOptArg, update1=defaultNamedNotOptArg, update2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20217, LCID, 1, (3, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (12, 1), (11, 1), (11, 1)),len1
			, len2, curve1, curve2, nearloc, update1
			, update2)

	def feCurveExtend(self, curveID=defaultNamedNotOptArg, nearloc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20213, LCID, 1, (3, 0), ((3, 1), (12, 1)),curveID
			, nearloc)

	def feCurveFillet(self, radius=defaultNamedNotOptArg, curve1=defaultNamedNotOptArg, curve2=defaultNamedNotOptArg, nearloc=defaultNamedNotOptArg
			, update1=defaultNamedNotOptArg, update2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20216, LCID, 1, (3, 0), ((5, 1), (3, 1), (3, 1), (12, 1), (11, 1), (11, 1)),radius
			, curve1, curve2, nearloc, update1, update2
			)

	def feCurveIntersectSolids(self, solid1=defaultNamedNotOptArg, solid2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20208, LCID, 1, (3, 0), ((3, 1), (3, 1)),solid1
			, solid2)

	def feCurveJoin(self, curve1=defaultNamedNotOptArg, curve2=defaultNamedNotOptArg, nearloc=defaultNamedNotOptArg, update1=defaultNamedNotOptArg
			, update2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20215, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (11, 1), (11, 1)),curve1
			, curve2, nearloc, update1, update2)

	def feCurveOffsetCurveWasher(self, curveSET=defaultNamedNotOptArg, faceID=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, bAutoSelect=defaultNamedNotOptArg
			, bSaveSplit=defaultNamedNotOptArg, bExtend=defaultNamedNotOptArg, dOffset=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20483, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (5, 1)),curveSET
			, faceID, nMode, bAutoSelect, bSaveSplit, bExtend
			, dOffset)

	def feCurveOffsetCurveWasher2(self, curveSET=defaultNamedNotOptArg, faceID=defaultNamedNotOptArg, nMode=defaultNamedNotOptArg, bAutoSelect=defaultNamedNotOptArg
			, bSaveSplit=defaultNamedNotOptArg, bExtend=defaultNamedNotOptArg, dOffset=defaultNamedNotOptArg, nOffsetmode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20568, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (5, 1), (3, 1)),curveSET
			, faceID, nMode, bAutoSelect, bSaveSplit, bExtend
			, dOffset, nOffsetmode)

	def feCurvePad(self, nCurve=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg, enPadOffsetType=defaultNamedNotOptArg, enPadAlignment=defaultNamedNotOptArg
			, bPadAddWasher=defaultNamedNotOptArg, nPadAlignCurve=defaultNamedNotOptArg, bSetupMappedMeshing=defaultNamedNotOptArg, alignVEC=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20569, LCID, 1, (3, 0), ((3, 1), (5, 1), (3, 1), (3, 1), (11, 1), (3, 1), (11, 1), (12, 1)),nCurve
			, dValue, enPadOffsetType, enPadAlignment, bPadAddWasher, nPadAlignCurve
			, bSetupMappedMeshing, alignVEC)

	def feCurveParametricOnSurface(self, surfID=defaultNamedNotOptArg, uDir=defaultNamedNotOptArg, location=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20210, LCID, 1, (3, 0), ((3, 1), (11, 1), (12, 1), (11, 1)),surfID
			, uDir, location, messages)

	def feCurveProjectCurvesOntoSurfaces(self, cuSetID=defaultNamedNotOptArg, suSetID=defaultNamedNotOptArg, extendMode=defaultNamedNotOptArg, attrib_trans=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20576, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),cuSetID
			, suSetID, extendMode, attrib_trans)

	def feCurveProjectOntoSolid(self, projectNormal=defaultNamedNotOptArg, along=defaultNamedNotOptArg, solidID=defaultNamedNotOptArg, curveSET=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20209, LCID, 1, (3, 0), ((11, 1), (12, 1), (3, 1), (3, 1), (11, 1)),projectNormal
			, along, solidID, curveSET, messages)

	def feCurveProjectOntoSurfaces(self, projectNormal=defaultNamedNotOptArg, along=defaultNamedNotOptArg, faceSET=defaultNamedNotOptArg, curveSET=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20386, LCID, 1, (3, 0), ((11, 1), (12, 1), (3, 1), (3, 1), (11, 1)),projectNormal
			, along, faceSET, curveSET, messages)

	def feCurveSlice(self, solidID=defaultNamedNotOptArg, planeBase=defaultNamedNotOptArg, planeNormal=defaultNamedNotOptArg, planeX=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20211, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),solidID
			, planeBase, planeNormal, planeX)

	def feCurveSolidToFEMAP(self, cuSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20601, LCID, 1, (3, 0), ((3, 1),),cuSetID
			)

	def feCurveSplitEdgeToEdge(self, nLongEdge=defaultNamedNotOptArg, nShortEdgeSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20486, LCID, 1, (3, 0), ((3, 1), (3, 1)),nLongEdge
			, nShortEdgeSet)

	def feCurveSplitEdgeToEdge2(self, nLongEdge=defaultNamedNotOptArg, nShortEdgeSet=defaultNamedNotOptArg, nSurfMethod=defaultNamedNotOptArg, nSurfID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20754, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nLongEdge
			, nShortEdgeSet, nSurfMethod, nSurfID)

	def feCurveSplitPointToEdge(self, nPtA=defaultNamedNotOptArg, nCuID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20485, LCID, 1, (3, 0), ((3, 1), (3, 1)),nPtA
			, nCuID)

	def feCurveSplitPointToEdge2(self, nPtA=defaultNamedNotOptArg, nCuID=defaultNamedNotOptArg, nSurfMethod=defaultNamedNotOptArg, nSurfID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20753, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nPtA
			, nCuID, nSurfMethod, nSurfID)

	def feCurveSplitPointToPoint(self, nPtA=defaultNamedNotOptArg, nPtB=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20484, LCID, 1, (3, 0), ((3, 1), (3, 1)),nPtA
			, nPtB)

	def feCurveSplitPointToPoint2(self, nPtA=defaultNamedNotOptArg, nPtB=defaultNamedNotOptArg, nSurfMethod=defaultNamedNotOptArg, nSurfID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20752, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nPtA
			, nPtB, nSurfMethod, nSurfID)

	def feCurveTrim(self, curveID=defaultNamedNotOptArg, TrimID=defaultNamedNotOptArg, nearloc=defaultNamedNotOptArg, extend=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20212, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (11, 1)),curveID
			, TrimID, nearloc, extend)

	def feCurveUpdateSurfaces(self, update=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20207, LCID, 1, (3, 0), ((11, 1), (11, 1)),update
			, messages)

	def feCurvesBreakAtIntersections(self, curveSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20611, LCID, 1, (3, 0), ((3, 1),),curveSET
			)

	def feDelete(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20172, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, entitySET)

	def feDeleteAll(self, geometry=defaultNamedNotOptArg, Mesh=defaultNamedNotOptArg, Output=defaultNamedNotOptArg, confirm=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20171, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (11, 1)),geometry
			, Mesh, Output, confirm)

	def feDeleteConstraints(self, bcSetID=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, deleteBC=defaultNamedNotOptArg
			, deleteBE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20175, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1)),bcSetID
			, entityTYPE, entitySET, deleteBC, deleteBE)

	def feDeleteLoads(self, loadSetID=defaultNamedNotOptArg, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, loadType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20174, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),loadSetID
			, entityTYPE, entitySET, loadType)

	def feDeleteMesh(self, enNodeOrElem=defaultNamedNotOptArg, elemSET=defaultNamedNotOptArg, bDeleteUnused=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20460, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),enNodeOrElem
			, elemSET, bDeleteUnused)

	def feDeleteOutput2V2(self, outputSetSET=defaultNamedNotOptArg, vectorSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20671, LCID, 1, (3, 0), ((3, 1), (3, 1)),outputSetSET
			, vectorSET)

	def feDeleteOutputEntryV2(self, setSET=defaultNamedNotOptArg, vectorSET=defaultNamedNotOptArg, nodeSET=defaultNamedNotOptArg, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20672, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),setSET
			, vectorSET, nodeSET, elemSET)

	def feDeleteOutputV2(self, outputSetID=defaultNamedNotOptArg, vectorSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20670, LCID, 1, (3, 0), ((3, 1), (3, 1)),outputSetID
			, vectorSET)

	def feDeleteToolbar(self, BarName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20369, LCID, 1, (3, 0), ((8, 1),),BarName
			)

	def feDeleteUserCommand(self, strTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20361, LCID, 1, (3, 0), ((8, 1),),strTitle
			)

	def feEdgesOfFreeFaces(self, elemSetID=defaultNamedNotOptArg, bParabolicEdges=defaultNamedNotOptArg, bPlaneElem=defaultNamedNotOptArg, nFreeCount=pythoncom.Missing
			, nFreeData=pythoncom.Missing):
		return self._ApplyTypes_(20717, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (16387, 2), (16396, 2)), 'feEdgesOfFreeFaces', None,elemSetID
			, bParabolicEdges, bPlaneElem, nFreeCount, nFreeData)

	def feElemCountOnProp(self, nPropSetID=defaultNamedNotOptArg, vPropID=pythoncom.Missing, vElemCount=pythoncom.Missing):
		return self._ApplyTypes_(20547, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2)), 'feElemCountOnProp', None,nPropSetID
			, vPropID, vElemCount)

	def feElementFreeEdge(self, elemSetID=defaultNamedNotOptArg, bParabolicEdges=defaultNamedNotOptArg, bLineElem=defaultNamedNotOptArg, nFreeCount=pythoncom.Missing
			, nFreeData=pythoncom.Missing):
		return self._ApplyTypes_(20438, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (16387, 2), (16396, 2)), 'feElementFreeEdge', None,elemSetID
			, bParabolicEdges, bLineElem, nFreeCount, nFreeData)

	def feElementFreeFace(self, elemSetID=defaultNamedNotOptArg, bParabolicEdges=defaultNamedNotOptArg, bPlaneElem=defaultNamedNotOptArg, nFreeCount=pythoncom.Missing
			, nFreeData=pythoncom.Missing):
		return self._ApplyTypes_(20439, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (16387, 2), (16396, 2)), 'feElementFreeFace', None,elemSetID
			, bParabolicEdges, bPlaneElem, nFreeCount, nFreeData)

	def feElementShapeCount(self, enShape=defaultNamedNotOptArg, nCount=pythoncom.Missing):
		return self._ApplyTypes_(20747, 1, (3, 0), ((3, 1), (16387, 2)), 'feElementShapeCount', None,enShape
			, nCount)

	def feElementTypeCount(self, enType=defaultNamedNotOptArg, nCount=pythoncom.Missing):
		return self._ApplyTypes_(20748, 1, (3, 0), ((3, 1), (16387, 2)), 'feElementTypeCount', None,enType
			, nCount)

	def feEndSelectionTool(self, nAddSET=defaultNamedNotOptArg, nRemoveSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20740, LCID, 1, (3, 0), ((3, 1), (3, 1)),nAddSET
			, nRemoveSET)

	def feEntityGetVisibility(self, visType=defaultNamedNotOptArg, visSetID=defaultNamedNotOptArg, bIsVisible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20594, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),visType
			, visSetID, bIsVisible)

	def feEntitySetVisibility(self, visType=defaultNamedNotOptArg, visID=defaultNamedNotOptArg, bIsVisible=defaultNamedNotOptArg, bRedraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20593, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1)),visType
			, visID, bIsVisible, bRedraw)

	def feEntitySetVisibility2(self, visType=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, visEnt=defaultNamedNotOptArg, entVisible=defaultNamedNotOptArg
			, bRedraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20633, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (11, 1)),visType
			, nCount, visEnt, entVisible, bRedraw)

	def feEntityVisibility(self, visType=defaultNamedNotOptArg, visID=defaultNamedNotOptArg, bIsVisible=defaultNamedNotOptArg, bRedraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20459, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1)),visType
			, visID, bIsVisible, bRedraw)

	def feFileAttachByOutset(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20519, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def feFileAttachInfo(self, nID=defaultNamedNotOptArg, status=pythoncom.Missing, ModelName=pythoncom.Missing, pOutSets=pythoncom.Missing):
		return self._ApplyTypes_(20517, 1, (3, 0), ((3, 1), (16387, 2), (16392, 2), (16393, 2)), 'feFileAttachInfo', None,nID
			, status, ModelName, pOutSets)

	def feFileAttachManage(self, nSetID=defaultNamedNotOptArg, OPT=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20516, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),nSetID
			, OPT, fName)

	def feFileAttachResults(self, analysis_program=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, bMmf=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20515, LCID, 1, (3, 0), ((3, 1), (8, 1), (11, 1)),analysis_program
			, fName, bMmf)

	def feFileAttachSave2V2(self, nID=defaultNamedNotOptArg, outSET=defaultNamedNotOptArg, outVec=defaultNamedNotOptArg, ndSet=defaultNamedNotOptArg
			, elSet=defaultNamedNotOptArg, bDetach=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20692, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1)),nID
			, outSET, outVec, ndSet, elSet, bDetach
			)

	def feFileAttachSaveV2(self, nID=defaultNamedNotOptArg, outSET=defaultNamedNotOptArg, outVec=defaultNamedNotOptArg, ndSet=defaultNamedNotOptArg
			, elSet=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20691, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nID
			, outSET, outVec, ndSet, elSet)

	def feFileClose(self, bSaveChanges=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20345, LCID, 1, (3, 0), ((11, 1),),bSaveChanges
			)

	def feFileCurrentDirectory(self, sCurDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20434, LCID, 1, (3, 0), ((8, 1),),sCurDir
			)

	def feFileExecute(self, cmdline=defaultNamedNotOptArg, waitForCompletion=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20071, LCID, 1, (3, 0), ((8, 1), (11, 1)),cmdline
			, waitForCompletion)

	def feFileExit(self):
		return self._oleobj_.InvokeTypes(20014, LCID, 1, (3, 0), (),)

	def feFileGetName(self, title=defaultNamedNotOptArg, filterName=defaultNamedNotOptArg, filterStr=defaultNamedNotOptArg, openForRead=defaultNamedNotOptArg
			, fName=pythoncom.Missing):
		return self._ApplyTypes_(20070, 1, (3, 0), ((8, 1), (8, 1), (8, 1), (11, 1), (16392, 2)), 'feFileGetName', None,title
			, filterName, filterStr, openForRead, fName)

	def feFileIsModified(self):
		return self._oleobj_.InvokeTypes(20492, LCID, 1, (3, 0), (),)

	def feFileJTHierarchy(self, iHier1=defaultNamedNotOptArg, iHier2=defaultNamedNotOptArg, iHier3=defaultNamedNotOptArg, iHier4=defaultNamedNotOptArg
			, iHier5=defaultNamedNotOptArg, iHier6=defaultNamedNotOptArg, iHier7=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20497, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),iHier1
			, iHier2, iHier3, iHier4, iHier5, iHier6
			, iHier7)

	def feFileJTName(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20494, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileJTUnits(self, iUnits=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20496, LCID, 1, (3, 0), ((3, 1),),iUnits
			)

	def feFileJTVersion(self, iVersion=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20495, LCID, 1, (3, 0), ((3, 1),),iVersion
			)

	def feFileMessageClear(self):
		return self._oleobj_.InvokeTypes(20771, LCID, 1, (3, 0), (),)

	def feFileMessageCopy(self):
		return self._oleobj_.InvokeTypes(20061, LCID, 1, (3, 0), (),)

	def feFileMessageLineNumber(self, CurrentLine=pythoncom.Missing):
		return self._ApplyTypes_(20065, 1, (3, 0), ((16387, 2),), 'feFileMessageLineNumber', None,CurrentLine
			)

	def feFileMessageSave(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20062, LCID, 1, (3, 0), ((11, 1), (8, 1)),useDlg
			, fName)

	def feFileMessageSave2(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, iFileFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20773, LCID, 1, (3, 0), ((11, 1), (8, 1), (3, 1)),useDlg
			, fName, iFileFormat)

	def feFileMessageSelect(self, firstLine=defaultNamedNotOptArg, lastLine=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20063, LCID, 1, (3, 0), ((3, 1), (3, 1)),firstLine
			, lastLine)

	def feFileMessageSelectAll(self):
		return self._oleobj_.InvokeTypes(20772, LCID, 1, (3, 0), (),)

	def feFileNew(self):
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (3, 0), (),)

	def feFileOpen(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20011, LCID, 1, (3, 0), ((11, 1), (8, 1)),useDlg
			, fName)

	def feFilePageSetupReset(self):
		return self._oleobj_.InvokeTypes(20056, LCID, 1, (3, 0), (),)

	def feFilePageSetupSave(self):
		return self._oleobj_.InvokeTypes(20055, LCID, 1, (3, 0), (),)

	def feFilePictureCopy(self):
		return self._oleobj_.InvokeTypes(20058, LCID, 1, (3, 0), (),)

	def feFilePictureCopy2(self, saveRegion=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20074, LCID, 1, (3, 0), ((3, 1),),saveRegion
			)

	def feFilePictureReplay(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20060, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFilePictureSave(self, useDlg=defaultNamedNotOptArg, saveDesktop=defaultNamedNotOptArg, format=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20059, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (8, 1)),useDlg
			, saveDesktop, format, fName)

	def feFilePictureSave2(self, useDlg=defaultNamedNotOptArg, saveRegion=defaultNamedNotOptArg, format=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20066, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (8, 1)),useDlg
			, saveRegion, format, fName)

	def feFilePictureSaveJT(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, eJTFileVersion=defaultNamedNotOptArg, eJTFileUnits=defaultNamedNotOptArg
			, JTHierarchy=defaultNamedNotOptArg, eLoadSetOption=defaultNamedNotOptArg, LoadSets=defaultNamedNotOptArg, eBCSetOption=defaultNamedNotOptArg, BCSets=defaultNamedNotOptArg
			, LinesAsCylinders=defaultNamedNotOptArg, dCylinderFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20726, LCID, 1, (3, 0), ((11, 1), (8, 1), (3, 1), (3, 1), (12, 1), (3, 1), (12, 1), (3, 1), (12, 1), (11, 1), (5, 1)),useDlg
			, fName, eJTFileVersion, eJTFileUnits, JTHierarchy, eLoadSetOption
			, LoadSets, eBCSetOption, BCSets, LinesAsCylinders, dCylinderFactor
			)

	def feFilePictureSaveJTMultiResults(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, eJTFileVersion=defaultNamedNotOptArg, eJTFileUnits=defaultNamedNotOptArg
			, OutputSets=defaultNamedNotOptArg, OutputVectors=defaultNamedNotOptArg, bRaw=defaultNamedNotOptArg, bAverage=defaultNamedNotOptArg, bTransform=defaultNamedNotOptArg
			, bCorners=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20727, LCID, 1, (3, 0), ((11, 1), (8, 1), (3, 1), (3, 1), (12, 1), (12, 1), (11, 1), (11, 1), (11, 1), (11, 1)),useDlg
			, fName, eJTFileVersion, eJTFileUnits, OutputSets, OutputVectors
			, bRaw, bAverage, bTransform, bCorners)

	def feFilePreferencesReset(self):
		return self._oleobj_.InvokeTypes(20069, LCID, 1, (3, 0), (),)

	def feFilePreferencesSave(self):
		return self._oleobj_.InvokeTypes(20068, LCID, 1, (3, 0), (),)

	def feFilePrint(self, useDlg=defaultNamedNotOptArg, asBitmap=defaultNamedNotOptArg, source=defaultNamedNotOptArg, fromFile=defaultNamedNotOptArg
			, toFile=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20057, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (8, 1), (8, 1)),useDlg
			, asBitmap, source, fromFile, toFile)

	def feFilePrint2(self, useDlg=defaultNamedNotOptArg, source=defaultNamedNotOptArg, toFile=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20466, LCID, 1, (3, 0), ((11, 1), (3, 1), (8, 1)),useDlg
			, source, toFile)

	def feFileProgramRun(self, useDlg=defaultNamedNotOptArg, init=defaultNamedNotOptArg, isFile=defaultNamedNotOptArg, buff=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20064, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (8, 1)),useDlg
			, init, isFile, buff)

	def feFileProgramRunning(self):
		return self._oleobj_.InvokeTypes(20389, LCID, 1, (3, 0), (),)

	def feFileReadAbaqus(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20040, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadAbaqusResults(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20052, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadAcis(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20018, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileReadAcisOpt(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, title=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, color=defaultNamedNotOptArg, increment_layer=defaultNamedNotOptArg, increment_color=defaultNamedNotOptArg, assign_color=defaultNamedNotOptArg, convert_to_splines=defaultNamedNotOptArg
			, convert_format=defaultNamedNotOptArg, clean=defaultNamedNotOptArg, heal=defaultNamedNotOptArg, check=defaultNamedNotOptArg, stringent=defaultNamedNotOptArg
			, delete_invalid=defaultNamedNotOptArg, faces=defaultNamedNotOptArg, Scale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20017, LCID, 1, (3, 0), ((11, 1), (8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (5, 1)),useDlg
			, fName, title, layer, color, increment_layer
			, increment_color, assign_color, convert_to_splines, convert_format, clean
			, heal, check, stringent, delete_invalid, faces
			, Scale)

	def feFileReadAnsys(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20039, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadAnsysResults(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20051, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadCSVResults(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20607, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileReadCatia(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, rdAnalytical=defaultNamedNotOptArg, rdTopology=defaultNamedNotOptArg
			, rdCurves=defaultNamedNotOptArg, stitch=defaultNamedNotOptArg, heal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20023, LCID, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),useDlg
			, fName, rdAnalytical, rdTopology, rdCurves, stitch
			, heal)

	def feFileReadCatia2(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, rdAnalytical=defaultNamedNotOptArg, rdTopology=defaultNamedNotOptArg
			, rdCurves=defaultNamedNotOptArg, rdNoShow=defaultNamedNotOptArg, rdNoPick=defaultNamedNotOptArg, rdWorkplanes=defaultNamedNotOptArg, stitch=defaultNamedNotOptArg
			, heal=defaultNamedNotOptArg, check=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20514, LCID, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),useDlg
			, fName, rdAnalytical, rdTopology, rdCurves, rdNoShow
			, rdNoPick, rdWorkplanes, stitch, heal, check
			)

	def feFileReadCatia3(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, rdAnalytical=defaultNamedNotOptArg, rdTopology=defaultNamedNotOptArg
			, rdCurves=defaultNamedNotOptArg, rdPoints=defaultNamedNotOptArg, rdNoShow=defaultNamedNotOptArg, rdNoPick=defaultNamedNotOptArg, rdWorkplanes=defaultNamedNotOptArg
			, stitch=defaultNamedNotOptArg, heal=defaultNamedNotOptArg, check=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20766, LCID, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),useDlg
			, fName, rdAnalytical, rdTopology, rdCurves, rdPoints
			, rdNoShow, rdNoPick, rdWorkplanes, stitch, heal
			, check)

	def feFileReadCatiaV5(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, fPath=defaultNamedNotOptArg, rdNoShow=defaultNamedNotOptArg
			, rdInactiveLayers=defaultNamedNotOptArg, rdPoints=defaultNamedNotOptArg, rdCurves=defaultNamedNotOptArg, rdSurfaces=defaultNamedNotOptArg, rdBodies=defaultNamedNotOptArg
			, simplify=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20025, LCID, 1, (3, 0), ((11, 1), (8, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),useDlg
			, fName, fPath, rdNoShow, rdInactiveLayers, rdPoints
			, rdCurves, rdSurfaces, rdBodies, simplify)

	def feFileReadDxf(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, read_TEXT=defaultNamedNotOptArg, read_3DFACE=defaultNamedNotOptArg
			, read_BLOCKS=defaultNamedNotOptArg, read_POLYELEM=defaultNamedNotOptArg, read_TRACE_boundary=defaultNamedNotOptArg, read_TRACE_centerline=defaultNamedNotOptArg, read_LAYER=defaultNamedNotOptArg
			, first_layer=defaultNamedNotOptArg, merge_points=defaultNamedNotOptArg, merge_distance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20016, LCID, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (11, 1), (5, 1)),useDlg
			, fName, read_TEXT, read_3DFACE, read_BLOCKS, read_POLYELEM
			, read_TRACE_boundary, read_TRACE_centerline, read_LAYER, first_layer, merge_points
			, merge_distance)

	def feFileReadDyna(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20041, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadDynaResults(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20053, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadIdeas(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20028, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileReadIges(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, merge_points=defaultNamedNotOptArg, read_LAYER=defaultNamedNotOptArg
			, read_geom_only=defaultNamedNotOptArg, read_surface_data=defaultNamedNotOptArg, trim_preference=defaultNamedNotOptArg, min_resolution=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20031, LCID, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (5, 1)),useDlg
			, fName, merge_points, read_LAYER, read_geom_only, read_surface_data
			, trim_preference, min_resolution)

	def feFileReadIgesAdv(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, read_curves=defaultNamedNotOptArg, read_untrimmed_surfaces=defaultNamedNotOptArg
			, read_trimmed_surfaces=defaultNamedNotOptArg, read_solids=defaultNamedNotOptArg, flavor=defaultNamedNotOptArg, trim_curve_option=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20030, LCID, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (3, 1)),useDlg
			, fName, read_curves, read_untrimmed_surfaces, read_trimmed_surfaces, read_solids
			, flavor, trim_curve_option)

	def feFileReadJT(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20608, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileReadMarc(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20042, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadMarcResults(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20054, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadNastran(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20038, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadNastranResults(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20050, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileReadNeutral(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, read_geometry=defaultNamedNotOptArg, read_model=defaultNamedNotOptArg
			, read_output=defaultNamedNotOptArg, status_messages=defaultNamedNotOptArg, offsetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20049, LCID, 1, (3, 0), ((3, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1)),brand
			, fName, read_geometry, read_model, read_output, status_messages
			, offsetID)

	def feFileReadNeutral2(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, read_geometry=defaultNamedNotOptArg, read_model=defaultNamedNotOptArg
			, read_output=defaultNamedNotOptArg, read_groups=defaultNamedNotOptArg, read_views=defaultNamedNotOptArg, status_messages=defaultNamedNotOptArg, offsetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20435, LCID, 1, (3, 0), ((3, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1)),brand
			, fName, read_geometry, read_model, read_output, read_groups
			, read_views, status_messages, offsetID)

	def feFileReadNeutral3(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, read_geometry=defaultNamedNotOptArg, read_model=defaultNamedNotOptArg
			, read_output=defaultNamedNotOptArg, read_groups=defaultNamedNotOptArg, read_views=defaultNamedNotOptArg, status_messages=defaultNamedNotOptArg, offsetID=defaultNamedNotOptArg
			, renumber_layers=defaultNamedNotOptArg, renumber_load_bc=defaultNamedNotOptArg, always_new_output_sets=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20476, LCID, 1, (3, 0), ((3, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (11, 1), (11, 1), (11, 1)),brand
			, fName, read_geometry, read_model, read_output, read_groups
			, read_views, status_messages, offsetID, renumber_layers, renumber_load_bc
			, always_new_output_sets)

	def feFileReadNeutral4(self, bUseDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, read_geometry=defaultNamedNotOptArg, read_model=defaultNamedNotOptArg
			, read_output=defaultNamedNotOptArg, read_computed_output_definition=defaultNamedNotOptArg, read_groups=defaultNamedNotOptArg, read_views=defaultNamedNotOptArg, status_messages=defaultNamedNotOptArg
			, offsetID=defaultNamedNotOptArg, renumber_layers=defaultNamedNotOptArg, renumber_load_bc=defaultNamedNotOptArg, always_new_output_sets=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20757, LCID, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (11, 1), (11, 1), (11, 1)),bUseDlg
			, fName, read_geometry, read_model, read_output, read_computed_output_definition
			, read_groups, read_views, status_messages, offsetID, renumber_layers
			, renumber_load_bc, always_new_output_sets)

	def feFileReadParasolid(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20020, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileReadParasolidOpt(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, title=defaultNamedNotOptArg, layer=defaultNamedNotOptArg
			, color=defaultNamedNotOptArg, increment_layer=defaultNamedNotOptArg, increment_color=defaultNamedNotOptArg, assign_color=defaultNamedNotOptArg, convert_format=defaultNamedNotOptArg
			, clean=defaultNamedNotOptArg, heal=defaultNamedNotOptArg, check=defaultNamedNotOptArg, stringent=defaultNamedNotOptArg, delete_invalid=defaultNamedNotOptArg
			, faces=defaultNamedNotOptArg, Scale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20019, LCID, 1, (3, 0), ((11, 1), (8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (5, 1)),useDlg
			, fName, title, layer, color, increment_layer
			, increment_color, assign_color, convert_format, clean, heal
			, check, stringent, delete_invalid, faces, Scale
			)

	def feFileReadPatran(self, fName=defaultNamedNotOptArg, bSaveZeroDispAsBC=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20475, LCID, 1, (3, 0), ((8, 1), (11, 1)),fName
			, bSaveZeroDispAsBC)

	def feFileReadProe(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20026, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileReadSolidEdge(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20027, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileReadSolidWorks(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20720, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileReadStep(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20022, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileReadStepOpt2(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, color=defaultNamedNotOptArg
			, increment_layer=defaultNamedNotOptArg, increment_color=defaultNamedNotOptArg, assign_color=defaultNamedNotOptArg, bodies=defaultNamedNotOptArg, faceted=defaultNamedNotOptArg
			, Surfaces=defaultNamedNotOptArg, Curves=defaultNamedNotOptArg, points=defaultNamedNotOptArg, optimize=defaultNamedNotOptArg, simplify=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20570, LCID, 1, (3, 0), ((11, 1), (8, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),useDlg
			, fName, layer, color, increment_layer, increment_color
			, assign_color, bodies, faceted, Surfaces, Curves
			, points, optimize, simplify)

	def feFileReadStl(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, skip_short_edges=defaultNamedNotOptArg, merge_nodes=defaultNamedNotOptArg
			, close_gaps=defaultNamedNotOptArg, PATRAN_file=defaultNamedNotOptArg, min_distance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20029, LCID, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (5, 1)),useDlg
			, fName, skip_short_edges, merge_nodes, close_gaps, PATRAN_file
			, min_distance)

	def feFileReadUg(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, rdBlanked=defaultNamedNotOptArg, rdLayers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20024, LCID, 1, (3, 0), ((11, 1), (8, 1), (11, 1), (11, 1)),useDlg
			, fName, rdBlanked, rdLayers)

	def feFileRebuild(self, useDlg=defaultNamedNotOptArg, fullRebuild=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20067, LCID, 1, (3, 0), ((11, 1), (11, 1)),useDlg
			, fullRebuild)

	def feFileRecoverDBData(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20508, LCID, 1, (3, 0), ((11, 1), (8, 1)),useDlg
			, fName)

	def feFileSave(self, useDlg=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20013, LCID, 1, (3, 0), ((11, 1),),useDlg
			)

	def feFileSaveAs(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20012, LCID, 1, (3, 0), ((11, 1), (8, 1)),useDlg
			, fName)

	def feFileTimedSave(self, useDlg=defaultNamedNotOptArg, saving=defaultNamedNotOptArg, notify=defaultNamedNotOptArg, Interval=defaultNamedNotOptArg
			, commands=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20015, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (3, 1), (3, 1)),useDlg
			, saving, notify, Interval, commands)

	def feFileWriteAbaqus(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20045, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileWriteAcis(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, version=defaultNamedNotOptArg, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20033, LCID, 1, (3, 0), ((11, 1), (8, 1), (5, 1), (3, 1)),useDlg
			, fName, version, solidSET)

	def feFileWriteAnsys(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20044, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileWriteDyna(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20046, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileWriteFNO2V2(self, nSetSet=defaultNamedNotOptArg, nVectorSet=defaultNamedNotOptArg, nOutputOnGroup=defaultNamedNotOptArg, nElementConnectivityGroup=defaultNamedNotOptArg
			, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20694, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (8, 1)),nSetSet
			, nVectorSet, nOutputOnGroup, nElementConnectivityGroup, fName)

	def feFileWriteFNO3V2(self, nSetSet=defaultNamedNotOptArg, nVectorSet=defaultNamedNotOptArg, nOutputOnGroup=defaultNamedNotOptArg, nElementConnectivityGroup=defaultNamedNotOptArg
			, nFileVersion=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20668, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (8, 1)),nSetSet
			, nVectorSet, nOutputOnGroup, nElementConnectivityGroup, nFileVersion, fName
			)

	def feFileWriteFNOV2(self, nSetSet=defaultNamedNotOptArg, nVectorSet=defaultNamedNotOptArg, nGroup=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20693, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),nSetSet
			, nVectorSet, nGroup, fName)

	def feFileWriteIdeas(self, fName=defaultNamedNotOptArg, PartName=defaultNamedNotOptArg, WriteGroups=defaultNamedNotOptArg, AbsoluteTempScale=defaultNamedNotOptArg
			, UnitSystem=defaultNamedNotOptArg, UserLengthFactor=defaultNamedNotOptArg, UserForceOrMass=defaultNamedNotOptArg, UserForceOrMassFactor=defaultNamedNotOptArg, UserTempFactor=defaultNamedNotOptArg
			, UserTempOffset=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20533, LCID, 1, (3, 0), ((8, 1), (8, 1), (11, 1), (11, 1), (3, 1), (5, 1), (11, 1), (5, 1), (5, 1), (5, 1)),fName
			, PartName, WriteGroups, AbsoluteTempScale, UnitSystem, UserLengthFactor
			, UserForceOrMass, UserForceOrMassFactor, UserTempFactor, UserTempOffset)

	def feFileWriteIges(self, fName=defaultNamedNotOptArg, spline_curves=defaultNamedNotOptArg, spline_surfaces=defaultNamedNotOptArg, bounded_surfaces=defaultNamedNotOptArg
			, customization=defaultNamedNotOptArg, surface_options=defaultNamedNotOptArg, export_as=defaultNamedNotOptArg, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20037, LCID, 1, (3, 0), ((8, 1), (11, 1), (11, 1), (11, 1), (3, 1), (3, 1), (3, 1), (3, 1)),fName
			, spline_curves, spline_surfaces, bounded_surfaces, customization, surface_options
			, export_as, solidSET)

	def feFileWriteJT(self, fName=defaultNamedNotOptArg, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20609, LCID, 1, (3, 0), ((8, 1), (3, 1)),fName
			, solidSET)

	def feFileWriteMarc(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20047, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileWriteNastran(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20043, LCID, 1, (3, 0), ((3, 1), (8, 1)),brand
			, fName)

	def feFileWriteNeutral(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, write_geometry_model=defaultNamedNotOptArg, write_analysis_model=defaultNamedNotOptArg
			, write_output=defaultNamedNotOptArg, write_addl_info=defaultNamedNotOptArg, expand_geometric=defaultNamedNotOptArg, minimize_size=defaultNamedNotOptArg, digits=defaultNamedNotOptArg
			, version=defaultNamedNotOptArg, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20048, LCID, 1, (3, 0), ((3, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (5, 1), (3, 1)),brand
			, fName, write_geometry_model, write_analysis_model, write_output, write_addl_info
			, expand_geometric, minimize_size, digits, version, groupID
			)

	def feFileWriteNeutral2(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, write_geometry_model=defaultNamedNotOptArg, write_analysis_model=defaultNamedNotOptArg
			, write_output=defaultNamedNotOptArg, write_selector=defaultNamedNotOptArg, write_palette=defaultNamedNotOptArg, write_groups=defaultNamedNotOptArg, write_views=defaultNamedNotOptArg
			, write_addl_info=defaultNamedNotOptArg, expand_geometric=defaultNamedNotOptArg, minimize_size=defaultNamedNotOptArg, digits=defaultNamedNotOptArg, version=defaultNamedNotOptArg
			, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20420, LCID, 1, (3, 0), ((3, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (5, 1), (3, 1)),brand
			, fName, write_geometry_model, write_analysis_model, write_output, write_selector
			, write_palette, write_groups, write_views, write_addl_info, expand_geometric
			, minimize_size, digits, version, groupID)

	def feFileWriteNeutral3(self, brand=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, write_geometry_model=defaultNamedNotOptArg, write_analysis_model=defaultNamedNotOptArg
			, write_output=defaultNamedNotOptArg, write_computed_output_definition=defaultNamedNotOptArg, write_selector=defaultNamedNotOptArg, write_palette=defaultNamedNotOptArg, write_groups=defaultNamedNotOptArg
			, write_views=defaultNamedNotOptArg, write_addl_info=defaultNamedNotOptArg, expand_geometric=defaultNamedNotOptArg, minimize_size=defaultNamedNotOptArg, digits=defaultNamedNotOptArg
			, version=defaultNamedNotOptArg, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20756, LCID, 1, (3, 0), ((3, 1), (8, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (5, 1), (3, 1)),brand
			, fName, write_geometry_model, write_analysis_model, write_output, write_computed_output_definition
			, write_selector, write_palette, write_groups, write_views, write_addl_info
			, expand_geometric, minimize_size, digits, version, groupID
			)

	def feFileWriteParasolid(self, useDlg=defaultNamedNotOptArg, fName=defaultNamedNotOptArg, version=defaultNamedNotOptArg, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20032, LCID, 1, (3, 0), ((11, 1), (8, 1), (5, 1), (3, 1)),useDlg
			, fName, version, solidSET)

	def feFileWriteSEPost(self, fName=defaultNamedNotOptArg, bOutputSurfaceMap=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20385, LCID, 1, (3, 0), ((8, 1), (11, 1)),fName
			, bOutputSurfaceMap)

	def feFileWriteSTAAD(self, fName=defaultNamedNotOptArg, AnalysisType=defaultNamedNotOptArg, sStructType=defaultNamedNotOptArg, sLengthUnits=defaultNamedNotOptArg
			, sForceUnits=defaultNamedNotOptArg, sPropUnits=defaultNamedNotOptArg, dGravConstant=defaultNamedNotOptArg, bModalCalc=defaultNamedNotOptArg, dModalCutOffFreq=defaultNamedNotOptArg
			, nModalCutOffMode=defaultNamedNotOptArg, bPrintModel=defaultNamedNotOptArg, bPrintDisp=defaultNamedNotOptArg, bPrintReactions=defaultNamedNotOptArg, bPrintMemberForces=defaultNamedNotOptArg
			, bPrintMemberStresses=defaultNamedNotOptArg, bPrintElemForces=defaultNamedNotOptArg, bPrintJointForces=defaultNamedNotOptArg, bPostDisp=defaultNamedNotOptArg, bPostSectionDisp=defaultNamedNotOptArg
			, bPostMemberForces=defaultNamedNotOptArg, bPostStresses=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20522, LCID, 1, (3, 0), ((8, 1), (3, 1), (8, 1), (8, 1), (8, 1), (8, 1), (5, 1), (11, 1), (5, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),fName
			, AnalysisType, sStructType, sLengthUnits, sForceUnits, sPropUnits
			, dGravConstant, bModalCalc, dModalCutOffFreq, nModalCutOffMode, bPrintModel
			, bPrintDisp, bPrintReactions, bPrintMemberForces, bPrintMemberStresses, bPrintElemForces
			, bPrintJointForces, bPostDisp, bPostSectionDisp, bPostMemberForces, bPostStresses
			)

	def feFileWriteStep(self, fName=defaultNamedNotOptArg, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20036, LCID, 1, (3, 0), ((8, 1), (3, 1)),fName
			, solidSET)

	def feFileWriteStep2(self, fName=defaultNamedNotOptArg, solidSET=defaultNamedNotOptArg, format=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20571, LCID, 1, (3, 0), ((8, 1), (3, 1), (3, 1)),fName
			, solidSET, format)

	def feFileWriteStl(self, fName=defaultNamedNotOptArg, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20034, LCID, 1, (3, 0), ((8, 1), (3, 1)),fName
			, elemSET)

	def feFileWriteTopologyStl(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20647, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feFileWriteVrml(self, fName=defaultNamedNotOptArg, version=defaultNamedNotOptArg, write_solid=defaultNamedNotOptArg, single_color=defaultNamedNotOptArg
			, write_deformed=defaultNamedNotOptArg, write_contour=defaultNamedNotOptArg, write_background=defaultNamedNotOptArg, background_color=defaultNamedNotOptArg, color=defaultNamedNotOptArg
			, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20035, LCID, 1, (3, 0), ((8, 1), (5, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (3, 1), (3, 1)),fName
			, version, write_solid, single_color, write_deformed, write_contour
			, write_background, background_color, color, solidSET)

	def feFormatReal(self, dValue=defaultNamedNotOptArg, nWidth=defaultNamedNotOptArg, nDecimal=defaultNamedNotOptArg, nFormat=defaultNamedNotOptArg
			, strValue=pythoncom.Missing):
		return self._ApplyTypes_(20461, 1, (3, 0), ((5, 1), (3, 1), (3, 1), (3, 1), (16392, 2)), 'feFormatReal', None,dValue
			, nWidth, nDecimal, nFormat, strValue)

	def feGFXDelete(self, bAllSets=defaultNamedNotOptArg, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20413, LCID, 1, (3, 0), ((11, 1), (3, 1)),bAllSets
			, nSetID)

	def feGFXEnableView(self, bEnableAll=defaultNamedNotOptArg, nVuID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20412, LCID, 1, (3, 0), ((11, 1), (3, 1)),bEnableAll
			, nVuID)

	def feGFXLoad(self, nSetID=defaultNamedNotOptArg, nxyz=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, npoly=defaultNamedNotOptArg
			, poly=defaultNamedNotOptArg, color=defaultNamedNotOptArg, edgecolor=defaultNamedNotOptArg, symbol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20414, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (12, 1), (3, 1), (3, 1), (3, 1)),nSetID
			, nxyz, xyz, npoly, poly, color
			, edgecolor, symbol)

	def feGFXReset(self):
		return self._oleobj_.InvokeTypes(20411, LCID, 1, (3, 0), (),)

	def feGFXSelect(self, nSetID=defaultNamedNotOptArg, bEnableAll=defaultNamedNotOptArg, bRedraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20410, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),nSetID
			, bEnableAll, bRedraw)

	def feGenerateCopy(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, alongVEC=defaultNamedNotOptArg, nodeINC=defaultNamedNotOptArg
			, Match=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20251, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (11, 1)),entityTYPE
			, entitySET, alongVEC, nodeINC, Match)

	def feGenerateCopy2(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, alongVEC=defaultNamedNotOptArg, nodeINC=defaultNamedNotOptArg
			, Match=defaultNamedNotOptArg, matchColorLayer=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20613, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (11, 1), (11, 1)),entityTYPE
			, entitySET, alongVEC, nodeINC, Match, matchColorLayer
			)

	def feGenerateRadialCopy(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, origVEC=defaultNamedNotOptArg, Length=defaultNamedNotOptArg
			, Match=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20253, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (5, 1), (11, 1)),entityTYPE
			, entitySET, origVEC, Length, Match)

	def feGenerateRadialCopy2(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, origXYZ=defaultNamedNotOptArg, aroundVEC=defaultNamedNotOptArg
			, Length=defaultNamedNotOptArg, bScaleAroundVec=defaultNamedNotOptArg, Match=defaultNamedNotOptArg, matchColorLayer=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20615, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1), (11, 1), (11, 1), (11, 1)),entityTYPE
			, entitySET, origXYZ, aroundVEC, Length, bScaleAroundVec
			, Match, matchColorLayer)

	def feGenerateReflect(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, origVEC=defaultNamedNotOptArg, normVEC=defaultNamedNotOptArg
			, trapWIDTH=defaultNamedNotOptArg, Match=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20255, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1), (11, 1)),entityTYPE
			, entitySET, origVEC, normVEC, trapWIDTH, Match
			)

	def feGenerateReflect2(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, origVEC=defaultNamedNotOptArg, normVEC=defaultNamedNotOptArg
			, trapWIDTH=defaultNamedNotOptArg, Match=defaultNamedNotOptArg, matchColorLayer=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20617, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1), (11, 1), (11, 1)),entityTYPE
			, entitySET, origVEC, normVEC, trapWIDTH, Match
			, matchColorLayer)

	def feGenerateRotate(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, origVEC=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg
			, rotANGLE=defaultNamedNotOptArg, transDIST=defaultNamedNotOptArg, Match=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20254, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1), (5, 1), (11, 1)),entityTYPE
			, entitySET, origVEC, axisVEC, rotANGLE, transDIST
			, Match)

	def feGenerateRotate2(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, origVEC=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg
			, rotANGLE=defaultNamedNotOptArg, transDIST=defaultNamedNotOptArg, Match=defaultNamedNotOptArg, matchColorLayer=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20616, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1), (5, 1), (11, 1), (11, 1)),entityTYPE
			, entitySET, origVEC, axisVEC, rotANGLE, transDIST
			, Match, matchColorLayer)

	def feGenerateScale(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, origVEC=defaultNamedNotOptArg, scaleVEC=defaultNamedNotOptArg
			, csysID=defaultNamedNotOptArg, Match=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20252, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (3, 1), (11, 1)),entityTYPE
			, entitySET, origVEC, scaleVEC, csysID, Match
			)

	def feGenerateScale2(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, origVEC=defaultNamedNotOptArg, scaleVEC=defaultNamedNotOptArg
			, csysID=defaultNamedNotOptArg, Match=defaultNamedNotOptArg, matchColorLayer=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20614, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (3, 1), (11, 1), (11, 1)),entityTYPE
			, entitySET, origVEC, scaleVEC, csysID, Match
			, matchColorLayer)

	def feGetBuildInfo(self, bPrint=defaultNamedNotOptArg, pbRelease=pythoncom.Missing, pnPreReleaseNum=pythoncom.Missing, pnBuildNum=pythoncom.Missing):
		return self._ApplyTypes_(20662, 1, (3, 0), ((11, 1), (16395, 2), (16387, 2), (16387, 2)), 'feGetBuildInfo', None,bPrint
			, pbRelease, pnPreReleaseNum, pnBuildNum)

	def feGetCurrentLibraryName(self, entityTYPE=defaultNamedNotOptArg, libraryTYPE=defaultNamedNotOptArg, libraryNAME=pythoncom.Missing):
		return self._ApplyTypes_(20655, 1, (3, 0), ((3, 1), (3, 1), (16392, 2)), 'feGetCurrentLibraryName', None,entityTYPE
			, libraryTYPE, libraryNAME)

	def feGetCurrentModelPDMInfo(self, pPDMInfo=pythoncom.Missing):
		return self._ApplyTypes_(20763, 1, (3, 0), ((16396, 2),), 'feGetCurrentModelPDMInfo', None,pPDMInfo
			)

	def feGetElemDistortion(self, elemID=defaultNamedNotOptArg, valASPECT=pythoncom.Missing, valTAPER=pythoncom.Missing, valANGLE=pythoncom.Missing
			, valWARP=pythoncom.Missing, valNasWARP=pythoncom.Missing, valALTTAPER=pythoncom.Missing, valTET=pythoncom.Missing, valJDet=pythoncom.Missing
			, valComb=pythoncom.Missing):
		return self._ApplyTypes_(20101, 1, (3, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'feGetElemDistortion', None,elemID
			, valASPECT, valTAPER, valANGLE, valWARP, valNasWARP
			, valALTTAPER, valTET, valJDet, valComb)

	def feGetElemDistortion2(self, elemID=defaultNamedNotOptArg, valASPECT=pythoncom.Missing, valTAPER=pythoncom.Missing, valANGLE=pythoncom.Missing
			, valWARP=pythoncom.Missing, valNasWARP=pythoncom.Missing, valALTTAPER=pythoncom.Missing, valTET=pythoncom.Missing, valJDet=pythoncom.Missing
			, valComb=pythoncom.Missing, valExpTime=pythoncom.Missing):
		return self._ApplyTypes_(20478, 1, (3, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'feGetElemDistortion2', None,elemID
			, valASPECT, valTAPER, valANGLE, valWARP, valNasWARP
			, valALTTAPER, valTET, valJDet, valComb, valExpTime
			)

	def feGetElementAdjacentFaces(self, nElemID=defaultNamedNotOptArg, nFaceID=defaultNamedNotOptArg, nFromElemSetID=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg
			, bMatchNormals=defaultNamedNotOptArg, nNumFaces=pythoncom.Missing, nElems=pythoncom.Missing, nFaces=pythoncom.Missing):
		return self._ApplyTypes_(20635, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (11, 1), (16387, 2), (16396, 2), (16396, 2)), 'feGetElementAdjacentFaces', None,nElemID
			, nFaceID, nFromElemSetID, dTolerance, bMatchNormals, nNumFaces
			, nElems, nFaces)

	def feGetElementEdges(self, title=defaultNamedNotOptArg, orig_nCount=defaultNamedNotOptArg, orig_elemID=defaultNamedNotOptArg, orig_faceID=defaultNamedNotOptArg
			, nCount=pythoncom.Missing, elemID=pythoncom.Missing, faceID=pythoncom.Missing):
		return self._ApplyTypes_(20437, 1, (3, 0), ((8, 1), (3, 1), (12, 1), (12, 1), (16387, 2), (16396, 2), (16396, 2)), 'feGetElementEdges', None,title
			, orig_nCount, orig_elemID, orig_faceID, nCount, elemID
			, faceID)

	def feGetElementFaces(self, title=defaultNamedNotOptArg, orig_nCount=defaultNamedNotOptArg, orig_elemID=defaultNamedNotOptArg, orig_faceID=defaultNamedNotOptArg
			, nCount=pythoncom.Missing, elemID=pythoncom.Missing, faceID=pythoncom.Missing):
		return self._ApplyTypes_(20422, 1, (3, 0), ((8, 1), (3, 1), (12, 1), (12, 1), (16387, 2), (16396, 2), (16396, 2)), 'feGetElementFaces', None,title
			, orig_nCount, orig_elemID, orig_faceID, nCount, elemID
			, faceID)

	def feGetElementFacesFromSet(self, title=defaultNamedNotOptArg, nElemSetID=defaultNamedNotOptArg, nCount=pythoncom.Missing, elemID=pythoncom.Missing
			, faceID=pythoncom.Missing):
		return self._ApplyTypes_(20606, 1, (3, 0), ((8, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2)), 'feGetElementFacesFromSet', None,title
			, nElemSetID, nCount, elemID, faceID)

	def feGetInt(self, title=defaultNamedNotOptArg, lowerlimit=defaultNamedNotOptArg, upperlimit=defaultNamedNotOptArg, value=pythoncom.Missing):
		return self._ApplyTypes_(20156, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (16387, 2)), 'feGetInt', None,title
			, lowerlimit, upperlimit, value)

	def feGetMenuCommand(self, menuName1=defaultNamedNotOptArg, menuName2=defaultNamedNotOptArg, menuName3=defaultNamedNotOptArg, cmdID=pythoncom.Missing):
		return self._ApplyTypes_(20363, 1, (3, 0), ((8, 1), (8, 1), (8, 1), (16387, 2)), 'feGetMenuCommand', None,menuName1
			, menuName2, menuName3, cmdID)

	def feGetMenuCommands(self, menuName1=defaultNamedNotOptArg, menuName2=defaultNamedNotOptArg, numCmds=pythoncom.Missing, cmdID=pythoncom.Missing
			, cmdTitle=pythoncom.Missing):
		return self._ApplyTypes_(20362, 1, (3, 0), ((8, 1), (8, 1), (16387, 2), (16396, 2), (16396, 2)), 'feGetMenuCommands', None,menuName1
			, menuName2, numCmds, cmdID, cmdTitle)

	def feGetNodalAreaOnSurface(self, nSurface=defaultNamedNotOptArg, bAdjustMidside=defaultNamedNotOptArg, bUnitArea=defaultNamedNotOptArg, pnNumNodes=pythoncom.Missing
			, pvNodes=pythoncom.Missing, pvAreas=pythoncom.Missing):
		return self._ApplyTypes_(20637, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (16387, 2), (16396, 2), (16396, 2)), 'feGetNodalAreaOnSurface', None,nSurface
			, bAdjustMidside, bUnitArea, pnNumNodes, pvNodes, pvAreas
			)

	def feGetNodalAreaOrLength(self, nNumElem=defaultNamedNotOptArg, nElems=defaultNamedNotOptArg, nFaces=defaultNamedNotOptArg, bAdjustMidside=defaultNamedNotOptArg
			, bUnitArea=defaultNamedNotOptArg, pnNumNodes=pythoncom.Missing, pvNodes=pythoncom.Missing, pvAreaOrLength=pythoncom.Missing):
		return self._ApplyTypes_(20636, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (11, 1), (11, 1), (16387, 2), (16396, 2), (16396, 2)), 'feGetNodalAreaOrLength', None,nNumElem
			, nElems, nFaces, bAdjustMidside, bUnitArea, pnNumNodes
			, pvNodes, pvAreaOrLength)

	def feGetReal(self, title=defaultNamedNotOptArg, lowerlimit=defaultNamedNotOptArg, upperlimit=defaultNamedNotOptArg, value=pythoncom.Missing):
		return self._ApplyTypes_(20155, 1, (3, 0), ((8, 1), (5, 1), (5, 1), (16389, 2)), 'feGetReal', None,title
			, lowerlimit, upperlimit, value)

	def feGetRealLength(self, title=defaultNamedNotOptArg, value=pythoncom.Missing):
		return self._ApplyTypes_(20573, 1, (3, 0), ((8, 1), (16389, 2)), 'feGetRealLength', None,title
			, value)

	def feGetTeamcenterDatasetInfo(self, sItemID=defaultNamedNotOptArg, sRevision=defaultNamedNotOptArg, sDatasetName=defaultNamedNotOptArg, sDatasetinfo=pythoncom.Missing):
		return self._ApplyTypes_(20765, 1, (3, 0), ((8, 1), (8, 1), (8, 1), (16396, 2)), 'feGetTeamcenterDatasetInfo', None,sItemID
			, sRevision, sDatasetName, sDatasetinfo)

	def feGetToolbarCommand(self, BarName=defaultNamedNotOptArg, cmdIndex=defaultNamedNotOptArg, cmdID=pythoncom.Missing):
		return self._ApplyTypes_(20374, 1, (3, 0), ((8, 1), (3, 1), (16387, 2)), 'feGetToolbarCommand', None,BarName
			, cmdIndex, cmdID)

	def feGetToolbarCommands(self, BarName=defaultNamedNotOptArg, numCmds=pythoncom.Missing, cmdID=pythoncom.Missing, cmdVisible=pythoncom.Missing
			, cmdSubmenu=pythoncom.Missing, cmdTitle=pythoncom.Missing):
		return self._ApplyTypes_(20357, 1, (3, 0), ((8, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'feGetToolbarCommands', None,BarName
			, numCmds, cmdID, cmdVisible, cmdSubmenu, cmdTitle
			)

	def feGetToolbarSubCommands(self, cmdID=defaultNamedNotOptArg, numSubCmds=pythoncom.Missing, subcmdID=pythoncom.Missing, subcmdVisible=pythoncom.Missing
			, subcmdTitle=pythoncom.Missing):
		return self._ApplyTypes_(20358, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'feGetToolbarSubCommands', None,cmdID
			, numSubCmds, subcmdID, subcmdVisible, subcmdTitle)

	def feGetToolbars(self, numBars=pythoncom.Missing, barID=pythoncom.Missing, barVisible=pythoncom.Missing, barTitle=pythoncom.Missing):
		return self._ApplyTypes_(20356, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2)), 'feGetToolbars', None,numBars
			, barID, barVisible, barTitle)

	def feGetUserCommands(self, numCmd=pythoncom.Missing, strTitle=pythoncom.Missing, strCmd=pythoncom.Missing, strArg=pythoncom.Missing
			, strStartDir=pythoncom.Missing):
		return self._ApplyTypes_(20360, 1, (3, 0), ((16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'feGetUserCommands', None,numCmd
			, strTitle, strCmd, strArg, strStartDir)

	def feGraphicsHardware(self, Vendor=pythoncom.Missing, Renderer=pythoncom.Missing, version=pythoncom.Missing):
		return self._ApplyTypes_(20654, 1, (3, 0), ((16392, 2), (16392, 2), (16392, 2)), 'feGraphicsHardware', None,Vendor
			, Renderer, version)

	def feGroupBoolean(self, opperation=defaultNamedNotOptArg, grID1=defaultNamedNotOptArg, grID2=defaultNamedNotOptArg, grCreate=defaultNamedNotOptArg
			, grTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20164, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (8, 1)),opperation
			, grID1, grID2, grCreate, grTitle)

	def feGroupBoolean2(self, GroupsToProcessSetID=defaultNamedNotOptArg, GroupToSubtractFromID=defaultNamedNotOptArg, opperation=defaultNamedNotOptArg, GroupToCreateID=defaultNamedNotOptArg
			, GroupTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20491, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (8, 1)),GroupsToProcessSetID
			, GroupToSubtractFromID, opperation, GroupToCreateID, GroupTitle)

	def feGroupCombine(self, groupSET=defaultNamedNotOptArg, groupID=pythoncom.Missing):
		return self._ApplyTypes_(20419, 1, (3, 0), ((3, 1), (16387, 2)), 'feGroupCombine', None,groupSET
			, groupID)

	def feGroupCondense(self, groupSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20721, LCID, 1, (3, 0), ((3, 1),),groupSET
			)

	def feGroupEvaluate(self, groupSET=defaultNamedNotOptArg, forceEval=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20341, LCID, 1, (3, 0), ((3, 1), (11, 1)),groupSET
			, forceEval)

	def feGroupFromCriteria(self, vuID=defaultNamedNotOptArg, bVisibleOnly=defaultNamedNotOptArg, nGroupID=pythoncom.Missing):
		return self._ApplyTypes_(20641, 1, (3, 0), ((3, 1), (11, 1), (16387, 2)), 'feGroupFromCriteria', None,vuID
			, bVisibleOnly, nGroupID)

	def feGroupGenElemShape(self, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20592, LCID, 1, (3, 0), ((3, 1),),elemSET
			)

	def feGroupGenElemType(self, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20169, LCID, 1, (3, 0), ((3, 1),),elemSET
			)

	def feGroupGenMatl(self, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20168, LCID, 1, (3, 0), ((3, 1),),elemSET
			)

	def feGroupGenProp(self, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20167, LCID, 1, (3, 0), ((3, 1),),elemSET
			)

	def feGroupGenSolid(self, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20166, LCID, 1, (3, 0), ((3, 1),),solidSET
			)

	def feGroupGenVisible(self, nGroupID=defaultNamedNotOptArg, bIncludePropAndMatl=defaultNamedNotOptArg, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20600, LCID, 1, (3, 0), ((3, 1), (11, 1), (8, 1)),nGroupID
			, bIncludePropAndMatl, title)

	def feGroupGenerate(self, elemSET=defaultNamedNotOptArg, planer=defaultNamedNotOptArg, brkPropMatl=defaultNamedNotOptArg, brkLayer=defaultNamedNotOptArg
			, brkColor=defaultNamedNotOptArg, brkAngle=defaultNamedNotOptArg, addLayers=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20165, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (3, 1), (3, 1), (5, 1), (11, 1)),elemSET
			, planer, brkPropMatl, brkLayer, brkColor, brkAngle
			, addLayers)

	def feGroupGenerate2(self, elemSET=defaultNamedNotOptArg, planer=defaultNamedNotOptArg, brkPropMatl=defaultNamedNotOptArg, brkLayer=defaultNamedNotOptArg
			, brkColor=defaultNamedNotOptArg, brkAngle=defaultNamedNotOptArg, brkMatchNormal=defaultNamedNotOptArg, brkNonManifold=defaultNamedNotOptArg, addLayers=defaultNamedNotOptArg
			, nExpandGroup=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20530, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (3, 1), (3, 1), (5, 1), (11, 1), (11, 1), (11, 1), (3, 1)),elemSET
			, planer, brkPropMatl, brkLayer, brkColor, brkAngle
			, brkMatchNormal, brkNonManifold, addLayers, nExpandGroup)

	def feGroupMoveToLayer(self, nGroupID=defaultNamedNotOptArg, nLayerID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20445, LCID, 1, (3, 0), ((3, 1), (3, 1)),nGroupID
			, nLayerID)

	def feGroupPeel(self, elemSET=defaultNamedNotOptArg, peelLayers=defaultNamedNotOptArg, keepPeel=defaultNamedNotOptArg, keepCore=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20170, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1)),elemSET
			, peelLayers, keepPeel, keepCore)

	def feGroupReduceToExisting(self, groupSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20755, LCID, 1, (3, 0), ((3, 1),),groupSET
			)

	def feGroupsContaining(self, enDataType=defaultNamedNotOptArg, nEntityID=defaultNamedNotOptArg, nGroupSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20585, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),enDataType
			, nEntityID, nGroupSetID)

	def feHelpURL(self, url=pythoncom.Missing):
		return self._ApplyTypes_(20746, 1, (3, 0), ((16392, 2),), 'feHelpURL', None,url
			)

	def feImprintLocationInSurface(self, vXYZ=defaultNamedNotOptArg, nSurfaceID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20639, LCID, 1, (3, 0), ((12, 1), (3, 1)),vXYZ
			, nSurfaceID)

	def feIsUserLoggedInToTeamcenter(self, sUserID=pythoncom.Missing):
		return self._ApplyTypes_(20760, 1, (3, 0), ((16392, 2),), 'feIsUserLoggedInToTeamcenter', None,sUserID
			)

	def feLayerGet(self, layID=defaultNamedNotOptArg, layColor=pythoncom.Missing, layTitle=pythoncom.Missing):
		return self._ApplyTypes_(20081, 1, (3, 0), ((3, 1), (16387, 2), (16392, 2)), 'feLayerGet', None,layID
			, layColor, layTitle)

	def feLayerPut(self, layID=defaultNamedNotOptArg, layColor=defaultNamedNotOptArg, layTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20080, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),layID
			, layColor, layTitle)

	def feLicenseExpiration(self, nDays=pythoncom.Missing):
		return self._ApplyTypes_(20381, 1, (3, 0), ((16387, 2),), 'feLicenseExpiration', None,nDays
			)

	def feLicenseGetInfo(self, nFeature=defaultNamedNotOptArg, bUser=defaultNamedNotOptArg, pnLic=pythoncom.Missing, pFeatures=pythoncom.Missing
			, pLicAvail=pythoncom.Missing, pLicInUse=pythoncom.Missing, pUsers=pythoncom.Missing):
		return self._ApplyTypes_(20702, 1, (3, 0), ((3, 1), (11, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'feLicenseGetInfo', None,nFeature
			, bUser, pnLic, pFeatures, pLicAvail, pLicInUse
			, pUsers)

	def feLicenseIsAvailable(self, nFeature=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20430, LCID, 1, (3, 0), ((3, 1),),nFeature
			)

	def feLicenseMethod(self, nLicenseType=pythoncom.Missing):
		return self._ApplyTypes_(20431, 1, (3, 0), ((16387, 2),), 'feLicenseMethod', None,nLicenseType
			)

	def feLicensePrintInfo(self, nFeature=defaultNamedNotOptArg, bUser=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20701, LCID, 1, (3, 0), ((3, 1), (11, 1)),nFeature
			, bUser)

	def feLine2Tangent(self, curve1=defaultNamedNotOptArg, curve2=defaultNamedNotOptArg, p1=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20182, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (11, 1)),curve1
			, curve2, p1, messages)

	def feLineAtAngle(self, angle=defaultNamedNotOptArg, curveID=defaultNamedNotOptArg, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20178, LCID, 1, (3, 0), ((5, 1), (3, 1), (12, 1), (12, 1), (11, 1)),angle
			, curveID, p1, p2, messages)

	def feLineHorzVert(self, horizontal=defaultNamedNotOptArg, p1=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20177, LCID, 1, (3, 0), ((11, 1), (12, 1), (5, 1), (11, 1)),horizontal
			, p1, Length, messages)

	def feLineMidline(self, curve1=defaultNamedNotOptArg, curve2=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20180, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),curve1
			, curve2, messages)

	def feLineParallel(self, offset=defaultNamedNotOptArg, curveID=defaultNamedNotOptArg, p1=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20179, LCID, 1, (3, 0), ((5, 1), (3, 1), (12, 1), (11, 1)),offset
			, curveID, p1, messages)

	def feLinePointIDs(self, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20184, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),p1
			, p2, messages)

	def feLinePointTangent(self, curveID=defaultNamedNotOptArg, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20181, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (11, 1)),curveID
			, p1, p2, messages)

	def feLinePoints(self, ontoWorkplane=defaultNamedNotOptArg, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20176, LCID, 1, (3, 0), ((11, 1), (12, 1), (12, 1), (11, 1)),ontoWorkplane
			, p1, p2, messages)

	def feLineRectangle(self, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20183, LCID, 1, (3, 0), ((12, 1), (12, 1), (11, 1)),p1
			, p2, messages)

	def feLoadCombine(self, fromSET=defaultNamedNotOptArg, toSET=defaultNamedNotOptArg, Scale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20342, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),fromSET
			, toSET, Scale)

	def feLoadFromFreebody(self, freebodyID=defaultNamedNotOptArg, NodeSetID=defaultNamedNotOptArg, outSetID=defaultNamedNotOptArg, loadSetID=defaultNamedNotOptArg
			, doSummation=defaultNamedNotOptArg, doNodes=defaultNamedNotOptArg, overrideNodeCheck=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20507, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),freebodyID
			, NodeSetID, outSetID, loadSetID, doSummation, doNodes
			, overrideNodeCheck)

	def feLoadToolbarLayout(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20373, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feLockAbort(self):
		return self._oleobj_.InvokeTypes(20652, LCID, 1, (3, 0), (),)

	def feLoginToTeamcenter(self, sUserID=defaultNamedNotOptArg, sPassWord=defaultNamedNotOptArg, sGroup=pythoncom.Missing, sRole=pythoncom.Missing
			, sServerUrl=defaultNamedNotOptArg):
		return self._ApplyTypes_(20759, 1, (3, 0), ((8, 1), (8, 1), (16392, 2), (16392, 2), (8, 1)), 'feLoginToTeamcenter', None,sUserID
			, sPassWord, sGroup, sRole, sServerUrl)

	def feMaxInt(self, Int1=defaultNamedNotOptArg, Int2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20502, LCID, 1, (3, 0), ((3, 1), (3, 1)),Int1
			, Int2)

	def feMaxReal(self, Real1=defaultNamedNotOptArg, Real2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20504, LCID, 1, (5, 0), ((5, 1), (5, 1)),Real1
			, Real2)

	def feMeasureAngle(self, center=defaultNamedNotOptArg, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, angle=pythoncom.Missing):
		return self._ApplyTypes_(20087, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (16389, 2)), 'feMeasureAngle', None,center
			, p1, p2, angle)

	def feMeasureAngleBetweenNodesV2(self, nVertex=defaultNamedNotOptArg, nFrom=defaultNamedNotOptArg, nTo=defaultNamedNotOptArg, nOutSetID=defaultNamedNotOptArg
			, nOutVecID=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg, vecBASE=pythoncom.Missing, vecNormal=pythoncom.Missing, magAngle=pythoncom.Missing):
		return self._ApplyTypes_(20697, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (16396, 2), (16396, 2), (16389, 2)), 'feMeasureAngleBetweenNodesV2', None,nVertex
			, nFrom, nTo, nOutSetID, nOutVecID, nCSysID
			, vecBASE, vecNormal, magAngle)

	def feMeasureCurve(self, curveSET=defaultNamedNotOptArg, totalLength=pythoncom.Missing):
		return self._ApplyTypes_(20088, 1, (3, 0), ((3, 1), (16389, 2)), 'feMeasureCurve', None,curveSET
			, totalLength)

	def feMeasureDistance(self, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, dist=pythoncom.Missing):
		return self._ApplyTypes_(20084, 1, (3, 0), ((12, 1), (12, 1), (16389, 2)), 'feMeasureDistance', None,p1
			, p2, dist)

	def feMeasureDistanceBetweenGeometry(self, enFromType=defaultNamedNotOptArg, nFromSet=defaultNamedNotOptArg, enToType=defaultNamedNotOptArg, nToSet=defaultNamedNotOptArg
			, bMinimum=defaultNamedNotOptArg, nFromID=pythoncom.Missing, nToID=pythoncom.Missing, vFrom=pythoncom.Missing, vTo=pythoncom.Missing
			, dDistance=pythoncom.Missing):
		return self._ApplyTypes_(20540, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (16387, 2), (16387, 2), (16396, 2), (16396, 2), (16389, 2)), 'feMeasureDistanceBetweenGeometry', None,enFromType
			, nFromSet, enToType, nToSet, bMinimum, nFromID
			, nToID, vFrom, vTo, dDistance)

	def feMeasureDistanceBetweenLines(self, pA1=defaultNamedNotOptArg, pA2=defaultNamedNotOptArg, pB1=defaultNamedNotOptArg, pB2=defaultNamedNotOptArg
			, dist=pythoncom.Missing):
		return self._ApplyTypes_(20086, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (16389, 2)), 'feMeasureDistanceBetweenLines', None,pA1
			, pA2, pB1, pB2, dist)

	def feMeasureDistanceBetweenNodes2V2(self, nFrom=defaultNamedNotOptArg, nTo=defaultNamedNotOptArg, nOutSetID=defaultNamedNotOptArg, nOutVecID=defaultNamedNotOptArg
			, nCSysID=defaultNamedNotOptArg, vecBASE=pythoncom.Missing, vecTip=pythoncom.Missing, vecDist=pythoncom.Missing, magDist=pythoncom.Missing):
		return self._ApplyTypes_(20696, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (16396, 2), (16396, 2), (16396, 2), (16389, 2)), 'feMeasureDistanceBetweenNodes2V2', None,nFrom
			, nTo, nOutSetID, nOutVecID, nCSysID, vecBASE
			, vecTip, vecDist, magDist)

	def feMeasureDistanceBetweenNodesV2(self, nFrom=defaultNamedNotOptArg, nTo=defaultNamedNotOptArg, nOutSetID=defaultNamedNotOptArg, nOutVecID=defaultNamedNotOptArg
			, nCSysID=defaultNamedNotOptArg, vecBASE=pythoncom.Missing, vecDist=pythoncom.Missing, magDist=pythoncom.Missing):
		return self._ApplyTypes_(20695, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (16396, 2), (16396, 2), (16389, 2)), 'feMeasureDistanceBetweenNodesV2', None,nFrom
			, nTo, nOutSetID, nOutVecID, nCSysID, vecBASE
			, vecDist, magDist)

	def feMeasureDistanceBetweenSolids(self, solidID1=defaultNamedNotOptArg, solidID2=defaultNamedNotOptArg, dist=pythoncom.Missing):
		return self._ApplyTypes_(20523, 1, (3, 0), ((3, 1), (3, 1), (16389, 2)), 'feMeasureDistanceBetweenSolids', None,solidID1
			, solidID2, dist)

	def feMeasureDistanceToPlane(self, p1=defaultNamedNotOptArg, planePt=defaultNamedNotOptArg, planeNorm=defaultNamedNotOptArg, dist=pythoncom.Missing):
		return self._ApplyTypes_(20085, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (16389, 2)), 'feMeasureDistanceToPlane', None,p1
			, planePt, planeNorm, dist)

	def feMeasureMeshMassProp(self, elemSET=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg, printResults=defaultNamedNotOptArg, printDetails=defaultNamedNotOptArg
			, len=pythoncom.Missing, Area=pythoncom.Missing, volume=pythoncom.Missing, structMass=pythoncom.Missing, nonstructMass=pythoncom.Missing
			, totalMass=pythoncom.Missing, structCG=pythoncom.Missing, nonstructCG=pythoncom.Missing, totalCG=pythoncom.Missing, Inertia=pythoncom.Missing
			, inertiaCG=pythoncom.Missing):
		return self._ApplyTypes_(20091, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'feMeasureMeshMassProp', None,elemSET
			, csysID, printResults, printDetails, len, Area
			, volume, structMass, nonstructMass, totalMass, structCG
			, nonstructCG, totalCG, Inertia, inertiaCG)

	def feMeasureMeshSectionProp(self, elemSET=defaultNamedNotOptArg, vecBASE=defaultNamedNotOptArg, vecDIR=defaultNamedNotOptArg, sectProp=pythoncom.Missing):
		return self._ApplyTypes_(20093, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (16396, 2)), 'feMeasureMeshSectionProp', None,elemSET
			, vecBASE, vecDIR, sectProp)

	def feMeasureSolidMassProp(self, solidID=defaultNamedNotOptArg, Area=pythoncom.Missing, volume=pythoncom.Missing, cg=pythoncom.Missing
			, Inertia=pythoncom.Missing):
		return self._ApplyTypes_(20090, 1, (3, 0), ((3, 1), (16389, 2), (16389, 2), (16396, 2), (16396, 2)), 'feMeasureSolidMassProp', None,solidID
			, Area, volume, cg, Inertia)

	def feMeasureSurfSectionProp(self, surfID=defaultNamedNotOptArg, vecBASE=defaultNamedNotOptArg, vecDIR=defaultNamedNotOptArg, sectProp=pythoncom.Missing):
		return self._ApplyTypes_(20092, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (16396, 2)), 'feMeasureSurfSectionProp', None,surfID
			, vecBASE, vecDIR, sectProp)

	def feMeasureSurfaceArea(self, surfaceSET=defaultNamedNotOptArg, totalArea=pythoncom.Missing):
		return self._ApplyTypes_(20089, 1, (3, 0), ((3, 1), (16389, 2)), 'feMeasureSurfaceArea', None,surfaceSET
			, totalArea)

	def feMeshApproachSurface(self, surfaceSET=defaultNamedNotOptArg, approach=defaultNamedNotOptArg, approachData=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20268, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),surfaceSET
			, approach, approachData)

	def feMeshAttach(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, attachTYPE=defaultNamedNotOptArg, attachID=defaultNamedNotOptArg
			, doNodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20309, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (11, 1)),entityTYPE
			, entitySET, attachTYPE, attachID, doNodes)

	def feMeshAttachNodes(self, nNodes=defaultNamedNotOptArg, NodeID=defaultNamedNotOptArg, attachTYPE=defaultNamedNotOptArg, attachID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20423, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1)),nNodes
			, NodeID, attachTYPE, attachID)

	def feMeshAttrCurve(self, curveSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, orient=defaultNamedNotOptArg, offset1=defaultNamedNotOptArg
			, offset2=defaultNamedNotOptArg, orient_type=defaultNamedNotOptArg, offset_type=defaultNamedNotOptArg, release1=defaultNamedNotOptArg, release2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20265, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (3, 1), (3, 1), (12, 1), (12, 1)),curveSET
			, propID, orient, offset1, offset2, orient_type
			, offset_type, release1, release2)

	def feMeshAttrPoint(self, pointSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20264, LCID, 1, (3, 0), ((3, 1), (3, 1)),pointSET
			, propID)

	def feMeshAttrSolid(self, solidSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20267, LCID, 1, (3, 0), ((3, 1), (3, 1)),solidSET
			, propID)

	def feMeshAttrSurface(self, surfaceSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, offset=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20266, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),surfaceSET
			, propID, offset)

	def feMeshBetween(self, propID=defaultNamedNotOptArg, genMode=defaultNamedNotOptArg, shape=defaultNamedNotOptArg, rightSplit=defaultNamedNotOptArg
			, alternate=defaultNamedNotOptArg, allQuad=defaultNamedNotOptArg, logSpacing=defaultNamedNotOptArg, numCorners=defaultNamedNotOptArg, numNodes=defaultNamedNotOptArg
			, bias=defaultNamedNotOptArg, nodeINC=defaultNamedNotOptArg, cornerXYZ=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20275, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),propID
			, genMode, shape, rightSplit, alternate, allQuad
			, logSpacing, numCorners, numNodes, bias, nodeINC
			, cornerXYZ)

	def feMeshBuildRemeshRegions(self, elemSET=defaultNamedNotOptArg, breakAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20284, LCID, 1, (3, 0), ((3, 1), (5, 1)),elemSET
			, breakAngle)

	def feMeshCleanupSlivers(self, elemSET=defaultNamedNotOptArg, minAngle=defaultNamedNotOptArg, minLength=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20282, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1)),elemSET
			, minAngle, minLength)

	def feMeshClosestLink(self, fromSET=defaultNamedNotOptArg, toSET=defaultNamedNotOptArg, connectWith=defaultNamedNotOptArg, orient=defaultNamedNotOptArg
			, dof=defaultNamedNotOptArg, Reverse=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20276, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (11, 1)),fromSET
			, toSET, connectWith, orient, dof, Reverse
			)

	def feMeshCoincidentLink(self, fromSET=defaultNamedNotOptArg, connectWith=defaultNamedNotOptArg, orient=defaultNamedNotOptArg, dof=defaultNamedNotOptArg
			, tolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20277, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1)),fromSET
			, connectWith, orient, dof, tolerance)

	def feMeshConnectRigid(self, nSourceNodeSetID=defaultNamedNotOptArg, nTargetNodeSetID=defaultNamedNotOptArg, bIsRbe3=defaultNamedNotOptArg, bbSourceDoF=defaultNamedNotOptArg
			, bbTargetDoF=defaultNamedNotOptArg, bMaxDistance=defaultNamedNotOptArg, dMaxDistance=defaultNamedNotOptArg, bMultiMap=defaultNamedNotOptArg, nMinTargetNum=defaultNamedNotOptArg
			, nMaxTargetNum=defaultNamedNotOptArg, nBadSourceSet=defaultNamedNotOptArg, nBadTargetSet=defaultNamedNotOptArg, pnCreated=pythoncom.Missing):
		return self._ApplyTypes_(20709, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (12, 1), (12, 1), (11, 1), (5, 1), (11, 1), (3, 1), (3, 1), (3, 1), (3, 1), (16387, 2)), 'feMeshConnectRigid', None,nSourceNodeSetID
			, nTargetNodeSetID, bIsRbe3, bbSourceDoF, bbTargetDoF, bMaxDistance
			, dMaxDistance, bMultiMap, nMinTargetNum, nMaxTargetNum, nBadSourceSet
			, nBadTargetSet, pnCreated)

	def feMeshConvertFacets(self, solidID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20281, LCID, 1, (3, 0), ((3, 1),),solidID
			)

	def feMeshCurve(self, curveSET=defaultNamedNotOptArg, MeshElem=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, orient=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20270, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (12, 1)),curveSET
			, MeshElem, propID, orient)

	def feMeshCurve2(self, curveSET=defaultNamedNotOptArg, MeshElem=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, merge_nodes=defaultNamedNotOptArg
			, offsetToRefPt=defaultNamedNotOptArg, orient=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20650, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (11, 1), (11, 1), (12, 1)),curveSET
			, MeshElem, propID, merge_nodes, offsetToRefPt, orient
			)

	def feMeshDetach(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, attachTYPE=defaultNamedNotOptArg, attachID=defaultNamedNotOptArg
			, interior=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20310, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (11, 1)),entityTYPE
			, entitySET, attachTYPE, attachID, interior)

	def feMeshEdgeMembers(self, elemSET=defaultNamedNotOptArg, nodeSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, orient=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20287, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),elemSET
			, nodeSET, propID, orient)

	def feMeshEdgeMembers2(self, bOnFreeEdges=defaultNamedNotOptArg, elemSET=defaultNamedNotOptArg, nodeSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg
			, orient=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20640, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (3, 1), (12, 1)),bOnFreeEdges
			, elemSET, nodeSET, propID, orient)

	def feMeshEdgeRemoval(self, elemSET=defaultNamedNotOptArg, nd1=defaultNamedNotOptArg, nd2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20283, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),elemSET
			, nd1, nd2)

	def feMeshEdgeSplit(self, nNode1=defaultNamedNotOptArg, nNode2=defaultNamedNotOptArg, nNodeSetorZero=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20520, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nNode1
			, nNode2, nNodeSetorZero)

	def feMeshEdgeSplit2(self, nNode1=defaultNamedNotOptArg, nNode2=defaultNamedNotOptArg, nNumSplits=defaultNamedNotOptArg, nBiasType=defaultNamedNotOptArg
			, nBiasLocation=defaultNamedNotOptArg, dBias=defaultNamedNotOptArg, nNodeSetorZero=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20575, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (3, 1)),nNode1
			, nNode2, nNumSplits, nBiasType, nBiasLocation, dBias
			, nNodeSetorZero)

	def feMeshEditRemeshRegions(self, el1=defaultNamedNotOptArg, el2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20285, LCID, 1, (3, 0), ((3, 1), (3, 1)),el1
			, el2)

	def feMeshEditingSplit(self, nElemSet=defaultNamedNotOptArg, nSplitMode=defaultNamedNotOptArg, dWarping=defaultNamedNotOptArg, bMergeNodes=defaultNamedNotOptArg
			, bOntoGeom=defaultNamedNotOptArg, dMaxAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20758, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (11, 1), (11, 1), (5, 1)),nElemSet
			, nSplitMode, dWarping, bMergeNodes, bOntoGeom, dMaxAngle
			)

	def feMeshExtrudeCurve(self, curveSET=defaultNamedNotOptArg, axisLEN=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg, propID=defaultNamedNotOptArg
			, numElem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20290, LCID, 1, (3, 0), ((3, 1), (5, 1), (12, 1), (3, 1), (3, 1)),curveSET
			, axisLEN, axisVEC, propID, numElem)

	def feMeshExtrudeCurve2(self, curveSET=defaultNamedNotOptArg, axisLEN=defaultNamedNotOptArg, dBias=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg
			, propID=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20768, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (12, 1), (3, 1), (3, 1)),curveSET
			, axisLEN, dBias, axisVEC, propID, numElem
			)

	def feMeshExtrudeElem(self, elemSET=defaultNamedNotOptArg, axisLEN=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg, propID=defaultNamedNotOptArg
			, numElem=defaultNamedNotOptArg, method=defaultNamedNotOptArg, matchCurrent=defaultNamedNotOptArg, deleteOrig=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20289, LCID, 1, (3, 0), ((3, 1), (5, 1), (12, 1), (3, 1), (3, 1), (3, 1), (11, 1), (11, 1)),elemSET
			, axisLEN, axisVEC, propID, numElem, method
			, matchCurrent, deleteOrig)

	def feMeshExtrudeElem2(self, elemSET=defaultNamedNotOptArg, axisLEN=defaultNamedNotOptArg, axisOrig=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg
			, propID=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg, method=defaultNamedNotOptArg, radialspherical=defaultNamedNotOptArg, ontoSurfSetID=defaultNamedNotOptArg
			, matchCurrent=defaultNamedNotOptArg, deleteOrig=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20538, LCID, 1, (3, 0), ((3, 1), (5, 1), (12, 1), (12, 1), (3, 1), (3, 1), (3, 1), (11, 1), (3, 1), (11, 1), (11, 1)),elemSET
			, axisLEN, axisOrig, axisVEC, propID, numElem
			, method, radialspherical, ontoSurfSetID, matchCurrent, deleteOrig
			)

	def feMeshExtrudeElem3(self, elemSET=defaultNamedNotOptArg, axisLEN=defaultNamedNotOptArg, dBias=defaultNamedNotOptArg, axisOrig=defaultNamedNotOptArg
			, axisVEC=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg, method=defaultNamedNotOptArg, radialspherical=defaultNamedNotOptArg
			, ontoSurfSetID=defaultNamedNotOptArg, matchCurrent=defaultNamedNotOptArg, deleteOrig=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20767, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (12, 1), (12, 1), (3, 1), (3, 1), (3, 1), (11, 1), (3, 1), (11, 1), (11, 1)),elemSET
			, axisLEN, dBias, axisOrig, axisVEC, propID
			, numElem, method, radialspherical, ontoSurfSetID, matchCurrent
			, deleteOrig)

	def feMeshHexSolid(self, solidSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, surfaceMeshOnly=defaultNamedNotOptArg, makeMidside=defaultNamedNotOptArg
			, checkSurfElem=defaultNamedNotOptArg, deleteSurfElem=defaultNamedNotOptArg, midsideGeom=defaultNamedNotOptArg, midsideAngle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20273, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (5, 1)),solidSET
			, propID, surfaceMeshOnly, makeMidside, checkSurfElem, deleteSurfElem
			, midsideGeom, midsideAngle)

	def feMeshHexSolidFromElement(self, baseSET=defaultNamedNotOptArg, topSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, numLayer=defaultNamedNotOptArg
			, match1=defaultNamedNotOptArg, match2=defaultNamedNotOptArg, makeMidside=defaultNamedNotOptArg, checkSurfElem=defaultNamedNotOptArg, deleteSurfElem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20274, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),baseSET
			, topSET, propID, numLayer, match1, match2
			, makeMidside, checkSurfElem, deleteSurfElem)

	def feMeshPoint(self, pointSET=defaultNamedNotOptArg, MeshElem=defaultNamedNotOptArg, propID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20269, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1)),pointSET
			, MeshElem, propID)

	def feMeshPoint2(self, pointSET=defaultNamedNotOptArg, MeshElem=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, merge_nodes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20649, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (11, 1)),pointSET
			, MeshElem, propID, merge_nodes)

	def feMeshRemesh(self, elemSET=defaultNamedNotOptArg, nodeSET=defaultNamedNotOptArg, remeshMode=defaultNamedNotOptArg, refineRatio=defaultNamedNotOptArg
			, breakAngle=defaultNamedNotOptArg, deleteOrig=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, minBetween=defaultNamedNotOptArg, maxASPECT=defaultNamedNotOptArg
			, maxQuickNodes=defaultNamedNotOptArg, meshApproach=defaultNamedNotOptArg, quadAngle=defaultNamedNotOptArg, smoothLaplacian=defaultNamedNotOptArg, smoothIter=defaultNamedNotOptArg
			, smoothTol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20280, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (11, 1), (3, 1), (3, 1), (5, 1), (3, 1), (3, 1), (5, 1), (11, 1), (3, 1), (5, 1)),elemSET
			, nodeSET, remeshMode, refineRatio, breakAngle, deleteOrig
			, propID, minBetween, maxASPECT, maxQuickNodes, meshApproach
			, quadAngle, smoothLaplacian, smoothIter, smoothTol)

	def feMeshRemeshRegions(self, MeshSize=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, minBetween=defaultNamedNotOptArg, maxASPECT=defaultNamedNotOptArg
			, maxQuickNodes=defaultNamedNotOptArg, meshApproach=defaultNamedNotOptArg, quadAngle=defaultNamedNotOptArg, smoothLaplacian=defaultNamedNotOptArg, smoothIter=defaultNamedNotOptArg
			, smoothTol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20286, LCID, 1, (3, 0), ((5, 1), (3, 1), (3, 1), (5, 1), (3, 1), (3, 1), (5, 1), (11, 1), (3, 1), (5, 1)),MeshSize
			, propID, minBetween, maxASPECT, maxQuickNodes, meshApproach
			, quadAngle, smoothLaplacian, smoothIter, smoothTol)

	def feMeshRevolveCurve(self, curveSET=defaultNamedNotOptArg, rotANGLE=defaultNamedNotOptArg, rotThrust=defaultNamedNotOptArg, axisOrig=defaultNamedNotOptArg
			, axisVEC=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20292, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (12, 1), (12, 1), (3, 1), (3, 1)),curveSET
			, rotANGLE, rotThrust, axisOrig, axisVEC, propID
			, numElem)

	def feMeshRevolveCurve2(self, curveSET=defaultNamedNotOptArg, rotANGLE=defaultNamedNotOptArg, rotThrust=defaultNamedNotOptArg, dBias=defaultNamedNotOptArg
			, axisOrig=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20770, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (12, 1), (12, 1), (3, 1), (3, 1)),curveSET
			, rotANGLE, rotThrust, dBias, axisOrig, axisVEC
			, propID, numElem)

	def feMeshRevolveElem(self, elemSET=defaultNamedNotOptArg, rotANGLE=defaultNamedNotOptArg, rotThrust=defaultNamedNotOptArg, axisOrig=defaultNamedNotOptArg
			, axisVEC=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg, matchCurrent=defaultNamedNotOptArg, deleteOrig=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20291, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (12, 1), (12, 1), (3, 1), (3, 1), (11, 1), (11, 1)),elemSET
			, rotANGLE, rotThrust, axisOrig, axisVEC, propID
			, numElem, matchCurrent, deleteOrig)

	def feMeshRevolveElem2(self, elemSET=defaultNamedNotOptArg, rotANGLE=defaultNamedNotOptArg, rotThrust=defaultNamedNotOptArg, dBias=defaultNamedNotOptArg
			, axisOrig=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg, matchCurrent=defaultNamedNotOptArg
			, deleteOrig=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20769, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (12, 1), (12, 1), (3, 1), (3, 1), (11, 1), (11, 1)),elemSET
			, rotANGLE, rotThrust, dBias, axisOrig, axisVEC
			, propID, numElem, matchCurrent, deleteOrig)

	def feMeshSizeCurve(self, curveSET=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg, MeshSize=defaultNamedNotOptArg, minLine=defaultNamedNotOptArg
			, minClosed=defaultNamedNotOptArg, minOther=defaultNamedNotOptArg, spacing=defaultNamedNotOptArg, biasMethod=defaultNamedNotOptArg, bias=defaultNamedNotOptArg
			, biasLoc=defaultNamedNotOptArg, CustomSize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20261, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (3, 1), (11, 1)),curveSET
			, numElem, MeshSize, minLine, minClosed, minOther
			, spacing, biasMethod, bias, biasLoc, CustomSize
			)

	def feMeshSizeCurve2(self, curveSET=defaultNamedNotOptArg, numElem=defaultNamedNotOptArg, MeshSize=defaultNamedNotOptArg, minLine=defaultNamedNotOptArg
			, minClosed=defaultNamedNotOptArg, minOther=defaultNamedNotOptArg, spacing=defaultNamedNotOptArg, biasMethod=defaultNamedNotOptArg, bias=defaultNamedNotOptArg
			, biasLoc=defaultNamedNotOptArg, CustomSize=defaultNamedNotOptArg, bPropagateMeshSize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20722, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (3, 1), (11, 1), (11, 1)),curveSET
			, numElem, MeshSize, minLine, minClosed, minOther
			, spacing, biasMethod, bias, biasLoc, CustomSize
			, bPropagateMeshSize)

	def feMeshSizeCurveMatchNodes(self, nCurveSet=defaultNamedNotOptArg, nNodeSet=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20565, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),nCurveSet
			, nNodeSet, dTolerance)

	def feMeshSizeCurveMatchXYZ(self, nCurveSet=defaultNamedNotOptArg, nNumXYZ=defaultNamedNotOptArg, vecXYZ=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20566, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (5, 1)),nCurveSet
			, nNumXYZ, vecXYZ, dTolerance)

	def feMeshSizePoint(self, pointSET=defaultNamedNotOptArg, MeshSize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20260, LCID, 1, (3, 0), ((3, 1), (5, 1)),pointSET
			, MeshSize)

	def feMeshSizePropagate(self, CurvesWithSizesToPropagateSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20723, LCID, 1, (3, 0), ((3, 1),),CurvesWithSizesToPropagateSET
			)

	def feMeshSizeSolid(self, surfSET=defaultNamedNotOptArg, replaceAll=defaultNamedNotOptArg, MeshSize=defaultNamedNotOptArg, minEdge=defaultNamedNotOptArg
			, maxANGLE=defaultNamedNotOptArg, maxOnSmall=defaultNamedNotOptArg, smallSize=defaultNamedNotOptArg, vertexAspect=defaultNamedNotOptArg, mappedRefinement=defaultNamedNotOptArg
			, GrowthFactor=defaultNamedNotOptArg, refineRatio=defaultNamedNotOptArg, refineSurf=defaultNamedNotOptArg, matchAdjacent=defaultNamedNotOptArg, hexMesh=defaultNamedNotOptArg
			, adjustColor=defaultNamedNotOptArg, removeSlaving=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20263, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (3, 1), (5, 1), (3, 1), (5, 1), (5, 1), (11, 1), (5, 1), (5, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),surfSET
			, replaceAll, MeshSize, minEdge, maxANGLE, maxOnSmall
			, smallSize, vertexAspect, mappedRefinement, GrowthFactor, refineRatio
			, refineSurf, matchAdjacent, hexMesh, adjustColor, removeSlaving
			)

	def feMeshSizeSurface(self, surfSET=defaultNamedNotOptArg, replaceAll=defaultNamedNotOptArg, MeshSize=defaultNamedNotOptArg, minEdge=defaultNamedNotOptArg
			, maxANGLE=defaultNamedNotOptArg, maxOnSmall=defaultNamedNotOptArg, smallSize=defaultNamedNotOptArg, vertexAspect=defaultNamedNotOptArg, mappedRefinement=defaultNamedNotOptArg
			, grxfprintfowthFactor=defaultNamedNotOptArg, refineRatio=defaultNamedNotOptArg, refineSurf=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20262, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (3, 1), (5, 1), (3, 1), (5, 1), (5, 1), (11, 1), (5, 1), (5, 1), (11, 1)),surfSET
			, replaceAll, MeshSize, minEdge, maxANGLE, maxOnSmall
			, smallSize, vertexAspect, mappedRefinement, grxfprintfowthFactor, refineRatio
			, refineSurf)

	def feMeshSizeSurface2(self, surfSET=defaultNamedNotOptArg, replaceAll=defaultNamedNotOptArg, MeshSize=defaultNamedNotOptArg, minEdge=defaultNamedNotOptArg
			, maxANGLE=defaultNamedNotOptArg, maxOnSmall=defaultNamedNotOptArg, smallSize=defaultNamedNotOptArg, vertexAspect=defaultNamedNotOptArg, mappedRefinement=defaultNamedNotOptArg
			, grxfprintfowthFactor=defaultNamedNotOptArg, refineRatio=defaultNamedNotOptArg, refineSurf=defaultNamedNotOptArg, suppressEdges=defaultNamedNotOptArg, shortEdgePrecent=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20783, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (3, 1), (5, 1), (3, 1), (5, 1), (5, 1), (11, 1), (5, 1), (5, 1), (11, 1), (11, 1), (5, 1)),surfSET
			, replaceAll, MeshSize, minEdge, maxANGLE, maxOnSmall
			, smallSize, vertexAspect, mappedRefinement, grxfprintfowthFactor, refineRatio
			, refineSurf, suppressEdges, shortEdgePrecent)

	def feMeshSmooth(self, elemSET=defaultNamedNotOptArg, laplaceSmooth=defaultNamedNotOptArg, iter=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20288, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (5, 1)),elemSET
			, laplaceSmooth, iter, tolerance)

	def feMeshSmooth2(self, elemSET=defaultNamedNotOptArg, fixednodeSET=defaultNamedNotOptArg, laplaceSmooth=defaultNamedNotOptArg, iter=defaultNamedNotOptArg
			, tolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20536, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (3, 1), (5, 1)),elemSET
			, fixednodeSET, laplaceSmooth, iter, tolerance)

	def feMeshSurface(self, surfaceSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, minBetween=defaultNamedNotOptArg, maxASPECT=defaultNamedNotOptArg
			, maxQuickNodes=defaultNamedNotOptArg, meshApproach=defaultNamedNotOptArg, quadAngle=defaultNamedNotOptArg, midsideGeom=defaultNamedNotOptArg, midsideAngle=defaultNamedNotOptArg
			, smoothLaplacian=defaultNamedNotOptArg, smoothIter=defaultNamedNotOptArg, smoothTol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20271, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (3, 1), (3, 1), (5, 1), (11, 1), (5, 1), (11, 1), (3, 1), (5, 1)),surfaceSET
			, propID, minBetween, maxASPECT, maxQuickNodes, meshApproach
			, quadAngle, midsideGeom, midsideAngle, smoothLaplacian, smoothIter
			, smoothTol)

	def feMeshSurface2(self, surfaceSET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, elemShape=defaultNamedNotOptArg, bAllowMapped=defaultNamedNotOptArg
			, bResetDefaults=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20455, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1)),surfaceSET
			, propID, elemShape, bAllowMapped, bResetDefaults)

	def feMeshSurfaceByAttributes(self, surfaceSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20458, LCID, 1, (3, 0), ((3, 1),),surfaceSET
			)

	def feMeshSweepCurve(self, curveSET=defaultNamedNotOptArg, numPath=defaultNamedNotOptArg, curvePath=defaultNamedNotOptArg, numAlign=defaultNamedNotOptArg
			, curveAlign=defaultNamedNotOptArg, alignLoc=defaultNamedNotOptArg, propID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20294, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (12, 1), (12, 1), (3, 1)),curveSET
			, numPath, curvePath, numAlign, curveAlign, alignLoc
			, propID)

	def feMeshSweepElem(self, elemSET=defaultNamedNotOptArg, numPath=defaultNamedNotOptArg, curvePath=defaultNamedNotOptArg, numAlign=defaultNamedNotOptArg
			, curveAlign=defaultNamedNotOptArg, alignLoc=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, matchCurrent=defaultNamedNotOptArg, deleteOrig=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20293, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (12, 1), (12, 1), (3, 1), (11, 1), (11, 1)),elemSET
			, numPath, curvePath, numAlign, curveAlign, alignLoc
			, propID, matchCurrent, deleteOrig)

	def feMeshTetSolid(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, surfaceMeshOnly=defaultNamedNotOptArg
			, makeMidside=defaultNamedNotOptArg, tetGrowth=defaultNamedNotOptArg, checkSurfElem=defaultNamedNotOptArg, deleteSurfElem=defaultNamedNotOptArg, midsideGeom=defaultNamedNotOptArg
			, midsideAngle=defaultNamedNotOptArg, allocateElem=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20272, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (5, 1), (11, 1), (11, 1), (11, 1), (5, 1), (3, 1)),entityTYPE
			, entitySET, propID, surfaceMeshOnly, makeMidside, tetGrowth
			, checkSurfElem, deleteSurfElem, midsideGeom, midsideAngle, allocateElem
			)

	def feMeshTetSolid2(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, surfaceMeshOnly=defaultNamedNotOptArg
			, makeMidside=defaultNamedNotOptArg, tetGrowth=defaultNamedNotOptArg, checkSurfElem=defaultNamedNotOptArg, deleteSurfElem=defaultNamedNotOptArg, midsideGeom=defaultNamedNotOptArg
			, midsideAngle=defaultNamedNotOptArg, multiThruThickness=defaultNamedNotOptArg, sliverRemoval=defaultNamedNotOptArg, tetOptimization=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20552, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (5, 1), (11, 1), (11, 1), (11, 1), (5, 1), (11, 1), (11, 1), (3, 1)),entityTYPE
			, entitySET, propID, surfaceMeshOnly, makeMidside, tetGrowth
			, checkSurfElem, deleteSurfElem, midsideGeom, midsideAngle, multiThruThickness
			, sliverRemoval, tetOptimization)

	def feMeshTetSolid3(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, meshingApproach=defaultNamedNotOptArg
			, makeMidside=defaultNamedNotOptArg, tetGrowth=defaultNamedNotOptArg, checkSurfElem=defaultNamedNotOptArg, deleteSurfElem=defaultNamedNotOptArg, midsideGeom=defaultNamedNotOptArg
			, midsideAngle=defaultNamedNotOptArg, multiThruThickness=defaultNamedNotOptArg, sliverRemoval=defaultNamedNotOptArg, tetOptimization=defaultNamedNotOptArg, pyramidSurfaceSET=defaultNamedNotOptArg
			, pyramidMatchAdjacentParabolic=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20658, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (5, 1), (11, 1), (11, 1), (11, 1), (5, 1), (3, 1), (11, 1), (3, 1), (3, 1), (11, 1)),entityTYPE
			, entitySET, propID, meshingApproach, makeMidside, tetGrowth
			, checkSurfElem, deleteSurfElem, midsideGeom, midsideAngle, multiThruThickness
			, sliverRemoval, tetOptimization, pyramidSurfaceSET, pyramidMatchAdjacentParabolic)

	def feMeshTransition(self, useNodes=defaultNamedNotOptArg, entCOUNT=defaultNamedNotOptArg, entID=defaultNamedNotOptArg, edgeNUM=defaultNamedNotOptArg
			, edgeBIAS=defaultNamedNotOptArg, edgeSIZE=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, minBetween=defaultNamedNotOptArg, maxASPECT=defaultNamedNotOptArg
			, maxQuickNodes=defaultNamedNotOptArg, meshApproach=defaultNamedNotOptArg, quadAngle=defaultNamedNotOptArg, smoothLaplacian=defaultNamedNotOptArg, smoothIter=defaultNamedNotOptArg
			, smoothTol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20279, LCID, 1, (3, 0), ((11, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (3, 1), (3, 1), (5, 1), (3, 1), (3, 1), (5, 1), (11, 1), (3, 1), (5, 1)),useNodes
			, entCOUNT, entID, edgeNUM, edgeBIAS, edgeSIZE
			, propID, minBetween, maxASPECT, maxQuickNodes, meshApproach
			, quadAngle, smoothLaplacian, smoothIter, smoothTol)

	def feMeshUnzip(self, fromSET=defaultNamedNotOptArg, toSET=defaultNamedNotOptArg, connectWith=defaultNamedNotOptArg, orient=defaultNamedNotOptArg
			, dof=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20278, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),fromSET
			, toSET, connectWith, orient, dof)

	def feMeshUnzip2(self, fromSET=defaultNamedNotOptArg, toSET=defaultNamedNotOptArg, connectWith=defaultNamedNotOptArg, orientMode=defaultNamedNotOptArg
			, orientID=defaultNamedNotOptArg, orientVector=defaultNamedNotOptArg, dof=defaultNamedNotOptArg, rigidReverse=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20587, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (11, 1)),fromSET
			, toSET, connectWith, orientMode, orientID, orientVector
			, dof, rigidReverse)

	def feMinInt(self, Int1=defaultNamedNotOptArg, Int2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20503, LCID, 1, (3, 0), ((3, 1), (3, 1)),Int1
			, Int2)

	def feMinReal(self, Real1=defaultNamedNotOptArg, Real2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20505, LCID, 1, (5, 0), ((5, 1), (5, 1)),Real1
			, Real2)

	def feModelFileReadOnly(self, bSetReadOnly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20744, LCID, 1, (3, 0), ((11, 1),),bSetReadOnly
			)

	def feModelFileVersionV2(self, fName=defaultNamedNotOptArg, dVersion=pythoncom.Missing):
		return self._ApplyTypes_(20666, 1, (3, 0), ((8, 1), (16389, 2)), 'feModelFileVersionV2', None,fName
			, dVersion)

	def feModelGetFileReadOnly(self):
		return self._oleobj_.InvokeTypes(20745, LCID, 1, (3, 0), (),)

	def feModifyBeamWarping(self, entitySET=defaultNamedNotOptArg, method=defaultNamedNotOptArg, nodeType=defaultNamedNotOptArg, autoENDA=defaultNamedNotOptArg
			, autoENDB=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20340, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),entitySET
			, method, nodeType, autoENDA, autoENDB)

	def feModifyColor(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, color=defaultNamedNotOptArg, randomize=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20305, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),entityTYPE
			, entitySET, color, randomize)

	def feModifyColorMultiple(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, color=defaultNamedNotOptArg, method=defaultNamedNotOptArg
			, match_range=defaultNamedNotOptArg, limit_to_groupSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20509, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),entityTYPE
			, entitySET, color, method, match_range, limit_to_groupSET
			)

	def feModifyDefCSys(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20311, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, entitySET, csysID)

	def feModifyEdit(self, entityTYPE=defaultNamedNotOptArg, nEntityID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20659, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, nEntityID)

	def feModifyElemOrder(self, entitySET=defaultNamedNotOptArg, makeParabolic=defaultNamedNotOptArg, ontoGeom=defaultNamedNotOptArg, maxANGLE=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20324, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (5, 1)),entitySET
			, makeParabolic, ontoGeom, maxANGLE)

	def feModifyElemPropID(self, entitySET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20319, LCID, 1, (3, 0), ((3, 1), (3, 1)),entitySET
			, propID)

	def feModifyElemRelease(self, entitySET=defaultNamedNotOptArg, rel1=defaultNamedNotOptArg, rel2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20323, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1)),entitySET
			, rel1, rel2)

	def feModifyElemReverse(self, entitySET=defaultNamedNotOptArg, method=defaultNamedNotOptArg, vecDIR=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20322, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1)),entitySET
			, method, vecDIR)

	def feModifyElemReverse2(self, entitySET=defaultNamedNotOptArg, method=defaultNamedNotOptArg, vecDIR=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg
			, csysDir=defaultNamedNotOptArg, bPreserveMatlDir=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20512, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (3, 1), (11, 1)),entitySET
			, method, vecDIR, csysID, csysDir, bPreserveMatlDir
			)

	def feModifyElemType(self, entitySET=defaultNamedNotOptArg, propID=defaultNamedNotOptArg, method=defaultNamedNotOptArg, NodeID=defaultNamedNotOptArg
			, orVec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20330, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1)),entitySET
			, propID, method, NodeID, orVec)

	def feModifyFormulation(self, elemSET=defaultNamedNotOptArg, form1=defaultNamedNotOptArg, form2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20326, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),elemSET
			, form1, form2)

	def feModifyLayer(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, layer=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20306, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, entitySET, layer)

	def feModifyLineElementDirection(self, elemSET=defaultNamedNotOptArg, reverseMode=defaultNamedNotOptArg, nAlignToElemID=defaultNamedNotOptArg, AlignToVector=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20644, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),elemSET
			, reverseMode, nAlignToElemID, AlignToVector)

	def feModifyLoadPhase(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, phase=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20318, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),entityTYPE
			, entitySET, phase)

	def feModifyMaterialAngle(self, entitySET=defaultNamedNotOptArg, method=defaultNamedNotOptArg, vecDIR=defaultNamedNotOptArg, coordDir=defaultNamedNotOptArg
			, coordCsys=defaultNamedNotOptArg, angle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20321, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (3, 1), (5, 1)),entitySET
			, method, vecDIR, coordDir, coordCsys, angle
			)

	def feModifyMidside(self, elemSET=defaultNamedNotOptArg, nodeSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20325, LCID, 1, (3, 0), ((3, 1), (3, 1)),elemSET
			, nodeSET)

	def feModifyNoMergeCurve(self, entitySET=defaultNamedNotOptArg, bNoMerge=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20380, LCID, 1, (3, 0), ((3, 1), (11, 1)),entitySET
			, bNoMerge)

	def feModifyOffsets(self, entitySET=defaultNamedNotOptArg, endA=defaultNamedNotOptArg, endB=defaultNamedNotOptArg, radial=defaultNamedNotOptArg
			, off1=defaultNamedNotOptArg, off2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20328, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (12, 1), (12, 1)),entitySET
			, endA, endB, radial, off1, off2
			)

	def feModifyOffsetsToRefPt(self, entitySET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20339, LCID, 1, (3, 0), ((3, 1),),entitySET
			)

	def feModifyOffsetsToRefPt2(self, entitySET=defaultNamedNotOptArg, dYOff=defaultNamedNotOptArg, dZOff=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20743, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1)),entitySET
			, dYOff, dZOff)

	def feModifyOrient(self, entitySET=defaultNamedNotOptArg, method=defaultNamedNotOptArg, NodeID=defaultNamedNotOptArg, orVec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20329, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),entitySET
			, method, NodeID, orVec)

	def feModifyOutCSys(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, ssysID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20312, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, entitySET, ssysID)

	def feModifyPermBC(self, entitySET=defaultNamedNotOptArg, t1=defaultNamedNotOptArg, t2=defaultNamedNotOptArg, t3=defaultNamedNotOptArg
			, r1=defaultNamedNotOptArg, r2=defaultNamedNotOptArg, r3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20313, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),entitySET
			, t1, t2, t3, r1, r2
			, r3)

	def feModifyPlateThickOffsetBetweenNodes(self, nSetID=defaultNamedNotOptArg, enUpdating=defaultNamedNotOptArg, nFromNode=defaultNamedNotOptArg, dFromValue=defaultNamedNotOptArg
			, nToNode=defaultNamedNotOptArg, dToValue=defaultNamedNotOptArg, bAverageForElement=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg, dMinValue=defaultNamedNotOptArg
			, dMaxValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20710, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (3, 1), (5, 1), (11, 1), (5, 1), (5, 1), (5, 1)),nSetID
			, enUpdating, nFromNode, dFromValue, nToNode, dToValue
			, bAverageForElement, dTolerance, dMinValue, dMaxValue)

	def feModifyPlateThickOffsetEquation(self, nSetID=defaultNamedNotOptArg, enUpdating=defaultNamedNotOptArg, enMethod=defaultNamedNotOptArg, sNodeElemVariable=defaultNamedNotOptArg
			, sEquation=defaultNamedNotOptArg, bAverageForElement=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg, dMinValue=defaultNamedNotOptArg, dMaxValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20712, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (8, 1), (8, 1), (11, 1), (5, 1), (5, 1), (5, 1)),nSetID
			, enUpdating, enMethod, sNodeElemVariable, sEquation, bAverageForElement
			, dTolerance, dMinValue, dMaxValue)

	def feModifyPlateThickOffsetReset(self, nSetID=defaultNamedNotOptArg, bResetElementThickness=defaultNamedNotOptArg, bResetElementOffset=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20713, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),nSetID
			, bResetElementThickness, bResetElementOffset)

	def feModifyPlateThickOffsetValue(self, nSetID=defaultNamedNotOptArg, enUpdating=defaultNamedNotOptArg, enMethod=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg
			, bAverageForElement=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg, dMinValue=defaultNamedNotOptArg, dMaxValue=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20711, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (11, 1), (5, 1), (5, 1), (5, 1)),nSetID
			, enUpdating, enMethod, dValue, bAverageForElement, dTolerance
			, dMinValue, dMaxValue)

	def feModifyPropMatlID(self, entitySET=defaultNamedNotOptArg, matlID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20320, LCID, 1, (3, 0), ((3, 1), (3, 1)),entitySET
			, matlID)

	def feModifyRadialOffsets(self, entitySET=defaultNamedNotOptArg, bAroundVector=defaultNamedNotOptArg, dRadialOffset=defaultNamedNotOptArg, orig=defaultNamedNotOptArg
			, Axis=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20465, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (12, 1), (12, 1)),entitySET
			, bAroundVector, dRadialOffset, orig, Axis)

	def feModifyRadialOffsets2(self, entitySET=defaultNamedNotOptArg, bAroundVector=defaultNamedNotOptArg, dRadialOffset=defaultNamedNotOptArg, dOffsetAlongVector=defaultNamedNotOptArg
			, orig=defaultNamedNotOptArg, Axis=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20742, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (5, 1), (12, 1), (12, 1)),entitySET
			, bAroundVector, dRadialOffset, dOffsetAlongVector, orig, Axis
			)

	def feModifyReverseCurve(self, entitySET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20316, LCID, 1, (3, 0), ((3, 1),),entitySET
			)

	def feModifySolidFacetting(self, entitySET=defaultNamedNotOptArg, sDiv=defaultNamedNotOptArg, tDiv=defaultNamedNotOptArg, dAngleTol=defaultNamedNotOptArg
			, dChordTol=defaultNamedNotOptArg, dCurveFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20452, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)),entitySET
			, sDiv, tDiv, dAngleTol, dChordTol, dCurveFactor
			)

	def feModifySplineKnots(self, entitySET=defaultNamedNotOptArg, knotLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20315, LCID, 1, (3, 0), ((3, 1), (12, 1)),entitySET
			, knotLoc)

	def feModifySplineOrder(self, entitySET=defaultNamedNotOptArg, order=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20314, LCID, 1, (3, 0), ((3, 1), (3, 1)),entitySET
			, order)

	def feModifySplitQuads(self, elemSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20327, LCID, 1, (3, 0), ((3, 1),),elemSET
			)

	def feModifySuperelementID(self, entitySET=defaultNamedNotOptArg, nSEID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20338, LCID, 1, (3, 0), ((3, 1), (3, 1)),entitySET
			, nSEID)

	def feModifySurfaceDivisions(self, entitySET=defaultNamedNotOptArg, sDiv=defaultNamedNotOptArg, tDiv=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20317, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),entitySET
			, sDiv, tDiv, tolerance)

	def feModifySurfaceNormal(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20574, LCID, 1, (3, 0), ((3, 1), (3, 1)),entityTYPE
			, entitySET)

	def feModifyTransparency(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, transparency=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20307, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1)),entityTYPE
			, entitySET, transparency)

	def feMoveBy(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, radial=defaultNamedNotOptArg, Length=defaultNamedNotOptArg
			, vecLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20299, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (5, 1), (12, 1)),entityTYPE
			, entitySET, radial, Length, vecLoc)

	def feMoveOffset(self, elemSET=defaultNamedNotOptArg, method=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, alongVEC=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20300, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (12, 1)),elemSET
			, method, Length, alongVEC)

	def feMoveTo(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg
			, z=defaultNamedNotOptArg, doX=defaultNamedNotOptArg, doY=defaultNamedNotOptArg, doZ=defaultNamedNotOptArg, inCsys=defaultNamedNotOptArg
			, moveRef=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20298, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (5, 1), (11, 1), (11, 1), (11, 1), (3, 1), (11, 1)),entityTYPE
			, entitySET, x, y, z, doX
			, doY, doZ, inCsys, moveRef)

	def feNodesBetweenNodes(self, ndID1=defaultNamedNotOptArg, ndID2=defaultNamedNotOptArg, elSetID=defaultNamedNotOptArg, nNodes=pythoncom.Missing
			, nNodeList=pythoncom.Missing):
		return self._ApplyTypes_(20660, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16387, 2), (16396, 2)), 'feNodesBetweenNodes', None,ndID1
			, ndID2, elSetID, nNodes, nNodeList)

	def feNotesGet(self, noteSET=defaultNamedNotOptArg, notes=pythoncom.Missing):
		return self._ApplyTypes_(20072, 1, (3, 0), ((3, 1), (16392, 2)), 'feNotesGet', None,noteSET
			, notes)

	def feNotesPut(self, noteSET=defaultNamedNotOptArg, clear=defaultNamedNotOptArg, notes=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20073, LCID, 1, (3, 0), ((3, 1), (11, 1), (8, 1)),noteSET
			, clear, notes)

	def feOpenModelFromTeamcenter(self, sItemID=defaultNamedNotOptArg, sRevision=defaultNamedNotOptArg, sDatasetName=defaultNamedNotOptArg, sDownloadDir=defaultNamedNotOptArg
			, bCheckOut=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20761, LCID, 1, (3, 0), ((8, 1), (8, 1), (8, 1), (8, 1), (11, 1)),sItemID
			, sRevision, sDatasetName, sDownloadDir, bCheckOut)

	def feOutputCalculate(self, outSET=defaultNamedNotOptArg, dTYPE=defaultNamedNotOptArg, entSET=defaultNamedNotOptArg, title=defaultNamedNotOptArg
			, IDvar=defaultNamedNotOptArg, SETvar=defaultNamedNotOptArg, formula=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20259, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (8, 1), (8, 1), (8, 1), (8, 1)),outSET
			, dTYPE, entSET, title, IDvar, SETvar
			, formula)

	def feOutputCompareV2(self, bList=defaultNamedNotOptArg, bFullCase=defaultNamedNotOptArg, fromSET=defaultNamedNotOptArg, toSETS=defaultNamedNotOptArg
			, ifromVEC=defaultNamedNotOptArg, itoVEC=defaultNamedNotOptArg, dMaxDiff=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20684, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (3, 1), (3, 1), (3, 1), (5, 1)),bList
			, bFullCase, fromSET, toSETS, ifromVEC, itoVEC
			, dMaxDiff)

	def feOutputConvertV2019VectorIDToV2020V2(self, v2019VecID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20667, LCID, 1, (3, 0), ((3, 1),),v2019VecID
			)

	def feOutputConvertV2020VectorIDToV2019V2(self, v2020VecID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20669, LCID, 1, (3, 0), ((3, 1),),v2020VecID
			)

	def feOutputConvertV92VectorIDV2(self, oldVecID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20674, LCID, 1, (3, 0), ((3, 1),),oldVecID
			)

	def feOutputForceBalance(self, outSETS=defaultNamedNotOptArg, boundarynodeSET=defaultNamedNotOptArg, boundaryelemSET=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg
			, aroundXYZ=defaultNamedNotOptArg, numSETS=pythoncom.Missing, resultant=pythoncom.Missing):
		return self._ApplyTypes_(20432, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (16387, 2), (16396, 2)), 'feOutputForceBalance', None,outSETS
			, boundarynodeSET, boundaryelemSET, csysID, aroundXYZ, numSETS
			, resultant)

	def feOutputForceBalance2(self, freebodyID=defaultNamedNotOptArg, outSetID=defaultNamedNotOptArg, toDataTable=defaultNamedNotOptArg, printSummation=defaultNamedNotOptArg
			, printDetails=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20506, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),freebodyID
			, outSetID, toDataTable, printSummation, printDetails)

	def feOutputFromLoad(self, SetID=defaultNamedNotOptArg, loadType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20257, LCID, 1, (3, 0), ((3, 1), (3, 1)),SetID
			, loadType)

	def feOutputGlobalPlyV2(self, nSetSet=defaultNamedNotOptArg, nVectorSet=defaultNamedNotOptArg, nGlobalPlySET=defaultNamedNotOptArg, bTop=defaultNamedNotOptArg
			, bBottom=defaultNamedNotOptArg, bGlobalPly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20687, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),nSetSet
			, nVectorSet, nGlobalPlySET, bTop, bBottom, bGlobalPly
			)

	def feOutputProcessConvertV2(self, approach=defaultNamedNotOptArg, from_setID=defaultNamedNotOptArg, from_vectorID=defaultNamedNotOptArg, to_setID=defaultNamedNotOptArg
			, to_vectorID=defaultNamedNotOptArg, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20675, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),approach
			, from_setID, from_vectorID, to_setID, to_vectorID, groupID
			)

	def feOutputProcessCopyV2(self, bFullSet=defaultNamedNotOptArg, from_setID=defaultNamedNotOptArg, from_vectorID=defaultNamedNotOptArg, to_setID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20678, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (3, 1)),bFullSet
			, from_setID, from_vectorID, to_setID)

	def feOutputProcessEnvelopeFromSetsV2(self, bFullSet=defaultNamedNotOptArg, ntype=defaultNamedNotOptArg, nApproach=defaultNamedNotOptArg, bEnvelopeInSets=defaultNamedNotOptArg
			, bEnvelopeAcrossSets=defaultNamedNotOptArg, bSetInfo=defaultNamedNotOptArg, nSetSet=defaultNamedNotOptArg, nVectorSet=defaultNamedNotOptArg, to_setID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20685, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (3, 1), (3, 1), (3, 1)),bFullSet
			, ntype, nApproach, bEnvelopeInSets, bEnvelopeAcrossSets, bSetInfo
			, nSetSet, nVectorSet, to_setID)

	def feOutputProcessEnvelopeV2(self, bFullSet=defaultNamedNotOptArg, ntype=defaultNamedNotOptArg, nApproach=defaultNamedNotOptArg, bEnvelopeInSets=defaultNamedNotOptArg
			, bEnvelopeAcrossSets=defaultNamedNotOptArg, bSetInfo=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, from_setID=defaultNamedNotOptArg, from_vectorID=defaultNamedNotOptArg
			, to_setID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20682, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (3, 1), (12, 1), (12, 1), (3, 1)),bFullSet
			, ntype, nApproach, bEnvelopeInSets, bEnvelopeAcrossSets, bSetInfo
			, nCount, from_setID, from_vectorID, to_setID)

	def feOutputProcessErrorEstimateV2(self, nMethod=defaultNamedNotOptArg, from_setID=defaultNamedNotOptArg, from_vectorID=defaultNamedNotOptArg, groupID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20683, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nMethod
			, from_setID, from_vectorID, groupID)

	def feOutputProcessLinearCombinationV2(self, bFullSet=defaultNamedNotOptArg, nApproach=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, dScaleFactor=defaultNamedNotOptArg
			, from_setID=defaultNamedNotOptArg, from_vectorID=defaultNamedNotOptArg, to_setID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20680, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (3, 1)),bFullSet
			, nApproach, nCount, dScaleFactor, from_setID, from_vectorID
			, to_setID)

	def feOutputProcessMergeV2(self, bFullSet=defaultNamedNotOptArg, bOverwrite=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, from_setID=defaultNamedNotOptArg
			, from_vectorID=defaultNamedNotOptArg, to_setID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20679, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (12, 1), (12, 1), (3, 1)),bFullSet
			, bOverwrite, nCount, from_setID, from_vectorID, to_setID
			)

	def feOutputProcessRSSCombinationV2(self, bFullSet=defaultNamedNotOptArg, nApproach=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, dScaleFactor=defaultNamedNotOptArg
			, from_setID=defaultNamedNotOptArg, from_vectorID=defaultNamedNotOptArg, to_setID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20681, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (3, 1)),bFullSet
			, nApproach, nCount, dScaleFactor, from_setID, from_vectorID
			, to_setID)

	def feOutputProcessV2(self, Count=defaultNamedNotOptArg, full_set=defaultNamedNotOptArg, processing_method=defaultNamedNotOptArg, approach=defaultNamedNotOptArg
			, from_setID=defaultNamedNotOptArg, from_vectorID=defaultNamedNotOptArg, to_setID=defaultNamedNotOptArg, to_vectorID=defaultNamedNotOptArg, groupID=defaultNamedNotOptArg
			, factor=defaultNamedNotOptArg, overwrite=defaultNamedNotOptArg, ply_summary=defaultNamedNotOptArg, set_info=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20673, LCID, 1, (3, 0), ((3, 1), (11, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Count
			, full_set, processing_method, approach, from_setID, from_vectorID
			, to_setID, to_vectorID, groupID, factor, overwrite
			, ply_summary, set_info)

	def feOutputTransform2V2(self, setSET=defaultNamedNotOptArg, vecSET=defaultNamedNotOptArg, nodeSET=defaultNamedNotOptArg, elemSET=defaultNamedNotOptArg
			, nodalMode=defaultNamedNotOptArg, nodalCSysID=defaultNamedNotOptArg, nodalGlobalComp=defaultNamedNotOptArg, plateMode=defaultNamedNotOptArg, plateCSysID=defaultNamedNotOptArg
			, plateDOF=defaultNamedNotOptArg, plateVEC=defaultNamedNotOptArg, plateAngle=defaultNamedNotOptArg, solidMode=defaultNamedNotOptArg, solidCSysID=defaultNamedNotOptArg
			, engrShearStrain=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20686, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (3, 1), (3, 1), (3, 1), (12, 1), (5, 1), (3, 1), (3, 1), (11, 1)),setSET
			, vecSET, nodeSET, elemSET, nodalMode, nodalCSysID
			, nodalGlobalComp, plateMode, plateCSysID, plateDOF, plateVEC
			, plateAngle, solidMode, solidCSysID, engrShearStrain)

	def feOutputValueGetRGB(self, nViewID=defaultNamedNotOptArg, dValue=defaultNamedNotOptArg, pdRed=pythoncom.Missing, pdGreen=pythoncom.Missing
			, pdBlue=pythoncom.Missing):
		return self._ApplyTypes_(20646, 1, (3, 0), ((3, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'feOutputValueGetRGB', None,nViewID
			, dValue, pdRed, pdGreen, pdBlue)

	def fePlaneBisect(self, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, p3=defaultNamedNotOptArg, planeBase=pythoncom.Missing
			, planeNormal=pythoncom.Missing, planeX=pythoncom.Missing):
		return self._ApplyTypes_(20150, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (16396, 2), (16396, 2), (16396, 2)), 'fePlaneBisect', None,p1
			, p2, p3, planeBase, planeNormal, planeX
			)

	def fePlaneCSys(self, p1=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg, planeID=defaultNamedNotOptArg, planeBase=pythoncom.Missing
			, planeNormal=pythoncom.Missing, planeX=pythoncom.Missing):
		return self._ApplyTypes_(20151, 1, (3, 0), ((12, 1), (3, 1), (3, 1), (16396, 2), (16396, 2), (16396, 2)), 'fePlaneCSys', None,p1
			, csysID, planeID, planeBase, planeNormal, planeX
			)

	def fePlaneCurveNormal(self, cuID=defaultNamedNotOptArg, planeBase=pythoncom.Missing, planeNormal=pythoncom.Missing, planeX=pythoncom.Missing):
		return self._ApplyTypes_(20154, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2), (16396, 2)), 'fePlaneCurveNormal', None,cuID
			, planeBase, planeNormal, planeX)

	def fePlaneLocation(self, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, p3=defaultNamedNotOptArg, planeBase=pythoncom.Missing
			, planeNormal=pythoncom.Missing, planeX=pythoncom.Missing):
		return self._ApplyTypes_(20147, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (16396, 2), (16396, 2), (16396, 2)), 'fePlaneLocation', None,p1
			, p2, p3, planeBase, planeNormal, planeX
			)

	def fePlaneNodes(self, n1=defaultNamedNotOptArg, n2=defaultNamedNotOptArg, n3=defaultNamedNotOptArg, planeBase=pythoncom.Missing
			, planeNormal=pythoncom.Missing, planeX=pythoncom.Missing):
		return self._ApplyTypes_(20148, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16396, 2), (16396, 2), (16396, 2)), 'fePlaneNodes', None,n1
			, n2, n3, planeBase, planeNormal, planeX
			)

	def fePlanePick(self, dlgTITLE=defaultNamedNotOptArg, plBase=pythoncom.Missing, plNormal=pythoncom.Missing, plAxis=pythoncom.Missing):
		return self._ApplyTypes_(20146, 1, (3, 0), ((8, 1), (16396, 2), (16396, 2), (16396, 2)), 'fePlanePick', None,dlgTITLE
			, plBase, plNormal, plAxis)

	def fePlanePickByMethod(self, method=defaultNamedNotOptArg, dlgTITLE=defaultNamedNotOptArg, plBase=pythoncom.Missing, plNormal=pythoncom.Missing
			, plAxis=pythoncom.Missing):
		return self._ApplyTypes_(20429, 1, (3, 0), ((3, 1), (8, 1), (16396, 2), (16396, 2), (16396, 2)), 'fePlanePickByMethod', None,method
			, dlgTITLE, plBase, plNormal, plAxis)

	def fePlanePoints(self, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg, p3=defaultNamedNotOptArg, planeBase=pythoncom.Missing
			, planeNormal=pythoncom.Missing, planeX=pythoncom.Missing):
		return self._ApplyTypes_(20149, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (16396, 2), (16396, 2), (16396, 2)), 'fePlanePoints', None,p1
			, p2, p3, planeBase, planeNormal, planeX
			)

	def fePlaneRotate(self, baseXYZ=defaultNamedNotOptArg, vecXXYZ=defaultNamedNotOptArg, vecZXYZ=defaultNamedNotOptArg, angle=defaultNamedNotOptArg
			, origin=defaultNamedNotOptArg, Axis=defaultNamedNotOptArg, baseROT=pythoncom.Missing, vecXROT=pythoncom.Missing, vecYROT=pythoncom.Missing
			, vecZROT=pythoncom.Missing):
		return self._ApplyTypes_(20560, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (5, 1), (12, 1), (12, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'fePlaneRotate', None,baseXYZ
			, vecXXYZ, vecZXYZ, angle, origin, Axis
			, baseROT, vecXROT, vecYROT, vecZROT)

	def fePlaneSurfaceNormal(self, surfID=defaultNamedNotOptArg, ptID1=defaultNamedNotOptArg, ptID2=defaultNamedNotOptArg, reversed=defaultNamedNotOptArg
			, align=defaultNamedNotOptArg, offset=defaultNamedNotOptArg, planeBase=pythoncom.Missing, planeNormal=pythoncom.Missing, planeX=pythoncom.Missing):
		return self._ApplyTypes_(20152, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (5, 1), (16396, 2), (16396, 2), (16396, 2)), 'fePlaneSurfaceNormal', None,surfID
			, ptID1, ptID2, reversed, align, offset
			, planeBase, planeNormal, planeX)

	def fePlaneViewAlign(self, viewID=defaultNamedNotOptArg, intoView=defaultNamedNotOptArg, planeNormal=pythoncom.Missing, planeX=pythoncom.Missing):
		return self._ApplyTypes_(20153, 1, (3, 0), ((3, 1), (11, 1), (16396, 2), (16396, 2)), 'fePlaneViewAlign', None,viewID
			, intoView, planeNormal, planeX)

	def feProjectAlongVector(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, surfaceSET=defaultNamedNotOptArg, vecAlong=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20407, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),entityTYPE
			, entitySET, surfaceSET, vecAlong)

	def feProjectOnto(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, projOnto=defaultNamedNotOptArg, projAlong=defaultNamedNotOptArg
			, ontoSET=defaultNamedNotOptArg, vOntoLocation=defaultNamedNotOptArg, vOntoVector=defaultNamedNotOptArg, vAlongVector=defaultNamedNotOptArg, bExtendCurves=defaultNamedNotOptArg
			, bVectorBothDirections=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20532, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (11, 1), (11, 1)),entityTYPE
			, entitySET, projOnto, projAlong, ontoSET, vOntoLocation
			, vOntoVector, vAlongVector, bExtendCurves, bVectorBothDirections)

	def feProjectOntoCurve(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, curveID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20295, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, entitySET, curveID)

	def feProjectOntoPlane(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, planeLoc=defaultNamedNotOptArg, planeNormal=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20417, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),entityTYPE
			, entitySET, planeLoc, planeNormal)

	def feProjectOntoSolid(self, nodeSET=defaultNamedNotOptArg, elemSET=defaultNamedNotOptArg, solidID=defaultNamedNotOptArg, surfCount=defaultNamedNotOptArg
			, surfID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20297, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1)),nodeSET
			, elemSET, solidID, surfCount, surfID)

	def feProjectOntoSurface(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, surfaceID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20296, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, entitySET, surfaceID)

	def feProjectOntoVector(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, vecLoc=defaultNamedNotOptArg, vecDIR=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20416, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1)),entityTYPE
			, entitySET, vecLoc, vecDIR)

	def feRenumber(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, startID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20308, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),entityTYPE
			, entitySET, startID)

	def feRenumberOpt(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, startID=defaultNamedNotOptArg, renumMethod=defaultNamedNotOptArg
			, renumCSys=defaultNamedNotOptArg, renumAbs=defaultNamedNotOptArg, renumDescend=defaultNamedNotOptArg, renumConstOff=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20384, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1)),entityTYPE
			, entitySET, startID, renumMethod, renumCSys, renumAbs
			, renumDescend, renumConstOff)

	def feRenumberOpt2(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, startID=defaultNamedNotOptArg, renumMethod=defaultNamedNotOptArg
			, renumCSys=defaultNamedNotOptArg, renumAbs=defaultNamedNotOptArg, renumDescend=defaultNamedNotOptArg, renumConstOff=defaultNamedNotOptArg, xyzSortOrder=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20543, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (12, 1)),entityTYPE
			, entitySET, startID, renumMethod, renumCSys, renumAbs
			, renumDescend, renumConstOff, xyzSortOrder)

	def feResetToolbar(self, BarName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20367, LCID, 1, (3, 0), ((8, 1),),BarName
			)

	def feResultsRankingToDataTableV2(self, bOverrideLock=defaultNamedNotOptArg, nRankByEntity=defaultNamedNotOptArg, nMethod=defaultNamedNotOptArg, nApproach=defaultNamedNotOptArg
			, ntype=defaultNamedNotOptArg, nNumberToRank=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg, nResultsSetSetID=defaultNamedNotOptArg, nResultsVectorSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20688, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),bOverrideLock
			, nRankByEntity, nMethod, nApproach, ntype, nNumberToRank
			, nEntitySetID, nResultsSetSetID, nResultsVectorSetID)

	def feResultsToDataTable2V2(self, bOverrideLock=defaultNamedNotOptArg, nViewForTransform=defaultNamedNotOptArg, bSetInColumns=defaultNamedNotOptArg, bVecInColumns=defaultNamedNotOptArg
			, bEntInColumns=defaultNamedNotOptArg, bAltColumnOrder=defaultNamedNotOptArg, bSummaryTable=defaultNamedNotOptArg, nResultsSetSetID=defaultNamedNotOptArg, nResultsVectorSetID=defaultNamedNotOptArg
			, nEntitySetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20690, LCID, 1, (3, 0), ((11, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (3, 1), (3, 1)),bOverrideLock
			, nViewForTransform, bSetInColumns, bVecInColumns, bEntInColumns, bAltColumnOrder
			, bSummaryTable, nResultsSetSetID, nResultsVectorSetID, nEntitySetID)

	def feResultsToDataTableV2(self, bOverrideLock=defaultNamedNotOptArg, nCSysID=defaultNamedNotOptArg, bSetInColumns=defaultNamedNotOptArg, bVecInColumns=defaultNamedNotOptArg
			, bEntInColumns=defaultNamedNotOptArg, bAltColumnOrder=defaultNamedNotOptArg, nResultsSetSetID=defaultNamedNotOptArg, nResultsVectorSetID=defaultNamedNotOptArg, nEntitySetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20689, LCID, 1, (3, 0), ((11, 1), (3, 1), (11, 1), (11, 1), (11, 1), (11, 1), (3, 1), (3, 1), (3, 1)),bOverrideLock
			, nCSysID, bSetInColumns, bVecInColumns, bEntInColumns, bAltColumnOrder
			, nResultsSetSetID, nResultsVectorSetID, nEntitySetID)

	def feRotateBy(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, axisLoc=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg
			, angle=defaultNamedNotOptArg, thrust=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20302, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (5, 1), (5, 1)),entityTYPE
			, entitySET, axisLoc, axisVEC, angle, thrust
			)

	def feRotateTo(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, axisLoc=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg
			, fromLoc=defaultNamedNotOptArg, toLoc=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20301, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),entityTYPE
			, entitySET, axisLoc, axisVEC, fromLoc, toLoc
			)

	def feRotationFromDirCos(self, dircos=defaultNamedNotOptArg, rot=pythoncom.Missing):
		return self._ApplyTypes_(20130, 1, (3, 0), ((12, 1), (16396, 2)), 'feRotationFromDirCos', None,dircos
			, rot)

	def feRotationToDirCos(self, rot=defaultNamedNotOptArg, dircos=pythoncom.Missing):
		return self._ApplyTypes_(20129, 1, (3, 0), ((12, 1), (16396, 2)), 'feRotationToDirCos', None,rot
			, dircos)

	def feRotationTransform(self, fromCSYS=defaultNamedNotOptArg, fromROT=defaultNamedNotOptArg, toCSYS=defaultNamedNotOptArg, rot=pythoncom.Missing):
		return self._ApplyTypes_(20128, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (16396, 2)), 'feRotationTransform', None,fromCSYS
			, fromROT, toCSYS, rot)

	def feRunCommand(self, nCmdID=defaultNamedNotOptArg, bWaitForCompletion=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20382, LCID, 1, (3, 0), ((3, 1), (11, 1)),nCmdID
			, bWaitForCompletion)

	def feRunIOTest(self, sPath=defaultNamedNotOptArg, nMethod=pythoncom.Missing):
		return self._ApplyTypes_(20490, 1, (3, 0), ((8, 1), (16387, 2)), 'feRunIOTest', None,sPath
			, nMethod)

	def feSEGetEntityMap(self, nEntity=defaultNamedNotOptArg, numID=pythoncom.Missing, nFemapID=pythoncom.Missing, nSEdgeID=pythoncom.Missing):
		return self._ApplyTypes_(20379, 1, (3, 0), ((3, 1), (16387, 2), (16396, 2), (16396, 2)), 'feSEGetEntityMap', None,nEntity
			, numID, nFemapID, nSEdgeID)

	def feSaveModelToTeamcenter(self, sItemID=defaultNamedNotOptArg, sRevision=defaultNamedNotOptArg, sDatasetName=defaultNamedNotOptArg, sFilePath=defaultNamedNotOptArg
			, bOverwrite=defaultNamedNotOptArg, bCheckIn=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20762, LCID, 1, (3, 0), ((8, 1), (8, 1), (8, 1), (8, 1), (11, 1), (11, 1)),sItemID
			, sRevision, sDatasetName, sFilePath, bOverwrite, bCheckIn
			)

	def feSaveToolbarLayout(self, fName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20372, LCID, 1, (3, 0), ((8, 1),),fName
			)

	def feScale(self, entityTYPE=defaultNamedNotOptArg, entitySET=defaultNamedNotOptArg, fromLoc=defaultNamedNotOptArg, csysID=defaultNamedNotOptArg
			, xScale=defaultNamedNotOptArg, yScale=defaultNamedNotOptArg, zScale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20304, LCID, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (3, 1), (5, 1), (5, 1), (5, 1)),entityTYPE
			, entitySET, fromLoc, csysID, xScale, yScale
			, zScale)

	def feScreenPctPick(self, x=pythoncom.Missing, y=pythoncom.Missing):
		return self._ApplyTypes_(20482, 1, (3, 0), ((16389, 2), (16389, 2)), 'feScreenPctPick', None,x
			, y)

	def feSelectOutput2V2(self, title=defaultNamedNotOptArg, nBaseOutputSetID=defaultNamedNotOptArg, nPreCheckedSetSetID=defaultNamedNotOptArg, nPreChecedVectorSetID=defaultNamedNotOptArg
			, limitOutputType=defaultNamedNotOptArg, limitComplex=defaultNamedNotOptArg, limitToEntity=defaultNamedNotOptArg, includeCorner=defaultNamedNotOptArg, pOutputSets=pythoncom.Missing
			, pOutputVecs=pythoncom.Missing):
		return self._ApplyTypes_(20677, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (16393, 2), (16393, 2)), 'feSelectOutput2V2', None,title
			, nBaseOutputSetID, nPreCheckedSetSetID, nPreChecedVectorSetID, limitOutputType, limitComplex
			, limitToEntity, includeCorner, pOutputSets, pOutputVecs)

	def feSelectOutputSets(self, title=defaultNamedNotOptArg, pOutputSets=pythoncom.Missing):
		return self._ApplyTypes_(20510, 1, (3, 0), ((8, 1), (16393, 2)), 'feSelectOutputSets', None,title
			, pOutputSets)

	def feSelectOutputSets2(self, title=defaultNamedNotOptArg, nPreCheckedSetSetID=defaultNamedNotOptArg, pOutputSets=pythoncom.Missing):
		return self._ApplyTypes_(20643, 1, (3, 0), ((8, 1), (3, 1), (16393, 2)), 'feSelectOutputSets2', None,title
			, nPreCheckedSetSetID, pOutputSets)

	def feSelectOutputV2(self, title=defaultNamedNotOptArg, nBaseOutputSetID=defaultNamedNotOptArg, limitOutputType=defaultNamedNotOptArg, limitComplex=defaultNamedNotOptArg
			, limitToEntity=defaultNamedNotOptArg, includeCorner=defaultNamedNotOptArg, pOutputSets=pythoncom.Missing, pOutputVecs=pythoncom.Missing):
		return self._ApplyTypes_(20676, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (16393, 2), (16393, 2)), 'feSelectOutputV2', None,title
			, nBaseOutputSetID, limitOutputType, limitComplex, limitToEntity, includeCorner
			, pOutputSets, pOutputVecs)

	def feSelectOutputVectorV2(self, title=defaultNamedNotOptArg, outputSetID=defaultNamedNotOptArg, limitOutputType=defaultNamedNotOptArg, limitComplex=defaultNamedNotOptArg
			, limitToEntity=defaultNamedNotOptArg, allowCorner=defaultNamedNotOptArg, selID=pythoncom.Missing):
		return self._ApplyTypes_(20708, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'feSelectOutputVectorV2', None,title
			, outputSetID, limitOutputType, limitComplex, limitToEntity, allowCorner
			, selID)

	def feSetCurrentLibraryName(self, entityTYPE=defaultNamedNotOptArg, libraryTYPE=defaultNamedNotOptArg, libraryNAME=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20656, LCID, 1, (3, 0), ((3, 1), (3, 1), (8, 1)),entityTYPE
			, libraryTYPE, libraryNAME)

	def feSetFree(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20528, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def feSetFreeNotInSet(self, nSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20529, LCID, 1, (3, 0), ((3, 1),),nSetID
			)

	def feSetToolbarCommandBitmap(self, cmdID=defaultNamedNotOptArg, cmdBitmap=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20375, LCID, 1, (3, 0), ((3, 1), (8, 1)),cmdID
			, cmdBitmap)

	def feSetToolbarCommandTitle(self, BarName=defaultNamedNotOptArg, cmdID=defaultNamedNotOptArg, cmdTitle=defaultNamedNotOptArg, cmdToolTip=defaultNamedNotOptArg
			, cmdDescription=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20366, LCID, 1, (3, 0), ((8, 1), (3, 1), (8, 1), (8, 1), (8, 1)),BarName
			, cmdID, cmdTitle, cmdToolTip, cmdDescription)

	def feSetToolbarCommandVisible(self, BarName=defaultNamedNotOptArg, cmdID=defaultNamedNotOptArg, bVisible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20365, LCID, 1, (3, 0), ((8, 1), (3, 1), (11, 1)),BarName
			, cmdID, bVisible)

	def feSetToolbarSeparator(self, BarName=defaultNamedNotOptArg, cmdID=defaultNamedNotOptArg, bAddSep=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20488, LCID, 1, (3, 0), ((8, 1), (3, 1), (11, 1)),BarName
			, cmdID, bAddSep)

	def feSetToolbarVisible(self, BarName=defaultNamedNotOptArg, bVisible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20364, LCID, 1, (3, 0), ((8, 1), (11, 1)),BarName
			, bVisible)

	def feSolidAdd(self, solidSET=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20240, LCID, 1, (3, 0), ((3, 1), (11, 1)),solidSET
			, Redraw)

	def feSolidAlignSplits(self, entityTYPE=defaultNamedNotOptArg, SetID=defaultNamedNotOptArg, vecMode=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20630, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),entityTYPE
			, SetID, vecMode, axisVEC)

	def feSolidChamfer(self, curveSET=defaultNamedNotOptArg, radius=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20239, LCID, 1, (3, 0), ((3, 1), (5, 1)),curveSET
			, radius)

	def feSolidCommon(self, baseID=defaultNamedNotOptArg, toolID=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20242, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),baseID
			, toolID, Redraw)

	def feSolidElementsInARow(self, numElems=defaultNamedNotOptArg, nElemIDs=defaultNamedNotOptArg, nFaceIDs=defaultNamedNotOptArg, nMaxFind=defaultNamedNotOptArg
			, bVisibleOnly=defaultNamedNotOptArg, nCount=pythoncom.Missing, nElemList=pythoncom.Missing):
		return self._ApplyTypes_(20661, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (3, 1), (11, 1), (16387, 2), (16396, 2)), 'feSolidElementsInARow', None,numElems
			, nElemIDs, nFaceIDs, nMaxFind, bVisibleOnly, nCount
			, nElemList)

	def feSolidEmbed(self, baseID=defaultNamedNotOptArg, toolID=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20243, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),baseID
			, toolID, Redraw)

	def feSolidEmbedFace(self, surfID=defaultNamedNotOptArg, directionMode=defaultNamedNotOptArg, curveOpt=defaultNamedNotOptArg, dirVec=defaultNamedNotOptArg
			, offset=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20250, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (5, 1), (11, 1)),surfID
			, directionMode, curveOpt, dirVec, offset, Redraw
			)

	def feSolidEmbedMultiple(self, baseID=defaultNamedNotOptArg, toolSetID=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20563, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),baseID
			, toolSetID, Redraw)

	def feSolidExplode(self, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20236, LCID, 1, (3, 0), ((3, 1),),solidSET
			)

	def feSolidExtendEdgesToSurfaces(self, cuSetID=defaultNamedNotOptArg, suSetID=defaultNamedNotOptArg, nExtendShape=defaultNamedNotOptArg, bEdgeAuto=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20577, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),cuSetID
			, suSetID, nExtendShape, bEdgeAuto)

	def feSolidExtendToSurface(self, suID1=defaultNamedNotOptArg, suID2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20583, LCID, 1, (3, 0), ((3, 1), (3, 1)),suID1
			, suID2)

	def feSolidExtractCenterlines(self, soSetID=defaultNamedNotOptArg, inMatID=defaultNamedNotOptArg, bTubularOnly=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20618, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),soSetID
			, inMatID, bTubularOnly)

	def feSolidExtrude(self, operation=defaultNamedNotOptArg, surfID=defaultNamedNotOptArg, dirmode=defaultNamedNotOptArg, depthMode=defaultNamedNotOptArg
			, dirVec=defaultNamedNotOptArg, depthVec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20234, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),operation
			, surfID, dirmode, depthMode, dirVec, depthVec
			)

	def feSolidFillCavity(self, curveID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20561, LCID, 1, (3, 0), ((3, 1),),curveID
			)

	def feSolidFillet(self, curveSET=defaultNamedNotOptArg, radius=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20238, LCID, 1, (3, 0), ((3, 1), (5, 1)),curveSET
			, radius)

	def feSolidInsideMulti(self, soSetID=defaultNamedNotOptArg, nNumPts=defaultNamedNotOptArg, vPtLocs=defaultNamedNotOptArg, nInside=pythoncom.Missing):
		return self._ApplyTypes_(20657, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (16396, 2)), 'feSolidInsideMulti', None,soSetID
			, nNumPts, vPtLocs, nInside)

	def feSolidIntersect(self, solidSET=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20244, LCID, 1, (3, 0), ((3, 1), (11, 1)),solidSET
			, Redraw)

	def feSolidMidSurfaceManualInput(self, suSet1_ID=defaultNamedNotOptArg, suSet2_ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20584, LCID, 1, (3, 0), ((3, 1), (3, 1)),suSet1_ID
			, suSet2_ID)

	def feSolidMovePointOntoGeometry(self, ptSetID=defaultNamedNotOptArg, geomID=defaultNamedNotOptArg, geomTYPE=defaultNamedNotOptArg, bAlongEdge=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20580, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),ptSetID
			, geomID, geomTYPE, bAlongEdge)

	def feSolidPrimitive(self, operation=defaultNamedNotOptArg, shape=defaultNamedNotOptArg, positive=defaultNamedNotOptArg, origin=defaultNamedNotOptArg
			, Size=defaultNamedNotOptArg, title=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20233, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (12, 1), (12, 1), (8, 1)),operation
			, shape, positive, origin, Size, title
			)

	def feSolidRayFire(self, soSetID=defaultNamedNotOptArg, nNumRay=defaultNamedNotOptArg, vRayLoc=defaultNamedNotOptArg, vRayDir=defaultNamedNotOptArg
			, nHitSurface=pythoncom.Missing, vHitLoc=pythoncom.Missing):
		return self._ApplyTypes_(20581, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (16396, 2), (16396, 2)), 'feSolidRayFire', None,soSetID
			, nNumRay, vRayLoc, vRayDir, nHitSurface, vHitLoc
			)

	def feSolidRemove(self, baseID=defaultNamedNotOptArg, solidSET=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20241, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),baseID
			, solidSET, Redraw)

	def feSolidRemoveBlendsBelowRadius(self, soSetID=defaultNamedNotOptArg, max_rad=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20579, LCID, 1, (3, 0), ((3, 1), (5, 1)),soSetID
			, max_rad)

	def feSolidRemoveCurve(self, cuSetID=defaultNamedNotOptArg, nRemoveOption=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20597, LCID, 1, (3, 0), ((3, 1), (3, 1)),cuSetID
			, nRemoveOption)

	def feSolidRemoveFace(self, surfaceSET=defaultNamedNotOptArg, agressive=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20453, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1)),surfaceSET
			, agressive, Redraw)

	def feSolidRemoveRedundantPoint(self, ptID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20578, LCID, 1, (3, 0), ((3, 1),),ptID
			)

	def feSolidRevolve(self, operation=defaultNamedNotOptArg, surfID=defaultNamedNotOptArg, dirmode=defaultNamedNotOptArg, angleMode=defaultNamedNotOptArg
			, axisBASE=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg, angleVec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20235, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),operation
			, surfID, dirmode, angleMode, axisBASE, axisVEC
			, angleVec)

	def feSolidShell(self, baseID=defaultNamedNotOptArg, surfaceSET=defaultNamedNotOptArg, thickness=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20245, LCID, 1, (3, 0), ((3, 1), (3, 1), (5, 1), (11, 1)),baseID
			, surfaceSET, thickness, Redraw)

	def feSolidSlice(self, solidSET=defaultNamedNotOptArg, planeBase=defaultNamedNotOptArg, planeNormal=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20246, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (11, 1)),solidSET
			, planeBase, planeNormal, Redraw)

	def feSolidSlice2(self, solidSET=defaultNamedNotOptArg, planeBase=defaultNamedNotOptArg, planeNormal=defaultNamedNotOptArg, bSliceOrSection=defaultNamedNotOptArg
			, bMatchAcrossSlice=defaultNamedNotOptArg, nNumberOfPlanes=defaultNamedNotOptArg, dMultiPlaneOffset=defaultNamedNotOptArg, nSliceColor=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20624, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (11, 1), (11, 1), (3, 1), (5, 1), (3, 1), (11, 1)),solidSET
			, planeBase, planeNormal, bSliceOrSection, bMatchAcrossSlice, nNumberOfPlanes
			, dMultiPlaneOffset, nSliceColor, Redraw)

	def feSolidSliceAlongFace(self, surfaceID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20248, LCID, 1, (3, 0), ((3, 1),),surfaceID
			)

	def feSolidSliceAlongFace2(self, surfaceID=defaultNamedNotOptArg, bSliceOrSection=defaultNamedNotOptArg, bMatchAcrossSlice=defaultNamedNotOptArg, nSliceColor=defaultNamedNotOptArg
			, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20625, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (3, 1), (11, 1)),surfaceID
			, bSliceOrSection, bMatchAcrossSlice, nSliceColor, Redraw)

	def feSolidSliceMatch(self, solidSET=defaultNamedNotOptArg, planeBase=defaultNamedNotOptArg, planeNormal=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20247, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (11, 1)),solidSET
			, planeBase, planeNormal, Redraw)

	def feSolidSliceWithCurve2(self, solidSET=defaultNamedNotOptArg, curveSET=defaultNamedNotOptArg, bSliceOrSection=defaultNamedNotOptArg, bMatchAcrossSlice=defaultNamedNotOptArg
			, nSliceColor=defaultNamedNotOptArg, bAlongCurveNormal=defaultNamedNotOptArg, bVectorDirectionOnly=defaultNamedNotOptArg, vectorBase=defaultNamedNotOptArg, vectorDirection=defaultNamedNotOptArg
			, deleteTool=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20627, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (3, 1), (11, 1), (11, 1), (12, 1), (12, 1), (11, 1), (11, 1)),solidSET
			, curveSET, bSliceOrSection, bMatchAcrossSlice, nSliceColor, bAlongCurveNormal
			, bVectorDirectionOnly, vectorBase, vectorDirection, deleteTool, Redraw
			)

	def feSolidSliceWithSheet2(self, solidSET=defaultNamedNotOptArg, sheetSET=defaultNamedNotOptArg, bSliceOrSection=defaultNamedNotOptArg, bMatchAcrossSlice=defaultNamedNotOptArg
			, nSliceColor=defaultNamedNotOptArg, deleteTool=defaultNamedNotOptArg, Redraw=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20626, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (3, 1), (11, 1), (11, 1)),solidSET
			, sheetSET, bSliceOrSection, bMatchAcrossSlice, nSliceColor, deleteTool
			, Redraw)

	def feSolidStitch(self, surfaceSET=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20237, LCID, 1, (3, 0), ((3, 1), (5, 1)),surfaceSET
			, tolerance)

	def feSolidStitchNoCleanup(self, surfaceSET=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20449, LCID, 1, (3, 0), ((3, 1), (5, 1)),surfaceSET
			, tolerance)

	def feSolidSweep(self, surfaceSET=defaultNamedNotOptArg, curveSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20546, LCID, 1, (3, 0), ((3, 1), (3, 1)),surfaceSET
			, curveSET)

	def feSolidSweepBetween(self, nSurfID1=defaultNamedNotOptArg, nSurfID2=defaultNamedNotOptArg, nPtID1=defaultNamedNotOptArg, nPtID2=defaultNamedNotOptArg
			, blendFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20545, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (5, 1)),nSurfID1
			, nSurfID2, nPtID1, nPtID2, blendFactor)

	def feSolidThicken(self, nSurfaceSet=defaultNamedNotOptArg, dThickIn=defaultNamedNotOptArg, dThickOut=defaultNamedNotOptArg, nBooleanMode=defaultNamedNotOptArg
			, bClean=defaultNamedNotOptArg, bIndividual=defaultNamedNotOptArg, bDeleteOriginalSurface=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20638, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (3, 1), (11, 1), (11, 1), (11, 1)),nSurfaceSet
			, dThickIn, dThickOut, nBooleanMode, bClean, bIndividual
			, bDeleteOriginalSurface)

	def feSplineBlend(self, curve1=defaultNamedNotOptArg, near1=defaultNamedNotOptArg, curve2=defaultNamedNotOptArg, near2=defaultNamedNotOptArg
			, factor=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20401, LCID, 1, (3, 0), ((3, 1), (12, 1), (3, 1), (12, 1), (5, 1), (11, 1)),curve1
			, near1, curve2, near2, factor, messages
			)

	def feSplineEllipse(self, center=defaultNamedNotOptArg, vector=defaultNamedNotOptArg, a=defaultNamedNotOptArg, b=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20204, LCID, 1, (3, 0), ((12, 1), (12, 1), (5, 1), (5, 1), (11, 1)),center
			, vector, a, b, messages)

	def feSplineHyperbola(self, center=defaultNamedNotOptArg, towardfocus=defaultNamedNotOptArg, angle=defaultNamedNotOptArg, height=defaultNamedNotOptArg
			, trim=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20206, LCID, 1, (3, 0), ((12, 1), (12, 1), (5, 1), (5, 1), (12, 1), (11, 1)),center
			, towardfocus, angle, height, trim, messages
			)

	def feSplineMultipleCurves(self, cuSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20703, LCID, 1, (3, 0), ((3, 1),),cuSetID
			)

	def feSplineParabola(self, center=defaultNamedNotOptArg, focus=defaultNamedNotOptArg, trim=defaultNamedNotOptArg, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20205, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (11, 1)),center
			, focus, trim, messages)

	def feSplinePoints(self, propject=defaultNamedNotOptArg, controlpoints=defaultNamedNotOptArg, Count=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20202, LCID, 1, (3, 0), ((11, 1), (11, 1), (3, 1), (12, 1), (11, 1)),propject
			, controlpoints, Count, xyz, messages)

	def feSplineTangent(self, x1=defaultNamedNotOptArg, v1=defaultNamedNotOptArg, x2=defaultNamedNotOptArg, v2=defaultNamedNotOptArg
			, messages=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20203, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (11, 1)),x1
			, v1, x2, v2, messages)

	def feStartSelectionTool(self, nSelectedSET=defaultNamedNotOptArg, nEntityType=pythoncom.Missing):
		return self._ApplyTypes_(20739, 1, (3, 0), ((3, 1), (16387, 2)), 'feStartSelectionTool', None,nSelectedSET
			, nEntityType)

	def feSurfaceAlignedCurves(self, curveCOUNT=defaultNamedNotOptArg, curveID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20223, LCID, 1, (3, 0), ((3, 1), (12, 1)),curveCOUNT
			, curveID)

	def feSurfaceConvert(self, surfaceSET=defaultNamedNotOptArg, bDelete=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20444, LCID, 1, (3, 0), ((3, 1), (11, 1)),surfaceSET
			, bDelete)

	def feSurfaceCorners(self, fourCorners=defaultNamedNotOptArg, c1=defaultNamedNotOptArg, c2=defaultNamedNotOptArg, c3=defaultNamedNotOptArg
			, c4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20221, LCID, 1, (3, 0), ((11, 1), (12, 1), (12, 1), (12, 1), (12, 1)),fourCorners
			, c1, c2, c3, c4)

	def feSurfaceCornersMultiple(self, NumberOfSurfaces=defaultNamedNotOptArg, fourCorners=defaultNamedNotOptArg, c1=defaultNamedNotOptArg, c2=defaultNamedNotOptArg
			, c3=defaultNamedNotOptArg, c4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20610, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),NumberOfSurfaces
			, fourCorners, c1, c2, c3, c4
			)

	def feSurfaceEdgeCurves(self, curve1=defaultNamedNotOptArg, curve2=defaultNamedNotOptArg, curve3=defaultNamedNotOptArg, curve4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20222, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),curve1
			, curve2, curve3, curve4)

	def feSurfaceExtend(self, curveSET=defaultNamedNotOptArg, shape=defaultNamedNotOptArg, ExtendTo=defaultNamedNotOptArg, ExtendToSolidID=defaultNamedNotOptArg
			, ExtendToLoc=defaultNamedNotOptArg, ExtendDist=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20498, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (5, 1)),curveSET
			, shape, ExtendTo, ExtendToSolidID, ExtendToLoc, ExtendDist
			)

	def feSurfaceExtract(self, suSetID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20612, LCID, 1, (3, 0), ((3, 1),),suSetID
			)

	def feSurfaceExtrude(self, curveSET=defaultNamedNotOptArg, axisLEN=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20225, LCID, 1, (3, 0), ((3, 1), (5, 1), (12, 1)),curveSET
			, axisLEN, axisVEC)

	def feSurfaceFromMesh(self, elemSetID=defaultNamedNotOptArg, bDeleteMesh=defaultNamedNotOptArg, bWireframeOnly=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg
			, bLengthCutoff=defaultNamedNotOptArg, len_cut_val=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20511, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (5, 1), (11, 1), (5, 1)),elemSetID
			, bDeleteMesh, bWireframeOnly, tolerance, bLengthCutoff, len_cut_val
			)

	def feSurfaceFromMesh2(self, elemSetID=defaultNamedNotOptArg, bDeleteMesh=defaultNamedNotOptArg, bWireframeOnly=defaultNamedNotOptArg, tolerance=defaultNamedNotOptArg
			, bLengthCutoff=defaultNamedNotOptArg, len_cut_val=defaultNamedNotOptArg, ang_tol=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20596, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (5, 1), (11, 1), (5, 1), (5, 1)),elemSetID
			, bDeleteMesh, bWireframeOnly, tolerance, bLengthCutoff, len_cut_val
			, ang_tol)

	def feSurfaceGetUnderlying(self, nSurfaceID=defaultNamedNotOptArg, bAutoOffset=defaultNamedNotOptArg, dOffset=defaultNamedNotOptArg, dSizeFactor=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20591, LCID, 1, (3, 0), ((3, 1), (11, 1), (5, 1), (5, 1)),nSurfaceID
			, bAutoOffset, dOffset, dSizeFactor)

	def feSurfaceMidAttrib(self, surfSET=defaultNamedNotOptArg, matlID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20230, LCID, 1, (3, 0), ((3, 1), (3, 1)),surfSET
			, matlID)

	def feSurfaceMidAuto(self, surfSET=defaultNamedNotOptArg, thick=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20229, LCID, 1, (3, 0), ((3, 1), (5, 1)),surfSET
			, thick)

	def feSurfaceMidAuto2(self, suSetID=defaultNamedNotOptArg, dTargetThickness=defaultNamedNotOptArg, bCombineTangent=defaultNamedNotOptArg, dAngleTolerance=defaultNamedNotOptArg
			, bAutoAdd=defaultNamedNotOptArg, bReversePairs=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20548, LCID, 1, (3, 0), ((3, 1), (5, 1), (11, 1), (5, 1), (11, 1), (11, 1)),suSetID
			, dTargetThickness, bCombineTangent, dAngleTolerance, bAutoAdd, bReversePairs
			)

	def feSurfaceMidAuto3(self, suSetID=defaultNamedNotOptArg, dTargetThickness=defaultNamedNotOptArg, bCombineTangent=defaultNamedNotOptArg, dAngleTolerance=defaultNamedNotOptArg
			, bAutoAdd=defaultNamedNotOptArg, bReversePairs=defaultNamedNotOptArg, bVariableThick=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20645, LCID, 1, (3, 0), ((3, 1), (5, 1), (11, 1), (5, 1), (11, 1), (11, 1), (11, 1)),suSetID
			, dTargetThickness, bCombineTangent, dAngleTolerance, bAutoAdd, bReversePairs
			, bVariableThick)

	def feSurfaceMidAuto4(self, suSetID=defaultNamedNotOptArg, dTargetThickness=defaultNamedNotOptArg, bCombineTangent=defaultNamedNotOptArg, dAngleTolerance=defaultNamedNotOptArg
			, bAutoAdd=defaultNamedNotOptArg, bReversePairs=defaultNamedNotOptArg, bVariableThick=defaultNamedNotOptArg, bOverlapRepair=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20724, LCID, 1, (3, 0), ((3, 1), (5, 1), (11, 1), (5, 1), (11, 1), (11, 1), (11, 1), (11, 1)),suSetID
			, dTargetThickness, bCombineTangent, dAngleTolerance, bAutoAdd, bReversePairs
			, bVariableThick, bOverlapRepair)

	def feSurfaceMidAuto5(self, suSetID=defaultNamedNotOptArg, dTargetThickness=defaultNamedNotOptArg, bCombineTangent=defaultNamedNotOptArg, dAngleTolerance=defaultNamedNotOptArg
			, bAutoAdd=defaultNamedNotOptArg, bReversePairs=defaultNamedNotOptArg, bVariableThick=defaultNamedNotOptArg, bOverlapRepair=defaultNamedNotOptArg, bRemoveHoles=defaultNamedNotOptArg
			, bKeepUntrimmed=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20764, LCID, 1, (3, 0), ((3, 1), (5, 1), (11, 1), (5, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1), (11, 1)),suSetID
			, dTargetThickness, bCombineTangent, dAngleTolerance, bAutoAdd, bReversePairs
			, bVariableThick, bOverlapRepair, bRemoveHoles, bKeepUntrimmed)

	def feSurfaceMidSingle(self, trim=defaultNamedNotOptArg, surfID1=defaultNamedNotOptArg, surfID2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20228, LCID, 1, (3, 0), ((11, 1), (3, 1), (3, 1)),trim
			, surfID1, surfID2)

	def feSurfaceNonManifoldAdd(self, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20450, LCID, 1, (3, 0), ((3, 1),),solidSET
			)

	def feSurfaceNonManifoldAdd2(self, solidSET=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20524, LCID, 1, (3, 0), ((3, 1), (5, 1)),solidSET
			, dTolerance)

	def feSurfaceNonManifoldAdd3(self, solidSET=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg, bIntermediateCheck=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20531, LCID, 1, (3, 0), ((3, 1), (5, 1), (11, 1)),solidSET
			, dTolerance, bIntermediateCheck)

	def feSurfaceNonManifoldAddExpress(self, solidSetID=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20567, LCID, 1, (3, 0), ((3, 1), (5, 1)),solidSetID
			, dTolerance)

	def feSurfaceNormalDeviation(self, surfaceSetID=defaultNamedNotOptArg, dAvgNormal=pythoncom.Missing, dMaxAngle=pythoncom.Missing):
		return self._ApplyTypes_(20440, 1, (3, 0), ((3, 1), (16396, 2), (16389, 2)), 'feSurfaceNormalDeviation', None,surfaceSetID
			, dAvgNormal, dMaxAngle)

	def feSurfaceOffset(self, surfID=defaultNamedNotOptArg, dOffset=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20598, LCID, 1, (3, 0), ((3, 1), (5, 1)),surfID
			, dOffset)

	def feSurfaceOffset2(self, surfaceSET=defaultNamedNotOptArg, dOffset=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20651, LCID, 1, (3, 0), ((3, 1), (5, 1)),surfaceSET
			, dOffset)

	def feSurfaceOffsetTangent(self, nSeedSurface=defaultNamedNotOptArg, dTolerance=defaultNamedNotOptArg, bAutoOffset=defaultNamedNotOptArg, dOffset=defaultNamedNotOptArg
			, bDeleteOriginal=defaultNamedNotOptArg, bCreateGroup=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20537, LCID, 1, (3, 0), ((3, 1), (5, 1), (11, 1), (5, 1), (11, 1), (11, 1)),nSeedSurface
			, dTolerance, bAutoOffset, dOffset, bDeleteOriginal, bCreateGroup
			)

	def feSurfaceRayFire(self, suSetID=defaultNamedNotOptArg, nNumRay=defaultNamedNotOptArg, vRayLoc=defaultNamedNotOptArg, vRayDir=defaultNamedNotOptArg
			, nHitSurface=pythoncom.Missing, vHitLoc=pythoncom.Missing):
		return self._ApplyTypes_(20582, 1, (3, 0), ((3, 1), (3, 1), (12, 1), (12, 1), (16396, 2), (16396, 2)), 'feSurfaceRayFire', None,suSetID
			, nNumRay, vRayLoc, vRayDir, nHitSurface, vHitLoc
			)

	def feSurfaceRecoverManifold(self, solidSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20451, LCID, 1, (3, 0), ((3, 1),),solidSET
			)

	def feSurfaceRemoveHole(self, curveSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20454, LCID, 1, (3, 0), ((3, 1),),curveSET
			)

	def feSurfaceRevolve(self, curveSET=defaultNamedNotOptArg, axisANGLE=defaultNamedNotOptArg, axisBASE=defaultNamedNotOptArg, axisVEC=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20226, LCID, 1, (3, 0), ((3, 1), (5, 1), (12, 1), (12, 1)),curveSET
			, axisANGLE, axisBASE, axisVEC)

	def feSurfaceRuled(self, cu1=defaultNamedNotOptArg, cu2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20224, LCID, 1, (3, 0), ((3, 1), (3, 1)),cu1
			, cu2)

	def feSurfaceRuled2(self, nType1=defaultNamedNotOptArg, cuID1=defaultNamedNotOptArg, suID1=defaultNamedNotOptArg, vAlign1=defaultNamedNotOptArg
			, dFactor1=defaultNamedNotOptArg, nType2=defaultNamedNotOptArg, cuID2=defaultNamedNotOptArg, suID2=defaultNamedNotOptArg, vAlign2=defaultNamedNotOptArg
			, dFactor2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20782, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (5, 1), (3, 1), (3, 1), (3, 1), (12, 1), (5, 1)),nType1
			, cuID1, suID1, vAlign1, dFactor1, nType2
			, cuID2, suID2, vAlign2, dFactor2)

	def feSurfaceSweep(self, curveSET=defaultNamedNotOptArg, pathSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20227, LCID, 1, (3, 0), ((3, 1), (3, 1)),curveSET
			, pathSET)

	def feSurfaceTrimToSolid(self, sheetID=defaultNamedNotOptArg, solidID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20231, LCID, 1, (3, 0), ((3, 1), (3, 1)),sheetID
			, solidID)

	def feSurfaceTrimWithCurves(self, surfID=defaultNamedNotOptArg, curveSET=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20232, LCID, 1, (3, 0), ((3, 1), (3, 1)),surfID
			, curveSET)

	def feTextGet(self, textID=defaultNamedNotOptArg, DrawPointer=pythoncom.Missing, DrawBorder=pythoncom.Missing, modelPos=pythoncom.Missing
			, horzJust=pythoncom.Missing, vertJust=pythoncom.Missing, visView=pythoncom.Missing, layer=pythoncom.Missing, fontID=pythoncom.Missing
			, BackColor=pythoncom.Missing, bordColor=pythoncom.Missing, textColor=pythoncom.Missing, textLoc=pythoncom.Missing, pointerLoc=pythoncom.Missing
			, text=pythoncom.Missing):
		return self._ApplyTypes_(20083, 1, (3, 0), ((3, 1), (16395, 2), (16395, 2), (16395, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16396, 2), (16396, 2), (16392, 2)), 'feTextGet', None,textID
			, DrawPointer, DrawBorder, modelPos, horzJust, vertJust
			, visView, layer, fontID, BackColor, bordColor
			, textColor, textLoc, pointerLoc, text)

	def feTextMultiPut(self, DrawPointer=defaultNamedNotOptArg, DrawBorder=defaultNamedNotOptArg, modelPos=defaultNamedNotOptArg, horzJust=defaultNamedNotOptArg
			, vertJust=defaultNamedNotOptArg, visView=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fontID=defaultNamedNotOptArg, BackColor=defaultNamedNotOptArg
			, bordColor=defaultNamedNotOptArg, textColor=defaultNamedNotOptArg, nCount=defaultNamedNotOptArg, textLoc=defaultNamedNotOptArg, pointerLoc=defaultNamedNotOptArg
			, tText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20474, LCID, 1, (3, 0), ((11, 1), (11, 1), (11, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1)),DrawPointer
			, DrawBorder, modelPos, horzJust, vertJust, visView
			, layer, fontID, BackColor, bordColor, textColor
			, nCount, textLoc, pointerLoc, tText)

	def feTextPut(self, textID=defaultNamedNotOptArg, DrawPointer=defaultNamedNotOptArg, DrawBorder=defaultNamedNotOptArg, modelPos=defaultNamedNotOptArg
			, horzJust=defaultNamedNotOptArg, vertJust=defaultNamedNotOptArg, visView=defaultNamedNotOptArg, layer=defaultNamedNotOptArg, fontID=defaultNamedNotOptArg
			, BackColor=defaultNamedNotOptArg, bordColor=defaultNamedNotOptArg, textColor=defaultNamedNotOptArg, textLoc=defaultNamedNotOptArg, pointerLoc=defaultNamedNotOptArg
			, tText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20082, LCID, 1, (3, 0), ((3, 1), (11, 1), (11, 1), (11, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (8, 1)),textID
			, DrawPointer, DrawBorder, modelPos, horzJust, vertJust
			, visView, layer, fontID, BackColor, bordColor
			, textColor, textLoc, pointerLoc, tText)

	def feToolUnitConvert(self, baseMult=defaultNamedNotOptArg, baseAdd=defaultNamedNotOptArg, factorMult=defaultNamedNotOptArg, factorAdd=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20076, LCID, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),baseMult
			, baseAdd, factorMult, factorAdd)

	def feToolUnitConvertFactors(self, baseMult=defaultNamedNotOptArg, baseAdd=defaultNamedNotOptArg, factorMult=pythoncom.Missing, factorAdd=pythoncom.Missing):
		return self._ApplyTypes_(20075, 1, (3, 0), ((12, 1), (12, 1), (16396, 2), (16396, 2)), 'feToolUnitConvertFactors', None,baseMult
			, baseAdd, factorMult, factorAdd)

	def feTruncateReal(self, dValue=defaultNamedNotOptArg, nWidth=defaultNamedNotOptArg, nDecimal=defaultNamedNotOptArg, nFormat=defaultNamedNotOptArg
			, truncValue=pythoncom.Missing):
		return self._ApplyTypes_(20462, 1, (3, 0), ((5, 1), (3, 1), (3, 1), (3, 1), (16389, 2)), 'feTruncateReal', None,dValue
			, nWidth, nDecimal, nFormat, truncValue)

	def feUnLockAbort(self):
		return self._oleobj_.InvokeTypes(20653, LCID, 1, (3, 0), (),)

	def feUnlockApiOnly(self, nCode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19999, LCID, 1, (3, 0), ((3, 1),),nCode
			)

	def feUnlockNastran(self, nCode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20774, LCID, 1, (3, 0), ((3, 1),),nCode
			)

	def feUnlockOEM(self, nCode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(19998, LCID, 1, (3, 0), ((3, 1),),nCode
			)

	def feVarEval(self, vareqn=defaultNamedNotOptArg, varvalue=pythoncom.Missing):
		return self._ApplyTypes_(20079, 1, (3, 0), ((8, 1), (16389, 2)), 'feVarEval', None,vareqn
			, varvalue)

	def feVarGet(self, varname=defaultNamedNotOptArg, varvalue=pythoncom.Missing, vareqn=pythoncom.Missing):
		return self._ApplyTypes_(20078, 1, (3, 0), ((8, 1), (16389, 2), (16392, 2)), 'feVarGet', None,varname
			, varvalue, vareqn)

	def feVarPut(self, varname=defaultNamedNotOptArg, evalEqn=defaultNamedNotOptArg, setConst=defaultNamedNotOptArg, varvalue=defaultNamedNotOptArg
			, vareqn=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20077, LCID, 1, (3, 0), ((8, 1), (11, 1), (11, 1), (5, 1), (8, 1)),varname
			, evalEqn, setConst, varvalue, vareqn)

	def feVectorAngle(self, VecA=defaultNamedNotOptArg, VecB=defaultNamedNotOptArg, angle=pythoncom.Missing):
		return self._ApplyTypes_(20137, 1, (3, 0), ((12, 1), (12, 1), (16389, 2)), 'feVectorAngle', None,VecA
			, VecB, angle)

	def feVectorAngleAxis(self, VecA=defaultNamedNotOptArg, VecB=defaultNamedNotOptArg, vecAXIS=defaultNamedNotOptArg, angle=pythoncom.Missing):
		return self._ApplyTypes_(20138, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (16389, 2)), 'feVectorAngleAxis', None,VecA
			, VecB, vecAXIS, angle)

	def feVectorArrayTransform(self, Count=defaultNamedNotOptArg, fromCSYS=defaultNamedNotOptArg, toCSYS=defaultNamedNotOptArg, baseXYZ=defaultNamedNotOptArg
			, fromxyz=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20595, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (16396, 2)), 'feVectorArrayTransform', None,Count
			, fromCSYS, toCSYS, baseXYZ, fromxyz, xyz
			)

	def feVectorAxis(self, csysID=defaultNamedNotOptArg, Axis=defaultNamedNotOptArg, positive=defaultNamedNotOptArg, vecDIR=pythoncom.Missing):
		return self._ApplyTypes_(20142, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (16396, 2)), 'feVectorAxis', None,csysID
			, Axis, positive, vecDIR)

	def feVectorAxisOfSurface(self, suID=defaultNamedNotOptArg, baseXYZ=pythoncom.Missing, vecDIR=pythoncom.Missing):
		return self._ApplyTypes_(20457, 1, (3, 0), ((3, 1), (16396, 2), (16396, 2)), 'feVectorAxisOfSurface', None,suID
			, baseXYZ, vecDIR)

	def feVectorCrossProduct(self, VecA=defaultNamedNotOptArg, VecB=defaultNamedNotOptArg, vecAxB=pythoncom.Missing):
		return self._ApplyTypes_(20135, 1, (3, 0), ((12, 1), (12, 1), (16396, 2)), 'feVectorCrossProduct', None,VecA
			, VecB, vecAxB)

	def feVectorDotProduct(self, VecA=defaultNamedNotOptArg, VecB=defaultNamedNotOptArg, dot=pythoncom.Missing):
		return self._ApplyTypes_(20136, 1, (3, 0), ((12, 1), (12, 1), (16389, 2)), 'feVectorDotProduct', None,VecA
			, VecB, dot)

	def feVectorFromBeam(self, elemID=defaultNamedNotOptArg, bmXYZ=defaultNamedNotOptArg, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20132, 1, (3, 0), ((3, 1), (12, 1), (16396, 2)), 'feVectorFromBeam', None,elemID
			, bmXYZ, xyz)

	def feVectorLength(self, xyz=defaultNamedNotOptArg, vecLength=pythoncom.Missing):
		return self._ApplyTypes_(20134, 1, (3, 0), ((12, 1), (16389, 2)), 'feVectorLength', None,xyz
			, vecLength)

	def feVectorNormalToSurface(self, suID=defaultNamedNotOptArg, baseXYZ=defaultNamedNotOptArg, vecDIR=pythoncom.Missing):
		return self._ApplyTypes_(20144, 1, (3, 0), ((3, 1), (12, 1), (16396, 2)), 'feVectorNormalToSurface', None,suID
			, baseXYZ, vecDIR)

	def feVectorNormalToView(self, vuID=defaultNamedNotOptArg, vecDIR=pythoncom.Missing):
		return self._ApplyTypes_(20145, 1, (3, 0), ((3, 1), (16396, 2)), 'feVectorNormalToView', None,vuID
			, vecDIR)

	def feVectorNormalizedDotProduct(self, VecA=defaultNamedNotOptArg, VecB=defaultNamedNotOptArg, dot=pythoncom.Missing):
		return self._ApplyTypes_(20500, 1, (3, 0), ((12, 1), (12, 1), (16389, 2)), 'feVectorNormalizedDotProduct', None,VecA
			, VecB, dot)

	def feVectorPerpendicular(self, vecIN=defaultNamedNotOptArg, vecPERP=pythoncom.Missing):
		return self._ApplyTypes_(20421, 1, (3, 0), ((12, 1), (16396, 2)), 'feVectorPerpendicular', None,vecIN
			, vecPERP)

	def feVectorPick(self, dlgTITLE=defaultNamedNotOptArg, unitVector=defaultNamedNotOptArg, vecLength=pythoncom.Missing, vecBASE=pythoncom.Missing
			, vecDIR=pythoncom.Missing):
		return self._ApplyTypes_(20141, 1, (3, 0), ((8, 1), (11, 1), (16389, 2), (16396, 2), (16396, 2)), 'feVectorPick', None,dlgTITLE
			, unitVector, vecLength, vecBASE, vecDIR)

	def feVectorPickByMethod(self, method=defaultNamedNotOptArg, dlgTITLE=defaultNamedNotOptArg, unitVector=defaultNamedNotOptArg, vecLength=pythoncom.Missing
			, vecBASE=pythoncom.Missing, vecDIR=pythoncom.Missing):
		return self._ApplyTypes_(20428, 1, (3, 0), ((3, 1), (8, 1), (11, 1), (16389, 2), (16396, 2), (16396, 2)), 'feVectorPickByMethod', None,method
			, dlgTITLE, unitVector, vecLength, vecBASE, vecDIR
			)

	def feVectorPlaneIntersect(self, baseA=defaultNamedNotOptArg, normA=defaultNamedNotOptArg, baseB=defaultNamedNotOptArg, normB=defaultNamedNotOptArg
			, ptV=pythoncom.Missing, dirV=pythoncom.Missing):
		return self._ApplyTypes_(20140, 1, (3, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (16396, 2), (16396, 2)), 'feVectorPlaneIntersect', None,baseA
			, normA, baseB, normB, ptV, dirV
			)

	def feVectorRotate(self, baseXYZ=defaultNamedNotOptArg, vecXYZ=defaultNamedNotOptArg, angle=defaultNamedNotOptArg, origin=defaultNamedNotOptArg
			, Axis=defaultNamedNotOptArg, baseROT=pythoncom.Missing, vecROT=pythoncom.Missing):
		return self._ApplyTypes_(20559, 1, (3, 0), ((12, 1), (12, 1), (5, 1), (12, 1), (12, 1), (16396, 2), (16396, 2)), 'feVectorRotate', None,baseXYZ
			, vecXYZ, angle, origin, Axis, baseROT
			, vecROT)

	def feVectorTangentToCurve(self, cuID=defaultNamedNotOptArg, baseXYZ=defaultNamedNotOptArg, vecDIR=pythoncom.Missing):
		return self._ApplyTypes_(20143, 1, (3, 0), ((3, 1), (12, 1), (16396, 2)), 'feVectorTangentToCurve', None,cuID
			, baseXYZ, vecDIR)

	def feVectorToBeam(self, elemID=defaultNamedNotOptArg, xyz=defaultNamedNotOptArg, bmXYZ=pythoncom.Missing):
		return self._ApplyTypes_(20133, 1, (3, 0), ((3, 1), (12, 1), (16396, 2)), 'feVectorToBeam', None,elemID
			, xyz, bmXYZ)

	def feVectorTransform(self, fromCSYS=defaultNamedNotOptArg, baseXYZ=defaultNamedNotOptArg, fromxyz=defaultNamedNotOptArg, toCSYS=defaultNamedNotOptArg
			, xyz=pythoncom.Missing):
		return self._ApplyTypes_(20131, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (3, 1), (16396, 2)), 'feVectorTransform', None,fromCSYS
			, baseXYZ, fromxyz, toCSYS, xyz)

	def feVectorUnit(self, vecIN=defaultNamedNotOptArg, vecOUT=pythoncom.Missing):
		return self._ApplyTypes_(20139, 1, (3, 0), ((12, 1), (16396, 2)), 'feVectorUnit', None,vecIN
			, vecOUT)

	def feViewAllViews(self, on_off=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20159, LCID, 1, (3, 0), ((11, 1),),on_off
			)

	def feViewAutoscaleAll(self, vuID=defaultNamedNotOptArg, redoBox=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20535, LCID, 1, (3, 0), ((3, 1), (11, 1)),vuID
			, redoBox)

	def feViewAutoscaleVisible(self, vuID=defaultNamedNotOptArg, redoBox=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20534, LCID, 1, (3, 0), ((3, 1), (11, 1)),vuID
			, redoBox)

	def feViewCascade(self):
		return self._oleobj_.InvokeTypes(20163, LCID, 1, (3, 0), (),)

	def feViewRedraw(self, vuID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20157, LCID, 1, (3, 0), ((3, 1),),vuID
			)

	def feViewRegenerate(self, vuID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20158, LCID, 1, (3, 0), ((3, 1),),vuID
			)

	def feViewShow(self, dTYPE=defaultNamedNotOptArg, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20160, LCID, 1, (3, 0), ((3, 1), (3, 1)),dTYPE
			, ID)

	def feViewShow2(self, dTYPE=defaultNamedNotOptArg, ID=defaultNamedNotOptArg, qAutoscale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20619, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),dTYPE
			, ID, qAutoscale)

	def feViewShowMultiple(self, nSets=defaultNamedNotOptArg, piTYPEs=defaultNamedNotOptArg, piSetIDs=defaultNamedNotOptArg, qAutoscale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20628, LCID, 1, (3, 0), ((3, 1), (12, 1), (12, 1), (11, 1)),nSets
			, piTYPEs, piSetIDs, qAutoscale)

	def feViewTile(self):
		return self._oleobj_.InvokeTypes(20162, LCID, 1, (3, 0), (),)

	def feViewVisible(self, vuID=defaultNamedNotOptArg, Visible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20161, LCID, 1, (3, 0), ((3, 1), (11, 1)),vuID
			, Visible)

	def feWindowCascade(self):
		return self._oleobj_.InvokeTypes(20400, LCID, 1, (3, 0), (),)

	def feWindowMaximize(self, vuID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20391, LCID, 1, (3, 0), ((3, 1),),vuID
			)

	def feWindowMinimize(self, vuID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20390, LCID, 1, (3, 0), ((3, 1),),vuID
			)

	def feWindowRedraw(self, vuID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20395, LCID, 1, (3, 0), ((3, 1),),vuID
			)

	def feWindowRegenerate(self, vuID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20396, LCID, 1, (3, 0), ((3, 1),),vuID
			)

	def feWindowRestore(self, vuID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20392, LCID, 1, (3, 0), ((3, 1),),vuID
			)

	def feWindowSetRect(self, vuID=defaultNamedNotOptArg, pctLeft=defaultNamedNotOptArg, pctTop=defaultNamedNotOptArg, pctRight=defaultNamedNotOptArg
			, pctBottom=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20408, LCID, 1, (3, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1)),vuID
			, pctLeft, pctTop, pctRight, pctBottom)

	def feWindowSetSize(self, vuID=defaultNamedNotOptArg, left=defaultNamedNotOptArg, top=defaultNamedNotOptArg, horz=defaultNamedNotOptArg
			, vert=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20539, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),vuID
			, left, top, horz, vert)

	def feWindowShow(self, dTYPE=defaultNamedNotOptArg, ID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20397, LCID, 1, (3, 0), ((3, 1), (3, 1)),dTYPE
			, ID)

	def feWindowShow2(self, dTYPE=defaultNamedNotOptArg, ID=defaultNamedNotOptArg, qAutoscale=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20620, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1)),dTYPE
			, ID, qAutoscale)

	def feWindowTile(self):
		return self._oleobj_.InvokeTypes(20399, LCID, 1, (3, 0), (),)

	def feWindowTileHorz(self):
		return self._oleobj_.InvokeTypes(20402, LCID, 1, (3, 0), (),)

	def feWindowTitle(self, vuID=defaultNamedNotOptArg, sTitle=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20409, LCID, 1, (3, 0), ((3, 1), (8, 1)),vuID
			, sTitle)

	def feWindowVisible(self, vuID=defaultNamedNotOptArg, Visible=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20398, LCID, 1, (3, 0), ((3, 1), (11, 1)),vuID
			, Visible)

	_prop_map_get_ = {
		"ConfigurationPath": (10704, 2, (8, 0), (), "ConfigurationPath", None),
		"CoordDialogMethod": (10365, 2, (3, 0), (), "CoordDialogMethod", None),
		"DialogAutoAnswer": (10308, 2, (3, 0), (), "DialogAutoAnswer", None),
		"DialogAutoSkip": (10424, 2, (3, 0), (), "DialogAutoSkip", None),
		"DialogAutoSkipMsg": (10522, 2, (3, 0), (), "DialogAutoSkipMsg", None),
		"ErrorHasBeenCalled": (10432, 2, (11, 0), (), "ErrorHasBeenCalled", None),
		"EventLParam": (10263, 2, (20, 0), (), "EventLParam", None),
		"ExePath": (10261, 2, (8, 0), (), "ExePath", None),
		"FullScratchName": (10260, 2, (8, 0), (), "FullScratchName", None),
		"Info_CommandNumber": (10189, 2, (3, 0), (), "Info_CommandNumber", None),
		"Info_ComplexSyncIncrement": (10546, 2, (5, 0), (), "Info_ComplexSyncIncrement", None),
		"Info_ComplexSyncMethod": (10544, 2, (3, 0), (), "Info_ComplexSyncMethod", None),
		"Info_ComplexSyncPhase": (10545, 2, (5, 0), (), "Info_ComplexSyncPhase", None),
		"Info_DefaultX": (10236, 2, (5, 0), (), "Info_DefaultX", None),
		"Info_DefaultY": (10237, 2, (5, 0), (), "Info_DefaultY", None),
		"Info_DefaultZ": (10238, 2, (5, 0), (), "Info_DefaultZ", None),
		"Info_FacetAngleTolerance": (10414, 2, (5, 0), (), "Info_FacetAngleTolerance", None),
		"Info_FacetChordTolerance": (10415, 2, (5, 0), (), "Info_FacetChordTolerance", None),
		"Info_FacetCurveFactor": (10416, 2, (5, 0), (), "Info_FacetCurveFactor", None),
		"Info_FreebodyReverse": (10650, 2, (11, 0), (), "Info_FreebodyReverse", None),
		"Info_GeometryScale": (10246, 2, (5, 0), (), "Info_GeometryScale", None),
		"Info_GroupAutomaticAdd": (10217, 2, (3, 0), (), "Info_GroupAutomaticAdd", None),
		"Info_LayerNoPick": (10219, 2, (3, 0), (), "Info_LayerNoPick", None),
		"Info_LineLength": (10239, 2, (5, 0), (), "Info_LineLength", None),
		"Info_MatlAngle": (10244, 2, (5, 0), (), "Info_MatlAngle", None),
		"Info_MatlAngleCSys": (10210, 2, (3, 0), (), "Info_MatlAngleCSys", None),
		"Info_MatlAngleDir": (10209, 2, (3, 0), (), "Info_MatlAngleDir", None),
		"Info_MatlAngleMethod": (10208, 2, (3, 0), (), "Info_MatlAngleMethod", None),
		"Info_MatlUserType": (10220, 2, (3, 0), (), "Info_MatlUserType", None),
		"Info_MeshSizeAutoDefault": (10517, 2, (11, 0), (), "Info_MeshSizeAutoDefault", None),
		"Info_MeshSizeDefault": (10245, 2, (5, 0), (), "Info_MeshSizeDefault", None),
		"Info_MeshSizeMinElem": (10211, 2, (3, 0), (), "Info_MeshSizeMinElem", None),
		"Info_MeshSizePropagation_EdgeOption": (10745, 2, (3, 0), (), "Info_MeshSizePropagation_EdgeOption", None),
		"Info_MeshSizePropagation_On": (10742, 2, (11, 0), (), "Info_MeshSizePropagation_On", None),
		"Info_MeshSizePropagation_SameSolid": (10746, 2, (11, 0), (), "Info_MeshSizePropagation_SameSolid", None),
		"Info_MeshSizePropagation_SelMode": (10743, 2, (3, 0), (), "Info_MeshSizePropagation_SelMode", None),
		"Info_MeshSizePropagation_SlavedMapped": (10744, 2, (11, 0), (), "Info_MeshSizePropagation_SlavedMapped", None),
		"Info_MeshSizePropagation_Tolerance": (10748, 2, (5, 0), (), "Info_MeshSizePropagation_Tolerance", None),
		"Info_MeshSizePropagation_UseTolerance": (10747, 2, (11, 0), (), "Info_MeshSizePropagation_UseTolerance", None),
		"Info_ModelNeedBox": (10180, 2, (11, 0), (), "Info_ModelNeedBox", None),
		"Info_NodeType": (10199, 2, (3, 0), (), "Info_NodeType", None),
		"Info_OrientQuad4ForceOutput": (10380, 2, (3, 0), (), "Info_OrientQuad4ForceOutput", None),
		"Info_OrientQuad4StrainOutput": (10379, 2, (3, 0), (), "Info_OrientQuad4StrainOutput", None),
		"Info_OrientQuad4StressOutput": (10378, 2, (3, 0), (), "Info_OrientQuad4StressOutput", None),
		"Info_OrientQuad8ForceOutput": (10383, 2, (3, 0), (), "Info_OrientQuad8ForceOutput", None),
		"Info_OrientQuad8StrainOutput": (10382, 2, (3, 0), (), "Info_OrientQuad8StrainOutput", None),
		"Info_OrientQuad8StressOutput": (10381, 2, (3, 0), (), "Info_OrientQuad8StressOutput", None),
		"Info_OrientSolidAnisoOutput": (10370, 2, (3, 0), (), "Info_OrientSolidAnisoOutput", None),
		"Info_OrientSolidHyperOutput": (10371, 2, (3, 0), (), "Info_OrientSolidHyperOutput", None),
		"Info_OrientSolidIsoOutput": (10369, 2, (3, 0), (), "Info_OrientSolidIsoOutput", None),
		"Info_OrientTria3ForceOutput": (10374, 2, (3, 0), (), "Info_OrientTria3ForceOutput", None),
		"Info_OrientTria3StrainOutput": (10373, 2, (3, 0), (), "Info_OrientTria3StrainOutput", None),
		"Info_OrientTria3StressOutput": (10372, 2, (3, 0), (), "Info_OrientTria3StressOutput", None),
		"Info_OrientTria6ForceOutput": (10377, 2, (3, 0), (), "Info_OrientTria6ForceOutput", None),
		"Info_OrientTria6StrainOutput": (10376, 2, (3, 0), (), "Info_OrientTria6StrainOutput", None),
		"Info_OrientTria6StressOutput": (10375, 2, (3, 0), (), "Info_OrientTria6StressOutput", None),
		"Info_OutputCSys": (10198, 2, (3, 0), (), "Info_OutputCSys", None),
		"Info_SnapCoordOnly": (10184, 2, (11, 0), (), "Info_SnapCoordOnly", None),
		"Info_SnapFullPrecision": (10183, 2, (11, 0), (), "Info_SnapFullPrecision", None),
		"Info_SnapSpacingMode": (10205, 2, (3, 0), (), "Info_SnapSpacingMode", None),
		"Info_SnapStyle": (10204, 2, (3, 0), (), "Info_SnapStyle", None),
		"Info_SnapTo": (10203, 2, (3, 0), (), "Info_SnapTo", None),
		"Info_SplineOrder": (10218, 2, (3, 0), (), "Info_SplineOrder", None),
		"Info_SuperelementID": (10362, 2, (3, 0), (), "Info_SuperelementID", None),
		"Info_SuppressedCurveColor": (10425, 2, (3, 0), (), "Info_SuppressedCurveColor", None),
		"Info_SuppressedSurfaceColor": (10426, 2, (3, 0), (), "Info_SuppressedSurfaceColor", None),
		"Info_TextBorderColor": (10200, 2, (3, 0), (), "Info_TextBorderColor", None),
		"Info_TranslateNotes": (10182, 2, (11, 0), (), "Info_TranslateNotes", None),
		"Info_UpdateAllViews": (10181, 2, (11, 0), (), "Info_UpdateAllViews", None),
		"Info_Version": (10223, 2, (5, 0), (), "Info_Version", None),
		"Info_ViewShowAutoscale": (10647, 2, (11, 0), (), "Info_ViewShowAutoscale", None),
		"Info_ViewShowColor": (10214, 2, (3, 0), (), "Info_ViewShowColor", None),
		"Info_ViewShowEntity": (10215, 2, (3, 0), (), "Info_ViewShowEntity", None),
		"Info_ViewShowErase": (10185, 2, (11, 0), (), "Info_ViewShowErase", None),
		"Info_ViewShowLabel": (10216, 2, (3, 0), (), "Info_ViewShowLabel", None),
		"Info_ViewShowNormal": (10542, 2, (11, 0), (), "Info_ViewShowNormal", None),
		"Info_ViewShowTransparent": (10543, 2, (11, 0), (), "Info_ViewShowTransparent", None),
		"Info_ViewShowUseColor": (10186, 2, (11, 0), (), "Info_ViewShowUseColor", None),
		"Info_WorkplaneLabels": (10235, 2, (5, 0), (), "Info_WorkplaneLabels", None),
		"Info_WorkplaneModelAdjust": (10178, 2, (11, 0), (), "Info_WorkplaneModelAdjust", None),
		"Info_WorkplaneOnSurface": (10201, 2, (3, 0), (), "Info_WorkplaneOnSurface", None),
		"Info_WorkplaneOnSurfacePrev": (10202, 2, (3, 0), (), "Info_WorkplaneOnSurfacePrev", None),
		"Info_WorkplaneSurfaceAdjust": (10179, 2, (11, 0), (), "Info_WorkplaneSurfaceAdjust", None),
		"Info_WorkplaneTics": (10206, 2, (3, 0), (), "Info_WorkplaneTics", None),
		"InitializationPath": (10703, 2, (8, 0), (), "InitializationPath", None),
		"List_Destination": (10390, 2, (3, 0), (), "List_Destination", None),
		"List_FileName": (10391, 2, (8, 0), (), "List_FileName", None),
		"ModelFromPreviousVersion": (10718, 2, (11, 0), (), "ModelFromPreviousVersion", None),
		"ModelMigratedFromDB": (10720, 2, (8, 0), (), "ModelMigratedFromDB", None),
		"ModelMigratedFromVersion": (10719, 2, (5, 0), (), "ModelMigratedFromVersion", None),
		"ModelName": (10258, 2, (8, 0), (), "ModelName", None),
		"PgSetup_BottomMargin": (10062, 2, (5, 0), (), "PgSetup_BottomMargin", None),
		"PgSetup_CustomHeight": (10057, 2, (5, 0), (), "PgSetup_CustomHeight", None),
		"PgSetup_CustomWidth": (10058, 2, (5, 0), (), "PgSetup_CustomWidth", None),
		"PgSetup_DefaultHdrFont": (10042, 2, (11, 0), (), "PgSetup_DefaultHdrFont", None),
		"PgSetup_DefaultTextFont": (10043, 2, (11, 0), (), "PgSetup_DefaultTextFont", None),
		"PgSetup_FillMargins": (10044, 2, (11, 0), (), "PgSetup_FillMargins", None),
		"PgSetup_Footer": (10041, 2, (8, 0), (), "PgSetup_Footer", None),
		"PgSetup_HdrFont": (10038, 2, (8, 0), (), "PgSetup_HdrFont", None),
		"PgSetup_HdrFontSize": (10052, 2, (3, 0), (), "PgSetup_HdrFontSize", None),
		"PgSetup_Header": (10040, 2, (8, 0), (), "PgSetup_Header", None),
		"PgSetup_HorzAlign": (10056, 2, (3, 0), (), "PgSetup_HorzAlign", None),
		"PgSetup_IntegerScaling": (10046, 2, (11, 0), (), "PgSetup_IntegerScaling", None),
		"PgSetup_LeftMargin": (10059, 2, (5, 0), (), "PgSetup_LeftMargin", None),
		"PgSetup_MaintainAspect": (10045, 2, (11, 0), (), "PgSetup_MaintainAspect", None),
		"PgSetup_Monochrome": (10050, 2, (11, 0), (), "PgSetup_Monochrome", None),
		"PgSetup_PenScale": (10054, 2, (3, 0), (), "PgSetup_PenScale", None),
		"PgSetup_PrintBorder": (10047, 2, (11, 0), (), "PgSetup_PrintBorder", None),
		"PgSetup_RenderScale": (10063, 2, (5, 0), (), "PgSetup_RenderScale", None),
		"PgSetup_RightMargin": (10060, 2, (5, 0), (), "PgSetup_RightMargin", None),
		"PgSetup_SwapBW": (10048, 2, (11, 0), (), "PgSetup_SwapBW", None),
		"PgSetup_TextFont": (10039, 2, (8, 0), (), "PgSetup_TextFont", None),
		"PgSetup_TextFontSize": (10053, 2, (3, 0), (), "PgSetup_TextFontSize", None),
		"PgSetup_TopMargin": (10061, 2, (5, 0), (), "PgSetup_TopMargin", None),
		"PgSetup_TransparentBkgd": (10049, 2, (11, 0), (), "PgSetup_TransparentBkgd", None),
		"PgSetup_VertAlign": (10055, 2, (3, 0), (), "PgSetup_VertAlign", None),
		"PickBoundaryInternalMode": (10385, 2, (3, 0), (), "PickBoundaryInternalMode", None),
		"PickCombinedCurveInternalMode": (10386, 2, (3, 0), (), "PickCombinedCurveInternalMode", None),
		"PickVisibleOnly": (10668, 2, (11, 0), (), "PickVisibleOnly", None),
		"PlaneDialogMethod": (10367, 2, (3, 0), (), "PlaneDialogMethod", None),
		"Pref_API_HonorWorkingDirectory": (10741, 2, (11, 0), (), "Pref_API_HonorWorkingDirectory", None),
		"Pref_API_UseAlternateFileDialog": (10740, 2, (11, 0), (), "Pref_API_UseAlternateFileDialog", None),
		"Pref_API_WarningInDialog": (10702, 2, (11, 0), (), "Pref_API_WarningInDialog", None),
		"Pref_API_WarningLevel": (10701, 2, (3, 0), (), "Pref_API_WarningLevel", None),
		"Pref_Abaqus_PreserveCompressedLoads": (10717, 2, (11, 0), (), "Pref_Abaqus_PreserveCompressedLoads", None),
		"Pref_AdjMidsideGeomLoad": (10116, 2, (11, 0), (), "Pref_AdjMidsideGeomLoad", None),
		"Pref_AltAccelerator": (10303, 2, (11, 0), (), "Pref_AltAccelerator", None),
		"Pref_AltSectionProp": (10326, 2, (11, 0), (), "Pref_AltSectionProp", None),
		"Pref_AltTheme": (10304, 2, (11, 0), (), "Pref_AltTheme", None),
		"Pref_AnalysisMonAutoLoad": (10343, 2, (11, 0), (), "Pref_AnalysisMonAutoLoad", None),
		"Pref_AnalysisMonMaxLines": (10344, 2, (3, 0), (), "Pref_AnalysisMonMaxLines", None),
		"Pref_AnalysisProg": (10133, 2, (3, 0), (), "Pref_AnalysisProg", None),
		"Pref_AnalysisType": (10134, 2, (3, 0), (), "Pref_AnalysisType", None),
		"Pref_AnimatePanes": (10336, 2, (11, 0), (), "Pref_AnimatePanes", None),
		"Pref_AnimationFormat": (10397, 2, (3, 0), (), "Pref_AnimationFormat", None),
		"Pref_AspectRatio": (10154, 2, (5, 0), (), "Pref_AspectRatio", None),
		"Pref_AssumeEngrStrain": (10120, 2, (11, 0), (), "Pref_AssumeEngrStrain", None),
		"Pref_AttachResultsDebug": (10518, 2, (11, 0), (), "Pref_AttachResultsDebug", None),
		"Pref_AttachResultsTiming": (10519, 2, (11, 0), (), "Pref_AttachResultsTiming", None),
		"Pref_AutoAttachResults": (10514, 2, (11, 0), (), "Pref_AutoAttachResults", None),
		"Pref_AutoConvertOdb": (10603, 2, (11, 0), (), "Pref_AutoConvertOdb", None),
		"Pref_AutomaticTitles": (10108, 2, (11, 0), (), "Pref_AutomaticTitles", None),
		"Pref_BackupModel": (10107, 2, (11, 0), (), "Pref_BackupModel", None),
		"Pref_CleanupModel": (10523, 2, (11, 0), (), "Pref_CleanupModel", None),
		"Pref_CompressBitmaps": (10401, 2, (11, 0), (), "Pref_CompressBitmaps", None),
		"Pref_ComputeAverageMidResults": (10723, 2, (11, 0), (), "Pref_ComputeAverageMidResults", None),
		"Pref_ComputePrincipal": (10119, 2, (11, 0), (), "Pref_ComputePrincipal", None),
		"Pref_ConfirmDelete": (10449, 2, (11, 0), (), "Pref_ConfirmDelete", None),
		"Pref_ConstructionGeometry": (10388, 2, (3, 0), (), "Pref_ConstructionGeometry", None),
		"Pref_CreateResultStudy": (10540, 2, (11, 0), (), "Pref_CreateResultStudy", None),
		"Pref_CustomToolsPath": (10079, 2, (8, 0), (), "Pref_CustomToolsPath", None),
		"Pref_DATASURF_TriMapHBSizeFactor": (10713, 2, (5, 0), (), "Pref_DATASURF_TriMapHBSizeFactor", None),
		"Pref_DATASURF_TriMapLayerExtent": (10675, 2, (3, 0), (), "Pref_DATASURF_TriMapLayerExtent", None),
		"Pref_DATASURF_TriMapTolerance": (10676, 2, (5, 0), (), "Pref_DATASURF_TriMapTolerance", None),
		"Pref_DBCacheBlocksPerPage": (10125, 2, (3, 0), (), "Pref_DBCacheBlocksPerPage", None),
		"Pref_DBCacheMaxLabel": (10127, 2, (3, 0), (), "Pref_DBCacheMaxLabel", None),
		"Pref_DBCacheMaxMemoryPct": (10126, 2, (3, 0), (), "Pref_DBCacheMaxMemoryPct", None),
		"Pref_DBLowDiskWarning": (10129, 2, (3, 0), (), "Pref_DBLowDiskWarning", None),
		"Pref_DBScratch": (10080, 2, (8, 0), (), "Pref_DBScratch", None),
		"Pref_DBUndoLevels": (10128, 2, (3, 0), (), "Pref_DBUndoLevels", None),
		"Pref_DL_DecimalSeparator": (10677, 2, (3, 0), (), "Pref_DL_DecimalSeparator", None),
		"Pref_DL_DigitGroupFlag": (10707, 2, (11, 0), (), "Pref_DL_DigitGroupFlag", None),
		"Pref_DL_DigitGroupOption": (10679, 2, (3, 0), (), "Pref_DL_DigitGroupOption", None),
		"Pref_DL_DigitGroupSeparator": (10678, 2, (3, 0), (), "Pref_DL_DigitGroupSeparator", None),
		"Pref_DL_ExponentChar": (10680, 2, (3, 0), (), "Pref_DL_ExponentChar", None),
		"Pref_DL_ForcePlusSign": (10683, 2, (11, 0), (), "Pref_DL_ForcePlusSign", None),
		"Pref_DL_ForceSingleZero": (10682, 2, (11, 0), (), "Pref_DL_ForceSingleZero", None),
		"Pref_DL_NegativeBraces": (10684, 2, (11, 0), (), "Pref_DL_NegativeBraces", None),
		"Pref_DL_TrailingZeros": (10681, 2, (11, 0), (), "Pref_DL_TrailingZeros", None),
		"Pref_DL_UseIntlAll": (10710, 2, (11, 0), (), "Pref_DL_UseIntlAll", None),
		"Pref_DO_BaseExponent": (10697, 2, (3, 0), (), "Pref_DO_BaseExponent", None),
		"Pref_DO_BeforeDecimalSeparator": (10688, 2, (3, 0), (), "Pref_DO_BeforeDecimalSeparator", None),
		"Pref_DO_DecimalPlaces": (10695, 2, (3, 0), (), "Pref_DO_DecimalPlaces", None),
		"Pref_DO_Exponent": (10699, 2, (11, 0), (), "Pref_DO_Exponent", None),
		"Pref_DO_ExponentDigits": (10691, 2, (3, 0), (), "Pref_DO_ExponentDigits", None),
		"Pref_DO_LeadingZeros": (10693, 2, (3, 0), (), "Pref_DO_LeadingZeros", None),
		"Pref_DO_MaxDigits": (10696, 2, (3, 0), (), "Pref_DO_MaxDigits", None),
		"Pref_DO_MinimumExponentSize": (10689, 2, (3, 0), (), "Pref_DO_MinimumExponentSize", None),
		"Pref_DO_Option": (10685, 2, (3, 0), (), "Pref_DO_Option", None),
		"Pref_DO_OriginalDigits": (10698, 2, (3, 0), (), "Pref_DO_OriginalDigits", None),
		"Pref_DO_RoundToZero": (10686, 2, (11, 0), (), "Pref_DO_RoundToZero", None),
		"Pref_DO_RoundToZeroValue": (10687, 2, (5, 0), (), "Pref_DO_RoundToZeroValue", None),
		"Pref_DO_SigFigs": (10692, 2, (3, 0), (), "Pref_DO_SigFigs", None),
		"Pref_DO_TrailingZeros": (10694, 2, (3, 0), (), "Pref_DO_TrailingZeros", None),
		"Pref_DefContourPalette": (10090, 2, (3, 0), (), "Pref_DefContourPalette", None),
		"Pref_DefaultFreebodyReverse": (10651, 2, (11, 0), (), "Pref_DefaultFreebodyReverse", None),
		"Pref_DeleteRdScratchLdSets": (10392, 2, (11, 0), (), "Pref_DeleteRdScratchLdSets", None),
		"Pref_DeleteScratchFile": (10109, 2, (11, 0), (), "Pref_DeleteScratchFile", None),
		"Pref_DeltaAngle": (10155, 2, (5, 0), (), "Pref_DeltaAngle", None),
		"Pref_ElemQualAltTaper": (10468, 2, (11, 0), (), "Pref_ElemQualAltTaper", None),
		"Pref_ElemQualAltTaperVal": (10479, 2, (5, 0), (), "Pref_ElemQualAltTaperVal", None),
		"Pref_ElemQualAspectRatio": (10466, 2, (11, 0), (), "Pref_ElemQualAspectRatio", None),
		"Pref_ElemQualAspectRatioVal": (10477, 2, (5, 0), (), "Pref_ElemQualAspectRatioVal", None),
		"Pref_ElemQualCombined": (10475, 2, (11, 0), (), "Pref_ElemQualCombined", None),
		"Pref_ElemQualCombinedVal": (10486, 2, (5, 0), (), "Pref_ElemQualCombinedVal", None),
		"Pref_ElemQualExplicitTime": (10476, 2, (11, 0), (), "Pref_ElemQualExplicitTime", None),
		"Pref_ElemQualExplicitTimeVal": (10487, 2, (5, 0), (), "Pref_ElemQualExplicitTimeVal", None),
		"Pref_ElemQualHexAspectRatio": (10562, 2, (11, 0), (), "Pref_ElemQualHexAspectRatio", None),
		"Pref_ElemQualHexAspectRatioVal": (10584, 2, (5, 0), (), "Pref_ElemQualHexAspectRatioVal", None),
		"Pref_ElemQualHexDetJ": (10564, 2, (11, 0), (), "Pref_ElemQualHexDetJ", None),
		"Pref_ElemQualHexDetJVal": (10586, 2, (5, 0), (), "Pref_ElemQualHexDetJVal", None),
		"Pref_ElemQualHexEPIA": (10636, 2, (11, 0), (), "Pref_ElemQualHexEPIA", None),
		"Pref_ElemQualHexEPIAVal": (10640, 2, (5, 0), (), "Pref_ElemQualHexEPIAVal", None),
		"Pref_ElemQualHexEPLR": (10563, 2, (11, 0), (), "Pref_ElemQualHexEPLR", None),
		"Pref_ElemQualHexEPLRVal": (10585, 2, (5, 0), (), "Pref_ElemQualHexEPLRVal", None),
		"Pref_ElemQualHexWarp": (10565, 2, (11, 0), (), "Pref_ElemQualHexWarp", None),
		"Pref_ElemQualHexWarpVal": (10587, 2, (5, 0), (), "Pref_ElemQualHexWarpVal", None),
		"Pref_ElemQualIntAngles": (10469, 2, (11, 0), (), "Pref_ElemQualIntAngles", None),
		"Pref_ElemQualIntAnglesVal": (10480, 2, (5, 0), (), "Pref_ElemQualIntAnglesVal", None),
		"Pref_ElemQualJacobian": (10474, 2, (11, 0), (), "Pref_ElemQualJacobian", None),
		"Pref_ElemQualJacobianVal": (10485, 2, (5, 0), (), "Pref_ElemQualJacobianVal", None),
		"Pref_ElemQualNastranWarping": (10472, 2, (11, 0), (), "Pref_ElemQualNastranWarping", None),
		"Pref_ElemQualNastranWarpingVal": (10483, 2, (5, 0), (), "Pref_ElemQualNastranWarpingVal", None),
		"Pref_ElemQualPenAspectRatio": (10566, 2, (11, 0), (), "Pref_ElemQualPenAspectRatio", None),
		"Pref_ElemQualPenAspectRatioVal": (10588, 2, (5, 0), (), "Pref_ElemQualPenAspectRatioVal", None),
		"Pref_ElemQualPenDetJ": (10568, 2, (11, 0), (), "Pref_ElemQualPenDetJ", None),
		"Pref_ElemQualPenDetJVal": (10590, 2, (5, 0), (), "Pref_ElemQualPenDetJVal", None),
		"Pref_ElemQualPenEPIA": (10637, 2, (11, 0), (), "Pref_ElemQualPenEPIA", None),
		"Pref_ElemQualPenEPIAVal": (10641, 2, (5, 0), (), "Pref_ElemQualPenEPIAVal", None),
		"Pref_ElemQualPenEPLR": (10567, 2, (11, 0), (), "Pref_ElemQualPenEPLR", None),
		"Pref_ElemQualPenEPLRVal": (10589, 2, (5, 0), (), "Pref_ElemQualPenEPLRVal", None),
		"Pref_ElemQualPenWarp": (10569, 2, (11, 0), (), "Pref_ElemQualPenWarp", None),
		"Pref_ElemQualPenWarpVal": (10591, 2, (5, 0), (), "Pref_ElemQualPenWarpVal", None),
		"Pref_ElemQualPyrAspectRatio": (10570, 2, (11, 0), (), "Pref_ElemQualPyrAspectRatio", None),
		"Pref_ElemQualPyrAspectRatioVal": (10592, 2, (5, 0), (), "Pref_ElemQualPyrAspectRatioVal", None),
		"Pref_ElemQualPyrDetJ": (10573, 2, (11, 0), (), "Pref_ElemQualPyrDetJ", None),
		"Pref_ElemQualPyrDetJVal": (10595, 2, (5, 0), (), "Pref_ElemQualPyrDetJVal", None),
		"Pref_ElemQualPyrEPIA": (10638, 2, (11, 0), (), "Pref_ElemQualPyrEPIA", None),
		"Pref_ElemQualPyrEPIAVal": (10642, 2, (5, 0), (), "Pref_ElemQualPyrEPIAVal", None),
		"Pref_ElemQualPyrEPLR": (10571, 2, (11, 0), (), "Pref_ElemQualPyrEPLR", None),
		"Pref_ElemQualPyrEPLRVal": (10593, 2, (5, 0), (), "Pref_ElemQualPyrEPLRVal", None),
		"Pref_ElemQualPyrWarp": (10572, 2, (11, 0), (), "Pref_ElemQualPyrWarp", None),
		"Pref_ElemQualPyrWarpVal": (10594, 2, (5, 0), (), "Pref_ElemQualPyrWarpVal", None),
		"Pref_ElemQualQuadAR": (10611, 2, (11, 0), (), "Pref_ElemQualQuadAR", None),
		"Pref_ElemQualQuadARVal": (10614, 2, (5, 0), (), "Pref_ElemQualQuadARVal", None),
		"Pref_ElemQualQuadIAMax": (10556, 2, (11, 0), (), "Pref_ElemQualQuadIAMax", None),
		"Pref_ElemQualQuadIAMaxVal": (10578, 2, (5, 0), (), "Pref_ElemQualQuadIAMaxVal", None),
		"Pref_ElemQualQuadIAMin": (10555, 2, (11, 0), (), "Pref_ElemQualQuadIAMin", None),
		"Pref_ElemQualQuadIAMinVal": (10577, 2, (5, 0), (), "Pref_ElemQualQuadIAMinVal", None),
		"Pref_ElemQualQuadSkew": (10552, 2, (11, 0), (), "Pref_ElemQualQuadSkew", None),
		"Pref_ElemQualQuadSkewVal": (10574, 2, (5, 0), (), "Pref_ElemQualQuadSkewVal", None),
		"Pref_ElemQualQuadTaper": (10553, 2, (11, 0), (), "Pref_ElemQualQuadTaper", None),
		"Pref_ElemQualQuadTaperVal": (10575, 2, (5, 0), (), "Pref_ElemQualQuadTaperVal", None),
		"Pref_ElemQualQuadWarp": (10554, 2, (11, 0), (), "Pref_ElemQualQuadWarp", None),
		"Pref_ElemQualQuadWarpVal": (10576, 2, (5, 0), (), "Pref_ElemQualQuadWarpVal", None),
		"Pref_ElemQualSkew": (10470, 2, (11, 0), (), "Pref_ElemQualSkew", None),
		"Pref_ElemQualSkewVal": (10481, 2, (5, 0), (), "Pref_ElemQualSkewVal", None),
		"Pref_ElemQualTaper": (10467, 2, (11, 0), (), "Pref_ElemQualTaper", None),
		"Pref_ElemQualTaperVal": (10478, 2, (5, 0), (), "Pref_ElemQualTaperVal", None),
		"Pref_ElemQualTetAspectRatio": (10559, 2, (11, 0), (), "Pref_ElemQualTetAspectRatio", None),
		"Pref_ElemQualTetAspectRatioVal": (10581, 2, (5, 0), (), "Pref_ElemQualTetAspectRatioVal", None),
		"Pref_ElemQualTetCollapse": (10473, 2, (11, 0), (), "Pref_ElemQualTetCollapse", None),
		"Pref_ElemQualTetCollapseVal": (10484, 2, (5, 0), (), "Pref_ElemQualTetCollapseVal", None),
		"Pref_ElemQualTetDetJ": (10561, 2, (11, 0), (), "Pref_ElemQualTetDetJ", None),
		"Pref_ElemQualTetDetJVal": (10583, 2, (5, 0), (), "Pref_ElemQualTetDetJVal", None),
		"Pref_ElemQualTetEPIA": (10635, 2, (11, 0), (), "Pref_ElemQualTetEPIA", None),
		"Pref_ElemQualTetEPIAVal": (10639, 2, (5, 0), (), "Pref_ElemQualTetEPIAVal", None),
		"Pref_ElemQualTetEPLR": (10560, 2, (11, 0), (), "Pref_ElemQualTetEPLR", None),
		"Pref_ElemQualTetEPLRVal": (10582, 2, (5, 0), (), "Pref_ElemQualTetEPLRVal", None),
		"Pref_ElemQualTriaAR": (10612, 2, (11, 0), (), "Pref_ElemQualTriaAR", None),
		"Pref_ElemQualTriaARVal": (10615, 2, (5, 0), (), "Pref_ElemQualTriaARVal", None),
		"Pref_ElemQualTriaEPLR": (10613, 2, (11, 0), (), "Pref_ElemQualTriaEPLR", None),
		"Pref_ElemQualTriaEPLRVal": (10616, 2, (5, 0), (), "Pref_ElemQualTriaEPLRVal", None),
		"Pref_ElemQualTriaIAMax": (10558, 2, (11, 0), (), "Pref_ElemQualTriaIAMax", None),
		"Pref_ElemQualTriaIAMaxVal": (10580, 2, (5, 0), (), "Pref_ElemQualTriaIAMaxVal", None),
		"Pref_ElemQualTriaSkew": (10557, 2, (11, 0), (), "Pref_ElemQualTriaSkew", None),
		"Pref_ElemQualTriaSkewVal": (10579, 2, (5, 0), (), "Pref_ElemQualTriaSkewVal", None),
		"Pref_ElemQualWarping": (10471, 2, (11, 0), (), "Pref_ElemQualWarping", None),
		"Pref_ElemQualWarpingVal": (10482, 2, (5, 0), (), "Pref_ElemQualWarpingVal", None),
		"Pref_EnableLegacyAnsysInterface": (10644, 2, (11, 0), (), "Pref_EnableLegacyAnsysInterface", None),
		"Pref_Enable_Aeroelasticity": (10436, 2, (11, 0), (), "Pref_Enable_Aeroelasticity", None),
		"Pref_FBDefDispMode": (10607, 2, (3, 0), (), "Pref_FBDefDispMode", None),
		"Pref_FastHoleMeshing": (10643, 2, (3, 0), (), "Pref_FastHoleMeshing", None),
		"Pref_FastOutputDelete": (10429, 2, (3, 0), (), "Pref_FastOutputDelete", None),
		"Pref_FastTriMesh": (10112, 2, (11, 0), (), "Pref_FastTriMesh", None),
		"Pref_FileRefCheck": (10339, 2, (11, 0), (), "Pref_FileRefCheck", None),
		"Pref_FileRefGeometry": (10340, 2, (11, 0), (), "Pref_FileRefGeometry", None),
		"Pref_FileRefModel": (10341, 2, (11, 0), (), "Pref_FileRefModel", None),
		"Pref_FileRefResults": (10342, 2, (11, 0), (), "Pref_FileRefResults", None),
		"Pref_Filter_ABAQUS": (10734, 2, (11, 0), (), "Pref_Filter_ABAQUS", None),
		"Pref_Filter_ANSYS": (10735, 2, (11, 0), (), "Pref_Filter_ANSYS", None),
		"Pref_Filter_Analysis": (10752, 2, (11, 0), (), "Pref_Filter_Analysis", None),
		"Pref_Filter_Autodesk_Nastran": (10733, 2, (11, 0), (), "Pref_Filter_Autodesk_Nastran", None),
		"Pref_Filter_DYNA": (10736, 2, (11, 0), (), "Pref_Filter_DYNA", None),
		"Pref_Filter_MARC": (10738, 2, (11, 0), (), "Pref_Filter_MARC", None),
		"Pref_Filter_MSC_Nastran": (10732, 2, (11, 0), (), "Pref_Filter_MSC_Nastran", None),
		"Pref_Filter_SC_Nastran_ADVNL": (10730, 2, (11, 0), (), "Pref_Filter_SC_Nastran_ADVNL", None),
		"Pref_Filter_SC_Nastran_ADVNLE": (10731, 2, (11, 0), (), "Pref_Filter_SC_Nastran_ADVNLE", None),
		"Pref_Filter_SC_Nastran_Linear": (10727, 2, (11, 0), (), "Pref_Filter_SC_Nastran_Linear", None),
		"Pref_Filter_SC_Nastran_MSNL": (10728, 2, (11, 0), (), "Pref_Filter_SC_Nastran_MSNL", None),
		"Pref_Filter_SC_Nastran_MSNLK": (10729, 2, (11, 0), (), "Pref_Filter_SC_Nastran_MSNLK", None),
		"Pref_Filter_SINDA": (10737, 2, (11, 0), (), "Pref_Filter_SINDA", None),
		"Pref_GIFAnimationDelay": (10399, 2, (3, 0), (), "Pref_GIFAnimationDelay", None),
		"Pref_GIFColorOpt": (10398, 2, (3, 0), (), "Pref_GIFColorOpt", None),
		"Pref_GIFFrameSeries": (10400, 2, (11, 0), (), "Pref_GIFFrameSeries", None),
		"Pref_GIFOptimized": (10444, 2, (11, 0), (), "Pref_GIFOptimized", None),
		"Pref_GeomEngine": (10132, 2, (3, 0), (), "Pref_GeomEngine", None),
		"Pref_GeomLoadEdgeFactor": (10157, 2, (5, 0), (), "Pref_GeomLoadEdgeFactor", None),
		"Pref_GeomLoadQuadFactor": (10158, 2, (5, 0), (), "Pref_GeomLoadQuadFactor", None),
		"Pref_GeomLoadTriFactor": (10159, 2, (5, 0), (), "Pref_GeomLoadTriFactor", None),
		"Pref_GeomLogFile": (10115, 2, (11, 0), (), "Pref_GeomLogFile", None),
		"Pref_GeomOptimize": (10532, 2, (11, 0), (), "Pref_GeomOptimize", None),
		"Pref_GeomScaleAdjust": (10334, 2, (11, 0), (), "Pref_GeomScaleAdjust", None),
		"Pref_GeometryBooleanTolerance": (10671, 2, (5, 0), (), "Pref_GeometryBooleanTolerance", None),
		"Pref_GeometryScale": (10156, 2, (5, 0), (), "Pref_GeometryScale", None),
		"Pref_GlobalLanguage": (10724, 2, (3, 0), (), "Pref_GlobalLanguage", None),
		"Pref_GlobalUIScaling": (10725, 2, (3, 0), (), "Pref_GlobalUIScaling", None),
		"Pref_GraphicsFont": (10672, 2, (8, 0), (), "Pref_GraphicsFont", None),
		"Pref_GraphicsFontSize": (10673, 2, (5, 0), (), "Pref_GraphicsFontSize", None),
		"Pref_GroupIncludeFiles": (10430, 2, (11, 0), (), "Pref_GroupIncludeFiles", None),
		"Pref_ImproveSinglePrecision": (10394, 2, (11, 0), (), "Pref_ImproveSinglePrecision", None),
		"Pref_InterfaceStyle": (10135, 2, (3, 0), (), "Pref_InterfaceStyle", None),
		"Pref_JTFileVersion": (10443, 2, (3, 0), (), "Pref_JTFileVersion", None),
		"Pref_KeepSolverWindow": (10123, 2, (11, 0), (), "Pref_KeepSolverWindow", None),
		"Pref_LegacyXYPlotting": (10524, 2, (11, 0), (), "Pref_LegacyXYPlotting", None),
		"Pref_LengthBasedMeshSize": (10081, 2, (3, 0), (), "Pref_LengthBasedMeshSize", None),
		"Pref_LibAnalysis": (10064, 2, (8, 0), (), "Pref_LibAnalysis", None),
		"Pref_LibChart": (10525, 2, (8, 0), (), "Pref_LibChart", None),
		"Pref_LibComputedResultsVectors": (10764, 2, (8, 0), (), "Pref_LibComputedResultsVectors", None),
		"Pref_LibComputedVectorNumber": (10765, 2, (3, 0), (), "Pref_LibComputedVectorNumber", None),
		"Pref_LibConnectionProp": (10346, 2, (8, 0), (), "Pref_LibConnectionProp", None),
		"Pref_LibContPal": (10069, 2, (8, 0), (), "Pref_LibContPal", None),
		"Pref_LibFunction": (10070, 2, (8, 0), (), "Pref_LibFunction", None),
		"Pref_LibLayup": (10462, 2, (8, 0), (), "Pref_LibLayup", None),
		"Pref_LibMatl": (10071, 2, (8, 0), (), "Pref_LibMatl", None),
		"Pref_LibMatlDef": (10072, 2, (8, 0), (), "Pref_LibMatlDef", None),
		"Pref_LibPalette": (10074, 2, (8, 0), (), "Pref_LibPalette", None),
		"Pref_LibProp": (10065, 2, (8, 0), (), "Pref_LibProp", None),
		"Pref_LibReport": (10066, 2, (8, 0), (), "Pref_LibReport", None),
		"Pref_LibView": (10073, 2, (8, 0), (), "Pref_LibView", None),
		"Pref_LibViewNumber": (10141, 2, (3, 0), (), "Pref_LibViewNumber", None),
		"Pref_ListingFont": (10316, 2, (8, 0), (), "Pref_ListingFont", None),
		"Pref_LoadModifyRotate": (10138, 2, (11, 0), (), "Pref_LoadModifyRotate", None),
		"Pref_MemoryMappedFiles": (10513, 2, (11, 0), (), "Pref_MemoryMappedFiles", None),
		"Pref_MeshInMemory": (10111, 2, (11, 0), (), "Pref_MeshInMemory", None),
		"Pref_MessageFont": (10315, 2, (8, 0), (), "Pref_MessageFont", None),
		"Pref_MetafileToClip": (10093, 2, (11, 0), (), "Pref_MetafileToClip", None),
		"Pref_MiddleMouseButtonOK": (10531, 2, (11, 0), (), "Pref_MiddleMouseButtonOK", None),
		"Pref_MinimizeDuringSolve": (10124, 2, (11, 0), (), "Pref_MinimizeDuringSolve", None),
		"Pref_ModelInfoMaxEntity": (10335, 2, (3, 0), (), "Pref_ModelInfoMaxEntity", None),
		"Pref_ModelThumbnail": (10666, 2, (11, 0), (), "Pref_ModelThumbnail", None),
		"Pref_ModelTooltip": (10667, 2, (11, 0), (), "Pref_ModelTooltip", None),
		"Pref_MsgWndBackColor": (10145, 2, (3, 0), (), "Pref_MsgWndBackColor", None),
		"Pref_MsgWndCmdBold": (10321, 2, (11, 0), (), "Pref_MsgWndCmdBold", None),
		"Pref_MsgWndCmdColor": (10319, 2, (3, 0), (), "Pref_MsgWndCmdColor", None),
		"Pref_MsgWndErrorBold": (10324, 2, (11, 0), (), "Pref_MsgWndErrorBold", None),
		"Pref_MsgWndErrorColor": (10146, 2, (3, 0), (), "Pref_MsgWndErrorColor", None),
		"Pref_MsgWndFont": (10082, 2, (8, 0), (), "Pref_MsgWndFont", None),
		"Pref_MsgWndFontSize": (10143, 2, (5, 0), (), "Pref_MsgWndFontSize", None),
		"Pref_MsgWndHighBold": (10322, 2, (11, 0), (), "Pref_MsgWndHighBold", None),
		"Pref_MsgWndHighColor": (10147, 2, (3, 0), (), "Pref_MsgWndHighColor", None),
		"Pref_MsgWndRepeatedErrors": (10427, 2, (3, 0), (), "Pref_MsgWndRepeatedErrors", None),
		"Pref_MsgWndTextBold": (10320, 2, (11, 0), (), "Pref_MsgWndTextBold", None),
		"Pref_MsgWndTextColor": (10148, 2, (3, 0), (), "Pref_MsgWndTextColor", None),
		"Pref_MsgWndWarnBold": (10323, 2, (11, 0), (), "Pref_MsgWndWarnBold", None),
		"Pref_MsgWndWarnColor": (10149, 2, (3, 0), (), "Pref_MsgWndWarnColor", None),
		"Pref_NXNastEntLicenseServer": (10633, 2, (8, 0), (), "Pref_NXNastEntLicenseServer", None),
		"Pref_NasAlternateContinue": (10439, 2, (11, 0), (), "Pref_NasAlternateContinue", None),
		"Pref_NasDballScratch": (10440, 2, (11, 0), (), "Pref_NasDballScratch", None),
		"Pref_NasResTrackRevsion": (10631, 2, (11, 0), (), "Pref_NasResTrackRevsion", None),
		"Pref_NastranMemory": (10104, 2, (3, 0), (), "Pref_NastranMemory", None),
		"Pref_NastranOutputPath": (10106, 2, (8, 0), (), "Pref_NastranOutputPath", None),
		"Pref_NastranOutputTo": (10105, 2, (3, 0), (), "Pref_NastranOutputTo", None),
		"Pref_NastranScratchLocation": (10461, 2, (3, 0), (), "Pref_NastranScratchLocation", None),
		"Pref_NastranWriteAllLdbcSets": (10389, 2, (11, 0), (), "Pref_NastranWriteAllLdbcSets", None),
		"Pref_NetKeyDir": (10083, 2, (8, 0), (), "Pref_NetKeyDir", None),
		"Pref_NeutralDigits": (10136, 2, (3, 0), (), "Pref_NeutralDigits", None),
		"Pref_NeutralVersion": (10160, 2, (5, 0), (), "Pref_NeutralVersion", None),
		"Pref_NewPick": (10739, 2, (11, 0), (), "Pref_NewPick", None),
		"Pref_NonmanifoldBooleans": (10597, 2, (11, 0), (), "Pref_NonmanifoldBooleans", None),
		"Pref_OnlineHelp_Mode": (10759, 2, (3, 0), (), "Pref_OnlineHelp_Mode", None),
		"Pref_OnlineHelp_Path": (10760, 2, (8, 0), (), "Pref_OnlineHelp_Path", None),
		"Pref_OpenMP": (10715, 2, (11, 0), (), "Pref_OpenMP", None),
		"Pref_OpenMPThreads": (10716, 2, (3, 0), (), "Pref_OpenMPThreads", None),
		"Pref_OpenSaveMethod": (10431, 2, (3, 0), (), "Pref_OpenSaveMethod", None),
		"Pref_OrientQuad4ForceOutput": (10500, 2, (3, 0), (), "Pref_OrientQuad4ForceOutput", None),
		"Pref_OrientQuad4StrainOutput": (10499, 2, (3, 0), (), "Pref_OrientQuad4StrainOutput", None),
		"Pref_OrientQuad4StressOutput": (10498, 2, (3, 0), (), "Pref_OrientQuad4StressOutput", None),
		"Pref_OrientQuad8ForceOutput": (10503, 2, (3, 0), (), "Pref_OrientQuad8ForceOutput", None),
		"Pref_OrientQuad8StrainOutput": (10502, 2, (3, 0), (), "Pref_OrientQuad8StrainOutput", None),
		"Pref_OrientQuad8StressOutput": (10501, 2, (3, 0), (), "Pref_OrientQuad8StressOutput", None),
		"Pref_OrientSolidAnisoOutput": (10490, 2, (3, 0), (), "Pref_OrientSolidAnisoOutput", None),
		"Pref_OrientSolidHyperOutput": (10491, 2, (3, 0), (), "Pref_OrientSolidHyperOutput", None),
		"Pref_OrientSolidIsoOutput": (10489, 2, (3, 0), (), "Pref_OrientSolidIsoOutput", None),
		"Pref_OrientTria3ForceOutput": (10494, 2, (3, 0), (), "Pref_OrientTria3ForceOutput", None),
		"Pref_OrientTria3StrainOutput": (10493, 2, (3, 0), (), "Pref_OrientTria3StrainOutput", None),
		"Pref_OrientTria3StressOutput": (10492, 2, (3, 0), (), "Pref_OrientTria3StressOutput", None),
		"Pref_OrientTria6ForceOutput": (10497, 2, (3, 0), (), "Pref_OrientTria6ForceOutput", None),
		"Pref_OrientTria6StrainOutput": (10496, 2, (3, 0), (), "Pref_OrientTria6StrainOutput", None),
		"Pref_OrientTria6StressOutput": (10495, 2, (3, 0), (), "Pref_OrientTria6StressOutput", None),
		"Pref_OutputSetTitles": (10345, 2, (3, 0), (), "Pref_OutputSetTitles", None),
		"Pref_PaneAltDockSymbols": (10428, 2, (11, 0), (), "Pref_PaneAltDockSymbols", None),
		"Pref_PaneCaptionsOnTop": (10395, 2, (11, 0), (), "Pref_PaneCaptionsOnTop", None),
		"Pref_PerformanceGraphics": (10536, 2, (11, 0), (), "Pref_PerformanceGraphics", None),
		"Pref_PickAllInside": (10103, 2, (11, 0), (), "Pref_PickAllInside", None),
		"Pref_PickMethod": (10448, 2, (3, 0), (), "Pref_PickMethod", None),
		"Pref_PictureCopyTextForXY": (10087, 2, (11, 0), (), "Pref_PictureCopyTextForXY", None),
		"Pref_PictureFormat": (10396, 2, (3, 0), (), "Pref_PictureFormat", None),
		"Pref_PlaneWheelFactor": (10530, 2, (5, 0), (), "Pref_PlaneWheelFactor", None),
		"Pref_PreV10SurfaceMesh": (10447, 2, (11, 0), (), "Pref_PreV10SurfaceMesh", None),
		"Pref_PreserveIncludes": (10512, 2, (11, 0), (), "Pref_PreserveIncludes", None),
		"Pref_PreserveNextID": (10460, 2, (11, 0), (), "Pref_PreserveNextID", None),
		"Pref_ProgramFont": (10317, 2, (8, 0), (), "Pref_ProgramFont", None),
		"Pref_ProgramFontSize": (10318, 2, (5, 0), (), "Pref_ProgramFontSize", None),
		"Pref_ReadComments": (10117, 2, (11, 0), (), "Pref_ReadComments", None),
		"Pref_ReadDirCos": (10121, 2, (11, 0), (), "Pref_ReadDirCos", None),
		"Pref_ReadTabSize": (10384, 2, (3, 0), (), "Pref_ReadTabSize", None),
		"Pref_RecentlyUsedFiles": (10140, 2, (3, 0), (), "Pref_RecentlyUsedFiles", None),
		"Pref_RememberDialogPos": (10337, 2, (11, 0), (), "Pref_RememberDialogPos", None),
		"Pref_RenderAutoRegen": (10330, 2, (11, 0), (), "Pref_RenderAutoRegen", None),
		"Pref_RenderBeamEdges": (10166, 2, (11, 0), (), "Pref_RenderBeamEdges", None),
		"Pref_RenderBestAvailable": (10190, 2, (11, 0), (), "Pref_RenderBestAvailable", None),
		"Pref_RenderBitBltDelay": (10332, 2, (3, 0), (), "Pref_RenderBitBltDelay", None),
		"Pref_RenderBitmapAlignment": (10167, 2, (3, 0), (), "Pref_RenderBitmapAlignment", None),
		"Pref_RenderBlockSize": (10455, 2, (3, 0), (), "Pref_RenderBlockSize", None),
		"Pref_RenderCaptureIconified": (10515, 2, (11, 0), (), "Pref_RenderCaptureIconified", None),
		"Pref_RenderCtrlGGroupEvaluate": (10721, 2, (11, 0), (), "Pref_RenderCtrlGGroupEvaluate", None),
		"Pref_RenderDebugAllTime": (10453, 2, (11, 0), (), "Pref_RenderDebugAllTime", None),
		"Pref_RenderDebugElapsedTime": (10452, 2, (11, 0), (), "Pref_RenderDebugElapsedTime", None),
		"Pref_RenderDebugFrameRate": (10510, 2, (11, 0), (), "Pref_RenderDebugFrameRate", None),
		"Pref_RenderDebugOGLErrors": (10454, 2, (11, 0), (), "Pref_RenderDebugOGLErrors", None),
		"Pref_RenderDebugOGLErrors2": (10771, 2, (3, 0), (), "Pref_RenderDebugOGLErrors2", None),
		"Pref_RenderDialogRefresh": (10456, 2, (11, 0), (), "Pref_RenderDialogRefresh", None),
		"Pref_RenderDisableAbort": (10722, 2, (11, 0), (), "Pref_RenderDisableAbort", None),
		"Pref_RenderEdgesAsLines": (10329, 2, (11, 0), (), "Pref_RenderEdgesAsLines", None),
		"Pref_RenderFastPick": (10328, 2, (11, 0), (), "Pref_RenderFastPick", None),
		"Pref_RenderFastPickVisible": (10604, 2, (11, 0), (), "Pref_RenderFastPickVisible", None),
		"Pref_RenderHW": (10094, 2, (11, 0), (), "Pref_RenderHW", None),
		"Pref_RenderMaxMagnification": (10550, 2, (5, 0), (), "Pref_RenderMaxMagnification", None),
		"Pref_RenderMaxVBOMB": (10509, 2, (3, 0), (), "Pref_RenderMaxVBOMB", None),
		"Pref_RenderMemoryOpt": (10168, 2, (11, 0), (), "Pref_RenderMemoryOpt", None),
		"Pref_RenderMidside": (10095, 2, (11, 0), (), "Pref_RenderMidside", None),
		"Pref_RenderMinVBOB": (10516, 2, (3, 0), (), "Pref_RenderMinVBOB", None),
		"Pref_RenderMultiModelMem": (10451, 2, (11, 0), (), "Pref_RenderMultiModelMem", None),
		"Pref_RenderPixelFormat": (10169, 2, (3, 0), (), "Pref_RenderPixelFormat", None),
		"Pref_RenderSearchDepth": (10333, 2, (3, 0), (), "Pref_RenderSearchDepth", None),
		"Pref_RenderSmoothLines": (10327, 2, (11, 0), (), "Pref_RenderSmoothLines", None),
		"Pref_RenderTDRProtect": (10177, 2, (3, 0), (), "Pref_RenderTDRProtect", None),
		"Pref_RenderTex2D": (10172, 2, (11, 0), (), "Pref_RenderTex2D", None),
		"Pref_RenderTexAllTri": (10173, 2, (11, 0), (), "Pref_RenderTexAllTri", None),
		"Pref_RenderTexNumber": (10175, 2, (3, 0), (), "Pref_RenderTexNumber", None),
		"Pref_RenderTexSmooth": (10174, 2, (11, 0), (), "Pref_RenderTexSmooth", None),
		"Pref_RenderTiming": (10176, 2, (11, 0), (), "Pref_RenderTiming", None),
		"Pref_RenderTrailingZeroes": (10508, 2, (11, 0), (), "Pref_RenderTrailingZeroes", None),
		"Pref_RenderVBOUsage": (10511, 2, (3, 0), (), "Pref_RenderVBOUsage", None),
		"Pref_RenderVertexArrays": (10331, 2, (3, 0), (), "Pref_RenderVertexArrays", None),
		"Pref_RenderXORPicking": (10450, 2, (11, 0), (), "Pref_RenderXORPicking", None),
		"Pref_RepeatCreate": (10598, 2, (11, 0), (), "Pref_RepeatCreate", None),
		"Pref_RepeateCreate": (10099, 2, (11, 0), (), "Pref_RepeateCreate", None),
		"Pref_ResCopySaveLogoScale": (10423, 2, (5, 0), (), "Pref_ResCopySaveLogoScale", None),
		"Pref_ResCopySaveMethod": (10408, 2, (3, 0), (), "Pref_ResCopySaveMethod", None),
		"Pref_ResCopySaveScale": (10409, 2, (5, 0), (), "Pref_ResCopySaveScale", None),
		"Pref_ResFixedHeight": (10413, 2, (3, 0), (), "Pref_ResFixedHeight", None),
		"Pref_ResFixedWidth": (10412, 2, (3, 0), (), "Pref_ResFixedWidth", None),
		"Pref_ResFontScale": (10535, 2, (5, 0), (), "Pref_ResFontScale", None),
		"Pref_ResPenMethod": (10419, 2, (3, 0), (), "Pref_ResPenMethod", None),
		"Pref_ResPenScale": (10420, 2, (3, 0), (), "Pref_ResPenScale", None),
		"Pref_ResPrintLogoScale": (10422, 2, (5, 0), (), "Pref_ResPrintLogoScale", None),
		"Pref_ResPrintMethod": (10406, 2, (3, 0), (), "Pref_ResPrintMethod", None),
		"Pref_ResPrintScale": (10407, 2, (5, 0), (), "Pref_ResPrintScale", None),
		"Pref_ResScaleWithHeight": (10411, 2, (3, 0), (), "Pref_ResScaleWithHeight", None),
		"Pref_ResScaleWithWidth": (10410, 2, (3, 0), (), "Pref_ResScaleWithWidth", None),
		"Pref_ResScreenLogoScale": (10421, 2, (5, 0), (), "Pref_ResScreenLogoScale", None),
		"Pref_ResetNextID": (10617, 2, (11, 0), (), "Pref_ResetNextID", None),
		"Pref_ResultStudyTitle": (10541, 2, (3, 0), (), "Pref_ResultStudyTitle", None),
		"Pref_ReverseMouseWheel": (10301, 2, (11, 0), (), "Pref_ReverseMouseWheel", None),
		"Pref_ReversePanZoom": (10302, 2, (11, 0), (), "Pref_ReversePanZoom", None),
		"Pref_RotateAroundCursor": (10632, 2, (11, 0), (), "Pref_RotateAroundCursor", None),
		"Pref_RunProgNewModels": (10110, 2, (11, 0), (), "Pref_RunProgNewModels", None),
		"Pref_SC3DResultsDest": (10755, 2, (11, 0), (), "Pref_SC3DResultsDest", None),
		"Pref_SaveTeamcenterInfo": (10768, 2, (11, 0), (), "Pref_SaveTeamcenterInfo", None),
		"Pref_ScrollBackLines": (10150, 2, (3, 0), (), "Pref_ScrollBackLines", None),
		"Pref_SelectionToolsPath": (10761, 2, (8, 0), (), "Pref_SelectionToolsPath", None),
		"Pref_SharedLibPath": (10669, 2, (8, 0), (), "Pref_SharedLibPath", None),
		"Pref_Show0To360Angles": (10529, 2, (11, 0), (), "Pref_Show0To360Angles", None),
		"Pref_ShowAutoscale": (10648, 2, (11, 0), (), "Pref_ShowAutoscale", None),
		"Pref_ShowColor": (10488, 2, (3, 0), (), "Pref_ShowColor", None),
		"Pref_ShowLabels": (10458, 2, (11, 0), (), "Pref_ShowLabels", None),
		"Pref_ShowMode": (10457, 2, (3, 0), (), "Pref_ShowMode", None),
		"Pref_ShowNormals": (10459, 2, (11, 0), (), "Pref_ShowNormals", None),
		"Pref_SkipDMIGEntries": (10706, 2, (11, 0), (), "Pref_SkipDMIGEntries", None),
		"Pref_SnapTo": (10549, 2, (3, 0), (), "Pref_SnapTo", None),
		"Pref_SolAbaqusCmd": (10628, 2, (8, 0), (), "Pref_SolAbaqusCmd", None),
		"Pref_SolAbaqusProgram": (10622, 2, (8, 0), (), "Pref_SolAbaqusProgram", None),
		"Pref_SolAnsysCmd": (10627, 2, (8, 0), (), "Pref_SolAnsysCmd", None),
		"Pref_SolAnsysProgram": (10621, 2, (8, 0), (), "Pref_SolAnsysProgram", None),
		"Pref_SolEchoCmd": (10630, 2, (11, 0), (), "Pref_SolEchoCmd", None),
		"Pref_SolLSDynaCmd": (10629, 2, (8, 0), (), "Pref_SolLSDynaCmd", None),
		"Pref_SolLSDynaProgram": (10623, 2, (8, 0), (), "Pref_SolLSDynaProgram", None),
		"Pref_SolMSCNastCmd": (10625, 2, (8, 0), (), "Pref_SolMSCNastCmd", None),
		"Pref_SolMSCNastProgram": (10619, 2, (8, 0), (), "Pref_SolMSCNastProgram", None),
		"Pref_SolNEINastCmd": (10626, 2, (8, 0), (), "Pref_SolNEINastCmd", None),
		"Pref_SolNEINastProgram": (10620, 2, (8, 0), (), "Pref_SolNEINastProgram", None),
		"Pref_SolNXNastCmd": (10624, 2, (8, 0), (), "Pref_SolNXNastCmd", None),
		"Pref_SolNXNastProgram": (10618, 2, (8, 0), (), "Pref_SolNXNastProgram", None),
		"Pref_SolverMemory": (10137, 2, (3, 0), (), "Pref_SolverMemory", None),
		"Pref_SpaceballDebug": (10465, 2, (11, 0), (), "Pref_SpaceballDebug", None),
		"Pref_SpaceballSensitivity": (10464, 2, (3, 0), (), "Pref_SpaceballSensitivity", None),
		"Pref_StartupProg": (10078, 2, (8, 0), (), "Pref_StartupProg", None),
		"Pref_StudyAppendFemapTitles": (10551, 2, (11, 0), (), "Pref_StudyAppendFemapTitles", None),
		"Pref_SuppressScreenEntities": (10674, 2, (11, 0), (), "Pref_SuppressScreenEntities", None),
		"Pref_SynchronizedRotation": (10649, 2, (11, 0), (), "Pref_SynchronizedRotation", None),
		"Pref_TCDownloadDir": (10767, 2, (8, 0), (), "Pref_TCDownloadDir", None),
		"Pref_TabPasteIgnoreDelimeter": (10547, 2, (11, 0), (), "Pref_TabPasteIgnoreDelimeter", None),
		"Pref_TbxAutomesh": (10405, 2, (3, 0), (), "Pref_TbxAutomesh", None),
		"Pref_TbxExpandActive": (10404, 2, (11, 0), (), "Pref_TbxExpandActive", None),
		"Pref_TimedSaveCommands": (10130, 2, (3, 0), (), "Pref_TimedSaveCommands", None),
		"Pref_TimedSaveInterval": (10131, 2, (3, 0), (), "Pref_TimedSaveInterval", None),
		"Pref_TimedSaveNotify": (10113, 2, (11, 0), (), "Pref_TimedSaveNotify", None),
		"Pref_TimedSaveOn": (10114, 2, (11, 0), (), "Pref_TimedSaveOn", None),
		"Pref_TooltipDelay": (10100, 2, (3, 0), (), "Pref_TooltipDelay", None),
		"Pref_TooltipDuration": (10101, 2, (3, 0), (), "Pref_TooltipDuration", None),
		"Pref_TrackMousePick": (10102, 2, (11, 0), (), "Pref_TrackMousePick", None),
		"Pref_UnifiedArchitecture": (10769, 2, (11, 0), (), "Pref_UnifiedArchitecture", None),
		"Pref_UseMSCNastran2004": (10338, 2, (11, 0), (), "Pref_UseMSCNastran2004", None),
		"Pref_UseOldAnalysisInterfaces": (10347, 2, (11, 0), (), "Pref_UseOldAnalysisInterfaces", None),
		"Pref_UseRegionDecimalChar": (10533, 2, (11, 0), (), "Pref_UseRegionDecimalChar", None),
		"Pref_UseSubcaseIdForOutput": (10602, 2, (11, 0), (), "Pref_UseSubcaseIdForOutput", None),
		"Pref_UseVisQ": (10122, 2, (11, 0), (), "Pref_UseVisQ", None),
		"Pref_UserToolsPath": (10596, 2, (8, 0), (), "Pref_UserToolsPath", None),
		"Pref_ViewBkgdBitmap": (10306, 2, (8, 0), (), "Pref_ViewBkgdBitmap", None),
		"Pref_ViewDimetric": (10075, 2, (8, 0), (), "Pref_ViewDimetric", None),
		"Pref_ViewDynamSpeed": (10161, 2, (5, 0), (), "Pref_ViewDynamSpeed", None),
		"Pref_ViewDynamicMode": (10142, 2, (3, 0), (), "Pref_ViewDynamicMode", None),
		"Pref_ViewIsometric": (10076, 2, (8, 0), (), "Pref_ViewIsometric", None),
		"Pref_ViewLogo": (10307, 2, (8, 0), (), "Pref_ViewLogo", None),
		"Pref_ViewLogoScreenRes": (10305, 2, (11, 0), (), "Pref_ViewLogoScreenRes", None),
		"Pref_ViewLogoTransparent": (10776, 2, (11, 0), (), "Pref_ViewLogoTransparent", None),
		"Pref_ViewPostDynamicMaxMin": (10521, 2, (11, 0), (), "Pref_ViewPostDynamicMaxMin", None),
		"Pref_ViewTrimetric": (10077, 2, (8, 0), (), "Pref_ViewTrimetric", None),
		"Pref_WorkplaneNotVisible": (10089, 2, (11, 0), (), "Pref_WorkplaneNotVisible", None),
		"Pref_WriteComments": (10118, 2, (11, 0), (), "Pref_WriteComments", None),
		"Pref_WtmassFactor": (10162, 2, (5, 0), (), "Pref_WtmassFactor", None),
		"Pref_ZoomAroundCursor": (10601, 2, (11, 0), (), "Pref_ZoomAroundCursor", None),
		"Pref_nastran_param_ogeom": (10756, 2, (11, 0), (), "Pref_nastran_param_ogeom", None),
		"Print_Copies": (10250, 2, (3, 0), (), "Print_Copies", None),
		"ScratchName": (10259, 2, (8, 0), (), "ScratchName", None),
		"SelectOutputSetsFromStudies": (10711, 2, (11, 0), (), "SelectOutputSetsFromStudies", None),
		"SerialNumber": (10262, 2, (8, 0), (), "SerialNumber", None),
		"SolidAllowNonManifold": (10539, 2, (11, 0), (), "SolidAllowNonManifold", None),
		"Solid_UpdateActive": (10252, 2, (11, 0), (), "Solid_UpdateActive", None),
		"Solid_UpdateDelete": (10253, 2, (11, 0), (), "Solid_UpdateDelete", None),
		"Solid_UpdateMaterialData": (10417, 2, (11, 0), (), "Solid_UpdateMaterialData", None),
		"Solid_UpdateResizeMode": (10254, 2, (3, 0), (), "Solid_UpdateResizeMode", None),
		"Solid_UpdateResizeTol": (10255, 2, (5, 0), (), "Solid_UpdateResizeTol", None),
		"Solid_UpdateUseParasolidIdent": (10418, 2, (11, 0), (), "Solid_UpdateUseParasolidIdent", None),
		"Tool_CursorSingle": (10247, 2, (11, 0), (), "Tool_CursorSingle", None),
		"Tool_MergeTolerance": (10249, 2, (5, 0), (), "Tool_MergeTolerance", None),
		"Tool_MergeToleranceAuto": (10251, 2, (11, 0), (), "Tool_MergeToleranceAuto", None),
		"UndoGrayed": (10654, 2, (11, 0), (), "UndoGrayed", None),
		"VectorDialogMethod": (10366, 2, (3, 0), (), "VectorDialogMethod", None),
		# Property 'feAeroPanel' is an object of type 'IAeroPanel'
		"feAeroPanel": (10433, 2, (9, 0), (), "feAeroPanel", '{923D4FF7-4C93-4DAA-8223-F275CC54C69F}'),
		# Property 'feAeroProp' is an object of type 'IAeroProp'
		"feAeroProp": (10434, 2, (9, 0), (), "feAeroProp", '{6C3881EB-8C68-4807-B69A-4430737F37B1}'),
		# Property 'feAeroSpline' is an object of type 'IAeroSpline'
		"feAeroSpline": (10435, 2, (9, 0), (), "feAeroSpline", '{39B680B2-1AD7-44BB-8C89-A699F3B191AE}'),
		# Property 'feAeroSurf' is an object of type 'IAeroSurf'
		"feAeroSurf": (10442, 2, (9, 0), (), "feAeroSurf", '{61CFF16F-CC7E-40BB-A20F-B1F065C36B29}'),
		# Property 'feAnalysisCase' is an object of type 'IAnalysisCase'
		"feAnalysisCase": (10036, 2, (9, 0), (), "feAnalysisCase", '{AB06C174-0E7E-11D5-9471-001083FFF11C}'),
		# Property 'feAnalysisMgr' is an object of type 'IAnalysisMgr'
		"feAnalysisMgr": (10310, 2, (9, 0), (), "feAnalysisMgr", '{00EF42F8-0E77-11D5-9471-001083FFF11C}'),
		# Property 'feAnalysisSet' is an object of type 'IAnalysisMgr'
		"feAnalysisSet": (10035, 2, (9, 0), (), "feAnalysisSet", '{00EF42F8-0E77-11D5-9471-001083FFF11C}'),
		# Property 'feAnalysisStep' is an object of type 'IAnalysisStep'
		"feAnalysisStep": (10750, 2, (9, 0), (), "feAnalysisStep", '{B49E120A-C070-4C6D-BB09-036D188F05A4}'),
		# Property 'feAnalysisStudy' is an object of type 'IAnalysisStudy'
		"feAnalysisStudy": (10548, 2, (9, 0), (), "feAnalysisStudy", '{589EAFB8-B3D0-42FB-B902-FE0A88B7EC80}'),
		# Property 'feBCDefinition' is an object of type 'IBCDefinition'
		"feBCDefinition": (10356, 2, (9, 0), (), "feBCDefinition", '{F1704416-2455-4C38-8C0C-AE23E062D421}'),
		# Property 'feBCEqn' is an object of type 'IBCEqn'
		"feBCEqn": (10010, 2, (9, 0), (), "feBCEqn", '{56434B14-F392-11D4-9453-001083FFF11C}'),
		# Property 'feBCGeom' is an object of type 'IBCGeom'
		"feBCGeom": (10009, 2, (9, 0), (), "feBCGeom", '{D7297E16-F305-11D4-9452-001083FFF11C}'),
		# Property 'feBCNode' is an object of type 'IBCNode'
		"feBCNode": (10008, 2, (9, 0), (), "feBCNode", '{D0E25456-F2FB-11D4-9452-001083FFF11C}'),
		# Property 'feBCSet' is an object of type 'IBCSet'
		"feBCSet": (10007, 2, (9, 0), (), "feBCSet", '{5D2F5E14-F2F1-11D4-9452-001083FFF11C}'),
		# Property 'feBeamCalculator' is an object of type 'IBeamCalculator'
		"feBeamCalculator": (10538, 2, (9, 0), (), "feBeamCalculator", '{3A62FE4C-D156-4F16-9C1B-F81C6BB4089A}'),
		# Property 'feBearingSpeedDefinition' is an object of type 'IBearingSpeedDefinition'
		"feBearingSpeedDefinition": (10774, 2, (9, 0), (), "feBearingSpeedDefinition", '{F5B85DA3-FA4D-447A-A50A-27C71A35D8AC}'),
		# Property 'feBodyMesher' is an object of type 'IBodyMesher'
		"feBodyMesher": (10753, 2, (9, 0), (), "feBodyMesher", '{F2509BC6-33D7-4DF8-BDE1-3CB362DB1ACD}'),
		# Property 'feCSys' is an object of type 'ICSys'
		"feCSys": (10006, 2, (9, 0), (), "feCSys", '{10CE53B8-F2E2-11D4-9452-001083FFF11C}'),
		# Property 'feChart' is an object of type 'IChart'
		"feChart": (10506, 2, (9, 0), (), "feChart", '{7AADC5EF-400B-4984-9D12-314296952F1F}'),
		# Property 'feChartSeries' is an object of type 'IChartSeries'
		"feChartSeries": (10507, 2, (9, 0), (), "feChartSeries", '{19988E81-F344-4944-82DE-AEBE26689F33}'),
		# Property 'feComputedResultsVectors' is an object of type 'IComputedResultsVectors'
		"feComputedResultsVectors": (10763, 2, (9, 0), (), "feComputedResultsVectors", '{AAA42217-5244-45C6-A6B4-4AD46D318C4D}'),
		# Property 'feConnection' is an object of type 'IConnection'
		"feConnection": (10313, 2, (9, 0), (), "feConnection", '{1A8C9C57-6711-4498-BDD9-8BD54586842E}'),
		# Property 'feConnectionProp' is an object of type 'IConnectionProp'
		"feConnectionProp": (10312, 2, (9, 0), (), "feConnectionProp", '{FA64FD83-5C92-425F-87B4-FC849D84898B}'),
		# Property 'feConnectionRegion' is an object of type 'IContact'
		"feConnectionRegion": (10359, 2, (9, 0), (), "feConnectionRegion", '{14057452-0382-11D5-9465-001083FFF11C}'),
		# Property 'feContact' is an object of type 'IContact'
		"feContact": (10021, 2, (9, 0), (), "feContact", '{14057452-0382-11D5-9465-001083FFF11C}'),
		# Property 'feCopyTool' is an object of type 'ICopyTool'
		"feCopyTool": (10663, 2, (9, 0), (), "feCopyTool", '{72722F0A-7881-406C-9ADE-AB1BD014068F}'),
		# Property 'feCurve' is an object of type 'ICurve'
		"feCurve": (10032, 2, (9, 0), (), "feCurve", '{1F9F16CE-09D6-11D5-946C-001083FFF11C}'),
		# Property 'feDataSurf' is an object of type 'IDataSurf'
		"feDataSurf": (10363, 2, (9, 0), (), "feDataSurf", '{8F814530-166A-4092-BBD8-C37483772F1E}'),
		# Property 'feDataTable' is an object of type 'IDataTable'
		"feDataTable": (10364, 2, (9, 0), (), "feDataTable", '{473E5696-513B-4A26-BD0F-FDB36820E7B1}'),
		# Property 'feDesignEquation' is an object of type 'IDesignEquation'
		"feDesignEquation": (10754, 2, (9, 0), (), "feDesignEquation", '{1CA3384D-4A57-4BB1-9C7F-BE32974ED31C}'),
		# Property 'feDiscreteValueSet' is an object of type 'IDiscreteValueSet'
		"feDiscreteValueSet": (10660, 2, (9, 0), (), "feDiscreteValueSet", '{C05A6063-9B64-4E95-BF20-EEAA0E741159}'),
		# Property 'feDrawErase' is an object of type 'IDrawErase'
		"feDrawErase": (10599, 2, (9, 0), (), "feDrawErase", '{0BECB769-5F94-4718-942B-9A2A866A59D1}'),
		# Property 'feElem' is an object of type 'IElem'
		"feElem": (10005, 2, (9, 0), (), "feElem", '{1E6C26FE-F16A-11D4-9450-001083FFF11C}'),
		# Property 'feElemAddRemove' is an object of type 'IElemAddRemove'
		"feElemAddRemove": (10766, 2, (9, 0), (), "feElemAddRemove", '{65FADBB7-C7F0-4587-92DD-309E47A66F37}'),
		# Property 'feElementQuality' is an object of type 'IElementQuality'
		"feElementQuality": (10441, 2, (9, 0), (), "feElementQuality", '{DED875D4-7D90-445B-89C7-17D709DB45F9}'),
		# Property 'feFibersim' is an object of type 'IFibersim'
		"feFibersim": (10670, 2, (9, 0), (), "feFibersim", '{F8E3363E-CC4A-447D-BFFD-B70D8D6B51FB}'),
		# Property 'feFlexibleSlider' is an object of type 'IFlexibleSlider'
		"feFlexibleSlider": (10758, 2, (9, 0), (), "feFlexibleSlider", '{AA0C28B4-A618-4ADD-B1AB-0C794A44CA27}'),
		# Property 'feFreebody' is an object of type 'IFreebody'
		"feFreebody": (10437, 2, (9, 0), (), "feFreebody", '{F39A93F2-DFD9-42D5-B663-8F09A959DAFE}'),
		# Property 'feFreq' is an object of type 'IFreq'
		"feFreq": (10605, 2, (9, 0), (), "feFreq", '{BC4680A4-7B1C-449B-B7F7-AAF21EC0ABD3}'),
		# Property 'feFunction' is an object of type 'IFunction'
		"feFunction": (10022, 2, (9, 0), (), "feFunction", '{14481C56-0767-11D5-9467-001083FFF11C}'),
		# Property 'feGFXArrow' is an object of type 'IGFXArrow'
		"feGFXArrow": (10353, 2, (9, 0), (), "feGFXArrow", '{1694667A-A6BD-4EA1-B1F0-6485588CDAEB}'),
		# Property 'feGFXLine' is an object of type 'IGFXLine'
		"feGFXLine": (10352, 2, (9, 0), (), "feGFXLine", '{72FA0DCD-21F2-4E55-9EDC-5D4F64ED7EC6}'),
		# Property 'feGFXPoint' is an object of type 'IGFXPoint'
		"feGFXPoint": (10351, 2, (9, 0), (), "feGFXPoint", '{90C90B34-D880-497A-9CD6-AAC2CADB7B7C}'),
		# Property 'feGFXQuad4' is an object of type 'IGFXQuad4'
		"feGFXQuad4": (10355, 2, (9, 0), (), "feGFXQuad4", '{5070769B-079C-46E2-BB16-57D7260F9C2B}'),
		# Property 'feGFXTria3' is an object of type 'IGFXTria3'
		"feGFXTria3": (10354, 2, (9, 0), (), "feGFXTria3", '{CAC6D4F9-4D32-42C5-910C-D73FBB9AEB62}'),
		# Property 'feGeometryInterface' is an object of type 'IGeometryInterface'
		"feGeometryInterface": (10772, 2, (9, 0), (), "feGeometryInterface", '{8E76D485-C2EE-4C57-A491-756662689141}'),
		# Property 'feGlobalPly' is an object of type 'IGlobalPly'
		"feGlobalPly": (10358, 2, (9, 0), (), "feGlobalPly", '{A09ECE66-9245-409B-9321-A2476AE7D4E7}'),
		# Property 'feGlobalStep' is an object of type 'IGlobalStep'
		"feGlobalStep": (10751, 2, (9, 0), (), "feGlobalStep", '{4DEBC494-8BC4-4B09-A866-FF3A324BA3B7}'),
		# Property 'feGroup' is an object of type 'IGroup'
		"feGroup": (10016, 2, (9, 0), (), "feGroup", '{FA671D08-F7A8-11D4-9457-001083FFF11C}'),
		# Property 'feInterpolate' is an object of type 'IInterpolate'
		"feInterpolate": (10528, 2, (9, 0), (), "feInterpolate", '{60266D03-AF68-4B10-906C-4BDAFADE3746}'),
		# Property 'feJoint' is an object of type 'IJoint'
		"feJoint": (10757, 2, (9, 0), (), "feJoint", '{51AE9787-73AE-4D75-85E7-328734699211}'),
		# Property 'feLayer' is an object of type 'ILayer'
		"feLayer": (10020, 2, (9, 0), (), "feLayer", '{E0974272-0376-11D5-9465-001083FFF11C}'),
		# Property 'feLayup' is an object of type 'ILayup'
		"feLayup": (10357, 2, (9, 0), (), "feLayup", '{EDB333C3-3711-47A5-A628-33B4B8768F88}'),
		# Property 'feLoadBolt' is an object of type 'ILoadBolt'
		"feLoadBolt": (10360, 2, (9, 0), (), "feLoadBolt", '{0DC9D655-721A-4AE7-B468-0C4B0FDC97AA}'),
		# Property 'feLoadDefinition' is an object of type 'ILoadDefinition'
		"feLoadDefinition": (10350, 2, (9, 0), (), "feLoadDefinition", '{A9BF3A1F-E8F6-4D5C-BC48-A191C61C57D2}'),
		# Property 'feLoadETemp' is an object of type 'ILoadETemp'
		"feLoadETemp": (10013, 2, (9, 0), (), "feLoadETemp", '{1FAF0E14-F6C9-11D4-9456-001083FFF11C}'),
		# Property 'feLoadGeom' is an object of type 'ILoadGeom'
		"feLoadGeom": (10015, 2, (9, 0), (), "feLoadGeom", '{78456266-F7A9-11D4-9457-001083FFF11C}'),
		# Property 'feLoadMesh' is an object of type 'ILoadMesh'
		"feLoadMesh": (10014, 2, (9, 0), (), "feLoadMesh", '{FFDF9E7C-F6DD-11D4-9456-001083FFF11C}'),
		# Property 'feLoadNTemp' is an object of type 'ILoadNTemp'
		"feLoadNTemp": (10012, 2, (9, 0), (), "feLoadNTemp", '{33A4C0D4-F6C5-11D4-9456-001083FFF11C}'),
		# Property 'feLoadSet' is an object of type 'ILoadSet'
		"feLoadSet": (10011, 2, (9, 0), (), "feLoadSet", '{39A8F662-F3CF-11D4-9453-001083FFF11C}'),
		# Property 'feMapData' is an object of type 'IMapData'
		"feMapData": (10534, 2, (9, 0), (), "feMapData", '{0023EA23-812A-4253-A431-86B427A49C8C}'),
		# Property 'feMapOutput' is an object of type 'IMapOutput'
		"feMapOutput": (10361, 2, (9, 0), (), "feMapOutput", '{FB7C8189-2114-43D6-86DE-78138CDF8C0B}'),
		# Property 'feMatl' is an object of type 'IMatl'
		"feMatl": (10002, 2, (9, 0), (), "feMatl", '{0AD6E2E8-EE3E-11D4-944C-001083FFF11C}'),
		# Property 'feMatrixInput' is an object of type 'IMatrixInput'
		"feMatrixInput": (10709, 2, (9, 0), (), "feMatrixInput", '{2B6ABCD1-ABB6-448D-BC13-FB9C102792B9}'),
		# Property 'feMergeTool' is an object of type 'IMergeTool'
		"feMergeTool": (10714, 2, (9, 0), (), "feMergeTool", '{8B79ED25-CCB9-4E14-9C0B-49E9EC00B1DC}'),
		# Property 'feMeshHardPoint' is an object of type 'IMeshHardPoint'
		"feMeshHardPoint": (10655, 2, (9, 0), (), "feMeshHardPoint", '{3054CBAA-8117-467C-8987-74764DC3DF3D}'),
		# Property 'feMeshHardPointDefinition' is an object of type 'IMeshHardPointDefinition'
		"feMeshHardPointDefinition": (10665, 2, (9, 0), (), "feMeshHardPointDefinition", '{D6EDD9A3-EFF2-41AC-891A-F9FED8F10CEE}'),
		# Property 'feMesher' is an object of type 'IMesher'
		"feMesher": (10438, 2, (9, 0), (), "feMesher", '{B0BD5EA3-C79D-4140-83FF-0642F66D2F37}'),
		# Property 'feMidFaceCentroidModel' is an object of type 'IMidFaceCentroidModel'
		"feMidFaceCentroidModel": (10634, 2, (9, 0), (), "feMidFaceCentroidModel", '{8D7600A5-C1B7-4740-8D63-50E476A84B2D}'),
		# Property 'feMonitorPoint' is an object of type 'IMonitorPoint'
		"feMonitorPoint": (10708, 2, (9, 0), (), "feMonitorPoint", '{80701FE0-7A74-44F7-936B-218FA64D8D91}'),
		# Property 'feMoveTool' is an object of type 'IMoveTool'
		"feMoveTool": (10664, 2, (9, 0), (), "feMoveTool", '{23FA0A2E-1F8E-4ED3-A527-F3F46B40DC9F}'),
		# Property 'feNode' is an object of type 'INode'
		"feNode": (10004, 2, (9, 0), (), "feNode", '{43752AF6-E669-11D4-9441-001083FFF11C}'),
		# Property 'feOptMC' is an object of type 'IOptMC'
		"feOptMC": (10662, 2, (9, 0), (), "feOptMC", '{56532635-5FE8-417C-B067-B131C22DC038}'),
		# Property 'feOptRel' is an object of type 'IOptRel'
		"feOptRel": (10656, 2, (9, 0), (), "feOptRel", '{859D91F8-AFD8-4561-83FB-1F02033297C3}'),
		# Property 'feOptResp' is an object of type 'IOptResp'
		"feOptResp": (10658, 2, (9, 0), (), "feOptResp", '{2BF41A8C-BFEF-479D-9C37-146A3AF46FCE}'),
		# Property 'feOptim' is an object of type 'IOptim'
		"feOptim": (10023, 2, (9, 0), (), "feOptim", '{D3A5591A-080C-11D5-9468-001083FFF11C}'),
		# Property 'feOutputSet' is an object of type 'IOutputSet'
		"feOutputSet": (10024, 2, (9, 0), (), "feOutputSet", '{423C4774-0814-11D5-9468-001083FFF11C}'),
		# Property 'fePlane' is an object of type 'IPlane'
		"fePlane": (10653, 2, (9, 0), (), "fePlane", '{891A6125-406E-4438-8A3F-AF254F4508DD}'),
		# Property 'fePlyMaterial' is an object of type 'IPlyMaterial'
		"fePlyMaterial": (10762, 2, (9, 0), (), "fePlyMaterial", '{86B145A0-34EE-4242-BC0D-216007960CA1}'),
		# Property 'fePoint' is an object of type 'IPoint'
		"fePoint": (10031, 2, (9, 0), (), "fePoint", '{A97FA4FA-09CA-11D5-946C-001083FFF11C}'),
		# Property 'feProp' is an object of type 'IProp'
		"feProp": (10003, 2, (9, 0), (), "feProp", '{7110873A-F096-11D4-944F-001083FFF11C}'),
		# Property 'fePublishTool' is an object of type 'IPublishTool'
		"fePublishTool": (10726, 2, (9, 0), (), "fePublishTool", '{49201AE2-58D3-431E-B227-3128F38A55E2}'),
		# Property 'feRead' is an object of type 'IRead'
		"feRead": (10001, 2, (9, 0), (), "feRead", '{86603850-0DA7-11D5-9470-001083FFF11C}'),
		# Property 'feReference' is an object of type 'IReference'
		"feReference": (10368, 2, (9, 0), (), "feReference", '{E6F57AAF-E85E-455B-AA4D-4FF48824BB31}'),
		# Property 'feReport' is an object of type 'IReport'
		"feReport": (10019, 2, (9, 0), (), "feReport", '{0D85757C-0374-11D5-9465-001083FFF11C}'),
		# Property 'feResults' is an object of type 'IResults'
		"feResults": (10520, 2, (9, 0), (), "feResults", '{2B88E749-3213-47AB-9CAD-0AEA2E415F16}'),
		# Property 'feResultsIDQuery' is an object of type 'IResultsIDQuery'
		"feResultsIDQuery": (10705, 2, (9, 0), (), "feResultsIDQuery", '{08AD5C35-28EC-4DD2-BC7E-EF2B94B624A2}'),
		# Property 'feRotationalSpeedDefinition' is an object of type 'IRotationalSpeedDefinition'
		"feRotationalSpeedDefinition": (10775, 2, (9, 0), (), "feRotationalSpeedDefinition", '{A3C30F9F-9764-4171-8387-D36E2F1B0FD2}'),
		# Property 'feSEReference' is an object of type 'ISEReference'
		"feSEReference": (10505, 2, (9, 0), (), "feSEReference", '{BCF73006-FAAA-4648-9ABE-A4DF900D45BF}'),
		# Property 'feScratch' is an object of type 'IScratch'
		"feScratch": (10348, 2, (9, 0), (), "feScratch", '{98D6BD3C-3DDD-4457-B6AD-15D6A1F3CE51}'),
		# Property 'feSelector' is an object of type 'ISelector'
		"feSelector": (10349, 2, (9, 0), (), "feSelector", '{8A3498F7-A383-419E-8117-86A0305175FF}'),
		# Property 'feSet' is an object of type 'ISet'
		"feSet": (10000, 2, (9, 0), (), "feSet", '{FC77C4F9-EC92-11D4-9449-001083FFF11C}'),
		# Property 'feSolid' is an object of type 'ISolid'
		"feSolid": (10034, 2, (9, 0), (), "feSolid", '{28BCBA84-0D7F-11D5-9470-001083FFF11C}'),
		# Property 'feSolidCleanupTool' is an object of type 'ISolidCleanupTool'
		"feSolidCleanupTool": (10770, 2, (9, 0), (), "feSolidCleanupTool", '{04B2D4B6-4F23-485B-8151-307D0C14462E}'),
		# Property 'feSolidEdit' is an object of type 'ISolidEdit'
		"feSolidEdit": (10712, 2, (9, 0), (), "feSolidEdit", '{C9B3B295-F3EE-44EC-9B20-D37CA9D588A3}'),
		# Property 'feSort' is an object of type 'ISortSet'
		"feSort": (10314, 2, (9, 0), (), "feSort", '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}'),
		# Property 'feStressLinear' is an object of type 'IStressLinear'
		"feStressLinear": (10504, 2, (9, 0), (), "feStressLinear", '{08B1C6B1-3124-4D88-BE4C-DFE7642E817E}'),
		# Property 'feSurface' is an object of type 'ISurface'
		"feSurface": (10033, 2, (9, 0), (), "feSurface", '{AA0FCDBC-0CB0-11D5-946F-001083FFF11C}'),
		# Property 'feTMGBC' is an object of type 'ITmgBC'
		"feTMGBC": (10026, 2, (9, 0), (), "feTMGBC", '{F809A642-09BC-11D5-946C-001083FFF11C}'),
		# Property 'feTMGCtrl' is an object of type 'ITmgCtl'
		"feTMGCtrl": (10027, 2, (9, 0), (), "feTMGCtrl", '{C1DD56F8-09BD-11D5-946C-001083FFF11C}'),
		# Property 'feTMGInt' is an object of type 'ITmgInt'
		"feTMGInt": (10028, 2, (9, 0), (), "feTMGInt", '{5A0AEF80-09BE-11D5-946C-001083FFF11C}'),
		# Property 'feTMGOpt' is an object of type 'ITmgOpt'
		"feTMGOpt": (10029, 2, (9, 0), (), "feTMGOpt", '{EC1095A6-09BE-11D5-946C-001083FFF11C}'),
		# Property 'feTMGReal' is an object of type 'ITmgReal'
		"feTMGReal": (10030, 2, (9, 0), (), "feTMGReal", '{9D6A22B4-09BE-11D5-946C-001083FFF11C}'),
		# Property 'feTableData' is an object of type 'ITableData'
		"feTableData": (10527, 2, (9, 0), (), "feTableData", '{17387165-149C-43E5-A91D-EAC4D1E4EAAD}'),
		# Property 'feText' is an object of type 'IText'
		"feText": (10309, 2, (9, 0), (), "feText", '{FDEA6C66-77F3-4F6C-BDB9-EA976919B421}'),
		# Property 'feTrackData' is an object of type 'ITrackData'
		"feTrackData": (10537, 2, (9, 0), (), "feTrackData", '{CF420F7F-631E-4597-83A5-B6C971AEAB99}'),
		# Property 'feUserData' is an object of type 'IUserData'
		"feUserData": (10037, 2, (9, 0), (), "feUserData", '{CFA77C4C-63E9-11D5-94AA-001083FFF11C}'),
		# Property 'feUserDefinedGraphics' is an object of type 'IUserDefinedGraphics'
		"feUserDefinedGraphics": (10646, 2, (9, 0), (), "feUserDefinedGraphics", '{9B5131E5-BFB8-4219-8F7D-764DBC32C323}'),
		# Property 'feVar' is an object of type 'IVar'
		"feVar": (10018, 2, (9, 0), (), "feVar", '{72473E7E-0369-11D5-9465-001083FFF11C}'),
		# Property 'feVector' is an object of type 'IVector'
		"feVector": (10652, 2, (9, 0), (), "feVector", '{F2E67C72-0E5B-477F-8377-BACD7317A2FF}'),
		# Property 'feView' is an object of type 'IView'
		"feView": (10017, 2, (9, 0), (), "feView", '{037BFA00-F86C-11D4-9458-001083FFF11C}'),
		# Property 'feViewOrient' is an object of type 'IViewOrient'
		"feViewOrient": (10600, 2, (9, 0), (), "feViewOrient", '{3042DDD0-BB63-41CB-85F7-52FDE63B0624}'),
		# Property 'feXYPlotDefinition' is an object of type 'IXYPlotDefinition'
		"feXYPlotDefinition": (10773, 2, (9, 0), (), "feXYPlotDefinition", '{FFE3E8FC-F64A-4FE0-9430-6A60BA5A3B22}'),
		"hListWnd": (10257, 2, (20, 0), (), "hListWnd", None),
		"hMainWnd": (10256, 2, (20, 0), (), "hMainWnd", None),
		"vInfo_ActiveID": (10296, 2, (12, 0), (), "vInfo_ActiveID", None),
		"vInfo_ActiveType": (10297, 2, (12, 0), (), "vInfo_ActiveType", None),
		"vInfo_Color": (10298, 2, (12, 0), (), "vInfo_Color", None),
		"vInfo_Count": (10272, 2, (12, 0), (), "vInfo_Count", None),
		"vInfo_ElemFormulation1": (10273, 2, (12, 0), (), "vInfo_ElemFormulation1", None),
		"vInfo_ElemFormulation2": (10274, 2, (12, 0), (), "vInfo_ElemFormulation2", None),
		"vInfo_ElemFormulation3": (10645, 2, (12, 0), (), "vInfo_ElemFormulation3", None),
		"vInfo_Increment": (10294, 2, (12, 0), (), "vInfo_Increment", None),
		"vInfo_MatlAngleVec": (10286, 2, (12, 0), (), "vInfo_MatlAngleVec", None),
		"vInfo_MaxID": (10270, 2, (12, 0), (), "vInfo_MaxID", None),
		"vInfo_MinID": (10271, 2, (12, 0), (), "vInfo_MinID", None),
		"vInfo_ModelSizeX": (10288, 2, (12, 0), (), "vInfo_ModelSizeX", None),
		"vInfo_ModelSizeY": (10289, 2, (12, 0), (), "vInfo_ModelSizeY", None),
		"vInfo_ModelSizeZ": (10290, 2, (12, 0), (), "vInfo_ModelSizeZ", None),
		"vInfo_NextID": (10295, 2, (12, 0), (), "vInfo_NextID", None),
		"vInfo_PermBC": (10268, 2, (12, 0), (), "vInfo_PermBC", None),
		"vInfo_SnapSpacing": (10283, 2, (12, 0), (), "vInfo_SnapSpacing", None),
		"vInfo_SurfDivisionsCurved": (10300, 2, (12, 0), (), "vInfo_SurfDivisionsCurved", None),
		"vInfo_SurfDivisionsLinear": (10299, 2, (12, 0), (), "vInfo_SurfDivisionsLinear", None),
		"vInfo_WorkplaneOrigin": (10275, 2, (12, 0), (), "vInfo_WorkplaneOrigin", None),
		"vInfo_WorkplanePrevOrigin": (10279, 2, (12, 0), (), "vInfo_WorkplanePrevOrigin", None),
		"vInfo_WorkplanePrevX": (10280, 2, (12, 0), (), "vInfo_WorkplanePrevX", None),
		"vInfo_WorkplanePrevY": (10281, 2, (12, 0), (), "vInfo_WorkplanePrevY", None),
		"vInfo_WorkplanePrevZ": (10282, 2, (12, 0), (), "vInfo_WorkplanePrevZ", None),
		"vInfo_WorkplaneRuler": (10269, 2, (12, 0), (), "vInfo_WorkplaneRuler", None),
		"vInfo_WorkplaneSizeX": (10284, 2, (12, 0), (), "vInfo_WorkplaneSizeX", None),
		"vInfo_WorkplaneSizeY": (10285, 2, (12, 0), (), "vInfo_WorkplaneSizeY", None),
		"vInfo_WorkplaneX": (10276, 2, (12, 0), (), "vInfo_WorkplaneX", None),
		"vInfo_WorkplaneY": (10277, 2, (12, 0), (), "vInfo_WorkplaneY", None),
		"vInfo_WorkplaneZ": (10278, 2, (12, 0), (), "vInfo_WorkplaneZ", None),
		"vPref_AngleDimetric": (10264, 2, (12, 0), (), "vPref_AngleDimetric", None),
		"vPref_AngleIsometric": (10265, 2, (12, 0), (), "vPref_AngleIsometric", None),
		"vPref_AngleTrimetric": (10266, 2, (12, 0), (), "vPref_AngleTrimetric", None),
		"vPref_EntityColor": (10291, 2, (12, 0), (), "vPref_EntityColor", None),
		"vPref_FBDefComponents": (10610, 2, (12, 0), (), "vPref_FBDefComponents", None),
		"vPref_FBDefContributions": (10606, 2, (12, 0), (), "vPref_FBDefContributions", None),
		"vPref_FBDefNodalVectorMode": (10608, 2, (12, 0), (), "vPref_FBDefNodalVectorMode", None),
		"vPref_FBDefTotalVectorMode": (10609, 2, (12, 0), (), "vPref_FBDefTotalVectorMode", None),
		"vPref_NasQstOn": (10402, 2, (12, 0), (), "vPref_NasQstOn", None),
		"vPref_NasQstVal": (10403, 2, (12, 0), (), "vPref_NasQstVal", None),
		"vPref_RenderRotate": (10267, 2, (12, 0), (), "vPref_RenderRotate", None),
		"vPref_SpaceballFactors": (10463, 2, (12, 0), (), "vPref_SpaceballFactors", None),
		"vTool_CursorXYZ": (10287, 2, (12, 0), (), "vTool_CursorXYZ", None),
	}
	_prop_map_put_ = {
		"ConfigurationPath" : ((10704, LCID, 4, 0),()),
		"CoordDialogMethod" : ((10365, LCID, 4, 0),()),
		"DialogAutoAnswer" : ((10308, LCID, 4, 0),()),
		"DialogAutoSkip" : ((10424, LCID, 4, 0),()),
		"DialogAutoSkipMsg" : ((10522, LCID, 4, 0),()),
		"ErrorHasBeenCalled" : ((10432, LCID, 4, 0),()),
		"EventLParam" : ((10263, LCID, 4, 0),()),
		"ExePath" : ((10261, LCID, 4, 0),()),
		"FullScratchName" : ((10260, LCID, 4, 0),()),
		"Info_CommandNumber" : ((10189, LCID, 4, 0),()),
		"Info_ComplexSyncIncrement" : ((10546, LCID, 4, 0),()),
		"Info_ComplexSyncMethod" : ((10544, LCID, 4, 0),()),
		"Info_ComplexSyncPhase" : ((10545, LCID, 4, 0),()),
		"Info_DefaultX" : ((10236, LCID, 4, 0),()),
		"Info_DefaultY" : ((10237, LCID, 4, 0),()),
		"Info_DefaultZ" : ((10238, LCID, 4, 0),()),
		"Info_FacetAngleTolerance" : ((10414, LCID, 4, 0),()),
		"Info_FacetChordTolerance" : ((10415, LCID, 4, 0),()),
		"Info_FacetCurveFactor" : ((10416, LCID, 4, 0),()),
		"Info_FreebodyReverse" : ((10650, LCID, 4, 0),()),
		"Info_GeometryScale" : ((10246, LCID, 4, 0),()),
		"Info_GroupAutomaticAdd" : ((10217, LCID, 4, 0),()),
		"Info_LayerNoPick" : ((10219, LCID, 4, 0),()),
		"Info_LineLength" : ((10239, LCID, 4, 0),()),
		"Info_MatlAngle" : ((10244, LCID, 4, 0),()),
		"Info_MatlAngleCSys" : ((10210, LCID, 4, 0),()),
		"Info_MatlAngleDir" : ((10209, LCID, 4, 0),()),
		"Info_MatlAngleMethod" : ((10208, LCID, 4, 0),()),
		"Info_MatlUserType" : ((10220, LCID, 4, 0),()),
		"Info_MeshSizeAutoDefault" : ((10517, LCID, 4, 0),()),
		"Info_MeshSizeDefault" : ((10245, LCID, 4, 0),()),
		"Info_MeshSizeMinElem" : ((10211, LCID, 4, 0),()),
		"Info_MeshSizePropagation_EdgeOption" : ((10745, LCID, 4, 0),()),
		"Info_MeshSizePropagation_On" : ((10742, LCID, 4, 0),()),
		"Info_MeshSizePropagation_SameSolid" : ((10746, LCID, 4, 0),()),
		"Info_MeshSizePropagation_SelMode" : ((10743, LCID, 4, 0),()),
		"Info_MeshSizePropagation_SlavedMapped" : ((10744, LCID, 4, 0),()),
		"Info_MeshSizePropagation_Tolerance" : ((10748, LCID, 4, 0),()),
		"Info_MeshSizePropagation_UseTolerance" : ((10747, LCID, 4, 0),()),
		"Info_ModelNeedBox" : ((10180, LCID, 4, 0),()),
		"Info_NodeType" : ((10199, LCID, 4, 0),()),
		"Info_OrientQuad4ForceOutput" : ((10380, LCID, 4, 0),()),
		"Info_OrientQuad4StrainOutput" : ((10379, LCID, 4, 0),()),
		"Info_OrientQuad4StressOutput" : ((10378, LCID, 4, 0),()),
		"Info_OrientQuad8ForceOutput" : ((10383, LCID, 4, 0),()),
		"Info_OrientQuad8StrainOutput" : ((10382, LCID, 4, 0),()),
		"Info_OrientQuad8StressOutput" : ((10381, LCID, 4, 0),()),
		"Info_OrientSolidAnisoOutput" : ((10370, LCID, 4, 0),()),
		"Info_OrientSolidHyperOutput" : ((10371, LCID, 4, 0),()),
		"Info_OrientSolidIsoOutput" : ((10369, LCID, 4, 0),()),
		"Info_OrientTria3ForceOutput" : ((10374, LCID, 4, 0),()),
		"Info_OrientTria3StrainOutput" : ((10373, LCID, 4, 0),()),
		"Info_OrientTria3StressOutput" : ((10372, LCID, 4, 0),()),
		"Info_OrientTria6ForceOutput" : ((10377, LCID, 4, 0),()),
		"Info_OrientTria6StrainOutput" : ((10376, LCID, 4, 0),()),
		"Info_OrientTria6StressOutput" : ((10375, LCID, 4, 0),()),
		"Info_OutputCSys" : ((10198, LCID, 4, 0),()),
		"Info_SnapCoordOnly" : ((10184, LCID, 4, 0),()),
		"Info_SnapFullPrecision" : ((10183, LCID, 4, 0),()),
		"Info_SnapSpacingMode" : ((10205, LCID, 4, 0),()),
		"Info_SnapStyle" : ((10204, LCID, 4, 0),()),
		"Info_SnapTo" : ((10203, LCID, 4, 0),()),
		"Info_SplineOrder" : ((10218, LCID, 4, 0),()),
		"Info_SuperelementID" : ((10362, LCID, 4, 0),()),
		"Info_SuppressedCurveColor" : ((10425, LCID, 4, 0),()),
		"Info_SuppressedSurfaceColor" : ((10426, LCID, 4, 0),()),
		"Info_TextBorderColor" : ((10200, LCID, 4, 0),()),
		"Info_TranslateNotes" : ((10182, LCID, 4, 0),()),
		"Info_UpdateAllViews" : ((10181, LCID, 4, 0),()),
		"Info_Version" : ((10223, LCID, 4, 0),()),
		"Info_ViewShowAutoscale" : ((10647, LCID, 4, 0),()),
		"Info_ViewShowColor" : ((10214, LCID, 4, 0),()),
		"Info_ViewShowEntity" : ((10215, LCID, 4, 0),()),
		"Info_ViewShowErase" : ((10185, LCID, 4, 0),()),
		"Info_ViewShowLabel" : ((10216, LCID, 4, 0),()),
		"Info_ViewShowNormal" : ((10542, LCID, 4, 0),()),
		"Info_ViewShowTransparent" : ((10543, LCID, 4, 0),()),
		"Info_ViewShowUseColor" : ((10186, LCID, 4, 0),()),
		"Info_WorkplaneLabels" : ((10235, LCID, 4, 0),()),
		"Info_WorkplaneModelAdjust" : ((10178, LCID, 4, 0),()),
		"Info_WorkplaneOnSurface" : ((10201, LCID, 4, 0),()),
		"Info_WorkplaneOnSurfacePrev" : ((10202, LCID, 4, 0),()),
		"Info_WorkplaneSurfaceAdjust" : ((10179, LCID, 4, 0),()),
		"Info_WorkplaneTics" : ((10206, LCID, 4, 0),()),
		"InitializationPath" : ((10703, LCID, 4, 0),()),
		"List_Destination" : ((10390, LCID, 4, 0),()),
		"List_FileName" : ((10391, LCID, 4, 0),()),
		"ModelFromPreviousVersion" : ((10718, LCID, 4, 0),()),
		"ModelMigratedFromDB" : ((10720, LCID, 4, 0),()),
		"ModelMigratedFromVersion" : ((10719, LCID, 4, 0),()),
		"ModelName" : ((10258, LCID, 4, 0),()),
		"PgSetup_BottomMargin" : ((10062, LCID, 4, 0),()),
		"PgSetup_CustomHeight" : ((10057, LCID, 4, 0),()),
		"PgSetup_CustomWidth" : ((10058, LCID, 4, 0),()),
		"PgSetup_DefaultHdrFont" : ((10042, LCID, 4, 0),()),
		"PgSetup_DefaultTextFont" : ((10043, LCID, 4, 0),()),
		"PgSetup_FillMargins" : ((10044, LCID, 4, 0),()),
		"PgSetup_Footer" : ((10041, LCID, 4, 0),()),
		"PgSetup_HdrFont" : ((10038, LCID, 4, 0),()),
		"PgSetup_HdrFontSize" : ((10052, LCID, 4, 0),()),
		"PgSetup_Header" : ((10040, LCID, 4, 0),()),
		"PgSetup_HorzAlign" : ((10056, LCID, 4, 0),()),
		"PgSetup_IntegerScaling" : ((10046, LCID, 4, 0),()),
		"PgSetup_LeftMargin" : ((10059, LCID, 4, 0),()),
		"PgSetup_MaintainAspect" : ((10045, LCID, 4, 0),()),
		"PgSetup_Monochrome" : ((10050, LCID, 4, 0),()),
		"PgSetup_PenScale" : ((10054, LCID, 4, 0),()),
		"PgSetup_PrintBorder" : ((10047, LCID, 4, 0),()),
		"PgSetup_RenderScale" : ((10063, LCID, 4, 0),()),
		"PgSetup_RightMargin" : ((10060, LCID, 4, 0),()),
		"PgSetup_SwapBW" : ((10048, LCID, 4, 0),()),
		"PgSetup_TextFont" : ((10039, LCID, 4, 0),()),
		"PgSetup_TextFontSize" : ((10053, LCID, 4, 0),()),
		"PgSetup_TopMargin" : ((10061, LCID, 4, 0),()),
		"PgSetup_TransparentBkgd" : ((10049, LCID, 4, 0),()),
		"PgSetup_VertAlign" : ((10055, LCID, 4, 0),()),
		"PickBoundaryInternalMode" : ((10385, LCID, 4, 0),()),
		"PickCombinedCurveInternalMode" : ((10386, LCID, 4, 0),()),
		"PickVisibleOnly" : ((10668, LCID, 4, 0),()),
		"PlaneDialogMethod" : ((10367, LCID, 4, 0),()),
		"Pref_API_HonorWorkingDirectory" : ((10741, LCID, 4, 0),()),
		"Pref_API_UseAlternateFileDialog" : ((10740, LCID, 4, 0),()),
		"Pref_API_WarningInDialog" : ((10702, LCID, 4, 0),()),
		"Pref_API_WarningLevel" : ((10701, LCID, 4, 0),()),
		"Pref_Abaqus_PreserveCompressedLoads" : ((10717, LCID, 4, 0),()),
		"Pref_AdjMidsideGeomLoad" : ((10116, LCID, 4, 0),()),
		"Pref_AltAccelerator" : ((10303, LCID, 4, 0),()),
		"Pref_AltSectionProp" : ((10326, LCID, 4, 0),()),
		"Pref_AltTheme" : ((10304, LCID, 4, 0),()),
		"Pref_AnalysisMonAutoLoad" : ((10343, LCID, 4, 0),()),
		"Pref_AnalysisMonMaxLines" : ((10344, LCID, 4, 0),()),
		"Pref_AnalysisProg" : ((10133, LCID, 4, 0),()),
		"Pref_AnalysisType" : ((10134, LCID, 4, 0),()),
		"Pref_AnimatePanes" : ((10336, LCID, 4, 0),()),
		"Pref_AnimationFormat" : ((10397, LCID, 4, 0),()),
		"Pref_AspectRatio" : ((10154, LCID, 4, 0),()),
		"Pref_AssumeEngrStrain" : ((10120, LCID, 4, 0),()),
		"Pref_AttachResultsDebug" : ((10518, LCID, 4, 0),()),
		"Pref_AttachResultsTiming" : ((10519, LCID, 4, 0),()),
		"Pref_AutoAttachResults" : ((10514, LCID, 4, 0),()),
		"Pref_AutoConvertOdb" : ((10603, LCID, 4, 0),()),
		"Pref_AutomaticTitles" : ((10108, LCID, 4, 0),()),
		"Pref_BackupModel" : ((10107, LCID, 4, 0),()),
		"Pref_CleanupModel" : ((10523, LCID, 4, 0),()),
		"Pref_CompressBitmaps" : ((10401, LCID, 4, 0),()),
		"Pref_ComputeAverageMidResults" : ((10723, LCID, 4, 0),()),
		"Pref_ComputePrincipal" : ((10119, LCID, 4, 0),()),
		"Pref_ConfirmDelete" : ((10449, LCID, 4, 0),()),
		"Pref_ConstructionGeometry" : ((10388, LCID, 4, 0),()),
		"Pref_CreateResultStudy" : ((10540, LCID, 4, 0),()),
		"Pref_CustomToolsPath" : ((10079, LCID, 4, 0),()),
		"Pref_DATASURF_TriMapHBSizeFactor" : ((10713, LCID, 4, 0),()),
		"Pref_DATASURF_TriMapLayerExtent" : ((10675, LCID, 4, 0),()),
		"Pref_DATASURF_TriMapTolerance" : ((10676, LCID, 4, 0),()),
		"Pref_DBCacheBlocksPerPage" : ((10125, LCID, 4, 0),()),
		"Pref_DBCacheMaxLabel" : ((10127, LCID, 4, 0),()),
		"Pref_DBCacheMaxMemoryPct" : ((10126, LCID, 4, 0),()),
		"Pref_DBLowDiskWarning" : ((10129, LCID, 4, 0),()),
		"Pref_DBScratch" : ((10080, LCID, 4, 0),()),
		"Pref_DBUndoLevels" : ((10128, LCID, 4, 0),()),
		"Pref_DL_DecimalSeparator" : ((10677, LCID, 4, 0),()),
		"Pref_DL_DigitGroupFlag" : ((10707, LCID, 4, 0),()),
		"Pref_DL_DigitGroupOption" : ((10679, LCID, 4, 0),()),
		"Pref_DL_DigitGroupSeparator" : ((10678, LCID, 4, 0),()),
		"Pref_DL_ExponentChar" : ((10680, LCID, 4, 0),()),
		"Pref_DL_ForcePlusSign" : ((10683, LCID, 4, 0),()),
		"Pref_DL_ForceSingleZero" : ((10682, LCID, 4, 0),()),
		"Pref_DL_NegativeBraces" : ((10684, LCID, 4, 0),()),
		"Pref_DL_TrailingZeros" : ((10681, LCID, 4, 0),()),
		"Pref_DL_UseIntlAll" : ((10710, LCID, 4, 0),()),
		"Pref_DO_BaseExponent" : ((10697, LCID, 4, 0),()),
		"Pref_DO_BeforeDecimalSeparator" : ((10688, LCID, 4, 0),()),
		"Pref_DO_DecimalPlaces" : ((10695, LCID, 4, 0),()),
		"Pref_DO_Exponent" : ((10699, LCID, 4, 0),()),
		"Pref_DO_ExponentDigits" : ((10691, LCID, 4, 0),()),
		"Pref_DO_LeadingZeros" : ((10693, LCID, 4, 0),()),
		"Pref_DO_MaxDigits" : ((10696, LCID, 4, 0),()),
		"Pref_DO_MinimumExponentSize" : ((10689, LCID, 4, 0),()),
		"Pref_DO_Option" : ((10685, LCID, 4, 0),()),
		"Pref_DO_OriginalDigits" : ((10698, LCID, 4, 0),()),
		"Pref_DO_RoundToZero" : ((10686, LCID, 4, 0),()),
		"Pref_DO_RoundToZeroValue" : ((10687, LCID, 4, 0),()),
		"Pref_DO_SigFigs" : ((10692, LCID, 4, 0),()),
		"Pref_DO_TrailingZeros" : ((10694, LCID, 4, 0),()),
		"Pref_DefContourPalette" : ((10090, LCID, 4, 0),()),
		"Pref_DefaultFreebodyReverse" : ((10651, LCID, 4, 0),()),
		"Pref_DeleteRdScratchLdSets" : ((10392, LCID, 4, 0),()),
		"Pref_DeleteScratchFile" : ((10109, LCID, 4, 0),()),
		"Pref_DeltaAngle" : ((10155, LCID, 4, 0),()),
		"Pref_ElemQualAltTaper" : ((10468, LCID, 4, 0),()),
		"Pref_ElemQualAltTaperVal" : ((10479, LCID, 4, 0),()),
		"Pref_ElemQualAspectRatio" : ((10466, LCID, 4, 0),()),
		"Pref_ElemQualAspectRatioVal" : ((10477, LCID, 4, 0),()),
		"Pref_ElemQualCombined" : ((10475, LCID, 4, 0),()),
		"Pref_ElemQualCombinedVal" : ((10486, LCID, 4, 0),()),
		"Pref_ElemQualExplicitTime" : ((10476, LCID, 4, 0),()),
		"Pref_ElemQualExplicitTimeVal" : ((10487, LCID, 4, 0),()),
		"Pref_ElemQualHexAspectRatio" : ((10562, LCID, 4, 0),()),
		"Pref_ElemQualHexAspectRatioVal" : ((10584, LCID, 4, 0),()),
		"Pref_ElemQualHexDetJ" : ((10564, LCID, 4, 0),()),
		"Pref_ElemQualHexDetJVal" : ((10586, LCID, 4, 0),()),
		"Pref_ElemQualHexEPIA" : ((10636, LCID, 4, 0),()),
		"Pref_ElemQualHexEPIAVal" : ((10640, LCID, 4, 0),()),
		"Pref_ElemQualHexEPLR" : ((10563, LCID, 4, 0),()),
		"Pref_ElemQualHexEPLRVal" : ((10585, LCID, 4, 0),()),
		"Pref_ElemQualHexWarp" : ((10565, LCID, 4, 0),()),
		"Pref_ElemQualHexWarpVal" : ((10587, LCID, 4, 0),()),
		"Pref_ElemQualIntAngles" : ((10469, LCID, 4, 0),()),
		"Pref_ElemQualIntAnglesVal" : ((10480, LCID, 4, 0),()),
		"Pref_ElemQualJacobian" : ((10474, LCID, 4, 0),()),
		"Pref_ElemQualJacobianVal" : ((10485, LCID, 4, 0),()),
		"Pref_ElemQualNastranWarping" : ((10472, LCID, 4, 0),()),
		"Pref_ElemQualNastranWarpingVal" : ((10483, LCID, 4, 0),()),
		"Pref_ElemQualPenAspectRatio" : ((10566, LCID, 4, 0),()),
		"Pref_ElemQualPenAspectRatioVal" : ((10588, LCID, 4, 0),()),
		"Pref_ElemQualPenDetJ" : ((10568, LCID, 4, 0),()),
		"Pref_ElemQualPenDetJVal" : ((10590, LCID, 4, 0),()),
		"Pref_ElemQualPenEPIA" : ((10637, LCID, 4, 0),()),
		"Pref_ElemQualPenEPIAVal" : ((10641, LCID, 4, 0),()),
		"Pref_ElemQualPenEPLR" : ((10567, LCID, 4, 0),()),
		"Pref_ElemQualPenEPLRVal" : ((10589, LCID, 4, 0),()),
		"Pref_ElemQualPenWarp" : ((10569, LCID, 4, 0),()),
		"Pref_ElemQualPenWarpVal" : ((10591, LCID, 4, 0),()),
		"Pref_ElemQualPyrAspectRatio" : ((10570, LCID, 4, 0),()),
		"Pref_ElemQualPyrAspectRatioVal" : ((10592, LCID, 4, 0),()),
		"Pref_ElemQualPyrDetJ" : ((10573, LCID, 4, 0),()),
		"Pref_ElemQualPyrDetJVal" : ((10595, LCID, 4, 0),()),
		"Pref_ElemQualPyrEPIA" : ((10638, LCID, 4, 0),()),
		"Pref_ElemQualPyrEPIAVal" : ((10642, LCID, 4, 0),()),
		"Pref_ElemQualPyrEPLR" : ((10571, LCID, 4, 0),()),
		"Pref_ElemQualPyrEPLRVal" : ((10593, LCID, 4, 0),()),
		"Pref_ElemQualPyrWarp" : ((10572, LCID, 4, 0),()),
		"Pref_ElemQualPyrWarpVal" : ((10594, LCID, 4, 0),()),
		"Pref_ElemQualQuadAR" : ((10611, LCID, 4, 0),()),
		"Pref_ElemQualQuadARVal" : ((10614, LCID, 4, 0),()),
		"Pref_ElemQualQuadIAMax" : ((10556, LCID, 4, 0),()),
		"Pref_ElemQualQuadIAMaxVal" : ((10578, LCID, 4, 0),()),
		"Pref_ElemQualQuadIAMin" : ((10555, LCID, 4, 0),()),
		"Pref_ElemQualQuadIAMinVal" : ((10577, LCID, 4, 0),()),
		"Pref_ElemQualQuadSkew" : ((10552, LCID, 4, 0),()),
		"Pref_ElemQualQuadSkewVal" : ((10574, LCID, 4, 0),()),
		"Pref_ElemQualQuadTaper" : ((10553, LCID, 4, 0),()),
		"Pref_ElemQualQuadTaperVal" : ((10575, LCID, 4, 0),()),
		"Pref_ElemQualQuadWarp" : ((10554, LCID, 4, 0),()),
		"Pref_ElemQualQuadWarpVal" : ((10576, LCID, 4, 0),()),
		"Pref_ElemQualSkew" : ((10470, LCID, 4, 0),()),
		"Pref_ElemQualSkewVal" : ((10481, LCID, 4, 0),()),
		"Pref_ElemQualTaper" : ((10467, LCID, 4, 0),()),
		"Pref_ElemQualTaperVal" : ((10478, LCID, 4, 0),()),
		"Pref_ElemQualTetAspectRatio" : ((10559, LCID, 4, 0),()),
		"Pref_ElemQualTetAspectRatioVal" : ((10581, LCID, 4, 0),()),
		"Pref_ElemQualTetCollapse" : ((10473, LCID, 4, 0),()),
		"Pref_ElemQualTetCollapseVal" : ((10484, LCID, 4, 0),()),
		"Pref_ElemQualTetDetJ" : ((10561, LCID, 4, 0),()),
		"Pref_ElemQualTetDetJVal" : ((10583, LCID, 4, 0),()),
		"Pref_ElemQualTetEPIA" : ((10635, LCID, 4, 0),()),
		"Pref_ElemQualTetEPIAVal" : ((10639, LCID, 4, 0),()),
		"Pref_ElemQualTetEPLR" : ((10560, LCID, 4, 0),()),
		"Pref_ElemQualTetEPLRVal" : ((10582, LCID, 4, 0),()),
		"Pref_ElemQualTriaAR" : ((10612, LCID, 4, 0),()),
		"Pref_ElemQualTriaARVal" : ((10615, LCID, 4, 0),()),
		"Pref_ElemQualTriaEPLR" : ((10613, LCID, 4, 0),()),
		"Pref_ElemQualTriaEPLRVal" : ((10616, LCID, 4, 0),()),
		"Pref_ElemQualTriaIAMax" : ((10558, LCID, 4, 0),()),
		"Pref_ElemQualTriaIAMaxVal" : ((10580, LCID, 4, 0),()),
		"Pref_ElemQualTriaSkew" : ((10557, LCID, 4, 0),()),
		"Pref_ElemQualTriaSkewVal" : ((10579, LCID, 4, 0),()),
		"Pref_ElemQualWarping" : ((10471, LCID, 4, 0),()),
		"Pref_ElemQualWarpingVal" : ((10482, LCID, 4, 0),()),
		"Pref_EnableLegacyAnsysInterface" : ((10644, LCID, 4, 0),()),
		"Pref_Enable_Aeroelasticity" : ((10436, LCID, 4, 0),()),
		"Pref_FBDefDispMode" : ((10607, LCID, 4, 0),()),
		"Pref_FastHoleMeshing" : ((10643, LCID, 4, 0),()),
		"Pref_FastOutputDelete" : ((10429, LCID, 4, 0),()),
		"Pref_FastTriMesh" : ((10112, LCID, 4, 0),()),
		"Pref_FileRefCheck" : ((10339, LCID, 4, 0),()),
		"Pref_FileRefGeometry" : ((10340, LCID, 4, 0),()),
		"Pref_FileRefModel" : ((10341, LCID, 4, 0),()),
		"Pref_FileRefResults" : ((10342, LCID, 4, 0),()),
		"Pref_Filter_ABAQUS" : ((10734, LCID, 4, 0),()),
		"Pref_Filter_ANSYS" : ((10735, LCID, 4, 0),()),
		"Pref_Filter_Analysis" : ((10752, LCID, 4, 0),()),
		"Pref_Filter_Autodesk_Nastran" : ((10733, LCID, 4, 0),()),
		"Pref_Filter_DYNA" : ((10736, LCID, 4, 0),()),
		"Pref_Filter_MARC" : ((10738, LCID, 4, 0),()),
		"Pref_Filter_MSC_Nastran" : ((10732, LCID, 4, 0),()),
		"Pref_Filter_SC_Nastran_ADVNL" : ((10730, LCID, 4, 0),()),
		"Pref_Filter_SC_Nastran_ADVNLE" : ((10731, LCID, 4, 0),()),
		"Pref_Filter_SC_Nastran_Linear" : ((10727, LCID, 4, 0),()),
		"Pref_Filter_SC_Nastran_MSNL" : ((10728, LCID, 4, 0),()),
		"Pref_Filter_SC_Nastran_MSNLK" : ((10729, LCID, 4, 0),()),
		"Pref_Filter_SINDA" : ((10737, LCID, 4, 0),()),
		"Pref_GIFAnimationDelay" : ((10399, LCID, 4, 0),()),
		"Pref_GIFColorOpt" : ((10398, LCID, 4, 0),()),
		"Pref_GIFFrameSeries" : ((10400, LCID, 4, 0),()),
		"Pref_GIFOptimized" : ((10444, LCID, 4, 0),()),
		"Pref_GeomEngine" : ((10132, LCID, 4, 0),()),
		"Pref_GeomLoadEdgeFactor" : ((10157, LCID, 4, 0),()),
		"Pref_GeomLoadQuadFactor" : ((10158, LCID, 4, 0),()),
		"Pref_GeomLoadTriFactor" : ((10159, LCID, 4, 0),()),
		"Pref_GeomLogFile" : ((10115, LCID, 4, 0),()),
		"Pref_GeomOptimize" : ((10532, LCID, 4, 0),()),
		"Pref_GeomScaleAdjust" : ((10334, LCID, 4, 0),()),
		"Pref_GeometryBooleanTolerance" : ((10671, LCID, 4, 0),()),
		"Pref_GeometryScale" : ((10156, LCID, 4, 0),()),
		"Pref_GlobalLanguage" : ((10724, LCID, 4, 0),()),
		"Pref_GlobalUIScaling" : ((10725, LCID, 4, 0),()),
		"Pref_GraphicsFont" : ((10672, LCID, 4, 0),()),
		"Pref_GraphicsFontSize" : ((10673, LCID, 4, 0),()),
		"Pref_GroupIncludeFiles" : ((10430, LCID, 4, 0),()),
		"Pref_ImproveSinglePrecision" : ((10394, LCID, 4, 0),()),
		"Pref_InterfaceStyle" : ((10135, LCID, 4, 0),()),
		"Pref_JTFileVersion" : ((10443, LCID, 4, 0),()),
		"Pref_KeepSolverWindow" : ((10123, LCID, 4, 0),()),
		"Pref_LegacyXYPlotting" : ((10524, LCID, 4, 0),()),
		"Pref_LengthBasedMeshSize" : ((10081, LCID, 4, 0),()),
		"Pref_LibAnalysis" : ((10064, LCID, 4, 0),()),
		"Pref_LibChart" : ((10525, LCID, 4, 0),()),
		"Pref_LibComputedResultsVectors" : ((10764, LCID, 4, 0),()),
		"Pref_LibComputedVectorNumber" : ((10765, LCID, 4, 0),()),
		"Pref_LibConnectionProp" : ((10346, LCID, 4, 0),()),
		"Pref_LibContPal" : ((10069, LCID, 4, 0),()),
		"Pref_LibFunction" : ((10070, LCID, 4, 0),()),
		"Pref_LibLayup" : ((10462, LCID, 4, 0),()),
		"Pref_LibMatl" : ((10071, LCID, 4, 0),()),
		"Pref_LibMatlDef" : ((10072, LCID, 4, 0),()),
		"Pref_LibPalette" : ((10074, LCID, 4, 0),()),
		"Pref_LibProp" : ((10065, LCID, 4, 0),()),
		"Pref_LibReport" : ((10066, LCID, 4, 0),()),
		"Pref_LibView" : ((10073, LCID, 4, 0),()),
		"Pref_LibViewNumber" : ((10141, LCID, 4, 0),()),
		"Pref_ListingFont" : ((10316, LCID, 4, 0),()),
		"Pref_LoadModifyRotate" : ((10138, LCID, 4, 0),()),
		"Pref_MemoryMappedFiles" : ((10513, LCID, 4, 0),()),
		"Pref_MeshInMemory" : ((10111, LCID, 4, 0),()),
		"Pref_MessageFont" : ((10315, LCID, 4, 0),()),
		"Pref_MetafileToClip" : ((10093, LCID, 4, 0),()),
		"Pref_MiddleMouseButtonOK" : ((10531, LCID, 4, 0),()),
		"Pref_MinimizeDuringSolve" : ((10124, LCID, 4, 0),()),
		"Pref_ModelInfoMaxEntity" : ((10335, LCID, 4, 0),()),
		"Pref_ModelThumbnail" : ((10666, LCID, 4, 0),()),
		"Pref_ModelTooltip" : ((10667, LCID, 4, 0),()),
		"Pref_MsgWndBackColor" : ((10145, LCID, 4, 0),()),
		"Pref_MsgWndCmdBold" : ((10321, LCID, 4, 0),()),
		"Pref_MsgWndCmdColor" : ((10319, LCID, 4, 0),()),
		"Pref_MsgWndErrorBold" : ((10324, LCID, 4, 0),()),
		"Pref_MsgWndErrorColor" : ((10146, LCID, 4, 0),()),
		"Pref_MsgWndFont" : ((10082, LCID, 4, 0),()),
		"Pref_MsgWndFontSize" : ((10143, LCID, 4, 0),()),
		"Pref_MsgWndHighBold" : ((10322, LCID, 4, 0),()),
		"Pref_MsgWndHighColor" : ((10147, LCID, 4, 0),()),
		"Pref_MsgWndRepeatedErrors" : ((10427, LCID, 4, 0),()),
		"Pref_MsgWndTextBold" : ((10320, LCID, 4, 0),()),
		"Pref_MsgWndTextColor" : ((10148, LCID, 4, 0),()),
		"Pref_MsgWndWarnBold" : ((10323, LCID, 4, 0),()),
		"Pref_MsgWndWarnColor" : ((10149, LCID, 4, 0),()),
		"Pref_NXNastEntLicenseServer" : ((10633, LCID, 4, 0),()),
		"Pref_NasAlternateContinue" : ((10439, LCID, 4, 0),()),
		"Pref_NasDballScratch" : ((10440, LCID, 4, 0),()),
		"Pref_NasResTrackRevsion" : ((10631, LCID, 4, 0),()),
		"Pref_NastranMemory" : ((10104, LCID, 4, 0),()),
		"Pref_NastranOutputPath" : ((10106, LCID, 4, 0),()),
		"Pref_NastranOutputTo" : ((10105, LCID, 4, 0),()),
		"Pref_NastranScratchLocation" : ((10461, LCID, 4, 0),()),
		"Pref_NastranWriteAllLdbcSets" : ((10389, LCID, 4, 0),()),
		"Pref_NetKeyDir" : ((10083, LCID, 4, 0),()),
		"Pref_NeutralDigits" : ((10136, LCID, 4, 0),()),
		"Pref_NeutralVersion" : ((10160, LCID, 4, 0),()),
		"Pref_NewPick" : ((10739, LCID, 4, 0),()),
		"Pref_NonmanifoldBooleans" : ((10597, LCID, 4, 0),()),
		"Pref_OnlineHelp_Mode" : ((10759, LCID, 4, 0),()),
		"Pref_OnlineHelp_Path" : ((10760, LCID, 4, 0),()),
		"Pref_OpenMP" : ((10715, LCID, 4, 0),()),
		"Pref_OpenMPThreads" : ((10716, LCID, 4, 0),()),
		"Pref_OpenSaveMethod" : ((10431, LCID, 4, 0),()),
		"Pref_OrientQuad4ForceOutput" : ((10500, LCID, 4, 0),()),
		"Pref_OrientQuad4StrainOutput" : ((10499, LCID, 4, 0),()),
		"Pref_OrientQuad4StressOutput" : ((10498, LCID, 4, 0),()),
		"Pref_OrientQuad8ForceOutput" : ((10503, LCID, 4, 0),()),
		"Pref_OrientQuad8StrainOutput" : ((10502, LCID, 4, 0),()),
		"Pref_OrientQuad8StressOutput" : ((10501, LCID, 4, 0),()),
		"Pref_OrientSolidAnisoOutput" : ((10490, LCID, 4, 0),()),
		"Pref_OrientSolidHyperOutput" : ((10491, LCID, 4, 0),()),
		"Pref_OrientSolidIsoOutput" : ((10489, LCID, 4, 0),()),
		"Pref_OrientTria3ForceOutput" : ((10494, LCID, 4, 0),()),
		"Pref_OrientTria3StrainOutput" : ((10493, LCID, 4, 0),()),
		"Pref_OrientTria3StressOutput" : ((10492, LCID, 4, 0),()),
		"Pref_OrientTria6ForceOutput" : ((10497, LCID, 4, 0),()),
		"Pref_OrientTria6StrainOutput" : ((10496, LCID, 4, 0),()),
		"Pref_OrientTria6StressOutput" : ((10495, LCID, 4, 0),()),
		"Pref_OutputSetTitles" : ((10345, LCID, 4, 0),()),
		"Pref_PaneAltDockSymbols" : ((10428, LCID, 4, 0),()),
		"Pref_PaneCaptionsOnTop" : ((10395, LCID, 4, 0),()),
		"Pref_PerformanceGraphics" : ((10536, LCID, 4, 0),()),
		"Pref_PickAllInside" : ((10103, LCID, 4, 0),()),
		"Pref_PickMethod" : ((10448, LCID, 4, 0),()),
		"Pref_PictureCopyTextForXY" : ((10087, LCID, 4, 0),()),
		"Pref_PictureFormat" : ((10396, LCID, 4, 0),()),
		"Pref_PlaneWheelFactor" : ((10530, LCID, 4, 0),()),
		"Pref_PreV10SurfaceMesh" : ((10447, LCID, 4, 0),()),
		"Pref_PreserveIncludes" : ((10512, LCID, 4, 0),()),
		"Pref_PreserveNextID" : ((10460, LCID, 4, 0),()),
		"Pref_ProgramFont" : ((10317, LCID, 4, 0),()),
		"Pref_ProgramFontSize" : ((10318, LCID, 4, 0),()),
		"Pref_ReadComments" : ((10117, LCID, 4, 0),()),
		"Pref_ReadDirCos" : ((10121, LCID, 4, 0),()),
		"Pref_ReadTabSize" : ((10384, LCID, 4, 0),()),
		"Pref_RecentlyUsedFiles" : ((10140, LCID, 4, 0),()),
		"Pref_RememberDialogPos" : ((10337, LCID, 4, 0),()),
		"Pref_RenderAutoRegen" : ((10330, LCID, 4, 0),()),
		"Pref_RenderBeamEdges" : ((10166, LCID, 4, 0),()),
		"Pref_RenderBestAvailable" : ((10190, LCID, 4, 0),()),
		"Pref_RenderBitBltDelay" : ((10332, LCID, 4, 0),()),
		"Pref_RenderBitmapAlignment" : ((10167, LCID, 4, 0),()),
		"Pref_RenderBlockSize" : ((10455, LCID, 4, 0),()),
		"Pref_RenderCaptureIconified" : ((10515, LCID, 4, 0),()),
		"Pref_RenderCtrlGGroupEvaluate" : ((10721, LCID, 4, 0),()),
		"Pref_RenderDebugAllTime" : ((10453, LCID, 4, 0),()),
		"Pref_RenderDebugElapsedTime" : ((10452, LCID, 4, 0),()),
		"Pref_RenderDebugFrameRate" : ((10510, LCID, 4, 0),()),
		"Pref_RenderDebugOGLErrors" : ((10454, LCID, 4, 0),()),
		"Pref_RenderDebugOGLErrors2" : ((10771, LCID, 4, 0),()),
		"Pref_RenderDialogRefresh" : ((10456, LCID, 4, 0),()),
		"Pref_RenderDisableAbort" : ((10722, LCID, 4, 0),()),
		"Pref_RenderEdgesAsLines" : ((10329, LCID, 4, 0),()),
		"Pref_RenderFastPick" : ((10328, LCID, 4, 0),()),
		"Pref_RenderFastPickVisible" : ((10604, LCID, 4, 0),()),
		"Pref_RenderHW" : ((10094, LCID, 4, 0),()),
		"Pref_RenderMaxMagnification" : ((10550, LCID, 4, 0),()),
		"Pref_RenderMaxVBOMB" : ((10509, LCID, 4, 0),()),
		"Pref_RenderMemoryOpt" : ((10168, LCID, 4, 0),()),
		"Pref_RenderMidside" : ((10095, LCID, 4, 0),()),
		"Pref_RenderMinVBOB" : ((10516, LCID, 4, 0),()),
		"Pref_RenderMultiModelMem" : ((10451, LCID, 4, 0),()),
		"Pref_RenderPixelFormat" : ((10169, LCID, 4, 0),()),
		"Pref_RenderSearchDepth" : ((10333, LCID, 4, 0),()),
		"Pref_RenderSmoothLines" : ((10327, LCID, 4, 0),()),
		"Pref_RenderTDRProtect" : ((10177, LCID, 4, 0),()),
		"Pref_RenderTex2D" : ((10172, LCID, 4, 0),()),
		"Pref_RenderTexAllTri" : ((10173, LCID, 4, 0),()),
		"Pref_RenderTexNumber" : ((10175, LCID, 4, 0),()),
		"Pref_RenderTexSmooth" : ((10174, LCID, 4, 0),()),
		"Pref_RenderTiming" : ((10176, LCID, 4, 0),()),
		"Pref_RenderTrailingZeroes" : ((10508, LCID, 4, 0),()),
		"Pref_RenderVBOUsage" : ((10511, LCID, 4, 0),()),
		"Pref_RenderVertexArrays" : ((10331, LCID, 4, 0),()),
		"Pref_RenderXORPicking" : ((10450, LCID, 4, 0),()),
		"Pref_RepeatCreate" : ((10598, LCID, 4, 0),()),
		"Pref_RepeateCreate" : ((10099, LCID, 4, 0),()),
		"Pref_ResCopySaveLogoScale" : ((10423, LCID, 4, 0),()),
		"Pref_ResCopySaveMethod" : ((10408, LCID, 4, 0),()),
		"Pref_ResCopySaveScale" : ((10409, LCID, 4, 0),()),
		"Pref_ResFixedHeight" : ((10413, LCID, 4, 0),()),
		"Pref_ResFixedWidth" : ((10412, LCID, 4, 0),()),
		"Pref_ResFontScale" : ((10535, LCID, 4, 0),()),
		"Pref_ResPenMethod" : ((10419, LCID, 4, 0),()),
		"Pref_ResPenScale" : ((10420, LCID, 4, 0),()),
		"Pref_ResPrintLogoScale" : ((10422, LCID, 4, 0),()),
		"Pref_ResPrintMethod" : ((10406, LCID, 4, 0),()),
		"Pref_ResPrintScale" : ((10407, LCID, 4, 0),()),
		"Pref_ResScaleWithHeight" : ((10411, LCID, 4, 0),()),
		"Pref_ResScaleWithWidth" : ((10410, LCID, 4, 0),()),
		"Pref_ResScreenLogoScale" : ((10421, LCID, 4, 0),()),
		"Pref_ResetNextID" : ((10617, LCID, 4, 0),()),
		"Pref_ResultStudyTitle" : ((10541, LCID, 4, 0),()),
		"Pref_ReverseMouseWheel" : ((10301, LCID, 4, 0),()),
		"Pref_ReversePanZoom" : ((10302, LCID, 4, 0),()),
		"Pref_RotateAroundCursor" : ((10632, LCID, 4, 0),()),
		"Pref_RunProgNewModels" : ((10110, LCID, 4, 0),()),
		"Pref_SC3DResultsDest" : ((10755, LCID, 4, 0),()),
		"Pref_SaveTeamcenterInfo" : ((10768, LCID, 4, 0),()),
		"Pref_ScrollBackLines" : ((10150, LCID, 4, 0),()),
		"Pref_SelectionToolsPath" : ((10761, LCID, 4, 0),()),
		"Pref_SharedLibPath" : ((10669, LCID, 4, 0),()),
		"Pref_Show0To360Angles" : ((10529, LCID, 4, 0),()),
		"Pref_ShowAutoscale" : ((10648, LCID, 4, 0),()),
		"Pref_ShowColor" : ((10488, LCID, 4, 0),()),
		"Pref_ShowLabels" : ((10458, LCID, 4, 0),()),
		"Pref_ShowMode" : ((10457, LCID, 4, 0),()),
		"Pref_ShowNormals" : ((10459, LCID, 4, 0),()),
		"Pref_SkipDMIGEntries" : ((10706, LCID, 4, 0),()),
		"Pref_SnapTo" : ((10549, LCID, 4, 0),()),
		"Pref_SolAbaqusCmd" : ((10628, LCID, 4, 0),()),
		"Pref_SolAbaqusProgram" : ((10622, LCID, 4, 0),()),
		"Pref_SolAnsysCmd" : ((10627, LCID, 4, 0),()),
		"Pref_SolAnsysProgram" : ((10621, LCID, 4, 0),()),
		"Pref_SolEchoCmd" : ((10630, LCID, 4, 0),()),
		"Pref_SolLSDynaCmd" : ((10629, LCID, 4, 0),()),
		"Pref_SolLSDynaProgram" : ((10623, LCID, 4, 0),()),
		"Pref_SolMSCNastCmd" : ((10625, LCID, 4, 0),()),
		"Pref_SolMSCNastProgram" : ((10619, LCID, 4, 0),()),
		"Pref_SolNEINastCmd" : ((10626, LCID, 4, 0),()),
		"Pref_SolNEINastProgram" : ((10620, LCID, 4, 0),()),
		"Pref_SolNXNastCmd" : ((10624, LCID, 4, 0),()),
		"Pref_SolNXNastProgram" : ((10618, LCID, 4, 0),()),
		"Pref_SolverMemory" : ((10137, LCID, 4, 0),()),
		"Pref_SpaceballDebug" : ((10465, LCID, 4, 0),()),
		"Pref_SpaceballSensitivity" : ((10464, LCID, 4, 0),()),
		"Pref_StartupProg" : ((10078, LCID, 4, 0),()),
		"Pref_StudyAppendFemapTitles" : ((10551, LCID, 4, 0),()),
		"Pref_SuppressScreenEntities" : ((10674, LCID, 4, 0),()),
		"Pref_SynchronizedRotation" : ((10649, LCID, 4, 0),()),
		"Pref_TCDownloadDir" : ((10767, LCID, 4, 0),()),
		"Pref_TabPasteIgnoreDelimeter" : ((10547, LCID, 4, 0),()),
		"Pref_TbxAutomesh" : ((10405, LCID, 4, 0),()),
		"Pref_TbxExpandActive" : ((10404, LCID, 4, 0),()),
		"Pref_TimedSaveCommands" : ((10130, LCID, 4, 0),()),
		"Pref_TimedSaveInterval" : ((10131, LCID, 4, 0),()),
		"Pref_TimedSaveNotify" : ((10113, LCID, 4, 0),()),
		"Pref_TimedSaveOn" : ((10114, LCID, 4, 0),()),
		"Pref_TooltipDelay" : ((10100, LCID, 4, 0),()),
		"Pref_TooltipDuration" : ((10101, LCID, 4, 0),()),
		"Pref_TrackMousePick" : ((10102, LCID, 4, 0),()),
		"Pref_UnifiedArchitecture" : ((10769, LCID, 4, 0),()),
		"Pref_UseMSCNastran2004" : ((10338, LCID, 4, 0),()),
		"Pref_UseOldAnalysisInterfaces" : ((10347, LCID, 4, 0),()),
		"Pref_UseRegionDecimalChar" : ((10533, LCID, 4, 0),()),
		"Pref_UseSubcaseIdForOutput" : ((10602, LCID, 4, 0),()),
		"Pref_UseVisQ" : ((10122, LCID, 4, 0),()),
		"Pref_UserToolsPath" : ((10596, LCID, 4, 0),()),
		"Pref_ViewBkgdBitmap" : ((10306, LCID, 4, 0),()),
		"Pref_ViewDimetric" : ((10075, LCID, 4, 0),()),
		"Pref_ViewDynamSpeed" : ((10161, LCID, 4, 0),()),
		"Pref_ViewDynamicMode" : ((10142, LCID, 4, 0),()),
		"Pref_ViewIsometric" : ((10076, LCID, 4, 0),()),
		"Pref_ViewLogo" : ((10307, LCID, 4, 0),()),
		"Pref_ViewLogoScreenRes" : ((10305, LCID, 4, 0),()),
		"Pref_ViewLogoTransparent" : ((10776, LCID, 4, 0),()),
		"Pref_ViewPostDynamicMaxMin" : ((10521, LCID, 4, 0),()),
		"Pref_ViewTrimetric" : ((10077, LCID, 4, 0),()),
		"Pref_WorkplaneNotVisible" : ((10089, LCID, 4, 0),()),
		"Pref_WriteComments" : ((10118, LCID, 4, 0),()),
		"Pref_WtmassFactor" : ((10162, LCID, 4, 0),()),
		"Pref_ZoomAroundCursor" : ((10601, LCID, 4, 0),()),
		"Pref_nastran_param_ogeom" : ((10756, LCID, 4, 0),()),
		"Print_Copies" : ((10250, LCID, 4, 0),()),
		"ScratchName" : ((10259, LCID, 4, 0),()),
		"SelectOutputSetsFromStudies" : ((10711, LCID, 4, 0),()),
		"SerialNumber" : ((10262, LCID, 4, 0),()),
		"SolidAllowNonManifold" : ((10539, LCID, 4, 0),()),
		"Solid_UpdateActive" : ((10252, LCID, 4, 0),()),
		"Solid_UpdateDelete" : ((10253, LCID, 4, 0),()),
		"Solid_UpdateMaterialData" : ((10417, LCID, 4, 0),()),
		"Solid_UpdateResizeMode" : ((10254, LCID, 4, 0),()),
		"Solid_UpdateResizeTol" : ((10255, LCID, 4, 0),()),
		"Solid_UpdateUseParasolidIdent" : ((10418, LCID, 4, 0),()),
		"Tool_CursorSingle" : ((10247, LCID, 4, 0),()),
		"Tool_MergeTolerance" : ((10249, LCID, 4, 0),()),
		"Tool_MergeToleranceAuto" : ((10251, LCID, 4, 0),()),
		"UndoGrayed" : ((10654, LCID, 4, 0),()),
		"VectorDialogMethod" : ((10366, LCID, 4, 0),()),
		"feAeroPanel" : ((10433, LCID, 4, 0),()),
		"feAeroProp" : ((10434, LCID, 4, 0),()),
		"feAeroSpline" : ((10435, LCID, 4, 0),()),
		"feAeroSurf" : ((10442, LCID, 4, 0),()),
		"feAnalysisCase" : ((10036, LCID, 4, 0),()),
		"feAnalysisMgr" : ((10310, LCID, 4, 0),()),
		"feAnalysisSet" : ((10035, LCID, 4, 0),()),
		"feAnalysisStep" : ((10750, LCID, 4, 0),()),
		"feAnalysisStudy" : ((10548, LCID, 4, 0),()),
		"feBCDefinition" : ((10356, LCID, 4, 0),()),
		"feBCEqn" : ((10010, LCID, 4, 0),()),
		"feBCGeom" : ((10009, LCID, 4, 0),()),
		"feBCNode" : ((10008, LCID, 4, 0),()),
		"feBCSet" : ((10007, LCID, 4, 0),()),
		"feBeamCalculator" : ((10538, LCID, 4, 0),()),
		"feBearingSpeedDefinition" : ((10774, LCID, 4, 0),()),
		"feBodyMesher" : ((10753, LCID, 4, 0),()),
		"feCSys" : ((10006, LCID, 4, 0),()),
		"feChart" : ((10506, LCID, 4, 0),()),
		"feChartSeries" : ((10507, LCID, 4, 0),()),
		"feComputedResultsVectors" : ((10763, LCID, 4, 0),()),
		"feConnection" : ((10313, LCID, 4, 0),()),
		"feConnectionProp" : ((10312, LCID, 4, 0),()),
		"feConnectionRegion" : ((10359, LCID, 4, 0),()),
		"feContact" : ((10021, LCID, 4, 0),()),
		"feCopyTool" : ((10663, LCID, 4, 0),()),
		"feCurve" : ((10032, LCID, 4, 0),()),
		"feDataSurf" : ((10363, LCID, 4, 0),()),
		"feDataTable" : ((10364, LCID, 4, 0),()),
		"feDesignEquation" : ((10754, LCID, 4, 0),()),
		"feDiscreteValueSet" : ((10660, LCID, 4, 0),()),
		"feDrawErase" : ((10599, LCID, 4, 0),()),
		"feElem" : ((10005, LCID, 4, 0),()),
		"feElemAddRemove" : ((10766, LCID, 4, 0),()),
		"feElementQuality" : ((10441, LCID, 4, 0),()),
		"feFibersim" : ((10670, LCID, 4, 0),()),
		"feFlexibleSlider" : ((10758, LCID, 4, 0),()),
		"feFreebody" : ((10437, LCID, 4, 0),()),
		"feFreq" : ((10605, LCID, 4, 0),()),
		"feFunction" : ((10022, LCID, 4, 0),()),
		"feGFXArrow" : ((10353, LCID, 4, 0),()),
		"feGFXLine" : ((10352, LCID, 4, 0),()),
		"feGFXPoint" : ((10351, LCID, 4, 0),()),
		"feGFXQuad4" : ((10355, LCID, 4, 0),()),
		"feGFXTria3" : ((10354, LCID, 4, 0),()),
		"feGeometryInterface" : ((10772, LCID, 4, 0),()),
		"feGlobalPly" : ((10358, LCID, 4, 0),()),
		"feGlobalStep" : ((10751, LCID, 4, 0),()),
		"feGroup" : ((10016, LCID, 4, 0),()),
		"feInterpolate" : ((10528, LCID, 4, 0),()),
		"feJoint" : ((10757, LCID, 4, 0),()),
		"feLayer" : ((10020, LCID, 4, 0),()),
		"feLayup" : ((10357, LCID, 4, 0),()),
		"feLoadBolt" : ((10360, LCID, 4, 0),()),
		"feLoadDefinition" : ((10350, LCID, 4, 0),()),
		"feLoadETemp" : ((10013, LCID, 4, 0),()),
		"feLoadGeom" : ((10015, LCID, 4, 0),()),
		"feLoadMesh" : ((10014, LCID, 4, 0),()),
		"feLoadNTemp" : ((10012, LCID, 4, 0),()),
		"feLoadSet" : ((10011, LCID, 4, 0),()),
		"feMapData" : ((10534, LCID, 4, 0),()),
		"feMapOutput" : ((10361, LCID, 4, 0),()),
		"feMatl" : ((10002, LCID, 4, 0),()),
		"feMatrixInput" : ((10709, LCID, 4, 0),()),
		"feMergeTool" : ((10714, LCID, 4, 0),()),
		"feMeshHardPoint" : ((10655, LCID, 4, 0),()),
		"feMeshHardPointDefinition" : ((10665, LCID, 4, 0),()),
		"feMesher" : ((10438, LCID, 4, 0),()),
		"feMidFaceCentroidModel" : ((10634, LCID, 4, 0),()),
		"feMonitorPoint" : ((10708, LCID, 4, 0),()),
		"feMoveTool" : ((10664, LCID, 4, 0),()),
		"feNode" : ((10004, LCID, 4, 0),()),
		"feOptMC" : ((10662, LCID, 4, 0),()),
		"feOptRel" : ((10656, LCID, 4, 0),()),
		"feOptResp" : ((10658, LCID, 4, 0),()),
		"feOptim" : ((10023, LCID, 4, 0),()),
		"feOutputSet" : ((10024, LCID, 4, 0),()),
		"fePlane" : ((10653, LCID, 4, 0),()),
		"fePlyMaterial" : ((10762, LCID, 4, 0),()),
		"fePoint" : ((10031, LCID, 4, 0),()),
		"feProp" : ((10003, LCID, 4, 0),()),
		"fePublishTool" : ((10726, LCID, 4, 0),()),
		"feRead" : ((10001, LCID, 4, 0),()),
		"feReference" : ((10368, LCID, 4, 0),()),
		"feReport" : ((10019, LCID, 4, 0),()),
		"feResults" : ((10520, LCID, 4, 0),()),
		"feResultsIDQuery" : ((10705, LCID, 4, 0),()),
		"feRotationalSpeedDefinition" : ((10775, LCID, 4, 0),()),
		"feSEReference" : ((10505, LCID, 4, 0),()),
		"feScratch" : ((10348, LCID, 4, 0),()),
		"feSelector" : ((10349, LCID, 4, 0),()),
		"feSet" : ((10000, LCID, 4, 0),()),
		"feSolid" : ((10034, LCID, 4, 0),()),
		"feSolidCleanupTool" : ((10770, LCID, 4, 0),()),
		"feSolidEdit" : ((10712, LCID, 4, 0),()),
		"feSort" : ((10314, LCID, 4, 0),()),
		"feStressLinear" : ((10504, LCID, 4, 0),()),
		"feSurface" : ((10033, LCID, 4, 0),()),
		"feTMGBC" : ((10026, LCID, 4, 0),()),
		"feTMGCtrl" : ((10027, LCID, 4, 0),()),
		"feTMGInt" : ((10028, LCID, 4, 0),()),
		"feTMGOpt" : ((10029, LCID, 4, 0),()),
		"feTMGReal" : ((10030, LCID, 4, 0),()),
		"feTableData" : ((10527, LCID, 4, 0),()),
		"feText" : ((10309, LCID, 4, 0),()),
		"feTrackData" : ((10537, LCID, 4, 0),()),
		"feUserData" : ((10037, LCID, 4, 0),()),
		"feUserDefinedGraphics" : ((10646, LCID, 4, 0),()),
		"feVar" : ((10018, LCID, 4, 0),()),
		"feVector" : ((10652, LCID, 4, 0),()),
		"feView" : ((10017, LCID, 4, 0),()),
		"feViewOrient" : ((10600, LCID, 4, 0),()),
		"feXYPlotDefinition" : ((10773, LCID, 4, 0),()),
		"hListWnd" : ((10257, LCID, 4, 0),()),
		"hMainWnd" : ((10256, LCID, 4, 0),()),
		"vInfo_ActiveID" : ((10296, LCID, 4, 0),()),
		"vInfo_ActiveType" : ((10297, LCID, 4, 0),()),
		"vInfo_Color" : ((10298, LCID, 4, 0),()),
		"vInfo_Count" : ((10272, LCID, 4, 0),()),
		"vInfo_ElemFormulation1" : ((10273, LCID, 4, 0),()),
		"vInfo_ElemFormulation2" : ((10274, LCID, 4, 0),()),
		"vInfo_ElemFormulation3" : ((10645, LCID, 4, 0),()),
		"vInfo_Increment" : ((10294, LCID, 4, 0),()),
		"vInfo_MatlAngleVec" : ((10286, LCID, 4, 0),()),
		"vInfo_MaxID" : ((10270, LCID, 4, 0),()),
		"vInfo_MinID" : ((10271, LCID, 4, 0),()),
		"vInfo_ModelSizeX" : ((10288, LCID, 4, 0),()),
		"vInfo_ModelSizeY" : ((10289, LCID, 4, 0),()),
		"vInfo_ModelSizeZ" : ((10290, LCID, 4, 0),()),
		"vInfo_NextID" : ((10295, LCID, 4, 0),()),
		"vInfo_PermBC" : ((10268, LCID, 4, 0),()),
		"vInfo_SnapSpacing" : ((10283, LCID, 4, 0),()),
		"vInfo_SurfDivisionsCurved" : ((10300, LCID, 4, 0),()),
		"vInfo_SurfDivisionsLinear" : ((10299, LCID, 4, 0),()),
		"vInfo_WorkplaneOrigin" : ((10275, LCID, 4, 0),()),
		"vInfo_WorkplanePrevOrigin" : ((10279, LCID, 4, 0),()),
		"vInfo_WorkplanePrevX" : ((10280, LCID, 4, 0),()),
		"vInfo_WorkplanePrevY" : ((10281, LCID, 4, 0),()),
		"vInfo_WorkplanePrevZ" : ((10282, LCID, 4, 0),()),
		"vInfo_WorkplaneRuler" : ((10269, LCID, 4, 0),()),
		"vInfo_WorkplaneSizeX" : ((10284, LCID, 4, 0),()),
		"vInfo_WorkplaneSizeY" : ((10285, LCID, 4, 0),()),
		"vInfo_WorkplaneX" : ((10276, LCID, 4, 0),()),
		"vInfo_WorkplaneY" : ((10277, LCID, 4, 0),()),
		"vInfo_WorkplaneZ" : ((10278, LCID, 4, 0),()),
		"vPref_AngleDimetric" : ((10264, LCID, 4, 0),()),
		"vPref_AngleIsometric" : ((10265, LCID, 4, 0),()),
		"vPref_AngleTrimetric" : ((10266, LCID, 4, 0),()),
		"vPref_EntityColor" : ((10291, LCID, 4, 0),()),
		"vPref_FBDefComponents" : ((10610, LCID, 4, 0),()),
		"vPref_FBDefContributions" : ((10606, LCID, 4, 0),()),
		"vPref_FBDefNodalVectorMode" : ((10608, LCID, 4, 0),()),
		"vPref_FBDefTotalVectorMode" : ((10609, LCID, 4, 0),()),
		"vPref_NasQstOn" : ((10402, LCID, 4, 0),()),
		"vPref_NasQstVal" : ((10403, LCID, 4, 0),()),
		"vPref_RenderRotate" : ((10267, LCID, 4, 0),()),
		"vPref_SpaceballFactors" : ((10463, LCID, 4, 0),()),
		"vTool_CursorXYZ" : ((10287, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

from win32com.client import CoClassBaseClass
class AeroPanel(CoClassBaseClass): # A CoClass
	CLSID = IID('{923D4FF9-4C93-4DAA-8223-F275CC54C69F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAeroPanel,
	]
	default_interface = IAeroPanel

class AeroProp(CoClassBaseClass): # A CoClass
	CLSID = IID('{6C3881ED-8C68-4807-B69A-4430737F37B1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAeroProp,
	]
	default_interface = IAeroProp

class AeroSpline(CoClassBaseClass): # A CoClass
	CLSID = IID('{39B680B4-1AD7-44BB-8C89-A699F3B191AE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAeroSpline,
	]
	default_interface = IAeroSpline

class AeroSurf(CoClassBaseClass): # A CoClass
	CLSID = IID('{61CFF171-CC7E-40BB-A20F-B1F065C36B29}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAeroSurf,
	]
	default_interface = IAeroSurf

class AnalysisCase(CoClassBaseClass): # A CoClass
	CLSID = IID('{AB06C176-0E7E-11D5-9471-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAnalysisCase,
	]
	default_interface = IAnalysisCase

class AnalysisMgr(CoClassBaseClass): # A CoClass
	CLSID = IID('{00EF42FA-0E77-11D5-9471-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAnalysisMgr,
	]
	default_interface = IAnalysisMgr

class AnalysisStep(CoClassBaseClass): # A CoClass
	CLSID = IID('{B49E120C-C070-4C6D-BB09-036D188F05A4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAnalysisStep,
	]
	default_interface = IAnalysisStep

class AnalysisStudy(CoClassBaseClass): # A CoClass
	CLSID = IID('{589EAFBA-B3D0-42FB-B902-FE0A88B7EC80}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAnalysisStudy,
	]
	default_interface = IAnalysisStudy

class BCDefinition(CoClassBaseClass): # A CoClass
	CLSID = IID('{F1704418-2455-4C38-8C0C-AE23E062D421}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBCDefinition,
	]
	default_interface = IBCDefinition

class BCEqn(CoClassBaseClass): # A CoClass
	CLSID = IID('{56434B16-F392-11D4-9453-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBCEqn,
	]
	default_interface = IBCEqn

class BCGeom(CoClassBaseClass): # A CoClass
	CLSID = IID('{D7297E18-F305-11D4-9452-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBCGeom,
	]
	default_interface = IBCGeom

class BCNode(CoClassBaseClass): # A CoClass
	CLSID = IID('{D0E25458-F2FB-11D4-9452-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBCNode,
	]
	default_interface = IBCNode

class BCSet(CoClassBaseClass): # A CoClass
	CLSID = IID('{5D2F5E16-F2F1-11D4-9452-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBCSet,
	]
	default_interface = IBCSet

class BeamCalculator(CoClassBaseClass): # A CoClass
	CLSID = IID('{3A62FE4E-D156-4F16-9C1B-F81C6BB4089A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBeamCalculator,
	]
	default_interface = IBeamCalculator

class BearingSpeedDefinition(CoClassBaseClass): # A CoClass
	CLSID = IID('{F5B85DA5-FA4D-447A-A50A-27C71A35D8AC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBearingSpeedDefinition,
	]
	default_interface = IBearingSpeedDefinition

class BodyMesher(CoClassBaseClass): # A CoClass
	CLSID = IID('{F2509BC8-33D7-4DF8-BDE1-3CB362DB1ACD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBodyMesher,
	]
	default_interface = IBodyMesher

class CSys(CoClassBaseClass): # A CoClass
	CLSID = IID('{10CE53BA-F2E2-11D4-9452-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICSys,
	]
	default_interface = ICSys

class Chart(CoClassBaseClass): # A CoClass
	CLSID = IID('{7AADC5F1-400B-4984-9D12-314296952F1F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IChart,
	]
	default_interface = IChart

class ChartSeries(CoClassBaseClass): # A CoClass
	CLSID = IID('{19988E83-F344-4944-82DE-AEBE26689F33}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IChartSeries,
	]
	default_interface = IChartSeries

class ComputedResultsVectors(CoClassBaseClass): # A CoClass
	CLSID = IID('{AAA42219-5244-45C6-A6B4-4AD46D318C4D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IComputedResultsVectors,
	]
	default_interface = IComputedResultsVectors

class Connection(CoClassBaseClass): # A CoClass
	CLSID = IID('{1A8C9C55-6711-4498-BDD9-8BD54586842E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IConnection,
	]
	default_interface = IConnection

class ConnectionProp(CoClassBaseClass): # A CoClass
	CLSID = IID('{FA64FD81-5C92-425F-87B4-FC849D84898B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IConnectionProp,
	]
	default_interface = IConnectionProp

class ConnectionRegion(CoClassBaseClass): # A CoClass
	CLSID = IID('{14057456-0382-11D5-9465-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IContact,
	]
	default_interface = IContact

class Contact(CoClassBaseClass): # A CoClass
	CLSID = IID('{14057454-0382-11D5-9465-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IContact,
	]
	default_interface = IContact

class CopyTool(CoClassBaseClass): # A CoClass
	CLSID = IID('{72722F0C-7881-406C-9ADE-AB1BD014068F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICopyTool,
	]
	default_interface = ICopyTool

class Curve(CoClassBaseClass): # A CoClass
	CLSID = IID('{1F9F16D0-09D6-11D5-946C-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICurve,
	]
	default_interface = ICurve

class DBase(CoClassBaseClass): # A CoClass
	CLSID = IID('{90561A66-EB1F-11D4-9447-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDBase,
	]
	default_interface = IDBase

class DataSurf(CoClassBaseClass): # A CoClass
	CLSID = IID('{8F814532-166A-4092-BBD8-C37483772F1E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataSurf,
	]
	default_interface = IDataSurf

class DataTable(CoClassBaseClass): # A CoClass
	CLSID = IID('{473E5698-513B-4A26-BD0F-FDB36820E7B1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataTable,
	]
	default_interface = IDataTable

class DesignEquation(CoClassBaseClass): # A CoClass
	CLSID = IID('{1CA3384F-4A57-4BB1-9C7F-BE32974ED31C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDesignEquation,
	]
	default_interface = IDesignEquation

class DiscreteValueSet(CoClassBaseClass): # A CoClass
	CLSID = IID('{C05A6065-9B64-4E95-BF20-EEAA0E741159}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDiscreteValueSet,
	]
	default_interface = IDiscreteValueSet

class DrawErase(CoClassBaseClass): # A CoClass
	CLSID = IID('{0BECB76B-5F94-4718-942B-9A2A866A59D1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDrawErase,
	]
	default_interface = IDrawErase

class Elem(CoClassBaseClass): # A CoClass
	CLSID = IID('{1E6C2700-F16A-11D4-9450-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IElem,
	]
	default_interface = IElem

class ElemAddRemove(CoClassBaseClass): # A CoClass
	CLSID = IID('{65FADBB9-C7F0-4587-92DD-309E47A66F37}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IElemAddRemove,
	]
	default_interface = IElemAddRemove

class ElementQuality(CoClassBaseClass): # A CoClass
	CLSID = IID('{DED875D6-7D90-445B-89C7-17D709DB45F9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IElementQuality,
	]
	default_interface = IElementQuality

class Fibersim(CoClassBaseClass): # A CoClass
	CLSID = IID('{F8E33640-CC4A-447D-BFFD-B70D8D6B51FB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFibersim,
	]
	default_interface = IFibersim

class FlexibleSlider(CoClassBaseClass): # A CoClass
	CLSID = IID('{AA0C28B6-A618-4ADD-B1AB-0C794A44CA27}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFlexibleSlider,
	]
	default_interface = IFlexibleSlider

class Freebody(CoClassBaseClass): # A CoClass
	CLSID = IID('{F39A93F4-DFD9-42D5-B663-8F09A959DAFE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFreebody,
	]
	default_interface = IFreebody

class Frequency(CoClassBaseClass): # A CoClass
	CLSID = IID('{BC4680A6-7B1C-449B-B7F7-AAF21EC0ABD3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFreq,
	]
	default_interface = IFreq

class Function(CoClassBaseClass): # A CoClass
	CLSID = IID('{14481C58-0767-11D5-9467-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFunction,
	]
	default_interface = IFunction

class GFXArrow(CoClassBaseClass): # A CoClass
	CLSID = IID('{1694667C-A6BD-4EA1-B1F0-6485588CDAEB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGFXArrow,
	]
	default_interface = IGFXArrow

class GFXLine(CoClassBaseClass): # A CoClass
	CLSID = IID('{72FA0DCF-21F2-4E55-9EDC-5D4F64ED7EC6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGFXLine,
	]
	default_interface = IGFXLine

class GFXPoint(CoClassBaseClass): # A CoClass
	CLSID = IID('{90C90B36-D880-497A-9CD6-AAC2CADB7B7C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGFXPoint,
	]
	default_interface = IGFXPoint

class GFXQuad4(CoClassBaseClass): # A CoClass
	CLSID = IID('{5070769D-079C-46E2-BB16-57D7260F9C2B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGFXQuad4,
	]
	default_interface = IGFXQuad4

class GFXTria3(CoClassBaseClass): # A CoClass
	CLSID = IID('{CAC6D4FB-4D32-42C5-910C-D73FBB9AEB62}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGFXTria3,
	]
	default_interface = IGFXTria3

class GeometryInterface(CoClassBaseClass): # A CoClass
	CLSID = IID('{8E76D487-C2EE-4C57-A491-756662689141}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGeometryInterface,
	]
	default_interface = IGeometryInterface

class GlobalStep(CoClassBaseClass): # A CoClass
	CLSID = IID('{4DEBC496-8BC4-4B09-A866-FF3A324BA3B7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGlobalStep,
	]
	default_interface = IGlobalStep

class Interpolate(CoClassBaseClass): # A CoClass
	CLSID = IID('{60266D05-AF68-4B10-906C-4BDAFADE3746}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IInterpolate,
	]
	default_interface = IInterpolate

class Joint(CoClassBaseClass): # A CoClass
	CLSID = IID('{51AE9789-73AE-4D75-85E7-328734699211}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IJoint,
	]
	default_interface = IJoint

class Layup(CoClassBaseClass): # A CoClass
	CLSID = IID('{EDB333C5-3711-47A5-A628-33B4B8768F88}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILayup,
	]
	default_interface = ILayup

class LoadBolt(CoClassBaseClass): # A CoClass
	CLSID = IID('{0DC9D657-721A-4AE7-B468-0C4B0FDC97AA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoadBolt,
	]
	default_interface = ILoadBolt

class LoadDefinition(CoClassBaseClass): # A CoClass
	CLSID = IID('{A9BF3A21-E8F6-4D5C-BC48-A191C61C57D2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoadDefinition,
	]
	default_interface = ILoadDefinition

class LoadETemp(CoClassBaseClass): # A CoClass
	CLSID = IID('{1FAF0E16-F6C9-11D4-9456-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoadETemp,
	]
	default_interface = ILoadETemp

class LoadGeom(CoClassBaseClass): # A CoClass
	CLSID = IID('{78456268-F7A9-11D4-9457-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoadGeom,
	]
	default_interface = ILoadGeom

class LoadMesh(CoClassBaseClass): # A CoClass
	CLSID = IID('{FFDF9E7E-F6DD-11D4-9456-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoadMesh,
	]
	default_interface = ILoadMesh

class LoadNTemp(CoClassBaseClass): # A CoClass
	CLSID = IID('{33A4C0D6-F6C5-11D4-9456-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoadNTemp,
	]
	default_interface = ILoadNTemp

class LoadSet(CoClassBaseClass): # A CoClass
	CLSID = IID('{39A8F664-F3CF-11D4-9453-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoadSet,
	]
	default_interface = ILoadSet

class MapData(CoClassBaseClass): # A CoClass
	CLSID = IID('{0023EA25-812A-4253-A431-86B427A49C8C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMapData,
	]
	default_interface = IMapData

class MapOutput(CoClassBaseClass): # A CoClass
	CLSID = IID('{FB7C8191-2114-43D6-86DE-78138CDF8C0B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMapOutput,
	]
	default_interface = IMapOutput

class Matl(CoClassBaseClass): # A CoClass
	CLSID = IID('{0AD6E2EA-EE3E-11D4-944C-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMatl,
	]
	default_interface = IMatl

class MatrixInput(CoClassBaseClass): # A CoClass
	CLSID = IID('{2B6ABCD3-ABB6-448D-BC13-FB9C102792B9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMatrixInput,
	]
	default_interface = IMatrixInput

class MergeTool(CoClassBaseClass): # A CoClass
	CLSID = IID('{8B79ED27-CCB9-4E14-9C0B-49E9EC00B1DC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMergeTool,
	]
	default_interface = IMergeTool

class MeshHardPoint(CoClassBaseClass): # A CoClass
	CLSID = IID('{3054CBAC-8117-467C-8987-74764DC3DF3D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMeshHardPoint,
	]
	default_interface = IMeshHardPoint

class MeshHardPointDefinition(CoClassBaseClass): # A CoClass
	CLSID = IID('{D6EDD9A7-EFF2-41AC-891A-F9FED8F10CEE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMeshHardPointDefinition,
	]
	default_interface = IMeshHardPointDefinition

class Mesher(CoClassBaseClass): # A CoClass
	CLSID = IID('{B0BD5EA5-C79D-4140-83FF-0642F66D2F37}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMesher,
	]
	default_interface = IMesher

class MidFaceCentroidModel(CoClassBaseClass): # A CoClass
	CLSID = IID('{8D7600B6-C1B7-4740-8D63-50E476A84B2D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMidFaceCentroidModel,
	]
	default_interface = IMidFaceCentroidModel

class MonitorPoint(CoClassBaseClass): # A CoClass
	CLSID = IID('{80701FE2-7A74-44F7-936B-218FA64D8D91}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMonitorPoint,
	]
	default_interface = IMonitorPoint

class MoveTool(CoClassBaseClass): # A CoClass
	CLSID = IID('{23FA0A31-1F8E-4ED3-A527-F3F46B40DC9F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMoveTool,
	]
	default_interface = IMoveTool

class Node(CoClassBaseClass): # A CoClass
	CLSID = IID('{43752AF8-E669-11D4-9441-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		INode,
	]
	default_interface = INode

class OptMC(CoClassBaseClass): # A CoClass
	CLSID = IID('{56532637-5FE8-417C-B067-B131C22DC038}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOptMC,
	]
	default_interface = IOptMC

class OptRel(CoClassBaseClass): # A CoClass
	CLSID = IID('{859D91FA-AFD8-4561-83FB-1F02033297C3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOptRel,
	]
	default_interface = IOptRel

class OptResp(CoClassBaseClass): # A CoClass
	CLSID = IID('{2BF41A8E-BFEF-479D-9C37-146A3AF46FCE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOptResp,
	]
	default_interface = IOptResp

class Optim(CoClassBaseClass): # A CoClass
	CLSID = IID('{D3A5591B-080C-11D5-9468-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOptim,
	]
	default_interface = IOptim

class Output(CoClassBaseClass): # A CoClass
	CLSID = IID('{F7E2A8A2-0820-11D5-9468-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOutput,
	]
	default_interface = IOutput

class OutputSet(CoClassBaseClass): # A CoClass
	CLSID = IID('{423C4776-0814-11D5-9468-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOutputSet,
	]
	default_interface = IOutputSet

class Plane(CoClassBaseClass): # A CoClass
	CLSID = IID('{891A6127-406E-4438-8A3F-AF254F4508DD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPlane,
	]
	default_interface = IPlane

class PlyMaterial(CoClassBaseClass): # A CoClass
	CLSID = IID('{86B145A2-34EE-4242-BC0D-216007960CA1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPlyMaterial,
	]
	default_interface = IPlyMaterial

class Point(CoClassBaseClass): # A CoClass
	CLSID = IID('{A97FA4FC-09CA-11D5-946C-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPoint,
	]
	default_interface = IPoint

class Prop(CoClassBaseClass): # A CoClass
	CLSID = IID('{7110873C-F096-11D4-944F-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IProp,
	]
	default_interface = IProp

class PublishTable(CoClassBaseClass): # A CoClass
	CLSID = IID('{BE32C853-7FC3-4486-AD34-DF79ABD7EC56}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPublishTable,
	]
	default_interface = IPublishTable

class PublishTool(CoClassBaseClass): # A CoClass
	CLSID = IID('{49201AE4-58D3-431E-B227-3128F38A55E2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPublishTool,
	]
	default_interface = IPublishTool

class Read(CoClassBaseClass): # A CoClass
	CLSID = IID('{86603852-0DA7-11D5-9470-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IRead,
	]
	default_interface = IRead

class Reference(CoClassBaseClass): # A CoClass
	CLSID = IID('{E6F57AB1-E85E-455B-AA4D-4FF48824BB31}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IReference,
	]
	default_interface = IReference

class Report(CoClassBaseClass): # A CoClass
	CLSID = IID('{0D85757E-0374-11D5-9465-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IReport,
	]
	default_interface = IReport

class Results(CoClassBaseClass): # A CoClass
	CLSID = IID('{2B88E74B-3213-47AB-9CAD-0AEA2E415F16}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IResults,
	]
	default_interface = IResults

class ResultsIDQuery(CoClassBaseClass): # A CoClass
	CLSID = IID('{08AD5C37-28EC-4DD2-BC7E-EF2B94B624A2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IResultsIDQuery,
	]
	default_interface = IResultsIDQuery

class RotationalSpeedDefinition(CoClassBaseClass): # A CoClass
	CLSID = IID('{A3C30FA1-9764-4171-8387-D36E2F1B0FD2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IRotationalSpeedDefinition,
	]
	default_interface = IRotationalSpeedDefinition

class SEReference(CoClassBaseClass): # A CoClass
	CLSID = IID('{BCF73008-FAAA-4648-9ABE-A4DF900D45BF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISEReference,
	]
	default_interface = ISEReference

class Scratch(CoClassBaseClass): # A CoClass
	CLSID = IID('{98D6BD3E-3DDD-4457-B6AD-15D6A1F3CE51}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IScratch,
	]
	default_interface = IScratch

class Selector(CoClassBaseClass): # A CoClass
	CLSID = IID('{8A3498F9-A383-419E-8117-86A0305175FF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISelector,
	]
	default_interface = ISelector

class Set(CoClassBaseClass): # A CoClass
	CLSID = IID('{FC77C4FB-EC92-11D4-9449-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISet,
	]
	default_interface = ISet

class Solid(CoClassBaseClass): # A CoClass
	CLSID = IID('{28BCBA86-0D7F-11D5-9470-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISolid,
	]
	default_interface = ISolid

class SolidCleanupTool(CoClassBaseClass): # A CoClass
	CLSID = IID('{04B2D4B8-4F23-485B-8151-307D0C14462E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISolidCleanupTool,
	]
	default_interface = ISolidCleanupTool

class SolidEdit(CoClassBaseClass): # A CoClass
	CLSID = IID('{C9B3B297-F3EE-44EC-9B20-D37CA9D588A3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISolidEdit,
	]
	default_interface = ISolidEdit

class SortSet(CoClassBaseClass): # A CoClass
	CLSID = IID('{E4A806F2-65DD-4B9A-8CA7-BB2B71BEDFAE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISortSet,
	]
	default_interface = ISortSet

class StressLinear(CoClassBaseClass): # A CoClass
	CLSID = IID('{08B1C6B3-3124-4D88-BE4C-DFE7642E817E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IStressLinear,
	]
	default_interface = IStressLinear

class Surface(CoClassBaseClass): # A CoClass
	CLSID = IID('{AA0FCDBE-0CB0-11D5-946F-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISurface,
	]
	default_interface = ISurface

class TableData(CoClassBaseClass): # A CoClass
	CLSID = IID('{17387167-149C-43E5-A91D-EAC4D1E4EAAD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITableData,
	]
	default_interface = ITableData

class TmgBC(CoClassBaseClass): # A CoClass
	CLSID = IID('{F809A644-09BC-11D5-946C-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITmgBC,
	]
	default_interface = ITmgBC

class TmgCtl(CoClassBaseClass): # A CoClass
	CLSID = IID('{C1DD56FA-09BD-11D5-946C-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITmgCtl,
	]
	default_interface = ITmgCtl

class TmgInt(CoClassBaseClass): # A CoClass
	CLSID = IID('{5A0AEF82-09BE-11D5-946C-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITmgInt,
	]
	default_interface = ITmgInt

class TmgOpt(CoClassBaseClass): # A CoClass
	CLSID = IID('{EC1095A8-09BE-11D5-946C-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITmgOpt,
	]
	default_interface = ITmgOpt

class TmgReal(CoClassBaseClass): # A CoClass
	CLSID = IID('{9D6A22B6-09BE-11D5-946C-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITmgReal,
	]
	default_interface = ITmgReal

class TrackData(CoClassBaseClass): # A CoClass
	CLSID = IID('{CF420F81-631E-4597-83A5-B6C971AEAB99}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITrackData,
	]
	default_interface = ITrackData

class UserData(CoClassBaseClass): # A CoClass
	CLSID = IID('{CFA77C4E-63E9-11D5-94AA-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IUserData,
	]
	default_interface = IUserData

class UserDefinedGraphics(CoClassBaseClass): # A CoClass
	CLSID = IID('{9B5131E7-BFB8-4219-8F7D-764DBC32C323}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IUserDefinedGraphics,
	]
	default_interface = IUserDefinedGraphics

class Var(CoClassBaseClass): # A CoClass
	CLSID = IID('{72473E7F-0369-11D5-9465-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVar,
	]
	default_interface = IVar

class View(CoClassBaseClass): # A CoClass
	CLSID = IID('{037BFA02-F86C-11D4-9458-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IView,
	]
	default_interface = IView

class ViewOrient(CoClassBaseClass): # A CoClass
	CLSID = IID('{3042DDD2-BB63-41CB-85F7-52FDE63B0624}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IViewOrient,
	]
	default_interface = IViewOrient

class XYPlotDefinition(CoClassBaseClass): # A CoClass
	CLSID = IID('{FFE3E8FE-F64A-4FE0-9430-6A60BA5A3B22}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IXYPlotDefinition,
	]
	default_interface = IXYPlotDefinition

class globalply(CoClassBaseClass): # A CoClass
	CLSID = IID('{A09ECE68-9245-409B-9321-A2476AE7D4E7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGlobalPly,
	]
	default_interface = IGlobalPly

class group(CoClassBaseClass): # A CoClass
	CLSID = IID('{FA671D0A-F7A8-11D4-9457-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGroup,
	]
	default_interface = IGroup

class layer(CoClassBaseClass): # A CoClass
	CLSID = IID('{E0974274-0376-11D5-9465-001083FFF11C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILayer,
	]
	default_interface = ILayer

# This CoClass is known by the name 'femap.model'
class model(CoClassBaseClass): # A CoClass
	CLSID = IID('{A01DD4C4-A8F0-11D4-9FAC-00105A0A86C2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		Imodel,
	]
	default_interface = Imodel

class text(CoClassBaseClass): # A CoClass
	CLSID = IID('{FDEA6C67-77F3-4F6C-BDB9-EA976919B421}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IText,
	]
	default_interface = IText

class vector(CoClassBaseClass): # A CoClass
	CLSID = IID('{F2E67C74-0E5B-477F-8377-BACD7317A2FF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVector,
	]
	default_interface = IVector

RecordMap = {
}

CLSIDToClassMap = {
	'{86603850-0DA7-11D5-9470-001083FFF11C}' : IRead,
	'{86603852-0DA7-11D5-9470-001083FFF11C}' : Read,
	'{FC77C4F9-EC92-11D4-9449-001083FFF11C}' : ISet,
	'{FC77C4FB-EC92-11D4-9449-001083FFF11C}' : Set,
	'{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}' : ISortSet,
	'{E4A806F2-65DD-4B9A-8CA7-BB2B71BEDFAE}' : SortSet,
	'{0023EA23-812A-4253-A431-86B427A49C8C}' : IMapData,
	'{0023EA25-812A-4253-A431-86B427A49C8C}' : MapData,
	'{CF420F7F-631E-4597-83A5-B6C971AEAB99}' : ITrackData,
	'{CF420F81-631E-4597-83A5-B6C971AEAB99}' : TrackData,
	'{08AD5C35-28EC-4DD2-BC7E-EF2B94B624A2}' : IResultsIDQuery,
	'{08AD5C37-28EC-4DD2-BC7E-EF2B94B624A2}' : ResultsIDQuery,
	'{2B88E749-3213-47AB-9CAD-0AEA2E415F16}' : IResults,
	'{2B88E74B-3213-47AB-9CAD-0AEA2E415F16}' : Results,
	'{B0BD5EA3-C79D-4140-83FF-0642F66D2F37}' : IMesher,
	'{B0BD5EA5-C79D-4140-83FF-0642F66D2F37}' : Mesher,
	'{DED875D4-7D90-445B-89C7-17D709DB45F9}' : IElementQuality,
	'{DED875D6-7D90-445B-89C7-17D709DB45F9}' : ElementQuality,
	'{08B1C6B1-3124-4D88-BE4C-DFE7642E817E}' : IStressLinear,
	'{08B1C6B3-3124-4D88-BE4C-DFE7642E817E}' : StressLinear,
	'{90561A64-EB1F-11D4-9447-001083FFF11C}' : IDBase,
	'{90561A66-EB1F-11D4-9447-001083FFF11C}' : DBase,
	'{AB06C174-0E7E-11D5-9471-001083FFF11C}' : IAnalysisCase,
	'{AB06C176-0E7E-11D5-9471-001083FFF11C}' : AnalysisCase,
	'{43752AF6-E669-11D4-9441-001083FFF11C}' : INode,
	'{43752AF8-E669-11D4-9441-001083FFF11C}' : Node,
	'{00EF42F8-0E77-11D5-9471-001083FFF11C}' : IAnalysisMgr,
	'{00EF42FA-0E77-11D5-9471-001083FFF11C}' : AnalysisMgr,
	'{56434B14-F392-11D4-9453-001083FFF11C}' : IBCEqn,
	'{56434B16-F392-11D4-9453-001083FFF11C}' : BCEqn,
	'{D7297E16-F305-11D4-9452-001083FFF11C}' : IBCGeom,
	'{D7297E18-F305-11D4-9452-001083FFF11C}' : BCGeom,
	'{D0E25456-F2FB-11D4-9452-001083FFF11C}' : IBCNode,
	'{D0E25458-F2FB-11D4-9452-001083FFF11C}' : BCNode,
	'{5D2F5E14-F2F1-11D4-9452-001083FFF11C}' : IBCSet,
	'{5D2F5E16-F2F1-11D4-9452-001083FFF11C}' : BCSet,
	'{14057452-0382-11D5-9465-001083FFF11C}' : IContact,
	'{14057454-0382-11D5-9465-001083FFF11C}' : Contact,
	'{14057456-0382-11D5-9465-001083FFF11C}' : ConnectionRegion,
	'{10CE53B8-F2E2-11D4-9452-001083FFF11C}' : ICSys,
	'{10CE53BA-F2E2-11D4-9452-001083FFF11C}' : CSys,
	'{1F9F16CE-09D6-11D5-946C-001083FFF11C}' : ICurve,
	'{1F9F16D0-09D6-11D5-946C-001083FFF11C}' : Curve,
	'{CFA77C4C-63E9-11D5-94AA-001083FFF11C}' : IUserData,
	'{CFA77C4E-63E9-11D5-94AA-001083FFF11C}' : UserData,
	'{EDB333C3-3711-47A5-A628-33B4B8768F88}' : ILayup,
	'{EDB333C5-3711-47A5-A628-33B4B8768F88}' : Layup,
	'{0AD6E2E8-EE3E-11D4-944C-001083FFF11C}' : IMatl,
	'{0AD6E2EA-EE3E-11D4-944C-001083FFF11C}' : Matl,
	'{7110873A-F096-11D4-944F-001083FFF11C}' : IProp,
	'{7110873C-F096-11D4-944F-001083FFF11C}' : Prop,
	'{1E6C26FE-F16A-11D4-9450-001083FFF11C}' : IElem,
	'{1E6C2700-F16A-11D4-9450-001083FFF11C}' : Elem,
	'{14481C56-0767-11D5-9467-001083FFF11C}' : IFunction,
	'{14481C58-0767-11D5-9467-001083FFF11C}' : Function,
	'{FA671D08-F7A8-11D4-9457-001083FFF11C}' : IGroup,
	'{FA671D0A-F7A8-11D4-9457-001083FFF11C}' : group,
	'{E0974272-0376-11D5-9465-001083FFF11C}' : ILayer,
	'{E0974274-0376-11D5-9465-001083FFF11C}' : layer,
	'{1FAF0E14-F6C9-11D4-9456-001083FFF11C}' : ILoadETemp,
	'{1FAF0E16-F6C9-11D4-9456-001083FFF11C}' : LoadETemp,
	'{78456266-F7A9-11D4-9457-001083FFF11C}' : ILoadGeom,
	'{78456268-F7A9-11D4-9457-001083FFF11C}' : LoadGeom,
	'{FFDF9E7C-F6DD-11D4-9456-001083FFF11C}' : ILoadMesh,
	'{FFDF9E7E-F6DD-11D4-9456-001083FFF11C}' : LoadMesh,
	'{33A4C0D4-F6C5-11D4-9456-001083FFF11C}' : ILoadNTemp,
	'{33A4C0D6-F6C5-11D4-9456-001083FFF11C}' : LoadNTemp,
	'{39A8F662-F3CF-11D4-9453-001083FFF11C}' : ILoadSet,
	'{39A8F664-F3CF-11D4-9453-001083FFF11C}' : LoadSet,
	'{D3A5591A-080C-11D5-9468-001083FFF11C}' : IOptim,
	'{D3A5591B-080C-11D5-9468-001083FFF11C}' : Optim,
	'{F7E2A8A0-0820-11D5-9468-001083FFF11C}' : IOutput,
	'{F7E2A8A2-0820-11D5-9468-001083FFF11C}' : Output,
	'{423C4774-0814-11D5-9468-001083FFF11C}' : IOutputSet,
	'{423C4776-0814-11D5-9468-001083FFF11C}' : OutputSet,
	'{A97FA4FA-09CA-11D5-946C-001083FFF11C}' : IPoint,
	'{A97FA4FC-09CA-11D5-946C-001083FFF11C}' : Point,
	'{0D85757C-0374-11D5-9465-001083FFF11C}' : IReport,
	'{0D85757E-0374-11D5-9465-001083FFF11C}' : Report,
	'{28BCBA84-0D7F-11D5-9470-001083FFF11C}' : ISolid,
	'{28BCBA86-0D7F-11D5-9470-001083FFF11C}' : Solid,
	'{AA0FCDBC-0CB0-11D5-946F-001083FFF11C}' : ISurface,
	'{AA0FCDBE-0CB0-11D5-946F-001083FFF11C}' : Surface,
	'{F809A642-09BC-11D5-946C-001083FFF11C}' : ITmgBC,
	'{F809A644-09BC-11D5-946C-001083FFF11C}' : TmgBC,
	'{C1DD56F8-09BD-11D5-946C-001083FFF11C}' : ITmgCtl,
	'{C1DD56FA-09BD-11D5-946C-001083FFF11C}' : TmgCtl,
	'{5A0AEF80-09BE-11D5-946C-001083FFF11C}' : ITmgInt,
	'{5A0AEF82-09BE-11D5-946C-001083FFF11C}' : TmgInt,
	'{EC1095A6-09BE-11D5-946C-001083FFF11C}' : ITmgOpt,
	'{EC1095A8-09BE-11D5-946C-001083FFF11C}' : TmgOpt,
	'{9D6A22B4-09BE-11D5-946C-001083FFF11C}' : ITmgReal,
	'{9D6A22B6-09BE-11D5-946C-001083FFF11C}' : TmgReal,
	'{72473E7E-0369-11D5-9465-001083FFF11C}' : IVar,
	'{72473E7F-0369-11D5-9465-001083FFF11C}' : Var,
	'{037BFA00-F86C-11D4-9458-001083FFF11C}' : IView,
	'{037BFA02-F86C-11D4-9458-001083FFF11C}' : View,
	'{3042DDD0-BB63-41CB-85F7-52FDE63B0624}' : IViewOrient,
	'{3042DDD2-BB63-41CB-85F7-52FDE63B0624}' : ViewOrient,
	'{FDEA6C66-77F3-4F6C-BDB9-EA976919B421}' : IText,
	'{FDEA6C67-77F3-4F6C-BDB9-EA976919B421}' : text,
	'{FA64FD83-5C92-425F-87B4-FC849D84898B}' : IConnectionProp,
	'{FA64FD81-5C92-425F-87B4-FC849D84898B}' : ConnectionProp,
	'{1A8C9C57-6711-4498-BDD9-8BD54586842E}' : IConnection,
	'{1A8C9C55-6711-4498-BDD9-8BD54586842E}' : Connection,
	'{98D6BD3C-3DDD-4457-B6AD-15D6A1F3CE51}' : IScratch,
	'{98D6BD3E-3DDD-4457-B6AD-15D6A1F3CE51}' : Scratch,
	'{8A3498F7-A383-419E-8117-86A0305175FF}' : ISelector,
	'{8A3498F9-A383-419E-8117-86A0305175FF}' : Selector,
	'{A9BF3A1F-E8F6-4D5C-BC48-A191C61C57D2}' : ILoadDefinition,
	'{A9BF3A21-E8F6-4D5C-BC48-A191C61C57D2}' : LoadDefinition,
	'{F1704416-2455-4C38-8C0C-AE23E062D421}' : IBCDefinition,
	'{F1704418-2455-4C38-8C0C-AE23E062D421}' : BCDefinition,
	'{90C90B34-D880-497A-9CD6-AAC2CADB7B7C}' : IGFXPoint,
	'{90C90B36-D880-497A-9CD6-AAC2CADB7B7C}' : GFXPoint,
	'{72FA0DCD-21F2-4E55-9EDC-5D4F64ED7EC6}' : IGFXLine,
	'{72FA0DCF-21F2-4E55-9EDC-5D4F64ED7EC6}' : GFXLine,
	'{1694667A-A6BD-4EA1-B1F0-6485588CDAEB}' : IGFXArrow,
	'{1694667C-A6BD-4EA1-B1F0-6485588CDAEB}' : GFXArrow,
	'{CAC6D4F9-4D32-42C5-910C-D73FBB9AEB62}' : IGFXTria3,
	'{CAC6D4FB-4D32-42C5-910C-D73FBB9AEB62}' : GFXTria3,
	'{5070769B-079C-46E2-BB16-57D7260F9C2B}' : IGFXQuad4,
	'{5070769D-079C-46E2-BB16-57D7260F9C2B}' : GFXQuad4,
	'{A09ECE66-9245-409B-9321-A2476AE7D4E7}' : IGlobalPly,
	'{A09ECE68-9245-409B-9321-A2476AE7D4E7}' : globalply,
	'{0DC9D655-721A-4AE7-B468-0C4B0FDC97AA}' : ILoadBolt,
	'{0DC9D657-721A-4AE7-B468-0C4B0FDC97AA}' : LoadBolt,
	'{FB7C8189-2114-43D6-86DE-78138CDF8C0B}' : IMapOutput,
	'{FB7C8191-2114-43D6-86DE-78138CDF8C0B}' : MapOutput,
	'{8F814530-166A-4092-BBD8-C37483772F1E}' : IDataSurf,
	'{8F814532-166A-4092-BBD8-C37483772F1E}' : DataSurf,
	'{473E5696-513B-4A26-BD0F-FDB36820E7B1}' : IDataTable,
	'{473E5698-513B-4A26-BD0F-FDB36820E7B1}' : DataTable,
	'{E6F57AAF-E85E-455B-AA4D-4FF48824BB31}' : IReference,
	'{E6F57AB1-E85E-455B-AA4D-4FF48824BB31}' : Reference,
	'{923D4FF7-4C93-4DAA-8223-F275CC54C69F}' : IAeroPanel,
	'{923D4FF9-4C93-4DAA-8223-F275CC54C69F}' : AeroPanel,
	'{6C3881EB-8C68-4807-B69A-4430737F37B1}' : IAeroProp,
	'{6C3881ED-8C68-4807-B69A-4430737F37B1}' : AeroProp,
	'{39B680B2-1AD7-44BB-8C89-A699F3B191AE}' : IAeroSpline,
	'{39B680B4-1AD7-44BB-8C89-A699F3B191AE}' : AeroSpline,
	'{61CFF16F-CC7E-40BB-A20F-B1F065C36B29}' : IAeroSurf,
	'{61CFF171-CC7E-40BB-A20F-B1F065C36B29}' : AeroSurf,
	'{F39A93F2-DFD9-42D5-B663-8F09A959DAFE}' : IFreebody,
	'{F39A93F4-DFD9-42D5-B663-8F09A959DAFE}' : Freebody,
	'{BCF73006-FAAA-4648-9ABE-A4DF900D45BF}' : ISEReference,
	'{BCF73008-FAAA-4648-9ABE-A4DF900D45BF}' : SEReference,
	'{7AADC5EF-400B-4984-9D12-314296952F1F}' : IChart,
	'{7AADC5F1-400B-4984-9D12-314296952F1F}' : Chart,
	'{19988E81-F344-4944-82DE-AEBE26689F33}' : IChartSeries,
	'{19988E83-F344-4944-82DE-AEBE26689F33}' : ChartSeries,
	'{17387165-149C-43E5-A91D-EAC4D1E4EAAD}' : ITableData,
	'{17387167-149C-43E5-A91D-EAC4D1E4EAAD}' : TableData,
	'{60266D03-AF68-4B10-906C-4BDAFADE3746}' : IInterpolate,
	'{60266D05-AF68-4B10-906C-4BDAFADE3746}' : Interpolate,
	'{3A62FE4C-D156-4F16-9C1B-F81C6BB4089A}' : IBeamCalculator,
	'{3A62FE4E-D156-4F16-9C1B-F81C6BB4089A}' : BeamCalculator,
	'{589EAFB8-B3D0-42FB-B902-FE0A88B7EC80}' : IAnalysisStudy,
	'{589EAFBA-B3D0-42FB-B902-FE0A88B7EC80}' : AnalysisStudy,
	'{0BECB769-5F94-4718-942B-9A2A866A59D1}' : IDrawErase,
	'{0BECB76B-5F94-4718-942B-9A2A866A59D1}' : DrawErase,
	'{BC4680A4-7B1C-449B-B7F7-AAF21EC0ABD3}' : IFreq,
	'{BC4680A6-7B1C-449B-B7F7-AAF21EC0ABD3}' : Frequency,
	'{8D7600A5-C1B7-4740-8D63-50E476A84B2D}' : IMidFaceCentroidModel,
	'{8D7600B6-C1B7-4740-8D63-50E476A84B2D}' : MidFaceCentroidModel,
	'{9B5131E5-BFB8-4219-8F7D-764DBC32C323}' : IUserDefinedGraphics,
	'{9B5131E7-BFB8-4219-8F7D-764DBC32C323}' : UserDefinedGraphics,
	'{F2E67C72-0E5B-477F-8377-BACD7317A2FF}' : IVector,
	'{F2E67C74-0E5B-477F-8377-BACD7317A2FF}' : vector,
	'{891A6125-406E-4438-8A3F-AF254F4508DD}' : IPlane,
	'{891A6127-406E-4438-8A3F-AF254F4508DD}' : Plane,
	'{D6EDD9A3-EFF2-41AC-891A-F9FED8F10CEE}' : IMeshHardPointDefinition,
	'{D6EDD9A7-EFF2-41AC-891A-F9FED8F10CEE}' : MeshHardPointDefinition,
	'{3054CBAA-8117-467C-8987-74764DC3DF3D}' : IMeshHardPoint,
	'{3054CBAC-8117-467C-8987-74764DC3DF3D}' : MeshHardPoint,
	'{859D91F8-AFD8-4561-83FB-1F02033297C3}' : IOptRel,
	'{859D91FA-AFD8-4561-83FB-1F02033297C3}' : OptRel,
	'{2BF41A8C-BFEF-479D-9C37-146A3AF46FCE}' : IOptResp,
	'{2BF41A8E-BFEF-479D-9C37-146A3AF46FCE}' : OptResp,
	'{C05A6063-9B64-4E95-BF20-EEAA0E741159}' : IDiscreteValueSet,
	'{C05A6065-9B64-4E95-BF20-EEAA0E741159}' : DiscreteValueSet,
	'{56532635-5FE8-417C-B067-B131C22DC038}' : IOptMC,
	'{56532637-5FE8-417C-B067-B131C22DC038}' : OptMC,
	'{72722F0A-7881-406C-9ADE-AB1BD014068F}' : ICopyTool,
	'{72722F0C-7881-406C-9ADE-AB1BD014068F}' : CopyTool,
	'{23FA0A2E-1F8E-4ED3-A527-F3F46B40DC9F}' : IMoveTool,
	'{23FA0A31-1F8E-4ED3-A527-F3F46B40DC9F}' : MoveTool,
	'{F8E3363E-CC4A-447D-BFFD-B70D8D6B51FB}' : IFibersim,
	'{F8E33640-CC4A-447D-BFFD-B70D8D6B51FB}' : Fibersim,
	'{80701FE0-7A74-44F7-936B-218FA64D8D91}' : IMonitorPoint,
	'{80701FE2-7A74-44F7-936B-218FA64D8D91}' : MonitorPoint,
	'{2B6ABCD1-ABB6-448D-BC13-FB9C102792B9}' : IMatrixInput,
	'{2B6ABCD3-ABB6-448D-BC13-FB9C102792B9}' : MatrixInput,
	'{C9B3B295-F3EE-44EC-9B20-D37CA9D588A3}' : ISolidEdit,
	'{C9B3B297-F3EE-44EC-9B20-D37CA9D588A3}' : SolidEdit,
	'{8B79ED25-CCB9-4E14-9C0B-49E9EC00B1DC}' : IMergeTool,
	'{8B79ED27-CCB9-4E14-9C0B-49E9EC00B1DC}' : MergeTool,
	'{BE32C851-7FC3-4486-AD34-DF79ABD7EC56}' : IPublishTable,
	'{BE32C853-7FC3-4486-AD34-DF79ABD7EC56}' : PublishTable,
	'{49201AE2-58D3-431E-B227-3128F38A55E2}' : IPublishTool,
	'{49201AE4-58D3-431E-B227-3128F38A55E2}' : PublishTool,
	'{B49E120A-C070-4C6D-BB09-036D188F05A4}' : IAnalysisStep,
	'{B49E120C-C070-4C6D-BB09-036D188F05A4}' : AnalysisStep,
	'{4DEBC494-8BC4-4B09-A866-FF3A324BA3B7}' : IGlobalStep,
	'{4DEBC496-8BC4-4B09-A866-FF3A324BA3B7}' : GlobalStep,
	'{F2509BC6-33D7-4DF8-BDE1-3CB362DB1ACD}' : IBodyMesher,
	'{F2509BC8-33D7-4DF8-BDE1-3CB362DB1ACD}' : BodyMesher,
	'{1CA3384D-4A57-4BB1-9C7F-BE32974ED31C}' : IDesignEquation,
	'{1CA3384F-4A57-4BB1-9C7F-BE32974ED31C}' : DesignEquation,
	'{51AE9787-73AE-4D75-85E7-328734699211}' : IJoint,
	'{51AE9789-73AE-4D75-85E7-328734699211}' : Joint,
	'{AA0C28B4-A618-4ADD-B1AB-0C794A44CA27}' : IFlexibleSlider,
	'{AA0C28B6-A618-4ADD-B1AB-0C794A44CA27}' : FlexibleSlider,
	'{86B145A0-34EE-4242-BC0D-216007960CA1}' : IPlyMaterial,
	'{86B145A2-34EE-4242-BC0D-216007960CA1}' : PlyMaterial,
	'{AAA42217-5244-45C6-A6B4-4AD46D318C4D}' : IComputedResultsVectors,
	'{AAA42219-5244-45C6-A6B4-4AD46D318C4D}' : ComputedResultsVectors,
	'{65FADBB7-C7F0-4587-92DD-309E47A66F37}' : IElemAddRemove,
	'{65FADBB9-C7F0-4587-92DD-309E47A66F37}' : ElemAddRemove,
	'{04B2D4B6-4F23-485B-8151-307D0C14462E}' : ISolidCleanupTool,
	'{04B2D4B8-4F23-485B-8151-307D0C14462E}' : SolidCleanupTool,
	'{8E76D485-C2EE-4C57-A491-756662689141}' : IGeometryInterface,
	'{8E76D487-C2EE-4C57-A491-756662689141}' : GeometryInterface,
	'{FFE3E8FC-F64A-4FE0-9430-6A60BA5A3B22}' : IXYPlotDefinition,
	'{FFE3E8FE-F64A-4FE0-9430-6A60BA5A3B22}' : XYPlotDefinition,
	'{F5B85DA3-FA4D-447A-A50A-27C71A35D8AC}' : IBearingSpeedDefinition,
	'{F5B85DA5-FA4D-447A-A50A-27C71A35D8AC}' : BearingSpeedDefinition,
	'{A3C30F9F-9764-4171-8387-D36E2F1B0FD2}' : IRotationalSpeedDefinition,
	'{A3C30FA1-9764-4171-8387-D36E2F1B0FD2}' : RotationalSpeedDefinition,
	'{08F336B2-E668-11D4-9441-001083FFF11C}' : Imodel,
	'{A01DD4C4-A8F0-11D4-9FAC-00105A0A86C2}' : model,
}
CLSIDToPackageMap = {}
win32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )
VTablesToPackageMap = {}
VTablesToClassMap = {
}


NamesToIIDMap = {
	'IRead' : '{86603850-0DA7-11D5-9470-001083FFF11C}',
	'ISet' : '{FC77C4F9-EC92-11D4-9449-001083FFF11C}',
	'ISortSet' : '{E4A806F0-65DD-4B9A-8CA7-BB2B71BEDFAE}',
	'IMapData' : '{0023EA23-812A-4253-A431-86B427A49C8C}',
	'ITrackData' : '{CF420F7F-631E-4597-83A5-B6C971AEAB99}',
	'IResultsIDQuery' : '{08AD5C35-28EC-4DD2-BC7E-EF2B94B624A2}',
	'IResults' : '{2B88E749-3213-47AB-9CAD-0AEA2E415F16}',
	'IMesher' : '{B0BD5EA3-C79D-4140-83FF-0642F66D2F37}',
	'IElementQuality' : '{DED875D4-7D90-445B-89C7-17D709DB45F9}',
	'IStressLinear' : '{08B1C6B1-3124-4D88-BE4C-DFE7642E817E}',
	'IDBase' : '{90561A64-EB1F-11D4-9447-001083FFF11C}',
	'IAnalysisCase' : '{AB06C174-0E7E-11D5-9471-001083FFF11C}',
	'INode' : '{43752AF6-E669-11D4-9441-001083FFF11C}',
	'IAnalysisMgr' : '{00EF42F8-0E77-11D5-9471-001083FFF11C}',
	'IBCEqn' : '{56434B14-F392-11D4-9453-001083FFF11C}',
	'IBCGeom' : '{D7297E16-F305-11D4-9452-001083FFF11C}',
	'IBCNode' : '{D0E25456-F2FB-11D4-9452-001083FFF11C}',
	'IBCSet' : '{5D2F5E14-F2F1-11D4-9452-001083FFF11C}',
	'IContact' : '{14057452-0382-11D5-9465-001083FFF11C}',
	'ICSys' : '{10CE53B8-F2E2-11D4-9452-001083FFF11C}',
	'ICurve' : '{1F9F16CE-09D6-11D5-946C-001083FFF11C}',
	'IUserData' : '{CFA77C4C-63E9-11D5-94AA-001083FFF11C}',
	'ILayup' : '{EDB333C3-3711-47A5-A628-33B4B8768F88}',
	'IMatl' : '{0AD6E2E8-EE3E-11D4-944C-001083FFF11C}',
	'IProp' : '{7110873A-F096-11D4-944F-001083FFF11C}',
	'IElem' : '{1E6C26FE-F16A-11D4-9450-001083FFF11C}',
	'IFunction' : '{14481C56-0767-11D5-9467-001083FFF11C}',
	'IGroup' : '{FA671D08-F7A8-11D4-9457-001083FFF11C}',
	'ILayer' : '{E0974272-0376-11D5-9465-001083FFF11C}',
	'ILoadETemp' : '{1FAF0E14-F6C9-11D4-9456-001083FFF11C}',
	'ILoadGeom' : '{78456266-F7A9-11D4-9457-001083FFF11C}',
	'ILoadMesh' : '{FFDF9E7C-F6DD-11D4-9456-001083FFF11C}',
	'ILoadNTemp' : '{33A4C0D4-F6C5-11D4-9456-001083FFF11C}',
	'ILoadSet' : '{39A8F662-F3CF-11D4-9453-001083FFF11C}',
	'IOptim' : '{D3A5591A-080C-11D5-9468-001083FFF11C}',
	'IOutput' : '{F7E2A8A0-0820-11D5-9468-001083FFF11C}',
	'IOutputSet' : '{423C4774-0814-11D5-9468-001083FFF11C}',
	'IPoint' : '{A97FA4FA-09CA-11D5-946C-001083FFF11C}',
	'IReport' : '{0D85757C-0374-11D5-9465-001083FFF11C}',
	'ISolid' : '{28BCBA84-0D7F-11D5-9470-001083FFF11C}',
	'ISurface' : '{AA0FCDBC-0CB0-11D5-946F-001083FFF11C}',
	'ITmgBC' : '{F809A642-09BC-11D5-946C-001083FFF11C}',
	'ITmgCtl' : '{C1DD56F8-09BD-11D5-946C-001083FFF11C}',
	'ITmgInt' : '{5A0AEF80-09BE-11D5-946C-001083FFF11C}',
	'ITmgOpt' : '{EC1095A6-09BE-11D5-946C-001083FFF11C}',
	'ITmgReal' : '{9D6A22B4-09BE-11D5-946C-001083FFF11C}',
	'IVar' : '{72473E7E-0369-11D5-9465-001083FFF11C}',
	'IView' : '{037BFA00-F86C-11D4-9458-001083FFF11C}',
	'IViewOrient' : '{3042DDD0-BB63-41CB-85F7-52FDE63B0624}',
	'IText' : '{FDEA6C66-77F3-4F6C-BDB9-EA976919B421}',
	'IConnectionProp' : '{FA64FD83-5C92-425F-87B4-FC849D84898B}',
	'IConnection' : '{1A8C9C57-6711-4498-BDD9-8BD54586842E}',
	'IScratch' : '{98D6BD3C-3DDD-4457-B6AD-15D6A1F3CE51}',
	'ISelector' : '{8A3498F7-A383-419E-8117-86A0305175FF}',
	'ILoadDefinition' : '{A9BF3A1F-E8F6-4D5C-BC48-A191C61C57D2}',
	'IBCDefinition' : '{F1704416-2455-4C38-8C0C-AE23E062D421}',
	'IGFXPoint' : '{90C90B34-D880-497A-9CD6-AAC2CADB7B7C}',
	'IGFXLine' : '{72FA0DCD-21F2-4E55-9EDC-5D4F64ED7EC6}',
	'IGFXArrow' : '{1694667A-A6BD-4EA1-B1F0-6485588CDAEB}',
	'IGFXTria3' : '{CAC6D4F9-4D32-42C5-910C-D73FBB9AEB62}',
	'IGFXQuad4' : '{5070769B-079C-46E2-BB16-57D7260F9C2B}',
	'IGlobalPly' : '{A09ECE66-9245-409B-9321-A2476AE7D4E7}',
	'ILoadBolt' : '{0DC9D655-721A-4AE7-B468-0C4B0FDC97AA}',
	'IMapOutput' : '{FB7C8189-2114-43D6-86DE-78138CDF8C0B}',
	'IDataSurf' : '{8F814530-166A-4092-BBD8-C37483772F1E}',
	'IDataTable' : '{473E5696-513B-4A26-BD0F-FDB36820E7B1}',
	'IReference' : '{E6F57AAF-E85E-455B-AA4D-4FF48824BB31}',
	'IAeroPanel' : '{923D4FF7-4C93-4DAA-8223-F275CC54C69F}',
	'IAeroProp' : '{6C3881EB-8C68-4807-B69A-4430737F37B1}',
	'IAeroSpline' : '{39B680B2-1AD7-44BB-8C89-A699F3B191AE}',
	'IAeroSurf' : '{61CFF16F-CC7E-40BB-A20F-B1F065C36B29}',
	'IFreebody' : '{F39A93F2-DFD9-42D5-B663-8F09A959DAFE}',
	'ISEReference' : '{BCF73006-FAAA-4648-9ABE-A4DF900D45BF}',
	'IChart' : '{7AADC5EF-400B-4984-9D12-314296952F1F}',
	'IChartSeries' : '{19988E81-F344-4944-82DE-AEBE26689F33}',
	'ITableData' : '{17387165-149C-43E5-A91D-EAC4D1E4EAAD}',
	'IInterpolate' : '{60266D03-AF68-4B10-906C-4BDAFADE3746}',
	'IBeamCalculator' : '{3A62FE4C-D156-4F16-9C1B-F81C6BB4089A}',
	'IAnalysisStudy' : '{589EAFB8-B3D0-42FB-B902-FE0A88B7EC80}',
	'IDrawErase' : '{0BECB769-5F94-4718-942B-9A2A866A59D1}',
	'IFreq' : '{BC4680A4-7B1C-449B-B7F7-AAF21EC0ABD3}',
	'IMidFaceCentroidModel' : '{8D7600A5-C1B7-4740-8D63-50E476A84B2D}',
	'IUserDefinedGraphics' : '{9B5131E5-BFB8-4219-8F7D-764DBC32C323}',
	'IVector' : '{F2E67C72-0E5B-477F-8377-BACD7317A2FF}',
	'IPlane' : '{891A6125-406E-4438-8A3F-AF254F4508DD}',
	'IMeshHardPointDefinition' : '{D6EDD9A3-EFF2-41AC-891A-F9FED8F10CEE}',
	'IMeshHardPoint' : '{3054CBAA-8117-467C-8987-74764DC3DF3D}',
	'IOptRel' : '{859D91F8-AFD8-4561-83FB-1F02033297C3}',
	'IOptResp' : '{2BF41A8C-BFEF-479D-9C37-146A3AF46FCE}',
	'IDiscreteValueSet' : '{C05A6063-9B64-4E95-BF20-EEAA0E741159}',
	'IOptMC' : '{56532635-5FE8-417C-B067-B131C22DC038}',
	'ICopyTool' : '{72722F0A-7881-406C-9ADE-AB1BD014068F}',
	'IMoveTool' : '{23FA0A2E-1F8E-4ED3-A527-F3F46B40DC9F}',
	'IFibersim' : '{F8E3363E-CC4A-447D-BFFD-B70D8D6B51FB}',
	'IMonitorPoint' : '{80701FE0-7A74-44F7-936B-218FA64D8D91}',
	'IMatrixInput' : '{2B6ABCD1-ABB6-448D-BC13-FB9C102792B9}',
	'ISolidEdit' : '{C9B3B295-F3EE-44EC-9B20-D37CA9D588A3}',
	'IMergeTool' : '{8B79ED25-CCB9-4E14-9C0B-49E9EC00B1DC}',
	'IPublishTable' : '{BE32C851-7FC3-4486-AD34-DF79ABD7EC56}',
	'IPublishTool' : '{49201AE2-58D3-431E-B227-3128F38A55E2}',
	'IAnalysisStep' : '{B49E120A-C070-4C6D-BB09-036D188F05A4}',
	'IGlobalStep' : '{4DEBC494-8BC4-4B09-A866-FF3A324BA3B7}',
	'IBodyMesher' : '{F2509BC6-33D7-4DF8-BDE1-3CB362DB1ACD}',
	'IDesignEquation' : '{1CA3384D-4A57-4BB1-9C7F-BE32974ED31C}',
	'IJoint' : '{51AE9787-73AE-4D75-85E7-328734699211}',
	'IFlexibleSlider' : '{AA0C28B4-A618-4ADD-B1AB-0C794A44CA27}',
	'IPlyMaterial' : '{86B145A0-34EE-4242-BC0D-216007960CA1}',
	'IComputedResultsVectors' : '{AAA42217-5244-45C6-A6B4-4AD46D318C4D}',
	'IElemAddRemove' : '{65FADBB7-C7F0-4587-92DD-309E47A66F37}',
	'ISolidCleanupTool' : '{04B2D4B6-4F23-485B-8151-307D0C14462E}',
	'IGeometryInterface' : '{8E76D485-C2EE-4C57-A491-756662689141}',
	'IXYPlotDefinition' : '{FFE3E8FC-F64A-4FE0-9430-6A60BA5A3B22}',
	'IBearingSpeedDefinition' : '{F5B85DA3-FA4D-447A-A50A-27C71A35D8AC}',
	'IRotationalSpeedDefinition' : '{A3C30F9F-9764-4171-8387-D36E2F1B0FD2}',
	'Imodel' : '{08F336B2-E668-11D4-9441-001083FFF11C}',
}

win32com.client.constants.__dicts__.append(constants.__dict__)

